{"version":3,"sources":["utils/DeriNumberFormat.js","components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/pending.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["DeriNumberFormat","props","useState","className","renderablity","setRenderablity","isValidate","allowZero","value","undefined","isNaN","Math","abs","useEffect","wallet","defaultValue","others","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","isConnected","clearTimeout","Wrapper","styled","div","inputWidth","unitPadding","Input","unit","max","step","onChange","styles","focus","readOnly","disabled","inputRef","useRef","current","style","type","min","ref","e","target","bg","gt","Spinner","class","Operate","lang","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","isApprove","setIsApprove","isValid","setIsValid","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","a","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","showListFrom","showListTo","getValid","fromChainId","toString","getBalance","select_from","Init","JSON","parse","stringify","select_to","to_arr","from_one","filter","p","from_two","from_three","disabledDown","down","arrow","deriLogo","decimalScale","rel","href"],"mappings":"8KAiCeA,IA7Bf,SAA0BC,GAAO,IAAD,EACUC,mBAAS,sBAAMC,UAAU,kBADnC,mBACvBC,EADuB,KACTC,EADS,KAGxBC,EAAa,WAAO,IACjBC,EAAaN,EAAbM,UACP,MAA+B,WAAvB,YAAON,EAAMO,aAAsCC,IAAhBR,EAAMO,OAAuC,KAAhBP,EAAMO,OAAgC,QAAhBP,EAAMO,OACxC,KAAjDE,MAAMT,EAAMO,QAAUG,KAAKC,IAAIX,EAAMO,UAA+B,IAAdD,GAoBnE,OAjBAM,qBAAU,WACiDZ,EAAlDM,UADQ,IACEO,EAAwCb,EAAxCa,OADH,EAC2Cb,EAAjCc,oBADV,MACyB,KADzB,EACiCC,EADjC,YAC2Cf,EAD3C,uCAEXK,IACDD,EAAgB,cAAC,IAAD,2BAAkBW,GAAlB,IAA2BC,YAAc,OAAQC,mBAAmB,EAAMC,mBAAmB,MAE7Gd,EAAgB,sBAAMF,UAAU,kBAElC,IAAMiB,EAAUC,OAAOC,YAAW,WAC5BhB,MAAgBQ,GAAWA,EAAOS,eACpClB,EAAgBU,KAElB,KACF,OAAO,WACLS,aAAaJ,MAEd,CAACnB,EAAMO,QAEHJ,I,wHC1BHqB,EAAUC,IAAOC,IAAV,+bAYD,SAAA1B,GAAK,OAAIA,EAAM2B,cAUT,SAAA3B,GAAK,OAAIA,EAAM4B,eAGlB,SAASC,EAAT,GAA6I,IAA7HtB,EAA4H,EAA5HA,MAAMuB,EAAsH,EAAtHA,KAAKC,EAAiH,EAAjHA,IAAIC,EAA6G,EAA7GA,KAAKC,EAAwG,EAAxGA,SAAwG,IAA/FC,cAA+F,MAAtF,GAAsF,EAAnFC,EAAmF,EAAnFA,MAAmF,IAA7EP,mBAA6E,MAA/D,OAA+D,EAAxDQ,EAAwD,EAAxDA,SAAwD,IAA/CT,kBAA+C,MAAlC,MAAkC,EAA5BzB,EAA4B,EAA5BA,UAA4B,IAAlBmC,gBAAkB,SACnJC,EAAWC,iBAAO,MAmBxB,OAPA3B,qBAAU,WACL0B,EAASE,SAAWL,GACrBG,EAASE,QAAQL,UAEnB,CAACA,IAID,eAACX,EAAD,CAAUI,YAAaA,EAAaD,WAAYA,EAAYzB,UAAWA,EAAWuC,MAAK,eAAMP,GAA7F,UACE,uBAAOQ,KAAK,SAASL,SAAYA,EAAU9B,MAAOA,EAAOwB,IAAKA,EAAMY,IAAI,IAAKX,KAAQA,EAAMY,IAAKN,EAAUL,SApB/F,SAAAY,GAAM,IACZtC,EAASsC,EAAEC,OAAXvC,MACJwB,GAAOgB,aAAGxC,GAAOyC,GAAGjB,GACrBE,GAAYA,EAASF,GACbxB,EAAO,GAAKE,MAAMF,GAC1B0B,GAAYA,EAAS,IAErBA,GAAYA,EAAS1B,IAauG6B,SAAUA,IACtI,qBAAKlC,UAAU,OAAf,SAAuB4B,S,kNCnDd,SAASmB,IACtB,OACE,qBAAKC,MAAM,mBAAX,SACE,qBAAKA,MAAM,a,+BCJF,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,wC,QCA1B,MAA0B,oCCA1B,ICgBA,SAASC,EAAT,GAAyI,IAAtHC,EAAqH,EAArHA,KAAMvC,EAA+G,EAA/GA,OAAQwC,EAAuG,EAAvGA,OAAQC,EAA+F,EAA/FA,QAASC,EAAsF,EAAtFA,WAAYC,EAA0E,EAA1EA,QAASC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,kBAC1HC,EAASC,cACTC,EAAQC,cACRC,EAAUC,cAHqI,EAInHlE,oBAAS,GAJ0G,mBAI9ImE,EAJ8I,KAInIC,EAJmI,OAKvHpE,oBAAS,GAL8G,mBAK9IqE,EAL8I,KAKrIC,EALqI,OAM/GtE,mBAAS,IANsG,mBAM9IuE,EAN8I,KAMjIC,EANiI,OAOjHxE,mBAAS,IAPwG,mBAO9IyE,EAP8I,KAOlIC,EAPkI,OAQ7G1E,oBAAS,GARoG,mBAQ9I2E,EAR8I,KAQhIC,EARgI,OAS3G5E,mBAAS,cAAC6E,EAAA,EAAD,CAAQpC,KAAMqC,IAAS7E,UAAU,gBAAgB8E,SAAS,KAAKC,MAAO7B,EAAI,WATwB,mBAS9I8B,GAT8I,KAS/HC,GAT+H,KAU/IC,GAAU,WACdvE,EAAOuE,WAEHC,GAAK,uCAAG,4BAAAC,EAAA,0DACRzE,EAAOS,cADC,gCAEMiE,IAASC,QAAQ,2BAA4B,CAAC3E,EAAO4E,OAAOC,UAFlE,QAENC,EAFM,QAGFN,QACNxE,EAAO+E,cAAc9B,EAAO6B,EAAIE,YAChCjC,GAAW,IAGbW,EAAWoB,EAAIN,OARL,2CAAH,qDAWLS,GAAI,uCAAG,sBAAAR,EAAA,yDACI,KAAXjC,GAA4B,IAAXA,EADV,uBAETW,EAAM+B,MAAM3C,EAAK,qCAFR,gCAKNC,EAASC,GALH,uBAMTU,EAAM+B,MAAM3C,EAAK,+BANR,6BASNS,EAAkBmC,gBATZ,uBAUThC,EAAM+B,MAAN,UAAe3C,EAAK,qBAApB,YAA4C6C,EAAU1C,EAAW2C,aAAc9C,GAAM+C,QAArF,YAAgG/C,EAAK,uBAV5F,iCAaXK,GAAW,GACXgB,EAAe,CACb2B,UAAU,IAfD,UAiBKb,IAASC,QAAQ,SAAU,CAAC3E,EAAO4E,OAAOY,QAASxF,EAAO4E,OAAOC,QAASnC,EAAW+C,WAAYjD,GAAS,CAAEkD,iBAAiB,IAjBlI,eAkBHC,SACNrB,GAAiB,cAACL,EAAA,EAAD,CAAQpC,KAAMqC,IAAS7E,UAAU,gBAAgB+E,MAAO7B,EAAI,cAC7EqB,EAAe,CACb2B,UAAU,EACVK,UAAU,IAEZrF,OAAOsF,aAAY,WACjBrB,OACC,MAEH5B,GAAW,GA5BF,4CAAH,qDA+BJkD,GAAK,uCAAG,sBAAArB,EAAA,yDACPzB,EAAkB+C,cADX,uBAEV5C,EAAM+B,MAAN,UAAe3C,EAAK,qBAApB,YAA4C6C,EAAU1C,EAAW+C,WAAYlD,GAAM+C,QAAnF,YAA8F/C,EAAK,uBAFzF,iCAKZyB,GAAgB,GAChBF,EAAc,CACZyB,UAAU,IAPA,SASIb,IAASC,QAAQ,WAAY,CAAC3E,EAAO4E,OAAOY,QAASxF,EAAO4E,OAAOC,SAAU,CAAEa,iBAAiB,IATpG,cAUJC,SACN7B,EAAc,CACZyB,UAAU,EACVK,UAAU,IAEZtB,GAAiB,cAACL,EAAA,EAAD,CAAQpC,KAAMqC,IAAS7E,UAAU,gBAAgB+E,MAAO7B,EAAI,cAC7EhC,OAAOsF,aAAY,WACjBrB,OACC,MAEHrB,EAAM+B,MAAM3C,EAAK,gBApBP,2CAAH,qDAuBLyD,GAAQ,WACZ3C,EAAQ4C,KAAK,YAETC,GAAO,uCAAG,sBAAAzB,EAAA,sEACIC,IAASC,QAAQ,aAAc,CAAC3E,EAAO4E,OAAOY,QAASxF,EAAO4E,OAAOC,SAAU,CAAEa,iBAAiB,IADtG,cAENC,SACNnC,GAAa,GACb2C,OAEA3C,GAAa,GACbL,EAAM+B,MAAM3C,EAAK,mBAPL,2CAAH,qDAUP4D,GAAW,uCAAG,4BAAA1B,EAAA,0DACdzE,EAAOS,cADO,gCAEKiE,IAASC,QAAQ,iBAAkB,CAAC3E,EAAO4E,OAAOY,QAASxF,EAAO4E,OAAOC,UAF9E,OAEVuB,EAFU,OAGhB5C,EAAa4C,GAHG,2CAAH,qDA+CjB,OAzCArG,qBAAU,WACJC,EAAOS,gBACT0F,KACA3B,QAED,CAACxE,EAAO4E,OAAQlC,IACnB3C,qBAAU,WACJ0D,EACFG,EAAe,CACb2B,UAAU,EACVK,UAAU,EACVS,YAAY,IAELtC,IACTD,EAAc,CACZyB,UAAU,EACVK,UAAU,EACVS,YAAY,IAEdzD,GAAW,GACXE,EAAU,OAGX,CAACW,EAASf,IACb3C,qBAAU,WACR,IAAIuG,EAGAA,EAFAtG,EAAOS,cACLgD,EACQ,cAACQ,EAAA,EAAD,CAAQpC,KAAMqC,IAAS7E,UAAU,gBAAgB+E,MAAO7B,EAAI,MAAWgE,QAAST,KAChFvC,EAEFQ,EACE,yBAAQ1E,UAAU,WAAWkH,QAASP,GAAtC,cAA8C,qBAAKQ,IAAI,GAAGC,IAAKC,IAA/D,aAAoFnE,EAAI,SAAxF,OAEA,cAAC0B,EAAA,EAAD,CAAQpC,KAAMqC,IAAS7E,UAAU,gBAAgB+E,MAAO7B,EAAI,KAAUgE,QAAStB,KAJ/E,cAAChB,EAAA,EAAD,CAAQpC,KAAMqC,IAAS7E,UAAU,gBAAgB+E,MAAO7B,EAAI,QAAagE,QAASL,KAOpF,cAACjC,EAAA,EAAD,CAAQpC,KAAMqC,IAAS7E,UAAU,gBAAgB+E,MAAO7B,EAAK,kBAAmBgE,QAAShC,KAErGD,GAAiBgC,KAChB,CAAC7C,EAASzD,EAAO4E,OAAQrB,EAAWf,EAAQE,EAAYM,EAAkBe,IAE3E,sBAAK1E,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACGkD,EAAI,OADP,IACoBC,EADpB,IAC6BD,EAAI,KAASoE,cAD1C,SAC+DjE,EAAWkE,aAD1E,IACyFrE,EAAI,GAAOoE,cADpG,IACoHjE,EAAWmE,cAE/H,qBAAKxH,UAAU,MAAf,SACGgF,KAEH,sBAAKhF,UAAU,OAAf,WACIsD,GAAW,sBAAKtD,UAAU,UAAf,UACX,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKmH,IAAI,GAAGC,IAAKlB,OAC7C,sBAAKlG,UAAU,aAAf,UAA6BkD,EAAK,4BAAlC,UAEF,sBAAKlD,UAAU,aAAf,UACGwD,GAAW,mCACTc,EAAY4B,SAAW,qBAAKlG,UAAU,UAAf,SACtB,qBAAKmH,IAAI,GAAGC,IAAKC,MACV,qBAAKrH,UAAU,UAAf,SACL,cAAC+C,EAAD,SAGJS,GAAW,qBAAKxD,UAAU,gBAGhC,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKmH,IAAI,GAAGC,IAAKb,OAC7C,qBAAKvG,UAAU,aAAf,SAA6BkD,EAAK,mCAEpC,sBAAKlD,UAAU,aAAf,UACGwD,GAAW,mCACTc,EAAY4B,UAAY,mCACtB5B,EAAYiC,SAAW,qBAAKvG,UAAU,UAAf,SACtB,qBAAKmH,IAAI,GAAGC,IAAKC,MACV,qBAAKrH,UAAU,UAAf,SACL,cAAC+C,EAAD,YAILS,IAAYc,EAAY4B,WAAa,qBAAKlG,UAAU,gBAG3D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKmH,IAAI,GAAGC,IAAKJ,OAC7C,qBAAKhH,UAAU,aAAf,SAA6BkD,EAAK,sBAEpC,sBAAKlD,UAAU,aAAf,UACGwD,GAAW,mCACTc,EAAY4B,UAAY5B,EAAYiC,UAAY,mCAC9CjC,EAAY0C,WAAa,qBAAKhH,UAAU,UAAf,SACxB,qBAAKmH,IAAI,GAAGC,IAAKC,MACV,qBAAKrH,UAAU,UAAf,SACL,cAAC+C,EAAD,YAKLS,IAAYc,EAAYiC,WAAa,qBAAKvG,UAAU,mBAI5DsD,GAAW,sBAAKtD,UAAU,WAAf,UACV,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKmH,IAAI,GAAGC,IAAKlB,OAC7C,qBAAKlG,UAAU,aAAf,SAA6BkD,EAAK,uBAEpC,sBAAKlD,UAAU,aAAf,UACG0E,GAAgB,mCACdF,EAAW0B,SAAW,qBAAKlG,UAAU,UAAf,SACrB,qBAAKmH,IAAI,GAAGC,IAAKC,MACV,qBAAKrH,UAAU,UAAf,SACL,cAAC+C,EAAD,SAGJ2B,GAAgB,qBAAK1E,UAAU,gBAGrC,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKmH,IAAI,GAAGC,IAAKb,OAC7C,sBAAKvG,UAAU,aAAf,UAA6BkD,EAAK,8BAAlC,UAEF,sBAAKlD,UAAU,aAAf,UACG0E,GAAgB,mCACdF,EAAW0B,UAAY,mCACrB1B,EAAW+B,SAAW,qBAAKvG,UAAU,UAAf,SACrB,qBAAKmH,IAAI,GAAGC,IAAKC,MACV,qBAAKrH,UAAU,UAAf,SACL,cAAC+C,EAAD,YAIL2B,IAAiBF,EAAW0B,WAAa,qBAAKlG,UAAU,gBAG/D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKmH,IAAI,GAAGC,IAAKJ,OAC7C,qBAAKhH,UAAU,aAAf,SAA6BkD,EAAI,cAEnC,sBAAKlD,UAAU,aAAf,UACG0E,GAAgB,mCACdF,EAAW0B,UAAY1B,EAAW+B,UAAY,mCAC5C/B,EAAWwC,WAAa,qBAAKhH,UAAU,UAAf,SACvB,qBAAKmH,IAAI,GAAGC,IAAKC,MACV,qBAAKrH,UAAU,UAAf,SACL,cAAC+C,EAAD,YAKL2B,IAAiBF,EAAW+B,WAAa,qBAAKvG,UAAU,yBAQzE,SAAS+F,EAAUI,EAASjD,GAE1B,IAAIuE,EAAM,GACV,OAFAtB,GAAWA,GAGT,KAAK,EACHsB,EAAIxB,QAAU/C,EAAI,SAClBuE,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAIxB,QAAU/C,EAAI,IAClBuE,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAIxB,QAAU/C,EAAI,KAClBuE,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAIxB,QAAU/C,EAAK,eACnBuE,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAIxB,QAAU/C,EAAI,QAClBuE,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAIxB,QAAU/C,EAAK,gBACnBuE,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UAKd,OAAOJ,E,aC1TM,MAA0B,uCCA1B,MAA0B,0C,0CCuUzC,SAAS1B,EAAUI,EAASjD,GAE1B,IAAIuE,EAAM,GACV,OAFAtB,GAAWA,GAGT,KAAK,EACHsB,EAAIxB,QAAU/C,EAAI,SAClBuE,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAIxB,QAAU/C,EAAI,IAClBuE,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAIxB,QAAU/C,EAAI,KAClBuE,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAIxB,QAAU/C,EAAK,eACnBuE,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAIxB,QAAU/C,EAAI,QAClBuE,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAIxB,QAAU/C,EAAK,gBACnBuE,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UAKd,OAAOJ,EAEMK,sBAAO,SAAPA,CAAiBC,aA9VhC,YAAmC,IAAjBpH,EAAgB,EAAhBA,OAAQuC,EAAQ,EAARA,KAAQ,EACJnD,mBAAS,GADL,mBACzBoD,EADyB,KACjBM,EADiB,OAEF1D,mBAAS,GAFP,mBAEzBqD,EAFyB,KAEhB4E,EAFgB,KAG1BC,EAA0B,SAAlBC,UAAQC,MAChBC,EAAeH,EACnB,CACE,CACEI,KAAMnF,EAAI,QACVoF,GAAI,EACJZ,IAAKC,WAEP,CACEU,KAAMnF,EAAK,eACXoF,GAAI,GACJZ,IAAKE,WAEP,CACES,KAAMnF,EAAK,gBACXoF,GAAI,IACJZ,IAAKG,YAGP,CAEA,CACEQ,KAAMnF,EAAI,SACVoF,GAAI,EACJZ,IAAKC,WAEP,CACEU,KAAMnF,EAAI,IACVoF,GAAI,GACJZ,IAAKE,WAEP,CACES,KAAMnF,EAAI,KACVoF,GAAI,IACJZ,IAAKG,YArCqB,EA0CA9H,mBAASqI,GA1CT,mBA0CzBG,EA1CyB,KA0CfC,EA1Ce,OA2CJzI,mBAASqI,GA3CL,mBA2CzBK,EA3CyB,KA2CjBC,EA3CiB,OA4CF3I,oBAAS,GA5CP,mBA4CzByD,EA5CyB,KA4ChBD,EA5CgB,OA6CIxD,mBAASkI,EAC3C,CACEjC,aAAc,GACduB,aAAcrE,EAAK,eACnBkD,WAAY,EACZoB,WAAYtE,EAAI,SACd,CACF8C,aAAc,EACduB,aAAcrE,EAAI,SAClBkD,WAAY,GACZoB,WAAYtE,EAAI,MAvDY,mBA6CzBG,EA7CyB,KA6CbsF,EA7Ca,OAyDF5I,oBAAS,GAzDP,mBAyDzBuD,EAzDyB,KAyDhBI,EAzDgB,OA0DkB3D,oBAAS,GA1D3B,mBA0DzB6I,GA1DyB,KA0DNC,GA1DM,QA2Dc9I,oBAAS,GA3DvB,qBA2DzB+I,GA3DyB,MA2DRC,GA3DQ,SA4DAhJ,mBAASgG,EAAU1C,EAAW2C,aAAc9C,GAAMwE,KA5DlD,qBA4DzBsB,GA5DyB,MA4DfC,GA5De,SA6DJlJ,mBAASgG,EAAU1C,EAAW+C,WAAYlD,GAAMwE,KA7D5C,qBA6DzBwB,GA7DyB,MA6DjBC,GA7DiB,MA8D1BC,GAAsBC,IAAW,oBAAqB,CAAE,KAAQT,KAChEU,GAAoBD,IAAW,kBAAmB,CAAE,KAAQP,KA/DlC,GAgEkB/I,mBAChD,CACE+F,iBAAiB,EACjBY,eAAe,IAnEa,qBAgEzB/C,GAhEyB,MAgEN4F,GAhEM,MAgF1BC,GAAe,WACfhG,GAGJqF,IAAsBD,KAElBa,GAAa,WACbjG,GAGJuF,IAAoBD,KAGhBY,GAAQ,uCAAG,4BAAAtE,EAAA,0DACXzE,EAAOS,cADI,gCAEGiE,IAASC,QAAQ,2BAA4B,CAAC3E,EAAO4E,OAAOC,UAF/D,QAETC,EAFS,QAGLN,QACNwD,EAAc,CACZ3C,aAAcP,EAAIkE,YAClBpC,aAAcxB,EAAUN,EAAIkE,YAAazG,GAAM+C,QAC/CG,WAAYX,EAAIE,UAChB6B,WAAYzB,EAAUN,EAAIE,UAAWzC,GAAM+C,UAE7CgD,GAAYlD,EAAUN,EAAIkE,YAAazG,GAAMwE,KAC7CyB,GAAUpD,EAAUN,EAAIE,UAAWzC,GAAMwE,KACzCjE,EAAUZ,aAAG4C,EAAItC,QAAS,IAAIyG,YAC9BrG,EAAWkC,EAAIN,QAbJ,2CAAH,qDAkBR0E,GAAU,uCAAG,4BAAAzE,EAAA,0DACbzE,EAAOS,cADM,gCAECiE,IAASC,QAAQ,iBAAkB,CAAC3E,EAAO4E,OAAOY,QAASxF,EAAO4E,OAAOC,UAF1E,OAEXC,EAFW,OAGfuC,EAAWvC,GAHI,2CAAH,qDAOhB/E,qBAAU,WACRmJ,OACC,CAAClJ,EAAO4E,OAAQlC,IAEnB3C,qBAAU,WACRgJ,OACC,CAAC/I,EAAO4E,SAEX,IAAMuE,GAAc,SAAArC,GAClB,IAAIsC,EAAOC,KAAKC,MAAMD,KAAKE,UAAU7G,IACjC0G,EAAK3D,aAAeqB,EAAIa,IAC1ByB,EAAK/D,aAAe3C,EAAW+C,WAC/B2D,EAAKxC,aAAelE,EAAWmE,WAC/BuC,EAAK3D,WAAa/C,EAAW2C,aAC7B+D,EAAKvC,WAAanE,EAAWkE,eAE7BwC,EAAK/D,aAAeyB,EAAIa,GACxByB,EAAKxC,aAAeE,EAAIY,MAE1BM,EAAcoB,GACdlB,IAAsBD,KAElBuB,GAAY,SAAA1C,GAChB,IAAIsC,EAAOC,KAAKC,MAAMD,KAAKE,UAAU7G,IACjC0G,EAAK/D,eAAiByB,EAAIa,IAC5ByB,EAAK/D,aAAe3C,EAAW+C,WAC/B2D,EAAKxC,aAAelE,EAAWmE,WAC/BuC,EAAK3D,WAAa/C,EAAW2C,aAC7B+D,EAAKvC,WAAanE,EAAWkE,eAE7BwC,EAAK3D,WAAaqB,EAAIa,GACtByB,EAAKvC,WAAaC,EAAIY,MAExBM,EAAcoB,GACdhB,IAAoBD,KA2BtB,OAvBApI,qBAAU,WACR,IACI0J,EACAC,EAAWjC,EAAakC,QAAO,SAAAC,GAAC,OAAIA,EAAEjC,MAAQjF,EAAW2C,gBAAc,GACvEwE,EAAWpC,EAAakC,QAAO,SAAAC,GAAC,OAAIA,EAAEjC,MAAQjF,EAAW2C,gBAAc,GACvEyE,EAAarC,EAAakC,QAAO,SAAAC,GAAC,OAAIA,EAAEjC,MAAQjF,EAAW2C,gBAAc,GAK7EoE,EAAS,CAJIhC,EAAakC,QAAO,SAAAC,GAAC,OAAIA,EAAEjC,MAAQjF,EAAW+C,cAAY,GAC1DgC,EAAakC,QAAO,SAAAC,GAAC,OAAIA,EAAEjC,MAAQjF,EAAW+C,cAAY,GACxDgC,EAAakC,QAAO,SAAAC,GAAC,OAAIA,EAAEjC,MAAQjF,EAAW+C,cAAY,IAGzEoC,EAFW,CAAC6B,EAAUG,EAAUC,IAGhC/B,EAAU0B,GACVnB,GAAYlD,EAAU1C,EAAW2C,aAAc9C,GAAMwE,KACrDyB,GAAUpD,EAAU1C,EAAW+C,WAAYlD,GAAMwE,KApG/B,WAClB,IAAI5B,IAAkBnF,EAAOS,gBAAkBT,EAAO4E,OAAOY,WAAa9C,EAAW2C,aACjFU,IAAgB/F,EAAOS,gBAAkBT,EAAO4E,OAAOY,WAAa9C,EAAW+C,WAKnFmD,GAJU,CACRzD,gBAAiBA,EACjBY,cAAeA,IAgGjBtF,KAEC,CAACiC,EAAW1C,EAAO4E,SAOpB,qBAAKvF,UAAU,SAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACGkD,EAAI,SAEP,qBAAKlD,UAAU,aAAf,SACGkD,EAAK,mBAGV,sBAAKlD,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGkD,EAAK,qBAER,sBAAKlD,UAAU,yBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACGkD,EAAI,OAEP,sBAAKlD,UAAU,qBAAf,UACE,sBAAKA,UAAWwD,EAAU,qBAAuB,OAAQ0D,QAAS,WAAQsC,MAA1E,UACE,sBAAKxJ,UAAU,yBAAf,UACE,qBAAKoH,IAAK4B,GAAU7B,IAAI,KACxB,+BAAO9D,EAAWkE,eAClB,qBAAKvH,UAAWsD,EAAU,iBAAoBK,GAAkBmC,gBAAmC,YAAjB,eAAlF,UACKxC,GAAWK,GAAkBmC,gBAAmB5C,EAAI,UAAgBA,EAAI,iBAG/E,qBAAKlD,UAAU,YAAYoH,IAAK5D,EAAUkH,EAAeC,UAAMxD,IAAI,QAErE,qBAAInH,UAAWoJ,GAAf,UACE,qBAAIpJ,UAAU,YAAYkH,QAAS,kBAAM4C,GAAYvB,EAAS,KAA9D,UACE,sBAAKvI,UAAU,kBAAf,UACE,qBAAKmH,IAAI,GAAGC,IAAKmB,EAAS,GAAGb,MAD/B,IACuC,qCAAQa,EAAS,GAAGF,KAApB,UAGvC,qBAAKrI,UAAU,cAAckH,QAAS,WAAQsC,MAA9C,SACE,qBAAKrC,IAAI,GAAGC,IAAKuD,UAAM3K,UAAU,iBAGrC,oBAAIA,UAAU,YAAYkH,QAAS,kBAAM4C,GAAYvB,EAAS,KAA9D,SACE,sBAAKvI,UAAU,kBAAf,UACE,qBAAKmH,IAAI,GAAGC,IAAKmB,EAAS,GAAGb,MAD/B,IACuC,qCAAQa,EAAS,GAAGF,KAApB,YAGzC,oBAAIrI,UAAU,YAAYkH,QAAS,kBAAM4C,GAAYvB,EAAS,KAA9D,SACE,sBAAKvI,UAAU,kBAAf,UACE,qBAAKmH,IAAI,GAAGC,IAAKmB,EAAS,GAAGb,MAD/B,IACuC,qCAAQa,EAAS,GAAGF,KAApB,qBAM/C,qBAAKrI,UAAU,QAAf,SACE,qBAAKoH,IAAKwD,EAAOzD,IAAI,OAEvB,sBAAKnH,UAAU,aAAf,UACE,qBAAKA,UAAU,WAAf,SACGkD,EAAI,KAEP,sBAAKlD,UAAU,mBAAf,UACE,sBAAKA,UAAWwD,EAAU,qBAAuB,OAAQ0D,QAAS,WAAQuC,MAA1E,UACE,sBAAKzJ,UAAU,yBAAf,UACE,qBAAKoH,IAAK8B,GAAQ/B,IAAI,KACtB,+BAAO9D,EAAWmE,aAClB,qBAAKxH,UAAYsD,EAA8BK,GAAkB+C,cAAiC,YAAjB,eAAtD,iBAA3B,SACIpD,GAAWK,GAAkB+C,cAAiBxD,EAAI,UAAgBA,EAAI,iBAG5E,qBAAKlD,UAAU,YAAYoH,IAAK5D,EAAUkH,EAAeC,UAAMxD,IAAI,QAErE,qBAAInH,UAAWsJ,GAAf,UACE,qBAAItJ,UAAU,YAAYkH,QAAS,kBAAMiD,GAAU1B,EAAO,KAA1D,UACE,sBAAKzI,UAAU,kBAAf,UACE,qBAAKmH,IAAI,GAAGC,IAAKqB,EAAO,GAAGf,MAD7B,IACqC,qCAAQe,EAAO,GAAGJ,KAAlB,UAErC,qBAAKrI,UAAU,cAAckH,QAAS,WAAQuC,MAA9C,SACE,qBAAKtC,IAAI,GAAGC,IAAKuD,UAAM3K,UAAU,iBAGrC,oBAAIA,UAAU,YAAYkH,QAAS,kBAAMiD,GAAU1B,EAAO,KAA1D,SACE,sBAAKzI,UAAU,kBAAf,UACE,qBAAKmH,IAAI,GAAGC,IAAKqB,EAAO,GAAGf,MAD7B,IACqC,qCAAQe,EAAO,GAAGJ,KAAlB,YAGvC,oBAAIrI,UAAU,YAAYkH,QAAS,kBAAMiD,GAAU1B,EAAO,KAA1D,SACE,sBAAKzI,UAAU,kBAAf,UACE,qBAAKmH,IAAI,GAAGC,IAAKqB,EAAO,GAAGf,MAD7B,IACqC,qCAAQe,EAAO,GAAGJ,KAAlB,2BAQjD,sBAAKrI,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACGkD,EAAK,gBAER,sBAAKlD,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC2B,EAAA,EAAD,CAAOtB,MAAO8C,EAAQpB,SA3GlB,SAAC1B,GACjBoD,EAAUpD,IA0G6C8B,SAAUqB,EAASxD,UAAU,cACxE,iCAAM,qBAAKmH,IAAI,GAAGC,IAAKyD,UAAU7K,UAAU,eAA3C,cAEF,sBAAKA,UAAU,aAAf,UACGkD,EAAK,gBADR,IACyB,cAACrD,EAAA,EAAD,CAAkBQ,MAAO+C,EAAS0H,aAAc,EAAG9J,mBAAmB,IAD/F,iBAKJ,qBAAKhB,UAAU,sBAAf,SACE,cAACiD,EAAD,CAASC,KAAMA,EAAMM,QAASA,EAAS7C,OAAQA,EAAQyC,QAASA,EAASO,kBAAmBA,GAAmBR,OAAQA,EAAQG,QAASA,EAASD,WAAYA,EAAYK,WAAYA,EAAYH,WAAYA,EAAYE,UAAWA,MAEtO,qBAAKzD,UAAU,oBAAf,SACE,gCACE,sBAAKA,UAAU,0BAAf,UACGkD,EAAK,qBADR,IAC8B,sBAAMlD,UAAU,gBAAhB,SAC1B,mBAAG+K,IAAI,aAAanI,OAAO,SAASoI,KAAK,sCAAzC,0BAGJ,qBAAKhL,UAAU,wBAAf,SACGkD,EAAK","file":"static/js/9.9ba3083d.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nfunction DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n\r\n  const isValidate = () => {\r\n    const {allowZero} = props \r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') \r\n          || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const {allowZero,wallet,defaultValue = '--',...others} = props \r\n    if(isValidate()) {\r\n      setRenderablity(<NumberFormat {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\r\n    } else {\r\n      setRenderablity(<span className='loading-line'></span>)\r\n    } \r\n    const timeout = window.setTimeout(() => {\r\n      if(!isValidate() && wallet && !wallet.isConnected()){\r\n        setRenderablity(defaultValue)\r\n      }\r\n    },30000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}\r\n\r\nexport default DeriNumberFormat","import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { bg } from '../../lib/web3js';\r\n\r\nconst Wrapper = styled.div`\r\ndisplay : flex;\r\nfont-size : 14px;\r\nalign-items : center;\r\nbackground: rgba(85, 119, 253, 0.1);\r\nborder-radius: 4px;\r\njustify-content: space-between;\r\ninput {\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  // min-width: 240px;\r\n  border: 0;\r\n  width : ${props => props.inputWidth};\r\n  height: 56px;\r\n  color : #E0ECFF;\r\n  font-size : 18px;\r\n  padding-left: 16px;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\n.unit {\r\n  margin-right: ${props => props.unitPadding};\r\n}\r\n`\r\nexport default function Input({value,unit,max,step,onChange,styles = {},focus,unitPadding = '24px',readOnly,inputWidth = '50%',className,disabled = false}){\r\n  const inputRef = useRef(null);\r\n  const change = e => {\r\n    const {value} = e.target\r\n    if(max && bg(value).gt(max)){    \r\n      onChange && onChange(max)\r\n    } else if(value <0 || isNaN(value)) {\r\n      onChange && onChange('')\r\n    } else {\r\n      onChange && onChange(value)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(inputRef.current && focus){\r\n      inputRef.current.focus();\r\n    }\r\n  },[focus])\r\n\r\n\r\n  return (\r\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\r\n      <input type='number' disabled = {disabled} value={value} max={max}  min='0'  step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\r\n      <div className='unit'>{unit}</div>\r\n    </Wrapper>    \r\n  )\r\n}","import './spinner.less'\r\nexport default function Spinner() {\r\n  return (\r\n    <div class=\"sleepContentView\">\r\n      <div class=\"circle\">\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/stage-one.7a1f5b00.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.768445a6.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.ee3fc1c4.svg\";","export default __webpack_public_path__ + \"static/media/succeed.02ebda03.svg\";","export default __webpack_public_path__ + \"static/media/pending.598ea867.svg\";","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../../components/Button/Button'\r\nimport { PRIMARY } from '../../utils/Constants';\r\nimport useConfig from '../../hooks/useConfig'\r\nimport { useAlert } from 'react-alert'\r\nimport Spinner from './Spinner'\r\nimport BSC from '../../assets/img/bsc-logo.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport stageOne from './img/stage-one.svg'\r\nimport stageTwo from './img/stage-two.svg'\r\nimport stageThree from './img/stage-three.svg'\r\nimport apiProxy from '../../model/ApiProxy';\r\nimport succeed from './img/succeed.svg'\r\nimport pending from './img/pending.svg'\r\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\r\n  const config = useConfig();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const [isApprove, setIsApprove] = useState(false);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [bridgeState, setBridgeState] = useState({});\r\n  const [claimState, setClaimState] = useState({});\r\n  const [isClickClaim, setIsClickClaim] = useState(false);\r\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\r\n  const connect = () => {\r\n    wallet.connect()\r\n  }\r\n  const valid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        wallet.switchNetwork(config[res.toChainId])\r\n        setIsClaim(true)\r\n\r\n      }\r\n      setIsValid(res.valid)\r\n    }\r\n  }\r\n  const send = async () => {\r\n    if (amount === '' || amount === 0) {\r\n      alert.error(lang['amount-must-be-greater-than-zero'])\r\n      return;\r\n    }\r\n    if (+amount > balance) {\r\n      alert.error(lang['there-is-not-enough-amount'])\r\n      return;\r\n    }\r\n    if (!isWalletConnected.isFromConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setSending(true)\r\n    setBridgeState({\r\n      stageOne: false\r\n    })\r\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\r\n    if (res.success) {\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: false\r\n      })\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      setSending(false)\r\n    }\r\n  }\r\n  const claim = async () => {\r\n    if (!isWalletConnected.isToConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setIsClickClaim(true)\r\n    setClaimState({\r\n      stageOne: false,\r\n    })\r\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: false,\r\n      })\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      alert.error(lang['claim-faild'])\r\n    }\r\n  }\r\n  const reset = ()=>{\r\n    history.push('/bridge')\r\n  }\r\n  const approve = async () => {\r\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setIsApprove(true);\r\n      loadApprove();\r\n    } else {\r\n      setIsApprove(false)\r\n      alert.error(lang['approve-faild'])\r\n    }\r\n  }\r\n  const loadApprove = async () => {\r\n    if (wallet.isConnected()) {\r\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\r\n      setIsApprove(result);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (wallet.isConnected()) {\r\n      loadApprove();\r\n      valid()\r\n    }\r\n  }, [wallet.detail, initialize]);\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n    } else if (isClickClaim) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n      setSending(false)\r\n      setAmount('')\r\n    } else {\r\n    }\r\n  }, [isValid, initialize]);\r\n  useEffect(() => {\r\n    let element;\r\n    if (wallet.isConnected()) {\r\n      if (isValid) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\r\n      } else if (!isApprove) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\r\n      } else if(isClickClaim){\r\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> COMPLETE {lang['complete']} </button>\r\n      }else {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\r\n      }\r\n    } else {\r\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\r\n    }\r\n    setActionElement(element)\r\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\r\n  return (\r\n    <div className='operate'>\r\n      <div className='from-to-title'>\r\n        {lang['bridge']} {amount} {lang['from'].toLowerCase()} DERI {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\r\n      </div>\r\n      <div className='btn'>\r\n        {actionElement}\r\n      </div>\r\n      <div className='hint'>\r\n        {!isClaim && <div className='sending'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!sending && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && <>\r\n                  {bridgeState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['bridge-signed']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\r\n                  {bridgeState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n        {isClaim && <div className='claiming'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!isClickClaim && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && <>\r\n                  {claimState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['finished']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && claimState.stageTwo && <>\r\n                  {claimState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}","export default __webpack_public_path__ + \"static/media/arrow-left.3530813d.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.3f7df0de.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\r\nimport Input from '../../components/Input/Input'\r\nimport Operate from './Operate'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport arrow from './img/arrow-left.svg'\r\nimport disabledDown from './img/disabled-down.svg'\r\nimport BSC from '../../assets/img/bsc-logo.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport deriLogo from '../../assets/img/logo.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport down from '../../assets/img/arrow-down.svg'\r\nimport classNames from 'classnames' \r\nimport './bridge.less'\r\nfunction Bridge({ wallet, lang }) {\r\n  const [amount, setAmount] = useState(0);\r\n  const [balance, setBalance] = useState(0);\r\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\r\n  const netWork_text = isdev ?\r\n    [\r\n      {\r\n        text: lang['ropsten'],\r\n        id: 3,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc-testnet'],\r\n        id: 97,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco-testnet'],\r\n        id: 256,\r\n        img: HECO,\r\n      }\r\n    ]\r\n    : [\r\n\r\n      {\r\n        text: lang['ethereum'],\r\n        id: 1,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc'],\r\n        id: 56,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco'],\r\n        id: 128,\r\n        img: HECO,\r\n      }\r\n\r\n    ]\r\n\r\n  const [fromList, setFromList] = useState(netWork_text)\r\n  const [toList, setToList] = useState(netWork_text)\r\n  const [sending, setSending] = useState(false);\r\n  const [initialize, setInitialize] = useState(isdev ?\r\n    {\r\n      from_chainId: 97,\r\n      from_network: lang['bsc-testnet'],\r\n      to_chainId: 3,\r\n      to_network: lang['ropsten']\r\n    } : {\r\n      from_chainId: 1,\r\n      from_network: lang['ethereum'],\r\n      to_chainId: 56,\r\n      to_network: lang['bsc']\r\n    });\r\n  const [isClaim, setIsClaim] = useState(false);\r\n  const [dropdownList_from, setDropdownList_from] = useState(false);\r\n  const [dropdownList_to, setDropdownList_to] = useState(false);\r\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\r\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\r\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\r\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\r\n  const [isWalletConnected, setIsWalletConnected] = useState(\r\n    {\r\n      isFromConnected: false,\r\n      isToConnected: false\r\n    }\r\n  );\r\n  const isConnected = () => {\r\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\r\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\r\n    let obj = {\r\n      isFromConnected: isFromConnected,\r\n      isToConnected: isToConnected\r\n    }\r\n    setIsWalletConnected(obj)\r\n  }\r\n\r\n  const showListFrom = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const showListTo = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_to(!dropdownList_to)\r\n  }\r\n\r\n  const getValid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        setInitialize({\r\n          from_chainId: res.fromChainId,\r\n          from_network: isNetwork(res.fromChainId, lang).netWork,\r\n          to_chainId: res.toChainId,\r\n          to_network: isNetwork(res.toChainId, lang).netWork,\r\n        })\r\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\r\n        setTo_img(isNetwork(res.toChainId, lang).img)\r\n        setAmount(bg(res.amount, -18).toString())\r\n        setSending(res.valid)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getBalance = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\r\n      setBalance(res)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBalance()\r\n  }, [wallet.detail, initialize]);\r\n\r\n  useEffect(() => {\r\n    getValid()\r\n  }, [wallet.detail])\r\n\r\n  const select_from = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.to_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.from_chainId = obj.id;\r\n      Init.from_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const select_to = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.from_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.to_chainId = obj.id;\r\n      Init.to_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_to(!dropdownList_to)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    let from_arr;\r\n    let to_arr;\r\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\r\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\r\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\r\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\r\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\r\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\r\n    from_arr = [from_one, from_two, from_three]\r\n    to_arr = [to_one, to_two, to_three]\r\n    setFromList(from_arr)\r\n    setToList(to_arr)\r\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\r\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\r\n    isConnected()\r\n\r\n  }, [initialize,wallet.detail])\r\n\r\n  const getAmount = (value) => {\r\n    setAmount(value)\r\n  }\r\n\r\n  return (\r\n    <div className='bridge'>\r\n      <div className='bridge-box'>\r\n        <div className='bridge-title'>\r\n          <div className='title'>\r\n            {lang['bridge']}\r\n          </div>\r\n          <div className='birdge-des'>\r\n            {lang['bridge-des']}\r\n          </div>\r\n        </div>\r\n        <div className='bridge-info'>\r\n          <div className='select-network-box'>\r\n            <div className='select-network-title'>\r\n              {lang['select-networks']}\r\n            </div>\r\n            <div className='select-network-from-to'>\r\n              <div className='from-network'>\r\n                <div className='from-title'>\r\n                  {lang['from']}\r\n                </div>\r\n                <div className='from-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={From_img} alt='' />\r\n                      <span>{initialize.from_network}</span>\r\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\r\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassFrom}>\r\n                    <li className='wallet-li' onClick={() => select_from(fromList[0])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={fromList[0].img} /> <span> {fromList[0].text} </span>\r\n                        { }\r\n                      </div>\r\n                      <div className='up-icon-btn' onClick={() => { showListFrom() }}>\r\n                        <img alt='' src={down} className='up-icon' />\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_from(fromList[1])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={fromList[1].img} /> <span> {fromList[1].text} </span>\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_from(fromList[2])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={fromList[2].img} /> <span> {fromList[2].text} </span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className='arrow'>\r\n                <img src={arrow} alt='' />\r\n              </div>\r\n              <div className='to-network'>\r\n                <div className='to-title'>\r\n                  {lang['to']}\r\n                </div>\r\n                <div className='to-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={To_img} alt='' />\r\n                      <span>{initialize.to_network}</span>\r\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\r\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassTo}>\r\n                    <li className='wallet-li' onClick={() => select_to(toList[0])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={toList[0].img} /> <span> {toList[0].text} </span>\r\n                      </div>\r\n                      <div className='up-icon-btn' onClick={() => { showListTo() }}>\r\n                        <img alt='' src={down} className='up-icon' />\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_to(toList[1])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={toList[1].img} /> <span> {toList[1].text} </span>\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_to(toList[2])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={toList[2].img} /> <span> {toList[2].text} </span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='set-amount'>\r\n            <div className='set-amount-title'>\r\n              {lang['set-amount']}\r\n            </div>\r\n            <div className='set-amount-box'>\r\n              <div className='input-deri'>\r\n                <Input value={amount} onChange={getAmount} disabled={sending} className='input-box' />\r\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\r\n              </div>\r\n              <div className='total-deri'>\r\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true}  /> DERI\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='bridge-operate-hint'>\r\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\r\n          </div>\r\n          <div className='bridge-to-polygon'>\r\n            <div>\r\n              <div className='birdge-to-polygon-title'>\r\n                {lang['bridge-to-polygon']} <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'>Polygon</a>\r\n                </span>\r\n              </div>\r\n              <div className='bridge-to-polygon-des'>\r\n                {lang['bridge-to-polygon-des']}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}\r\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}