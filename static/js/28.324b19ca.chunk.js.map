{"version":3,"sources":["desktop/pages/Mining/Mining.js"],"names":["env","DeriEnv","get","chainInfo","config","inject","observer","wallet","lang","currentTab","setCurrentTab","useState","version","chainId","symbol","baseToken","address","type","useParams","query","useQuery","networkText","name","props","has","poolInfoClass","classnames","className","onClick"],"mappings":"yKAAA,yHAYA,MAAMA,EAAMC,UAAQC,OACd,UAACC,GAAaC,EAAOJ,GAkCZK,sBAAO,SAAPA,CAAiBC,aAhChC,UAAgB,OAACC,EAAD,KAAQC,IACvB,MAAOC,EAAWC,GAAiBC,mBAAS,cACtC,QAACC,EAAD,QAASC,EAAT,OAAiBC,EAAjB,UAAwBC,EAAxB,QAAkCC,EAAlC,KAA0CC,GAASC,sBACnDC,EAAQC,cACRC,EAAclB,EAAUU,IAAYV,EAAUU,GAASS,KACvDC,EAAQ,CAACX,UAAQC,UAAQC,SAAOC,YAAUC,UAAQT,SAAOU,OAAKT,QACjEW,EAAMK,IAAI,iBACZD,EAAK,YAAkBJ,EAAMjB,IAAI,gBAE/BiB,EAAMK,IAAI,cACZD,EAAK,SAAeJ,EAAMjB,IAAI,aAE/B,MAAMuB,EAAgBC,IAAW,cAAcjB,GAC/C,OACG,sBAAKkB,UAAWF,EAAhB,UACD,sBAAKE,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACW,OAATV,GAAgE,OAAZL,GAAgC,YAAZA,EAAvD,GAAEG,OAAeM,IAAkG,GAAEP,KAAUC,OAAeM,MAEjK,qBAAKM,UAAU,wBAAf,SACE,qBAAKA,UAAU,mBAAmBC,QAAS,IAAMlB,EAAc,aAA/D,SACGF,EAAK,2BAIZ,qBAAKmB,UAAU,YAAf,SACE,cAAC,IAAD,IAAqBJ","file":"static/js/28.324b19ca.chunk.js","sourcesContent":["import {useState} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport './mining.less'\nimport './zh-mining.less'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet,lang}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst {version,chainId,symbol,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId] && chainInfo[chainId].name;\n\tconst props = {version,chainId,symbol,baseToken,address,wallet,type,lang}\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\tconst poolInfoClass = classnames('mining-info',currentTab)\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t{type === 'lp' ? `${baseToken} @ ${networkText}` :  (version === 'v2' || version === 'v2_lite') ? `${baseToken} @ ${networkText}` : `${symbol}/${baseToken} @ ${networkText}` }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}