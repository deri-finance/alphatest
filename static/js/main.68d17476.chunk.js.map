{"version":3,"sources":["lib/web3js/v2/utils/oracle.js","lib/web3js/v2/utils/api.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database_base.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/config/env.js","lib/web3js/v2/contract/v2_lite/perpetual_pool.js","lib/web3js/v2/contract/v2_lite/l_token.js","lib/web3js/v2/contract/v2_lite/p_token.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/factory/v2/index.js","lib/web3js/v2/factory/v2_lite/index.js","lib/web3js/v2/api/v2/mining_query_api.js","lib/web3js/v2/api/v2/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/v2/trade_query_api.js","lib/web3js/v2/api/v2/trade_transaction_api.js","lib/web3js/v2/api/v2_lite/mining_query_api.js","lib/web3js/v2/api/v2_lite/mining_transaction_api.js","lib/web3js/v2/api/v2_lite/trade_query_api.js","lib/web3js/v2/api/v2_lite/trade_transaction_api.js","lib/web3js/v2/api/v2/trade_history_api.js","lib/web3js/v2/api/v2_lite/trade_history_api.js","lib/web3js/v2/api/broker_api.js","lib/web3js/v2/api/activity_api.js","lib/web3js/factory/web3.js","lib/web3js/config/database.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/chain.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","lib/web3js/config/rest_server.js","lib/web3js/utils.js","lib/web3js/indexV2.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","model/Intl.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/v2/config/oracle.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","model/Version.js","utils/utils.js","lib/web3js/api/contractQueryApi.js","../lang).)*/.json$","lib/web3js/v2/factory/shared.js","lib/web3js/v2/config/chain.js","lib/web3js/v2/utils/convert.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js","lib/web3js/v2/config/pool.js","lib/web3js/v2/config/broker.js","lib/web3js/v2/factory/web3.js","lib/web3js/v2/config/config.js","lib/web3js/v2/contract/oracle/woo_oracle.js","lib/web3js/v2/contract/oracle/chainlink_oracle.js","lib/web3js/v2/contract/oracle/wrapped_oracle.js","lib/web3js/v2/contract/oracle/offchain_oracle.js","lib/web3js/v2/contract/broker_manager.js","lib/web3js/v2/contract/ptoken_airdrop.js","lib/web3js/v2/contract/b_token.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/contract/v2/perpetual_pool.js","lib/web3js/v2/contract/v2/perpetual_pool_router.js","lib/web3js/v2/contract/v2/l_token.js","lib/web3js/v2/contract/v2/p_token.js"],"names":["getOracleUrl","symbol","env","DeriEnv","get","addSymbolParam","url","toLowerCase","getPriceInfo","a","mapToSymbolInternal","retry","fetch","mode","cache","res","ok","json","priceInfo","status","toString","data","Error","JSON","stringify","RestOracle","getPrice","deriToNatural","price","getOraclePrice","chainId","version","normalizeChainId","config","getOracleConfig","address","decimal","oracle","oracleFactory","catchApiError","func","args","methodName","defaultValue","console","log","catchTxApiError","result","success","transaction","error","MAX_GAS_AMOUNT","Contract","contractAddress","contractAbi","isProvider","this","web3","web3Factory","metaMaskWeb3","contract","eth","accountAddress","poolAddress","method","_init","methods","call","includes","gas","i","estimateGas","from","parseInt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","errorMessage","_estimatedGas","txRaw","to","Web3","utils","numberToHex","value","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","POOL_ABI","PerpetualPool","_call","bg","cumuFundingRate","cumuFundingRateBlock","liquidity","tradersNetVolume","tradersNetCost","multiplier","feeRatio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minAddLiquidity","redemptionFeeRatio","fundingRateCoefficient","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","getOracleInfo","signed","timestamp","v","r","s","getBTCUSDPrice","getStateValues","getParameters","args1","hasInvalidArgsValue","fundingRate","fundingRatePerBlock","calculateFundingRate","processFundingRate","args2","liquidityUsed","calculateLiquidityUsed","poolMarginRatio","amount","_transactPool","blockNumber","getBlock","eventName","filter","fromBlock","events","getPastEvents","toBlock","es","e","push","volume","abs","times","CONTRACT_ABI","BTokenContract","allowance","gt","_transact","MAX_VALUE","all","_balance","decimals","PTokenContract","cost","lastCumuFundingRate","margin","lastUpdateTimestamp","LTokenContract","DatabaseBaseContract","providers","HttpProvider","providerUrl","getLatestRPCServer","getDBProviderUrlsConfig","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","MiningVaultRouter","SlpPool","naturalToDeri","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","getDeriContractAddress","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddressConfig","key","Object","keys","database","databaseWormholeFactory","getDBWormholeAddressConfig","databaseAirdropFactory","getDBAirdropAddressConfig","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","bTokenFactory","bTokenInstanceMap","bToken","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","miningVaultPoolFactory","mVaultInstanceMap","mVault","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","_deriEnv","set","PerpetualPoolLite","ContractBase","constructor","super","perpetualPoolLiteAbi","getPoolConfig","undefined","offchainSymbolIds","bTokenAddress","lTokenAddress","pouterAddress","liquidatorQualifierAddress","protocolFeeCollector","getAddresses","pTokenAddress","protocolFeeCollectRatio","symbolId","oracleAddress","cumulativeFundingRate","err","prices","length","symbolNames","reduce","acc","concat","getSymbol","map","p","index","_getSymbolPrices","newVolume","LTokenLite","lTokenLiteAbi","PTokenLite","pTokenLiteAbi","tokenId","Array","isArray","lastCumulativeFundingRate","processPosition","owner","operator","calculateEntryPrice","eq","div","calculateLiquidationPrice","dynamicCost","tmp","minus","plus","max","isOrderValid","marginHeld","minMargin","gte","calculateTxFee","validateArgs","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","bTokens","accum","b","discount","pnl","isBToken0RatioValid","bTokenId","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","symbols","totalCost","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","min","factory","klass","instances","perpetualPoolRouterFactory","PerpetualPoolRouter","LToken","PToken","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","getLiquidityInfo","async","getPoolConfig2","bTokenIdList","getPoolBTokenIdList","symbolIdList","getPoolSymbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","promises","totalPnl","restLiquidity","poolLiquidity","lastCumulativePnl","maxRemovableShares","calculateMaxRemovableLiquidity","approximatePnl","cumulativePnl","shares","getPoolLiquidity","db","getValues","catch","getPoolInfoApy","poolNetwork","getNetworkName","apy","volume1h","volume24h","addLiquidity","router","routerAddress","perpetualPoolRouter","minBToken0Ratio","validation","removeLiquidity","isMaximum","priceCache","_prices","split","val","isNaN","parseFloat","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getPoolBTokenList","symbolInfo","bTokenDiscounts","bTokenSymbol","bTokenMultiplier","getPositionInfo","symbolConfigList","getPoolSymbolList","symbolList","positionInfo","margins","positions","latestPrice","getLastUpdatedBlockNumber","getLatestBlockNumber","getPosition","getMargins","getPositions","symbolPrices","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getWalletBalance","balanceOf","isUnlocked","getEstimatedFee","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","promiseList","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","orderValidation","trade","closePosition","negated","_getLiquidityInfo","symbolIds","getLiquidity","totalSupply","getActiveSymbolIds","poolDynamicEquity","getMargin","priceIndex","indexOf","processTradeEvent","info","txHash","tradeVolume","timeStamp","_getTimeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","returnValues","item","unshift","getTradeHistory","tradeFromBlock","tradeHistory","resp","fetchJson","getRestServerConfig","tradeHistoryBlock","trim","tradeHistoryOnline","sort","initialBlock","getBlockInfo","baseToken","account","setBroker","brokerAddress","normalizeAddress","getBrokerConfig","brokerManagerAddress","brokerManager","brokerManagerFactory","getAirdropPTokenAddress","airdropPToken","pTokenAirdropFactory","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","web3Instance","web3InstanceMap","getChainProviderUrl","shuffleArray","array","j","Math","floor","random","temp","getBlockNumber","duration","Number","MAX_SAFE_INTEGER","startTime","urls","blockNumbers","findIndex","startsWith","getChainProviderUrls","getDailyBlockNumberConfig","position","getStorageAt","hexToNumber","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getChainIds","getChainProviderUrlsConfig","provider_urls","getContractAddressConfig","pool","dToken","MiningVault","unit","retired","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","getDeriContractAddressConfig","Deri","Wormhole","getPreminingContractConfig","staking","isInTvlRace","premining","chainBlockNumberList","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","state","modalIsOpen","className","overlayMerged","assign","mergedStyle","isOpen","style","portalClassName","intl","locale","onClose","inject","observer","data-title","process","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","lte","toChecksumAddress","hexToString","hexToUtf8","hexToNumberString","toFixed","naturalWithPercentage","sd","deriToString","deriToBool","toNumber","some","getPoolContractAddress","c","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","getLpContractAddress","deriAddress","responseJson","format","bigNumber","toFormat","replaceAll","chainIds","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","wooOracleAbi","chainlinkOracleAbi","wrappedOracleAbi","offchainOracleAbi","brokerManagerAbi","bTokenLiteAbi","pTokenAirdropAbi","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","getUserWalletBalance","walletAddress","getBalance","balance","fromWei","getLpLiquidityInfo","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","isV2","total","cur","getPoolConfigListV2","getContractAddressConfig2","getPoolVersion","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfo2","getPositionInfoV2","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistory2","getTradeHistoryV2","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","message","require","forEach","path","lang","page","test","pageName","Intl","setLocale","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","pPool","maxWithdrawMargin","mintDToken","getUserInfoAll","userInfo","deadline","nonce","valid","miningVaultAddress","miningVault","freeze","mintDeri","databaseWormhole","signature","mintAirdrop","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","miningVaultRouter","mint","getUserInfo","userAddress","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","userInfoHarvest","userInfoTotal","getLpPoolInfoApy","apy2","getUserInfoInPool","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","opts","fetchRestApi","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","getOracleConfigList","getConfig","isUsedRestOracle","mapToSymbol","filteredByChainId","wsOnPromise","ws","event","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","getOrSet","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","id","makeAutoObservable","setCurrent","isV1","isV2Lite","switch","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","parameters","getUserWormholeSignature","getDeriBalance","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","instanceMap","WrappedOracle","WooOracle","BToken","BrokerManager","PTokenAirdrop","MAX_UINT256","MAX_INT256","isBrowser","isJsDom","userAgent","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","MaskWrapper","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","obj","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","find","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","syncFundingRate","setPaused","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode","expendPoolConfigV2","flat","expendPoolConfigV2Lite","getPoolConfigList","getFilteredPoolConfigList","poolConfigList","check","_getPoolConfig","bTokenCount","symbolCount","getBrokerConfigList","processConfigV2","validateConfigV2Lite","validateObjectKeyExist","validateIsArray","prop","processConfigV2Lite","jsonConfig","getJsonConfig","_balanceOf","bTokenBalance","every","keyList","valName","protocolFeeAccrued","getLengths","decimals0","swapperAddress","priceInfos","processAsset"],"mappings":"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","file":"static/js/main.68d17476.chunk.js","sourcesContent":["import { getOracleConfig, mapToSymbolInternal } from '../config/oracle';\nimport { oracleFactory } from '../factory/shared';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../../config';\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (symbol) => {\n  const env = DeriEnv.get();\n  //const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol.toLowerCase()}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/get_signed_price', symbol);\n    }\n    return 'https://oracle4.deri.finance/get_signed_price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/get_signed_price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/get_signed_price';\n  }\n};\n\nexport const getPriceInfo = async (symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  let url = getOracleUrl(symbol);\n  //console.log('oracle url', url);\n  let retry = 2;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200') {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info error: exceed max retry(2): ${JSON.stringify(priceInfo)}`, );\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      const priceInfo = await getPriceInfo(symbol)\n      return deriToNatural(priceInfo.price).toString()\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(chainId, symbol, version);\n  // console.log('oracle config',config)\n  if (config && config.address) {\n    if (!config.decimal) {\n      throw new Error('getOraclePrice: decimal is empty', config.decimal);\n    }\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  }\n};\n","export const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    //console.log('args', args, methodName, defaultValue)\n    // console.log(await func(...args))\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}:`, err)\n    //console.log(`${methodName}: ${err}`)\n  }\n  return defaultValue\n}\n\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n","import Web3 from 'web3';\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class Contract {\n  constructor(chainId, contractAddress, contractAbi, isProvider) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n    this.isProvider = isProvider;\n  }\n  async _init() {\n    if (!this.web3) {\n      if (this.isProvider) {\n        this.web3 = await web3Factory(this.chainId);\n      } else {\n        this.web3 = metaMaskWeb3();\n      }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  setAccount(accountAddress) {\n    this.accountAddress = accountAddress;\n    return this;\n  }\n  setPool(poolAddress) {\n    this.poolAddress = poolAddress;\n    return this;\n  }\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while(retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n      //this.web3.eth.getGasPrice(),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\nimport {\n  hasInvalidArgsValue,\n  getBTCUSDPrice,\n  getOracleInfo,\n  deriToNatural,\n  bg,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  async _transactPool(method, args = [], accountAddress) {\n    await this._init()\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    // const [gas, gasPrice] = await Promise.all([\n    //   this._estimatedGas(method, [...args, ...signed], accountAddress),\n    //   this.web3.eth.getGasPrice(),\n    // ]);\n    //console.log(`gasPrice ${gasPrice / 1000000000} GW`);\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\n    try {\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = await this.getParameters();\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (hasInvalidArgsValue(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (hasInvalidArgsValue(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    //await this.web3.eth.getAccounts(console.log)\n    //console.log('depositMargin');\n    let res;\n    try {\n      let tx = await this._transactPool(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { Contract } from './contract';\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\n/* eslint-enable */\n\nexport class BTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    allowance = deriToNatural(allowance);\n    return allowance.gt(0);\n  }\n\n  async unlock(accountAddress) {\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { deriToNatural, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { deriToNatural } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import Web3 from 'web3';\nimport { getDBProviderUrlsConfig } from '../config/database';\nimport { getLatestRPCServer } from '../utils';\n\nexport class DatabaseBaseContract {\n  constructor(contractAddress, contractAbi) {\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n  _init() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      this.contractAbi,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async _call(method, args) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch (err) {\n        this.providerUrl = null\n        console.log(err.toString())\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { DatabaseBaseContract } from './database_base';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, DB_CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi'], isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI['abi'],\n    //   this.contractAddress\n    // );\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends Contract {\n  constructor(chainId, contractAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { PerpetualPool } from '../contract/perpetual_pool';\nimport { BTokenContract } from '../contract/bToken';\nimport { PTokenContract } from '../contract/pToken';\nimport { LTokenContract } from '../contract/lToken';\nimport { DatabaseContract } from '../contract/database';\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\n\nimport { DeriEnv } from '../config/env';\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\nimport { SlpPool } from '../contract/slp_pool';\nimport { ClpPool } from '../contract/clp_pool';\nimport { Clp2Pool } from '../contract/clp2_pool';\nimport { DeriContract } from '../contract/deri';\nimport { WormholeContract } from '../contract/wormhole';\n//import { getLpContractAddress } from '../utils';\n// import { getPoolBaseSymbolList } from '../utils'\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n      isProvider\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const bTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\n      return bTokenInstanceMap[key];\n    }\n    const bToken = new BTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new BTokenContract\")\n    bTokenInstanceMap[key] = bToken;\n    return bToken;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new LTokenContract\")\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\nexport const miningVaultPoolFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\n    // console.log(\"new MiningValutPool\")\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();\n\nexport const deriFactory = (function () {\n  const deriInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(deriInstanceMap).includes(key)) {\n      return deriInstanceMap[key];\n    }\n    const deri = new DeriContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    deriInstanceMap[key] = deri;\n    return deri;\n  };\n})();\n\nexport const wormholeFactory = (function () {\n  const wormholeInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\n      return wormholeInstanceMap[key];\n    }\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\n    wormholeInstanceMap[key] = wormhole;\n    return wormhole;\n  };\n})();\n\nexport const miningVaultRouterFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","import { ContractBase } from '../contract_base'\nimport { offchainOracleAbi, perpetualPoolLiteAbi } from '../abis';\nimport { deriToNatural, naturalToDeri, getPriceInfo } from '../../utils'\n//import { MAX_INT256} from '../../config'\nimport { getPoolConfig } from '../../config';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.bTokenAddress = '';\n    this.lTokenAddress = '';\n    this.pouterAddress = '';\n    this.liquidatorQualifierAddress = '';\n    this.protocolFeeCollector = '';\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses(), this.getParameters()]);\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\n    this.protocolFeeCollector = res.protocolFeeCollector;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n  async _getSymbolPrices() {\n    let prices = []\n    if (this.offchainSymbolIds.length > 0) {\n      const symbolNames = (\n        await Promise.all(\n          this.offchainSymbolIds.reduce(\n            (acc, i) => acc.concat([this.getSymbol(i)]),\n            []\n          )\n        )\n      ).map((s) => s.symbol);\n      const priceInfos = await Promise.all(\n        symbolNames.reduce((acc, s) => acc.concat([getPriceInfo(s)]), [])\n      );\n      prices = priceInfos.reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../contract_base'\nimport { lTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../contract_base'\nimport { pTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { bg, max } from '../utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from '../../contract/v2';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n} from '../../contract/v2_lite';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)","import { databaseFactory } from '../../../factory/contracts';\nimport { lTokenFactory, perpetualPoolFactory } from '../../factory'\nimport { getPoolConfig2, getPoolBTokenIdList, getPoolSymbolIdList} from '../../config'\nimport { bg, deriToNatural, getNetworkName } from '../../utils'\nimport { calculateMaxRemovableLiquidity } from '../../calculation'\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const {lToken:lTokenAddress} = getPoolConfig2(poolAddress, bTokenId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n\n    const [parameterInfo, bTokenInfo, lTokenAsset ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ])\n    const { minPoolMarginRatio } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    const cost = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n    }, bg(0))\n    const totalPnl = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n    }, bg(0))\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl)\n      } else {\n        return accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n      }\n    }, bg(0))\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset\n    const maxRemovableShares = calculateMaxRemovableLiquidity(bTokens[bTokenId], liquidity, cost, totalPnl, restLiquidity, minPoolMarginRatio)\n    const approximatePnl = pnl.plus(bg(bTokens[bTokenId].cumulativePnl).minus(lastCumulativePnl).times(liquidity))\n    //console.log(\"approximatePnl\", approximatePnl.toString())\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString()\n    };\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};","import { getPoolBTokenIdList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList } from '../../config'\nimport { perpetualPoolRouterFactory, perpetualPoolFactory, lTokenFactory } from '../../factory'\nimport { RestOracle } from '../../utils'\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../../calculation'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n      res = { success: false, error: validation.error};\n   }\n   return res\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum=false,\n) => {\n   const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n     poolAddress,\n   );\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let symbolIdList = getPoolSymbolIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const promises = symbolList.map(async(s) => {\n        return await RestOracle(s).getPrice()\n      })\n      const prices = await Promise.all(promises)\n      const priceInfos = prices.map((p, index) => {\n        return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n      })\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const {router:routerAddress, lToken:lTokenAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       promises = symbolList.map(async(s) => {\n         return await RestOracle(s).getPrice()\n       })\n       const prices = await Promise.all(promises)\n       const priceInfos = prices.map((p, index) => {\n         return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n       })\n       const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../../factory';\nimport { getPoolBTokenIdList, getPoolBTokenList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList} from '../../config'\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../../calculation';\nimport { getOraclePrice, bg, min, max } from '../../utils'\nimport { fundingRateCache, priceCache } from '../api_globals';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList, getPoolBTokenIdList } from '../../config'\nimport {\n  bTokenFactory,\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../../factory';\nimport { RestOracle, bg } from '../../utils';\n\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n   const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume).plus(newVolume).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    //console.log('liquidity', liquidity.toString())\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n    // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n    // console.log('pnl', pnl.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n     promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n","import { databaseFactory } from '../../../factory/contracts';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../utils';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError } from '../../utils';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { calculateEntryPrice } from \"../../../calculation\"\nimport { calculateFundingRate, calculateLiquidationPrice, processFundingRate, calculateFundingFee } from \"../../calculation\"\nimport { getPoolConfig } from \"../../config\"\nimport { bTokenFactory } from \"../../factory/shared\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../../factory/v2_lite\"\nimport { bg, catchApiError, getLastUpdatedBlockNumber, getLatestBlockNumber, getOraclePrice } from \"../../utils\"\nimport { fundingRateCache, priceCache } from \"../api_globals\"\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n    ])\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    //console.log(latestBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePrice(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { bTokenFactory } from '../../factory/shared';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError, bg } from '../../utils';\n\nexport const unlock = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.unlock(accountAddress, poolAddress)\n  }, args)\n}\n\nexport const depositMargin = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addMargin(accountAddress, amount)\n  }, args)\n}\n\nexport const withdrawMargin = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeMargin(accountAddress, amount, isMaximum)\n  }, args)\n}\n\nexport const tradeWithMargin = async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId]\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n    const { pToken:pTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [parameterInfo, liquidity, margin, symbolIds ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getLiquidity(),\n      pToken.getMargin(accountAddress),\n      pToken.getActiveSymbolIds(),\n    ])\n    const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n    let promises = []\n\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    let marginHeld = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    let liquidityUsed = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.tradersNetVolume).plus(newVolume).times(s.price).times(s.multiplier).abs())\n      } else {\n        return acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n\n    const orderValidation = isOrderValid(\n      margin,\n      marginHeld,\n      liquidity,\n      liquidityUsed,\n    )\n    if (orderValidation.success) {\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error(orderValidation.error)\n    }\n  }, args)\n}\n\nexport const closePosition = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const { volume } = await pToken.getPosition(accountAddress, symbolId);\n    if (!volume.eq(0)) {\n      const newVolume = volume.negated()\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error('no position to close')\n    }\n  }, args)\n}\n","import { deriToNatural } from '../../utils';\nimport { perpetualPoolFactory } from '../../factory';\nimport { getPoolConfig2, getPoolSymbolIdList } from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { owner: accountAddress }\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../utils';\nimport { perpetualPoolLiteFactory } from '../../factory';\nimport { getPoolConfig, getPoolConfig2, getPoolSymbolIdList} from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\nimport { calculateTxFee } from '../../calculation/position';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { brokerManagerFactory } from \"../factory\"\nimport { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { getBrokerConfig } from \"../config\"\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig(chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}","import { pTokenAirdropFactory, pTokenFactory } from \"../factory\"\nimport { getPoolConfig2 } from '../config'\nimport { DeriEnv } from \"../../config\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import Web3 from 'web3';\nimport { getChainProviderUrl } from '../utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    let web3;\n    if (typeof window.ethereum !== undefined) {\n      web3 = new Web3(window.ethereum);\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n    web3Instance = web3;\n    return web3;\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return async(chainId) => {\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\n      return web3InstanceMap[chainId];\n    }\n    if (['1', '3', '42'].includes(chainId)) {\n      console.log(\n        `==== web3Factory(${chainId}), please caution the access limits ===`\n      );\n    }\n    const providerUrl = await getChainProviderUrl(chainId);\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n    web3InstanceMap[chainId] = web3;\n    return web3;\n  };\n})();\n","export const getDBProviderUrlsConfig = () => [\n  //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const fetchWithTimeout = (url, options = {}) => {\n  const { timeout = 1200, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((resolve) => {\n      setTimeout(() => {\n        // reject(\n        //   new Error(\n        //     `Request for ${url} timed out after ${timeout} ms`,\n        //   ),\n        // )\n        resolve({timeout:true})\n      }, timeout)\n    }),\n  ])\n}\n\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    if (!err.toString().includes('FetchError')) {\n      console.log(err);\n    }\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    //console.log(url)\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error(`getAliveHttpServer(): No alive http server in ${urls}`);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  // console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\nimport { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    //console.log(chainId, contractAddress, position)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', res)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97','127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","export const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\nexport const ChainProviderUrls = [\n  {\n    provider_urls: [\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '1',\n  },\n  {\n    provider_urls: [\n      'https://bsc-dataseed.binance.org',\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n    ],\n    chainId: '56',\n  },\n  {\n    provider_urls: ['https://http-mainnet.hecochain.com'],\n    chainId: '128',\n  },\n  {\n    provider_urls: [\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '3',\n  },\n  {\n    provider_urls: [\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '42',\n  },\n  {\n    provider_urls: [\n      //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\n    ],\n    chainId: '97',\n  },\n  {\n    provider_urls: ['https://http-testnet.hecochain.com'],\n    chainId: '256',\n  },\n];\n\nexport const getChainProviderUrlsConfig = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\n  }\n}\n","import { getChainIds } from './chain';\n\n/** @module config */\n\n/**\n * Get the contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getContractAddressConfig = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    // console.log('!!! production !!!')\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n/**\n * Get the Slp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getSlpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n      },\n    ];\n  }\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\n  return [];\n};\n\n/**\n * Get the Clp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getClpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        retired: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getLpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterContractAddress = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\n/**\n * Get the Deri contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].Deri - deri address\n * @returns {string} response[].Wormhole - wormhole token address\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getDeriContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingContractConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\nexport const getDailyBlockNumberConfig = () => {\n  const chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 10,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return 'https://testnetapi.deri.finance';\n    //return 'http://localhost:8082';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport {\n  DeriEnv,\n  getChainProviderUrlsConfig,\n  getContractAddressConfig,\n  getSlpContractAddressConfig,\n  getClpContractAddressConfig,\n  getClp2ContractAddressConfig,\n  getLpContractAddressConfig,\n  getDailyBlockNumberConfig,\n  getDeriContractAddressConfig,\n  getChainIds,\n} from './config';\n\n/** @module utils */\n\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport { BigNumber };\n\n/**\n * Change the value to BigNumber type\n * @func\n * @param {string|number} value - the number that need to changed to BigNumber type\n * @param {string} base - base of the number\n * @returns {BigNumber}\n */\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\n/**\n * Get the max value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Get the min value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Convert the number to a fixed precision\n * @func\n * @param {string} value - the number that need to convert\n * @param {number} num - the number for method toFixed()\n * @returns {string}\n */\nexport const toNatural = (value, num = 0) =>\n  BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const hexToNaturalWithPercentage = (value) =>\n  `${bg(hexToNumberString(value), -18)\n    .sd(4)\n    .times(100)\n    .toFixed(4)\n    .toString()}%`;\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const deriToNaturalWithPercentage = (value) =>\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasInvalidArgsValue = (...args) =>\n  args.some(\n    (i) =>\n      // console.log(bg(i))\n      isNaN(i.toString()) || i.toString() === '0'\n  );\n\n// language\nexport const isObject = (obj) => typeof obj === 'object';\n\n//const np = () => {}\n//const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// http\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    //const response = await fetch(url);\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    //console.log(err);\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    if (await checkHttpServerIsAlive(url)) {\n      //console.log(url)\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  //console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  //console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): cannot find alive RPC server in ${urls}`)\n  }\n};\n\n// ethereum chain\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};\n\nexport const getWalletBalanceUnit = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let index;\n  const unitNetworkIdsMap = {\n    ETH: ['1', '3', '42'],\n    BNB: ['56', '97'],\n    HT: ['128', '256'],\n  };\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\n  for (let i = 0; i < networkIdsArray.length; i++) {\n    if (networkIdsArray[i].includes(chainId)) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== undefined) {\n    return Object.keys(unitNetworkIdsMap)[index];\n  }\n  if (chainId === '') {\n    return '';\n  }\n  throw new Error('Invalid Network:', chainId);\n};\n\nexport const getPoolBaseSymbolList = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = [];\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol } = pools[i];\n    if (bTokenSymbol && symbol) {\n      result.push(`${symbol}/${bTokenSymbol}`);\n    }\n  }\n  return result;\n};\n\nexport const getPoolBaseTokenAddressObject = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = {};\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol, pool } = pools[i];\n    const key = `${symbol}/${bTokenSymbol}`;\n    if (bTokenSymbol && symbol) {\n      result[key] = pool;\n    }\n  }\n  return result;\n};\n\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\n//   if (pool.length > 0) {\n//     return [\n//       pool[0].pool,\n//       pool[0].bToken,\n//       pool[0].pToken,\n//       pool[0].lToken,\n//       pool[0].dToken,\n//       pool[0].MiningVault,\n//       pool[0].initialBlock,\n//     ];\n//   }\n//   console.log(\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\n//   );\n//   return [];\n// };\n\n// get config by poolAddress\nexport const getPoolContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  // console.log(\n  //   `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  // );\n  return [];\n};\n\nexport const getMiningVaultContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\n// export const getMiningVaultRouterContractAddress = (chainId) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   if (pools.length > 0) {\n//     if (pools[0].MiningVaultRouter) {\n//       return pools[0].MiningVaultRouter;\n//     }\n//   }\n// };\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  }\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\n};\n\nexport const getSlpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n    };\n  }\n  console.log(\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getLpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getOracleUrl = (chainId, poolAddress) => {\n  const env = DeriEnv.get()\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    return 'https://oracle4.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (chainId, poolAddress) => {\n  let url = getOracleUrl(chainId, poolAddress);\n  //console.log('oracle url', url);\n  let retry = 2;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    //if (res && !res.timeout) {\n    if (res.ok) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\n  const responseJson = await getOracleInfo(chainId, poolAddress);\n  let price = responseJson.price;\n  if (!price) {\n    price = '0';\n  }\n  return deriToNatural(responseJson.price).toString();\n};\nexport const getOraclePrice = getBTCUSDPrice;\n\nexport const getChainProviderUrl = async(chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrlsConfig(chainId)\n  if (urls.length > 0) {\n    return await getLatestRPCServer(urls)\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const format = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`)\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`)\n  }\n};","export {\n  DeriEnv,\n  //getContractAddressConfig,\n  getLpContractAddressConfig,\n  getSlpContractAddressConfig,\n  getPreminingContractConfig,\n} from './config';\nexport * from './utils';\nexport * from './calculation';\n\nexport * from './api/apiGlobals';\nexport * from './api/factoryApi';\nexport * from './api/walletApi';\nexport {\n  // isUnlocked,\n  // getEstimatedMargin,\n  // getEstimatedFee,\n  // getEstimatedFundingRate,\n  // getEstimatedLiquidityUsed,\n  isDeriUnlocked,\n  getUserWormholeSignature,\n  // getFundingRate,\n  //getPositionInfo,\n  getDeriBalance,\n} from './api/contractQueryApi';\nexport {\n  //unlock,\n  //depositMargin,\n  //withdrawMargin,\n  //addLiquidity,\n  //removeLiquidity,\n  //tradeWithMargin,\n  //closePosition,\n  mint,\n  mintDToken,\n  freeze,\n  mintDeri,\n  unlockDeri,\n  mintAirdrop,\n} from './api/contractTransactionApi';\nexport {\n  getUserInfo,\n  getUserInfoHarvest,\n  getUserInfoTotal,\n  getUserInfoAll,\n  //getPoolInfoApy,\n  getLpPoolInfoApy,\n  getUserInfoInPool,\n  getUserInfoAllForAirDrop,\n} from './api/databaseApi';\n\n// export * from './api/slpPoolApi';\n// export * from './api/clpPoolApi';\n\n// export * from './api/tradeHistoryApi';\nexport {\n//getSpecification2 as getSpecification,\n// getPositionInfo2 as getPositionInfo,\n//getLiquidityInfo2 as getLiquidityInfo,\n//getWalletBalance2 as getWalletBalance,\n//getFundingRate2 as getFundingRate,\n//getLiquidityUsed2 as getLiquidityUsed,\ngetFundingRateCache2 as getFundingRateCache,\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\ngetSlpWalletBalance2 as getSlpWalletBalance,\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\ngetClpWalletBalance2 as getClpWalletBalance,\n//getDeriBalance2 as getDeriBalance,\n//getTradeHistory2 as getTradeHistory,\nfetchRestApi,\n} from './api/restApi';\n\n// export {\n  //tradeWithMargin2 as tradeWithMargin,\n  //closePosition2 as closePosition,\n  //depositMargin2 as depositMargin,\n  //withdrawMargin2 as withdrawMargin,\n  //addLiquidity2 as addLiquidity,\n  //removeLiquidity2 as removeLiquidity,\n// } from './api/contractTransactionApiV2'\n\nexport * from './api/lpPoolApi';\n\nexport * from './api_wrapper';\n\nexport {\n  getPoolConfigList,\n  getFilteredPoolConfigList,\n  getPoolBTokensBySymbolId,\n  setBroker,\n  airdropPToken,\n  isUserPTokenExist,\n  getAirdropPTokenWhitelistCount,\n} from './v2';\n","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils';\n\nconst MAX_GAS_AMOUNT = 832731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      // if (isBrowser() && !isJsDom()) {\n      //   this.web3 = metaMaskWeb3();\n      // } else {\n      this.web3 = await web3Factory.get(this.chainId);\n      // }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        // ignore the metamask error\n      }\n    }\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const offchainOracleAbi= [{\"inputs\": [{\"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\"}, {\"internalType\": \"address\", \"name\": \"signatory_\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"delayAllowance_\", \"type\": \"uint256\"}], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\"inputs\": [], \"name\": \"delayAllowance\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"getPrice\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"price\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"signatory\", \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"timestamp\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"uint256\", \"name\": \"timestamp_\", \"type\": \"uint256\"}, {\"internalType\": \"uint256\", \"name\": \"price_\", \"type\": \"uint256\"}, {\"internalType\": \"uint8\", \"name\": \"v_\", \"type\": \"uint8\"}, {\"internalType\": \"bytes32\", \"name\": \"r_\", \"type\": \"bytes32\"}, {\"internalType\": \"bytes32\", \"name\": \"s_\", \"type\": \"bytes32\"}], \"name\": \"updatePrice\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]\n\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import Web3 from 'web3';\nimport { metaMaskWeb3 } from '../factory/web3';\nimport { hexToNumber } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window.ethereum !== undefined) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\n/**\n * Get balance of the connected account\n * @async\n * @method\n * @param {string} chainId - Id of the chain\n * @param {string} accountAddress - Address of the connected account\n * @returns {string} Account balance\n */\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  const web3 = metaMaskWeb3();\n  const balance = await web3.eth.getBalance(walletAddress);\n  const res = Web3.utils.fromWei(balance);\n  return res;\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n  unlockSlp,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './slpPoolApi';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n  unlockClp2,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './clp2PoolApi';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n  unlockClp,\n  // addClpLiquidity,\n  // removeClpLiquidity,\n} from './clpPoolApi';\n\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from './contractTransactionApiV2'\nimport { getLpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import { getContractAddressConfig as getContractAddressConfig2 } from \"../config\";\nimport { getPoolConfigList as getPoolConfigListV2} from \"../v2/config\"\n//import { getPoolVersion } from '../v2';\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getContractAddressConfig2(env)\n  } else if (version === 'v2' || version === 'v2_lite') {\n    return getPoolConfigListV2(version)\n  } else {\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\n  }\n}","import { getLiquidityInfo2 } from '../api/restApi';\nimport { getPoolLiquidity as getPoolLiquidity2, getPoolInfoApy as getPoolInfoApy2 } from '../api/databaseApi';\nimport { \n  getLiquidityInfo as getLiquidityInfoV2,\n  getPoolLiquidity as getPoolLiquidityV2,\n  getPoolInfoApy as getPoolInfoApyV2,\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n  getPoolVersion,\n } from '../v2';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\nimport {\n  addLiquidity as addLiquidityV2,\n  removeLiquidity as removeLiquidityV2,\n  // addLiquidityWithPrices as addLiquidityV2,\n  // removeLiquidityWithPrices as removeLiquidityV2,\n  addLiquidityV2l,\n  removeLiquidityV2l,\n  getPoolVersion,\n} from '../v2';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getPositionInfo as getPositionInfo2,\n  isUnlocked as isUnlocked2,\n  isDeriUnlocked,\n  getEstimatedMargin as getEstimatedMargin2,\n  getEstimatedFee as getEstimatedFee2,\n  getEstimatedFundingRate as getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\n  getWalletBalance as getWalletBalance2,\n} from '../api/contractQueryApi'\n\nimport {\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../api/restApi'\n//import { bTokenFactory } from '../factory/contracts'\n\nimport {\n  getPositionInfo as getPositionInfoV2,\n  isUnlocked as isUnlockedV2,\n  getEstimatedMargin as getEstimatedMarginV2,\n  getEstimatedFee as getEstimatedFeeV2,\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\n  getSpecification as getSpecificationV2,\n  getWalletBalance as getWalletBalanceV2,\n  getFundingRate as getFundingRateV2,\n  getLiquidityUsed as getLiquidityUsedV2,\n  getFundingRateCache as getFundingRateCacheV2,\n\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n\n  getPoolVersion,\n} from '../v2'\n\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getSpecificationV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress)\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress)\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress)\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume)\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\n  }\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedMarginV2l(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\n  } else {\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress)\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFundingRateV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress)\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedLiquidityUsedV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress)\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\n  }\n}\n","import { unlock as unlock2, unlockDeri } from '../api/contractTransactionApi';\nimport {\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../api/contractTransactionApiV2';\nimport {\n  unlock as unlockV2,\n  tradeWithMargin as tradeWithMarginV2,\n  closePosition as closePositionV2,\n  depositMargin as depositMarginV2,\n  withdrawMargin as withdrawMarginV2,\n  // tradeWithMarginWithPrices as tradeWithMarginV2,\n  // depositMarginWithPrices as depositMarginV2,\n  // withdrawMarginWithPrices as withdrawMarginV2,\n  // closePositionWithPrices as closePositionV2,\n\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n\n  getPoolVersion,\n} from '../v2';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return unlockV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return withdrawMarginV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return tradeWithMarginV2l(chainId, poolAddress, accountAddress, newVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","\nimport {getTradeHistory2} from '../api/restApi';\nimport { \n  getPoolVersion,\n  getTradeHistoryV2,\n  getTradeHistoryV2l,\n } from '../v2';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getTradeHistoryV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n}","import { bg, getDailyBlockNumber } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\nimport {\n  getPoolContractAddress,\n  getMiningVaultContractAddress,\n  getBTCUSDPrice,\n  bg,\n  naturalToDeri,\n  BigNumber,\n  format,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  getMiningVaultRouterContractAddress\n} from '../config'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transactPool(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transactPool(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transactPool(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriContractAddress(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  getPoolContractAddress,\n} from '../utils';\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import {\n  getPoolContractAddress,\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../utils';\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getRestServerConfig, DeriEnv } from '../config';\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './tradeHistoryApi';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url, opts) => {\n  const resp = await fetch(url, opts);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import { getConfig } from './config';\n\nexport const getOracleConfigList = (version) => {\n  const config = getConfig(version)\n  return config.oracle\n};\n\nexport const isUsedRestOracle = (symbol) => {\n  return ['AXSUSDT', 'MANAUSDT', 'MBOXUSDT', 'IBSCDEFI'].includes(symbol);\n};\nexport const mapToSymbol = (symbol) => {\n  switch(symbol) {\n    case 'IBSCDEFI':\n      return 'iBSCDEFI'\n    default:\n      return symbol\n  }\n}\nexport const mapToSymbolInternal = (symbol) => {\n  switch(symbol) {\n    case 'iBSCDEFI':\n      return 'IBSCDEFI'\n    default:\n      return symbol\n  }\n}\n\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\n  symbol = mapToSymbolInternal(symbol)\n  const filteredByChainId = getOracleConfigList(version).filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  throw new Error(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contractTransactionApi';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from './slpPoolApi'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from './clpPoolApi'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2PoolApi'\nimport { wsInstance } from './apiGlobals'\nimport { getRestServerConfig, DeriEnv } from '../config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { perpetualPoolFactory } from '../factory/contracts';\nimport { getBTCUSDPrice } from '../utils';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(chainId, poolAddress) {\n      try {\n        const res = await getBTCUSDPrice(chainId, poolAddress);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(chainId, poolAddress) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(chainId, poolAddress);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n}\nexport default new Version()","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nconst versionKey = 'deri-current-version'\n\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getPoolInfoApy } from './databaseApi';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './apiGlobals';\nimport {\n  hasInvalidArgsValue,\n  naturalWithPercentage,\n  deriToNatural,\n  getPoolContractAddress,\n  getBTCUSDPrice,\n  bg,\n  BigNumber,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  let price = ''\n  try {\n    price = await getBTCUSDPrice(chainId, poolAddress);\n  } catch (err) {\n    console.log(err)\n  }\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, isProvider) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress, isProvider);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    await priceCache.update(chainId, poolAddress);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  return (await deri.balance(accountAddress)).toString();\n};\n","var map = {\n\t\"./de/Signin.json\": 601,\n\t\"./de/bridge.json\": 602,\n\t\"./de/broker.json\": 603,\n\t\"./de/dip-history.json\": 604,\n\t\"./de/footer.json\": 605,\n\t\"./de/governance.json\": 606,\n\t\"./de/header.json\": 607,\n\t\"./de/home.json\": 608,\n\t\"./de/lite.json\": 609,\n\t\"./de/mining.json\": 610,\n\t\"./de/mobile-lite.json\": 611,\n\t\"./de/pro.json\": 612,\n\t\"./de/team.json\": 613,\n\t\"./en/Signin.json\": 614,\n\t\"./en/bridge.json\": 615,\n\t\"./en/broker.json\": 616,\n\t\"./en/dip-history.json\": 617,\n\t\"./en/footer.json\": 618,\n\t\"./en/governance.json\": 619,\n\t\"./en/header.json\": 620,\n\t\"./en/home.json\": 621,\n\t\"./en/lite.json\": 622,\n\t\"./en/mining.json\": 623,\n\t\"./en/mobile-lite.json\": 624,\n\t\"./en/pro.json\": 625,\n\t\"./en/team.json\": 626,\n\t\"./zh/Signin.json\": 627,\n\t\"./zh/bridge.json\": 628,\n\t\"./zh/broker.json\": 629,\n\t\"./zh/dip-history.json\": 630,\n\t\"./zh/footer.json\": 631,\n\t\"./zh/governance.json\": 632,\n\t\"./zh/header.json\": 633,\n\t\"./zh/home.json\": 634,\n\t\"./zh/lite.json\": 635,\n\t\"./zh/mining.json\": 636,\n\t\"./zh/mobile-lite.json\": 637,\n\t\"./zh/pro.json\": 638,\n\t\"./zh/team.json\": 639\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 600;","import { isUsedRestOracle } from '../config/oracle';\nimport {\n  WooOracle,\n  WrappedOracle,\n  // OffchainOracle,\n  BrokerManager,\n  PTokenAirdrop,\n  BToken,\n} from '../contract';\nimport { RestOracle } from '../utils'\n\nexport const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal) => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      // if (['80001'].includes(chainId)) {\n      //   instanceMap[key] = new ChainlinkOracle(\n      //     chainId,\n      //     address,\n      //     symbol,\n      //     decimal\n      //   );\n      // } else if (['137', '97'].includes(chainId)) {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97','80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        instanceMap[key] = new WooOracle(chainId, address, symbol, decimal);\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\n\nexport const bTokenFactory = factory(BToken);\n\nexport const brokerManagerFactory = factory(BrokerManager);\n\nexport const pTokenAirdropFactory = factory(PTokenAirdrop)\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  }\n  if(isMobile){\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    // symbol = symbol+'_V2'\n    this.initWebSocket()\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    if(this.ws){\n      this.ws.emit('un_get_kline_update', {\n        symbol : symbol, 'time_type' : 'min'\n      })\n    }\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n   }\n\n   async load(wallet,spec,callback){\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      // const fundingFee = await getFun\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(this.interval !== null){\n       clearInterval(this.interval);\n     }\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n    if(wallet){\n      this.wallet= wallet; \n    }\n    if(spec){\n      this.spec = spec\n    }\n    if(callback){\n      this.callback = callback;\n    }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    minInitialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    bTokenSymbolDisplay : ['BUSD']\n  }\n\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite){\n      return [spec.bTokenSymbol];\n    }\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,version,finishedCallback){    \n    const all = await this.configInfo.load(version);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback)\n  }\n\n  async onChange(config,changed,finishedCallback){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback){\n     //切换指数\n    if(symbolChanged && config){\n      const symbol = getFormatSymbol(config.symbol)\n      this.oracle.unsubscribeBars(symbol);\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(symbol)\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,position => this.setPosition(position)),\n        this.contractInfo.load(wallet,config),\n        this.loadFundingRate(wallet,config),\n        this.historyInfo.load(wallet,config)\n      ]).then(results => {\n        if(results.length === 4){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\n      this.setVolume(volume.toFixed(0))\n    }\n  }\n\n\n  get volumeDisplay(){\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    \n    return ''\n  }\n\n\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import { DeriEnv } from '../../config';\nimport { getConfig } from './config';\nimport { mapToSymbol } from './oracle';\n\nconst expendPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: mapToSymbol(symbol.symbol),\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          router: pool.router,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: mapToSymbol(symbol.symbol),\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          unit: symbol.unit,\n          version: 'v2_lite',\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getPoolConfigList = (version='v2') => {\n  const config = getConfig(version)\n  if (version === 'v2') {\n    return expendPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expendPoolConfigV2Lite(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version)\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\n  // check the bToken in v2_lite\n  if (version === 'v2_lite') {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\n\nexport const getPoolVersion = (poolAddress) => {\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\n    return acc.concat(getConfig(version)['pools'])\n  }, [])\n  //console.log('pools', pools)\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress)\n  const config = getConfig(version)\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool\n  }\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n","import { getConfig } from './config';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getConfig(version)\n  return config.brokerManager\n};\n\nexport const getBrokerConfig = (chainId, version) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    if (typeof window.ethereum !== undefined) {\n      web3Instance = new Web3(window.ethereum);\n      return web3Instance;\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      console.log(`--- web3factory init (${chainId}) ---`)\n      // using metaMask ethereum object\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else if (isBrowser() && !isJsDom()) {\n        // MetaMask plugin is not installed in the browser\n        throw new Error('Please install MetaMask first');\n      } else {\n        const providerUrl = await getChainProviderUrl(chainId);\n        web3InstanceMap[chainId] = new Web3(\n          new Web3.providers.HttpProvider(providerUrl)\n        );\n        return web3InstanceMap[chainId];\n      }\n    },\n  };\n})();","import { DeriEnv } from '../../config';\nimport jsonConfig from '../resources/config.json';\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\n\nconst validateConfigV2 = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['bTokens'], 'bTokens');\n  config['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processConfigV2 = (config) => {\n  // process config\n  config['bTokenCount'] = config['bTokens'].length;\n  config['symbolCount'] = config['symbols'].length;\n};\n\nconst validateConfigV2Lite = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2Lite = (config) => {\n  // process config\n  config['symbolCount'] = config['symbols'].length;\n};\n\nconst getJsonConfig = (version) => {\n  const env = DeriEnv.get();\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\n    configs = configs[version]\n  }\n  if (['prod', 'dev'].includes(env)){\n    //console.log(env)\n    if (configs && configs[env]) {\n      //console.log(configs[env])\n      const pools = configs[env].pools;\n      if (pools && Array.isArray(pools)) {\n        if (version === 'v2') {\n          for (let i = 0; i < pools.length; i++) {\n            validateConfigV2(pools[i]);\n            processConfigV2(pools[i]);\n          }\n        } else if (version === 'v2_lite') {\n          for (let i = 0; i < pools.length; i++) {\n            validateConfigV2Lite(pools[i]);\n            processConfigV2Lite(pools[i]);\n          }\n        }\n      }\n      //console.log(configs[env])\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n      return configs[env];\n    }\n  }\n  throw new Error(\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n  );\n};\n\nexport const getConfig = (version='v2') => {\n  return getJsonConfig(version);\n};\n","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { bg } from '../../utils';\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('_I_')\n    return bg(res, `-${this.decimal}`).toString();\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { chainlinkOracleAbi } from '../abis';\nimport { bg } from \"../../utils\";\n\nexport class ChainlinkOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, chainlinkOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('latestRoundData');\n    if (res && res.answer) {\n      return bg(res.answer, `-${this.decimal}`).toString()\n    }\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { offchainOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class OffchainOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, offchainOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from \"./contract_base\";\nimport { brokerManagerAbi } from './abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from './contract_base'\nimport { pTokenAirdropAbi } from './abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { ContractBase } from './contract_base'\nimport { bTokenLiteAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenLiteAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  // async transfer() {\n  // call transfer\n  // }\n}","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\nimport { getSlpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\nimport { getClp2ContractAddress } from '../utils';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n  lTokenFactory,\n} from '../factory/contracts';\nimport { bg, getClpContractAddress } from '../utils';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { ContractBase } from '../contract_base'\nimport { perpetualPoolAbi } from '../abis';\nimport { deriToNatural, hexToNumber, bg } from '../../utils'\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../contract_base'\nimport { perpetualPoolRouterAbi} from '../abis';\nimport { naturalToDeri } from '../../utils'\nimport { MAX_INT256 } from '../../config';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../contract_base'\nimport { lTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}"],"sourceRoot":""}