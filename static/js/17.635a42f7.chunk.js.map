{"version":3,"sources":["components/Button/Button.js","utils/DeriNumberFormat.js","hooks/useMiningPool.js","components/Pool/PoolBox.js","mobile/components/Mining/Pool.js"],"names":["Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","lang","useState","status","setStatus","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","onClick","a","beforeAction","afterAction","current","style","display","loadApproveStatus","detail","account","pool","bTokenId","res","approve","success","alert","useEffect","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","value","undefined","isNaN","Math","abs","displayType","env","DeriEnv","get","chainInfo","config","useMiningPool","isNew","loaded","setLoaded","pools","setPools","v1Pools","setV1Pools","v2Pools","setV2Pools","optionPools","setOptionPools","legacyPools","setLegacyPools","preminingPools","setPreminingPools","groupByNetwork","all","reduce","total","find","item","eqInNumber","list","length","push","poolInfo","network","symbol","address","formatAdd","version","chainId","airdrop","type","bTokenSymbol","symbolId","v2Configs","getContractAddressConfig","v1Configs","liteConfigs","optionConfigs","getPreminingContractConfig","configs","concat","pos","findIndex","indexOf","map","async","liqPool","getPoolLiquidity","apyPool","getPoolInfoApy","Object","assign","name","liquidity","apy","toFixed","formatAddress","multiplier","slpConfig","getLpContractAddressConfig","liqInfo","lpApy","label","isLP","lapy","getLpPoolInfoApy","apy2","isSushiLP","isCakeLP","allConfigs","Promise","then","filter","p","retired","legacy","premining","preminings","chainConfig","Card","card","index","buttonElement","setButtonElement","connected","setConnected","history","useHistory","connectWallet","connect","claimAirdrop","info","getUserInfoAllForAirDrop","valid","mintAirdrop","isConnected","url","gotoMining","thousandSeparator","decimalScale","title","suffix","inject","observer","group","poolClass","classNames","toUpperCase","target","rel","href","loading","curTab","setCurTab","switchTab","PoolsClassName"],"mappings":"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","file":"static/js/17.635a42f7.chunk.js","sourcesContent":["import {useState,useRef,useEffect} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [isApproved, setIsApproved] = useState(true);\n  const [pending, setPending] = useState(false);\n  const [buttonText, setbuttonText] = useState(btnText)\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    beforeAction()\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    afterAction()\n  }\n\n  const beforeAction = ()  => {\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n  }\n\n  const afterAction = () => {\n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  const loadApproveStatus = async () => {\n    if(checkApprove && wallet && wallet.detail.account){\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\n      setIsApproved(res);\n    }\n  }\n  const approve = async () => {\n    beforeAction();\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\n    if(res.success){\n      setIsApproved(true);\n    } else {\n      setIsApproved(false)\n      alert(lang['approve-failed'])\n    }\n    afterAction();\n  }\n\n  const action = () => {\n    if(isApproved){\n      onClick();\n    } else {\n      approve();\n    }\n  }\n\n  useEffect(() => {\n    loadApproveStatus();\n    return () => {};\n  }, [wallet,spec,checkApprove]);\n\n  useEffect(() => {\n    if(btnText){\n      setbuttonText(btnText)\n    }\n    return () => {\n    }\n  }, [btnText])\n\n  return(\n    <button className={className} onClick={action} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\n        </button>\n  )\n}","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import {useState,useEffect} from 'react';\nimport {\n  DeriEnv,\n  getContractAddressConfig,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getLpContractAddressConfig,\n  getLpPoolInfoApy,\n  getPreminingContractConfig\n} from '../lib/web3js/indexV2'\nimport config from '../config.json'\nimport { formatAddress, isLP,isSushiLP,isCakeLP, eqInNumber } from '../utils/utils';\nimport Intl from '../model/Intl';\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nexport default function useMiningPool(isNew){\n  const [loaded,setLoaded] = useState(false)\n  const [pools, setPools] = useState([])\n  const [v1Pools, setV1Pools] = useState([])    \n  const [v2Pools, setV2Pools] = useState([])\n  const [optionPools, setOptionPools] = useState([])\n  const [legacyPools, setLegacyPools] = useState([])\n  const [preminingPools, setPreminingPools] = useState([])\n\n\n  useEffect(() => {\n    const mapConfig = async (config) => {\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n      const pool = config.pool || ''\n      return Object.assign(config,{ \n        network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n        liquidity : liqPool.liquidity,\n        apy :  ((+apyPool.apy) * 100).toFixed(2),\n        formatAdd : formatAddress(pool),\n        address : pool,\n        type : 'perpetual',\n        buttonText : 'STAKING',\n        multiplier : apyPool.multiplier \n      })\n    }\n    const groupByNetwork = pools => {\n      const all = []\n      pools.reduce((total,pool) => {\n        const find = total.find(item => eqInNumber(item['pool']['address'],pool['address']))\n        if(find && find.list.length < 5){\n          find['list'].push(pool)\n        } else {\n          const poolInfo = {\n            pool : {\n              network : pool.network,\n              symbol : pool.symbol,\n              address : pool.address,\n              formatAdd : pool.formatAdd,\n              version : pool.version,\n              // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n              chainId : pool.chainId,\n              airdrop : pool.airdrop,\n              type : pool.type,\n              bTokenSymbol : pool.bTokenSymbol,\n              bTokenId : pool.bTokenId,\n              symbolId : pool.symbolId\n            },\n            list : [pool]\n          }\n          total.push(poolInfo)\n        }\n        return total;\n      },all)\n      return all;\n    }\n    let v2Configs = getContractAddressConfig(env,'v2')\n    let v1Configs = getContractAddressConfig(env,'v1')\n    const liteConfigs = getContractAddressConfig(env,'v2_lite')\n    const optionConfigs = getContractAddressConfig(env,'option')\n    const preminingPools = getPreminingContractConfig(env);\n    const all = []\n    let configs = v2Configs.concat(v1Configs).concat(preminingPools).concat(liteConfigs).concat(optionConfigs).reduce((total,config) => {\n      const pos = total.findIndex(item => item.chainId === config.chainId && item.bTokenSymbol === config.bTokenSymbol && config.version === item.version)\n      if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option')  && pos > -1 && total[pos].symbol.indexOf(config.symbol) === -1) {\n        total[pos].symbol += `,${config.symbol}` \n      } else {\n        total.push(config)\n      }\n      return total;\n    },all);\n    \n    configs = configs.map(mapConfig)\n    const slpConfig = getLpContractAddressConfig(env).map(async config => {\n      const liqInfo = await getPoolLiquidity(config.chainId,config.pool) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool) || {} \n      const pool = config.pool || ''      \n      let lpApy;\n      let label;\n      if(isLP(config.pool)){\n        let lapy = await getLpPoolInfoApy(config.chainId,config.pool);\n        lpApy = lapy && ((+lapy.apy2) * 100).toFixed(2);           \n      }\n      if(isSushiLP(config.pool)){\n        label = 'SUSHI-APY'\n      }\n      if(isCakeLP(config.pool)){\n        label = 'CAKE-APY'\n      }\n      return Object.assign(config,{\n        network : chainInfo[config.chainId].name,\n        liquidity : liqInfo.liquidity,\n        apy : ((+apyPool.apy) * 100).toFixed(2),\n        formatAdd : formatAddress(pool),\n        lpApy : lpApy,\n        address : pool,\n        type : 'lp',\n        label:label,\n        buttonText : 'STAKING'\n      })    \n    })\n    const allConfigs = configs.concat(slpConfig)\n    Promise.all(allConfigs).then(pools => {\n      const airDrop = {\n        network : 'BSC',\n        bTokenSymbol : 'GIVEAWAY',\n        liquidity : '1002200',\n        symbol : '--',\n        airdrop : true,\n        chainId : 56,\n        buttonText : 'CLAIM'\n      }\n      pools.push(airDrop)\n      let v1Pools = pools.filter(p => (p.version === 'v1' || !p.version) && !p.retired)\n      let v2Pools = pools.filter(p => (p.version === 'v2' || p.version === 'v2_lite'  )&& !p.retired)\n      let optionPools = pools.filter(p => (p.version === 'option') && !p.retired)\n      const legacy = pools.filter(p => p.retired && !p.premining)\n      const preminings = pools.filter(p =>  p.retired && p.premining) \n      //新版本按照网络来分组\n      if(isNew){\n        v1Pools = groupByNetwork(v1Pools);\n        v2Pools = groupByNetwork(v2Pools);\n        optionPools =groupByNetwork(optionPools)\n      }\n      setV2Pools(v2Pools);\n      setV1Pools(v1Pools);\n      setOptionPools(optionPools)\n      setPools(pools);\n      setLegacyPools(legacy);\n      setPreminingPools(preminings)\n      setLoaded(true)\n    })\n    return () => pools.length = 0\n  },[])\n  return [loaded,pools,v1Pools,v2Pools,optionPools,legacyPools,preminingPools];\n}","import React, { useState, useEffect } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport config from  '../../config.json'\nimport { DeriEnv, getUserInfoAllForAirDrop, connectWallet, mintAirdrop, isUnlocked, unlock } from '../../lib/web3js/indexV2';\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\nimport { inject, observer } from 'mobx-react';\nimport Button from '../Button/Button.js';\nimport { eqInNumber, addParam } from '../../utils/utils.js';\nimport classNames from 'classnames';\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\n\nfunction PoolBox({wallet,group = {},lang}){\n  const {pool,list} = group\n\n  \n\n  const poolClass = classNames('pool',{\n    'only-one' : list.length === 1 ,\n    'full' : list.length === 5\n  })\n\n  return(\n    <div className={poolClass} >\n      <div className='pool-header' >\n        <div className='left'>\n          <div className=\"network\">\n            {pool.network && pool.network.toUpperCase()}\n          </div>\n          <div className='pool-desc'>\n            <span className='symbol'>\n                <span className='symbol-label'>{lang['symbol']}:</span>\n                <span className='symbol-value'>{pool.symbol}</span>  \n            </span>\n            <span className='address'>\n              <span className='address-label'>{lang['address']}:</span>\n                {!pool.airdrop ? <a target='_blank' rel='noreferrer' href={`${chainConfig[pool.chainId] && chainConfig[pool.chainId]['viewUrl']}/address/${pool.address}`}> \n                  {pool.formatAdd}\n                </a> : '--'}\n            </span>\n          </div>\n        </div>\n        <div className='version'>{lang[pool.version]}</div>\n      </div>\n      <div className=\"pool-info\">\n        {list.map((card,index) => <Card card={card} key={index} index={index} pool={pool} list={list} wallet={wallet} lang={lang}/>)}\n      </div>\n    </div>\n  )\n}\n\nfunction Card({wallet,pool,card,index,list,lang}) {\n  const [buttonElement, setButtonElement] = useState('');\n  const [connected, setConnected] = useState(false)\n  const history = useHistory();\n  const gotoMining = url => {\n    history.push(url)\n  }\n  const connectWallet = () => {\n    wallet.connect().then(() => {\n      setConnected(true)\n    })\n  }\n  const claimAirdrop = async () =>{\n    let info =  await getUserInfoAllForAirDrop(wallet.detail.account)\n    if(!info.valid){\n      alert(lang['no-deri-to-claim']);\n      return;\n    }\n    if(!eqInNumber(wallet.detail.chainId,info.chainId)){\n      alert(lang['please-switch-to-BSC-to-claim-deri'])\n      return;\n    }\n    let res = await mintAirdrop(info.chainId,wallet.detail.account)\n    if(!res.success){\n      alert(lang['claim-failed'])\n    }\n  }\n\n  useEffect(() => {\n    if(pool && pool.airdrop){\n      if(!wallet.isConnected()) {\n        setButtonElement(<Button btnText={lang['connect-wallet']} click={connectWallet} lang={lang}></Button>)\n      } else {\n        setButtonElement(<Button btnText={lang['claim']} click={claimAirdrop} lang={lang}></Button>)\n      }\n    } else {\n      let url = `/mining/${pool.version || 'v1'}/${pool.chainId}/${card.type}/${card.symbol}/${card.bTokenSymbol}/${pool.address}`\n      if(card.bTokenId){\n        url = `${url}?baseTokenId=${card.bTokenId}`\n      }\n      if(card.symbolId){\n        if(url.indexOf('?') > 0){\n          url = `${url}&symbolId=${card.symbolId}`\n        } else {\n          url = `${url}?symbolId=${card.symbolId}`\n        }\n      }\n      setButtonElement(        \n          <button onClick={() => gotoMining(url)}>\n            {lang['staking']}\n          </button>\n        )\n    }    \n    return () => {};\n  }, [wallet.detail.account,connected]);\n  return (\n    <>\n      <div className=\"info\">\n        <div className=\"top-info\">\n          <div className='pool-top'>\n            <span className={`logo ${card.bTokenSymbol}`} ></span>\n            <span className=\"base-token\">{card.bTokenSymbol}</span>\n          </div>\n          <div className=\"pool-detail\">\n            <div>\n              <span className='title'>{card.airdrop ? lang['total'] : lang['pool-liq']}</span>\n              <DeriNumberFormat value={card.liquidity} displayType='text' thousandSeparator={true} decimalScale={card.lpApy ? 7 : 0}/>\n            </div>\n            <div className='multiplier'>\n            {card.multiplier && <>\n              <span>{lang['multiplier']}</span>\n              <span className='multiplier-value' title={lang['multiplier-tip']}>{card.multiplier}x</span>\n              </>}\n            </div>\n            <div className=\"apy\">\n              <span>{lang['apy']}</span>\n              <span>\n                <span className={card.lpApy ? 'sushi-apy-underline' : ''} title={ card.lpApy && lang['deri-apy']}>\n                  {card.apy ? <DeriNumberFormat value={card.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2}/> : '--'}                 \n                </span>\n                {card.lpApy &&<>\n                <span> + </span>\n                <span className={card.lpApy ? 'sushi-apy-underline' : '' } title={ card.lpApy && card.label}> <DeriNumberFormat value={card.lpApy} displayType='text' suffix='%' decimalScale={2}/></span>\n                </>}\n              </span>\n            </div>\n          </div>\n      </div>\n      <div className=\"bottom-btn\">\n        {buttonElement}\n      </div>\n    </div>\n    {index !== list.length-1 && <div className='top-line'></div>}\n  </>)\n}\nexport default  inject('wallet','version')(observer(PoolBox))","import React,{useEffect,useState} from 'react'\nimport './pool.less'\nimport './zh-pool.less'\nimport classNames from 'classnames';\nimport PoolBox from '../../../components/Pool/PoolBox';\nimport useMiningPool from '../../../hooks/useMiningPool';\nimport { inject, observer } from 'mobx-react';\n\n\nfunction Pool({lang,loading}){\n  const [loaded,pools,v1Pools,v2Pools,optionPools] = useMiningPool(true);\n  const [curTab,setCurTab] = useState('all')\n  const switchTab = (current) => {\n    setCurTab(current)\n  };\n  const PoolsClassName = classNames('checkout-pools',curTab)\n  useEffect(() => {\n    loaded ? loading.loaded() : loading.loading()\n    return () => {}\n  }, [loaded])\n  return (\n    <div className=\"mining-info\">\n      <div className={PoolsClassName}>\n        <div className='all' onClick={() => switchTab('all')}>{lang['all']}</div>\n        <div className='futures' onClick={() => switchTab('futures')}>{lang['futures']}</div>\n        <div className='options' onClick={() => switchTab('options')}>{lang['options']}</div>\n      </div>\n      {curTab === 'all' && <div className=\"pools\">\n        {v2Pools.concat(optionPools).concat(v1Pools).map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\n      </div>} \n      {curTab === 'futures' && <div className=\"pools\">\n        {v2Pools.concat(v1Pools).map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\n      </div>} \n      {curTab === 'options' && <div className=\"pools\">\n        {optionPools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\n      </div>} \n      \n    </div>\n  )\n}\nexport default inject('version','loading')(observer(Pool))"],"sourceRoot":""}