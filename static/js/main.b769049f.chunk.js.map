{"version":3,"sources":["model/Intl.js","utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/config.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/config/broker.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/contract/database/database_base.js","lib/web3js/shared/config/database.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/shared/api/activity_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api_v2.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/factory/pool.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","model/Config.js","model/Type.js","lib/web3js/shared/utils/convert.js","utils/utils.js","model/Version.js","../lang).)*/.json$","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["r","cache","require","keys","forEach","key","path","split","lang","page","toLowerCase","test","pageName","Intl","locale","makeObservable","this","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","Object","supportedCatalog","includes","storeLocale","label","substr","toUpperCase","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","DeriEnv","_deriEnv","get","set","value","Error","VERSIONS","LITE_VERSIONS","MAX_UINT256","MAX_INT256","factory","klass","instances","chainId","address","deepClone","obj","clone","assign","Array","isArray","length","from","getBlockNumber","async","res","url","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","Web3","providers","HttpProvider","startTime","Date","now","eth","err","getLatestRPCServer","urls","newUrls","i","index","Math","floor","random","concat","splice","shuffleArray","promises","push","blockNumbers","Promise","all","sort","a","b","latestBlockNumber","reduce","findIndex","startsWith","normalizeChainId","chainIds","toString","normalizeAddress","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","prop","validateIsArray","getChainProviderUrl","provider_urls","filter","getChainProviderUrls","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","web3Factory","web3InstanceMap","isBrowser","isJsDom","window","ethereum","providerUrl","getLastUpdatedBlockNumber","contractAddress","position","getStorageAt","hexToNumber","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","amount","events","es","toBlock","e","catchApiError","func","methodName","defaultValue","console","log","catchTxApiError","success","transaction","error","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","normalizeOptionSymbol","optionSymbol","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","map","isUsedRestOracle","symbol","mapToSymbol","mapToSymbolInternal","values","indexOf","poolProcessor","v2","pool","bToken","v2_lite","symbolId","option","poolValidator","getConfig","version","config","configs","jsonConfig","JSON","parse","getJsonConfig","pools","getPoolV1ConfigList","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","unit","retired","getLpConfigList","type","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","poolAddress","c","p","bTokenAddress","lTokenAddress","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getPoolV1Config","pTokenAddress","dTokenAdress","MinningVaultAddress","getPoolConfigList","result","bTokens","router","bTokenId","isOption","flat","expendPoolConfigV2","offchainSymbolIds","offchainSymbols","expendPoolConfigV2Lite","volatilitySymbols","expendPoolConfigOption","getPoolConfig","undefined","poolConfigList","check","getFilteredPoolConfigList","getPoolVersion","acc","v","_getPoolConfig","find","getPoolConfig2","defaultBToken","defaultSymbol","bTokenCount","symbolCount","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","getOracleConfig","filteredByChainId","oracle","getOracleConfigList","getBrokerConfig","brokerManager","getBrokerConfigList","getOracleUrl","method","baseUrl","addSymbolParam","getPriceFromRest","getPriceInfo","price","deriToNatural","volatility","stringify","mapToBTokenInternal","priceInfo","retry","fetch","mode","ok","json","status","data","getOraclePrice","oracleFactory","decimal","getPrice","getOraclePricesForOption","oracleSymbols","self","oracleSymbolPrices","toWei","getOracleVolatilitiesForOption","oracleSymbolVolatilities","MAX_GAS_AMOUNT","RE_ERROR_MSG","ContractBase","contractAbi","Contract","_init","methods","call","accountAddress","gas","estimateGas","join","match","trim","tx","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","errorMessage","_estimatedGas","txRaw","numberToHex","encodeABI","request","params","_getTransactionReceipt","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","WrappedOracle","constructor","super","_call","instanceMap","RestOracle","wrappedOracleFactory","DatabaseBaseContract","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","CONTRACT_ABI","DatabaseWormholeContract","DatabaseAirdropContract","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddress","database","databaseWormholeFactory","getDBWormholeAddress","databaseAirdropFactory","getDBAirdropAddress","bTokenFactory","decimals","_balanceOf","bg","allowance","gt","_transact","deriFactory","wormholeFactory","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","brokerAddress","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","balance","getBalance","fromWei","getUserInfoAll","userInfo","db","userAddress","getValues","catch","deadline","nonce","valid","deriToString","deriToBool","getUserInfo","userInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoHarvest","userInfoTotal","total","getUserInfoTotal","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","getMiningVaultConfig","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","filteredConfig","MiningVaultRouter","getMiningVaultRouterConfig","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","processAsset","pnl","lastCumulativePnl","processPosition","volume","cost","lastCumulativeFundingRate","perpetualPoolFactory","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","oracleAddress","discount","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","_calculateFee","abs","times","perpetualPoolRouterFactory","isMaximum","priceInfos","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateLiquidationPrice","margin","tmp","POOL_ABI","PerpetualPool","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","timestamp","fundingRatePerBlock","liquidityUsed","stateValues","getStateValues","parameters","args1","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getLpLiquidityInfo","bTokenBalance","shares","getLiquidity","poolLiquidity","getSlpLiquidityInfo","totalSupply","maxRemovableShares","getClpLiquidityInfo","getClp2LiquidityInfo","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","held","calculateMaxWithdrawMargin","lte","addLiquidity","removeLiquidity","tradeWithMargin","newVolume","orderValidation","minMargin","poolMaxVolume","gte","negated","message","isOrderValid","closePosition","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","update","setInterval","_update","clear","clearInterval","PerpetualPoolParametersCache","_parameters","wsInstance","_ws","ws","io","transports","id","getOrSet","sendTradeTxToWorkerQuene","send","methodCall","event","wsOnPromise","addSlpLiquidity2","addSlpLiquidity","removeSlpLiquidity2","removeSlpLiquidity","addClpLiquidity2","addClpLiquidity","removeClpLiquidity2","removeClpLiquidity","addClp2Liquidity2","addClp2Liquidity","removeClp2Liquidity2","removeClp2Liquidity","unlockLp","unlockSlp","unlockClp","unlockClp2","addLpLiquidity","removeLpLiquidity","processTradeEvent","info","txHash","tradeVolume","timeStamp","_getTimeStamp","direction","time","transactionFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getHttpBase","fetchJson","opts","resp","fetchRestApi","dynamicCost","marginHeld","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","getLiquidityInfo","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","getSymbol","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","_prices","_getFundingRate","promiseList","symbolInfo","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","margins","positions","getMargins","getPositions","availableBalance","getTradeHistory","tradeFromBlock","tradeHistory","tradeHistoryBlock","tradeHistoryOnline","perpetualPoolLiteAbi","lTokenLiteAbi","pTokenLiteAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","operator","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","viewerAddress","viewer","activeSymbolIds","getActiveSymbolIds","isEqualSet","Set","activeSymbols","getOffChainOracleSymbols","prices","_updateOffchainSymbols","headers","body","symbolList","getPriceInfos","_getSymbolPrices","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","symbolIds","poolDynamicEquity","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","newIntrinsicValue","strikePrice","underlierVolatility","premiumFundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","underlierPrice","dynamicMarginRatio","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","deleteIndexedKey","PTokenOption","lastCumulativePremiumFundingRate","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","volatilitiesCache","everlastingOptionFactory","symbolVolatilities","getPoolStates","volatilityAddress","intrinsicPrice","pmmPrice","cumulativePremiumFundingRate","alpha","_updateConfig","bAmount","_getVolSymbolPrices","lShares","optionPool","queryTradePMM","theoreticalPrice","getSpecification","symbolInfo2","poolInfo2","symbolPrices","symbolIndex","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","symbolStr","volPrice","getTraderStates","timePrice","markPrice","averageEntryPrice","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","oS","premiumFundingAccrued","liquidationPrice","getPositionInfos","volPrices","vIndex","getWalletBalance","curSymbolIndex","premiumFunding","premiumFundingPerSecond","getEstimatedFee","getFundingRate","premiumFunding0","getEstimatedFundingRate","newNetVolume","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getEstimatedTimePrice","intrinsicValue","toNumber","optionValue","tr","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidity","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","perpetualPoolRouter","validation","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","addresses","getSpecification2","bTokenDiscounts","bTokenMultiplier","getSpecificationV2","positionInfo","latestPrice","getPosition","getMargin","priceIndex","fundingFee","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","symbolConfigList","getPositionInfoV2","getPositionInfosPosition","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","fundingRate0","getFundingRateV2l","getFundingRateOption","poolInfo","naturalWithPercentage","toExponential","getFundingRate2","getFundingRateV2","fundingRate1","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","addMargin","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","removeMargin","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","getTradeHistory2","getTradeHistoryV2","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","isOpen","style","portalClassName","intl","onClose","inject","observer","data-title","Config","setAll","load","isOptions","current","sortOptionSymbols","isV2","cur","makeAutoObservable","setCurrent","isFuture","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","hexToString","hexToUtf8","hexToNumberString","toFixed","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","has","newObj","k","symbolArr","unique","to2","index1","index2","index3","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","append","hasParam","getParam","getFormatSymbol","curChain","code","isV2Lite","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","isV1","switch","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","DesktopApp","MobileApp","Mask","setIsOpen","useState","useEffect","isShowMask","LoadingMask","MaskWrapper","isOptionsLite","useRouteMatch","isOptionsPro","categry","isMobile","Wallet","detail","supportWeb3","isConnected","approve","connect","loadWalletBalance","switchNetwork","network","metamask","addError","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","refresh","isSupportChain","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","callbackALL","wallet","spec","mockPositionInfo","deltaFundingAccrued","balanceContract","startAll","intervalAll","loadAll","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","setPaused","increment","MarginRatio","substring","initVolume","currentSymbolMarginHeld","otherMarginHeld","contractValue","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b769049f.chunk.js","sourcesContent":["import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return 'https://testnetapi.deri.finance';\n    //return 'http://localhost:8082';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","// versions\nexport const VERSIONS = ['v2', 'v2_lite', 'option']\nexport const LITE_VERSIONS = ['v2_lite', 'option']\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","\nconst paddingDate = (date) => {\n  date = date.toString()\n  if (date.length === 1) {\n    return '0' + date\n  } else {\n    return date\n  }\n}\nexport const getEpochTimeRange = (time) => {\n  //console.log('1', time.getTime()/1000)\n  const year = time.getUTCFullYear()\n  const month = time.getUTCMonth()\n  const day = time.getUTCDate()\n  let epochs = []\n  for (let i = 0; i< 3; i++) {\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\n    //console.log(newDate.getTime()/1000)\n    epochs.push(newDate)\n  }\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\n  let index = -1\n  for (let i = 0; i< epochs.length; i++) {\n    //console.log(i, epochs[i].getTime()/1000)\n    if (time.getTime() < epochs[i].getTime()) {\n      index = i\n      break\n    }\n  }\n  if (index !== -1) {\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\n  }\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\n}","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      // using metaMask ethereum object\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else if (isBrowser() && !isJsDom()) {\n        // MetaMask plugin is not installed in the browser\n        throw new Error('Please install MetaMask first');\n      } else {\n        const providerUrl = await getChainProviderUrl(chainId);\n        web3InstanceMap[chainId] = new Web3(\n          new Web3.providers.HttpProvider(providerUrl)\n        );\n        return web3InstanceMap[chainId];\n      }\n    },\n  };\n})();","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","export const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}: `, err)\n    //console.log(`${methodName}: ${err}`)\n  }\n  return defaultValue\n}\n\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n","const bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index !== -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}","import { validateObjectKeyExist, validateIsArray } from '../utils';\nimport {\n  isUsedRestOracle,\n  mapToBToken,\n  mapToSymbol,\n  getVolatilitySymbols,\n} from './token';\n\nconst validatePoolV2 = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['bTokens'], 'bTokens');\n  pool['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processPoolV2 = (pool) => {\n  // process pool \n  pool['bTokenCount'] = pool['bTokens'].length;\n  pool['symbolCount'] = pool['symbols'].length;\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validatePoolV2Lite = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n};\n\nconst processPoolV2Lite = (pool) => {\n  // process pool\n  if (!pool['symbolCount']) {\n    pool['symbolCount'] = pool['symbols'].length;\n  }\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validatePoolOption = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      // 'offchainSymbolIds',\n      // 'offchainSymbols',\n      'symbolCount',\n      'volatilitySymbols',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\n};\n\nconst processPoolOption = (pool) => {\n  // process pool \n  pool['symbolCount'] = pool['symbols'].length;\n  if (!pool['volatilitySymbols']) {\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['volatilitySymbols'] = getVolatilitySymbols(\n      pool['symbols'].map((s) => s.symbol)\n    ); \n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nexport const poolProcessor = {\n  v2: processPoolV2,\n  v2_lite: processPoolV2Lite,\n  option: processPoolOption,\n};\n\nexport const poolValidator = {\n  v2: validatePoolV2,\n  v2_lite: validatePoolV2Lite,\n  option: validatePoolOption,\n};","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { validateObjectKeyExist } from '../utils';\nimport { VERSIONS } from './version';\nimport { poolProcessor, poolValidator } from './config_processor';\n\nconst getJsonConfig = (version, env) => {\n  env = env || DeriEnv.get();\n  // for browser and nodejs\n  let configs =\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && VERSIONS.includes(version)) {\n    configs = configs[version];\n    if (['prod', 'dev'].includes(env)) {\n      if (configs && configs[env]) {\n        return configs[env];\n      }\n    }\n  } else {\n    throw new Error(\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n    );\n  }\n};\n\nexport const getConfig = (version='v2', env='dev') => {\n  const config = getJsonConfig(version, env);\n\n  //console.log(configs[env])\n  const pools = config.pools;\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n  return config;\n};\n","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","import { getConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\nimport { LITE_VERSIONS, VERSIONS } from './version';\n\nconst expendPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n            isOption: false,\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          router: pool.router,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite',\n          isOption: false,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigOption = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          volatilitySymbols: pool.volatilitySymbols,\n          unit: symbol.unit,\n          version: 'option',\n          isOption: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\n  const config = getConfig(version, env)\n  if (version === 'v2') {\n    return expendPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expendPoolConfigV2Lite(config)\n  } else if (version === 'option') {\n    return expendPoolConfigOption(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version)\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\n  // check the bToken in v2_lite\n  if (LITE_VERSIONS.includes(version)) {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\nexport const getFilteredPoolConfig  = getPoolConfig\n\n\nexport const getPoolVersion = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n  throw new Error(`getPoolVersion, cannot find pool version by pool address ${poolAddress}`)\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress);\n  const config = getConfig(version, DeriEnv.get());\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool;\n  } else {\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n  }\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const config = getConfig(version)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { getConfig } from './config';\nimport { DeriEnv } from './env';\nimport { mapToSymbolInternal } from './token';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getConfig(version, env)\n  return config.oracle\n};\n\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version, DeriEnv.get())\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { getConfig } from './config';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getConfig(version)\n  return config.brokerManager\n};\n\nexport const getBrokerConfig = (chainId, version) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { getOracleConfig } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory } from '../factory/oracle';\nimport { deriToNatural, toWei } from './convert';\nimport {\n  getVolatilitySymbols,\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  const preservedSymbols = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (preservedSymbols.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  // console.log(`getPriceInfo url: ${url}`)\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(chainId, symbol, version);\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\nexport const getOraclePriceForOption = async (chainId, symbol) => {\n  return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n};\n\n// for viewer use\nexport const getOraclePricesForOption = async (chainId, symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolPrices = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n  });\n};\n\n// for tx use\nexport const getOracleVolatilityForOption = async (symbols) => {\n  const volSymbols = getVolatilitySymbols(symbols)\n  volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n  const volatilities = await Promise.all(\n    volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n  );\n  return volatilities;\n};\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolVolatilities = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getPriceInfo(`VOL-${i}`, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return oracleSymbolVolatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))].volatility;\n  });\n};","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        if (Array.isArray(res) && res.length >= 2) {\n          throw new Error(res[1].trim())\n        }\n        // ignore the metamask error\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\n","import Web3 from 'web3';\nimport { getDBProviderUrls } from '../../config/database';\nimport { getLatestRPCServer } from '../../utils';\n\nexport class DatabaseBaseContract {\n  constructor(contractAddress, contractAbi) {\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n  _init() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      this.contractAbi,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrls());\n      this._init();\n    }\n  }\n\n  async _call(method, args) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch (err) {\n        this.providerUrl = null\n        console.log(err.toString())\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { DatabaseBaseContract } from './database_base';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, DB_CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\n\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig(chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract';\nimport { getPriceFromRest, getPriceInfo } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfo(symbol);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = await getPriceFromRest(symbol);\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getPriceFromRest(symbol);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = await getPriceFromRest(symbol);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contract_transaction_api';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from '../../shared/api/slp_pool_api'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from '../../shared/api/clp_pool_api'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from '../../shared/api/clp2_pool_api'\nimport { wsInstance } from './api_v1_globals'\nimport { DeriEnv, getRestServerConfig } from '../../shared/config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { getLpConfig } from '../config';\nimport { unlockSlp } from './slp_pool_api';\nimport { unlockClp } from './clp_pool_api';\nimport { unlockClp2 } from './clp2_pool_api';\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from '../../v1/api/contract_transaction_api_v2';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { DeriEnv, getPoolV1Config, getRestServerConfig  } from '../../shared/config';\nimport { bg, deriToNatural } from '../../shared/utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './trade_history_api';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url, opts) => {\n  const resp = await fetch(url, opts);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import { deriToNatural } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getRestServerConfig,\n  DeriEnv,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import {\n  getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteAbi } from './abis';\n//import { MAX_INT256} from '../../shared/config'\nimport { PTokenLite } from './p_token';\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.offchainSymbols = this.config.offchainSymbols;\n    this.bTokenAddress = this.config.bToken\n    this.lTokenAddress = this.config.lToken\n    this.pTokenAddress = this.config.pToken\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'v2_lite')\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses()]);\n  }\n\n  async _updateOffchainSymbols() {\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    if (!this.viewer) {\n      this.viewer = new PerpetualPoolLiteViewer(\n          this.chainId,\n          this.viewerAddress\n      )\n    }\n    //await this.getAddresses()\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\n    if (!this.activeSymbolIds || !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))) {\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(this.contractAddress)\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\n        return activeSymbols[index] == '' ? acc :  acc.concat([i])\n      }, [])\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\n      this.activeSymbolIds = activeSymbolIds\n    }\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = []\n    await this._updateOffchainSymbols()\n    if (this.offchainSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import {\n  calculateEntryPrice ,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLastUpdatedBlockNumber,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n    ])\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePrice(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getRestServerConfig,\n  DeriEnv,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n    let u = Math.sqrt(8 / V / V / T + 1)\n    let timeValue, delta\n    if (S > K) {\n        timeValue = K * Math.pow(S/K, (1 - u) / 2) / u\n        delta = (1 - u) * timeValue / S / 2\n    } else if (S === K) {\n        timeValue = K / u\n        delta = 0\n    } else {\n        timeValue = K * Math.pow(S/K, (1 + u) / 2) / u\n        delta = (1 + u) * timeValue / S / 2\n    }\n    return [timeValue, delta]\n}\n\nfunction getDynamicInitialMarginRatio(spot, strike, isCall, initialMarginRatio, minInitialMarginRatio) {\n    if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n        return initialMarginRatio\n    } else {\n        let otmRatio = (isCall ? strike - spot : spot - strike) / strike\n        return Math.max((1 - otmRatio * 3) * initialMarginRatio, minInitialMarginRatio)\n    }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(pool, trader, symbols, positions, newUnderlierPrice) {\n    let newDynamicMargin = trader.dynamicMargin\n    let newInitialMargin = trader.initialMargin\n\n    for (let i = 0; i < symbols.length; i++) {\n        let symbol = symbols[i]\n        let position = positions[i]\n\n        let newIntrinsicValue = symbol.isCall ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n                                              : Math.max(symbol.strikePrice - newUnderlierPrice, 0)\n        let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n            newUnderlierPrice, symbol.strikePrice, symbol.underlierVolatility, pool.premiumFundingPeriod\n        )\n        if (newIntrinsicValue > 0) {\n            newDelta += symbol.isCall ? 1 : -1\n        }\n        let newPnl = position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier - position.cost\n        let newDynamicMarginRatio = getDynamicInitialMarginRatio(newUnderlierPrice, symbol.strikePrice, symbol.isCall, pool.initialMarginRatio, 0.01)\n\n        newDynamicMargin = newDynamicMargin - position.pnl + newPnl\n        newInitialMargin = newInitialMargin - Math.abs(position.volume * symbol.underlierPrice * symbol.multiplier * symbol.dynamicMarginRatio)\n                                            + Math.abs(position.volume * newUnderlierPrice * symbol.multiplier * newDynamicMarginRatio)\n    }\n\n    let newMaintenanceMargin = newInitialMargin * pool.maintenanceMarginRatio / pool.initialMarginRatio\n\n    return newMaintenanceMargin > newDynamicMargin\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n    if (symbols.length != positions.length) {\n        throw 'canLiquidateWithPrice: symbols and positions length not match'\n    }\n    if (symbols.length === 0) {\n        return {\n            numPositions: positions.length,\n            price1: null,\n            price2: null,\n        }\n    }\n    let head = symbols[0].symbol.slice(0, 6)\n    for (let i = 0; i < symbols.length; i++) {\n        if (!symbols[i].symbol.startsWith(head)) {\n            throw 'canLiquidateWithPrice: symbols not in same underlier'\n        }\n    }\n\n    if (trader.maintenanceMargin > trader.dynamicMargin) {\n        return {\n          numPositions: positions.length,\n          price1: symbols[0].underlierPrice,\n          price2: symbols[0].underlierPrice\n        }\n    }\n\n    let final1, final2\n    let price1, price2\n    let l1, l2\n\n\n    price1 = symbols[0].underlierPrice / 10\n    price2 = symbols[0].underlierPrice\n    l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1)\n    l2 = false\n    while (true) {\n        if (l1 && l2) {\n            final1 = (price1 + price2) / 2\n            break\n        }\n        if (!l1 && !l2) {\n            final1 = null\n            break\n        }\n        if (price2 - price1 < symbols[0].underlierPrice / 1000) {\n            final1 = (price1 + price2) / 2\n            break\n        }\n        let price = (price1 + price2) / 2\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\n        if (l === l1) price1 = price\n        else price2 = price\n    }\n\n    price1 = symbols[0].underlierPrice\n    price2 = symbols[0].underlierPrice * 10\n    l1 = false\n    l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2)\n    while (true) {\n        if (l1 && l2) {\n            final2 = (price1 + price2) / 2\n            break\n        }\n        if (!l1 && !l2) {\n            final2 = null\n            break\n        }\n        if (price2 - price1 < symbols[0].underlierPrice / 1000) {\n            final2 = (price1 + price2) / 2\n            break\n        }\n        let price = (price1 + price2) / 2\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\n        if (l === l1) price1 = price\n        else price2 = price\n    }\n\n    return {\n        numPositions: positions.length,\n        price1: final1,\n        price2: final2\n    }\n}\n\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'premiumFundingPeriod',\n      'premiumFundingCoefficient',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          //'deltaFundingCoefficient',\n          'strikePrice',\n          'underlierPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          //'quoteBalanceOffset',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n            'multiplier',\n            //'deltaFundingCoefficient',\n            'strikePrice',\n            'underlierPrice',\n            'underlierVolatility',\n            'timePrice',\n            'dynamicMarginRatio',\n            'intrinsicValue',\n            'timeValue',\n            'delta',\n            'K',\n            //'quoteBalanceOffset',\n            'tradersNetVolume',\n            'tradersNetCost',\n            'cumulativeDeltaFundingRate',\n            'cumulativePremiumFundingRate',\n            'deltaFundingPerSecond',\n            'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pricingAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"everlastingPricingOptionAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"intrinsicValue\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"optionValue\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [], \"name\": \"OptionPricer\", \"outputs\": [ { \"internalType\": \"contract IEverlastingOptionPricing\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"PmmPricer\", \"outputs\": [ { \"internalType\": \"contract LinearPricing\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"_T\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"_premiumFundingCoefficient\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedPrice[]\", \"name\": \"volatility\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getMidPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedPrice[]\", \"name\": \"volatility\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedPrice[]\", \"name\": \"volatility\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedPrice[]\", \"name\": \"volatility\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" }, { \"internalType\": \"address\", \"name\": \"everlastingPricingOptionAddress\", \"type\": \"address\" } ], \"name\": \"setPoolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedPrice[]\", \"name\": \"volatility\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"underlierPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"underlierVolatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"underlierPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"underlierVolatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"underlierPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"underlierVolatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pmmPricer\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"underlierVolatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        //'deltaFundingCoefficient',\n        'strikePrice',\n        'underlierPrice',\n        'timePrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'K',\n        //'quoteBalanceOffset',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeDeltaFundingRate',\n        'cumulativePremiumFundingRate',\n        'deltaFundingPerSecond',\n        'premiumFundingPerSecond',\n        'underlierVolatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        //'deltaFundingCoefficient',\n        'strikePrice',\n        'underlierPrice',\n        'timePrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'K',\n        //'quoteBalanceOffset',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeDeltaFundingRate',\n        'cumulativePremiumFundingRate',\n        'deltaFundingPerSecond',\n        'premiumFundingPerSecond',\n        'underlierVolatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        'lastCumulativeDeltaFundingRate',\n        'lastCumulativePremiumFundingRate',\n        'deltaFundingAccrued',\n        'premiumFundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase, fromWei } from '../../shared'\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { factory } from '../../shared';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, fromWei } from '../../shared'\nimport { lTokenOptionAbi } from './abis.js'\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi)\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return fromWei(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return fromWei(res)\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  return {\n    async get(poolAddress, symbols){\n      const key = poolAddress\n      if (!Object.keys(cache).includes(key) || Math.floor(Date.now()/1000) - cache[key].timestamp > 5) {\n        const timestamp = Math.floor(Date.now()/1000)\n        const data = await getOracleVolatilitiesForOption(symbols)\n        cache[key] = {\n          data,\n          timestamp,\n        }\n        return cache[key].data\n      } else {\n        return cache[key].data\n      }\n    }\n  }\n})()\n","import { factory } from '../../shared';\nimport { EverlastingOption } from '../contract/everlasting_option';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);","import {\n  ContractBase,\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  naturalToDeri,\n  getPoolConfig,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getVolatilitySymbols } from '../../shared/config/token';\nimport {\n  getPriceInfo,\n} from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'option'\n    );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    this.volatilitySymbols = this.config.volatilitySymbols;\n    this.bTokenAddress = this.config.bToken;\n    this.lTokenAddress = this.config.lToken;\n    this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async _updateConfig() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.viewer) {\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n    }\n\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    if (\n      !this.activeSymbolIds ||\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\n    ) {\n      // symbol is updated\n      const activeSymbols = await Promise.all(\n      activeSymbolIds.reduce(\n          (acc, i) => acc.concat([this.getSymbol(i)]),\n          []\n        )\n      );\n      const symbolVolatilities = await volatilitiesCache.get(\n        this.contractAddress,\n        activeSymbols.map((s) => s.symbol)\n      );\n      //console.log(symbolVolatilities)\n      const state = await this.viewer.getPoolStates(\n        this.contractAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      // update state\n      this.activeSymbolIds = activeSymbolIds;\n      this.activeSymbols = symbolState.filter((s) =>\n        this.activeSymbolIds.includes(s.symbolId)\n      );\n      // for tx use\n      this.volatilitySymbols = getVolatilitySymbols(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n    }\n  }\n\n  // query\n  async OptionPricer() {\n    const res = await this._call('OptionPricer', []);\n    return res;\n  }\n  async PmmPricer() {\n    const res = await this._call('PmmPricer', []);\n    return res;\n  }\n  async _T() {\n    const res = await this._call('_T', []);\n    return fromWei(res);\n  }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    return await this._call('getLastTimestamp', []);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity', []);\n    return fromWei(res);\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued', []);\n    return fromWei(res);\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbolId: res[0],\n      symbol: res[1],\n      oracleAddress: res[2],\n      volatilityAddress: res[3],\n      multiplier: fromWei(res[4]),\n      feeRatio: fromWei(res[5]),\n      strikePrice: fromWei(res[6]),\n      isCall: res[7],\n      intrinsicPrice: fromWei(res[8]),\n      pmmPrice: fromWei(res[9]),\n      cumulativePremiumFundingRate: fromWei(res[10]),\n      // timeValue: res[12],\n      tradersNetVolume: fromWei(res[11]),\n      tradersNetCost: fromWei(res[12]),\n      alpha: fromWei(res[13]),\n    };\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._updateConfig();\n    let prices = [];\n    if (this.volatilitySymbols.length > 0) {\n      const priceInfos = await Promise.all(\n        this.volatilitySymbols.reduce(\n          (acc, i) => acc.concat([getPriceInfo(i, 'option')]),\n          []\n        )\n      );\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          index.toString(),\n          p.timestamp,\n          p.volatility,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(lShares), prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport {\n  lTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const { lToken: lTokenAddress } = getPoolConfig(\n    poolAddress,\n    '0',\n    '0',\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    optionPool._updateConfig(),\n  ]);\n\n  const symbols = optionPool.activeSymbols\n  const symbolVolatilities = await volatilitiesCache.get(poolAddress, symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities)\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","import {\n  bg,\n  bTokenFactory,\n  catchApiError,\n  deriToNatural,\n  getPoolConfig,\n} from '../../shared';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { normalizeOptionSymbol } from '../../shared/config/token';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport {\n  getOraclePricesForOption,\n  getPriceFromRest,\n  getOracleVolatilitiesForOption,\n} from '../../shared/utils/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getIntrinsicPrice,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.activeSymbols;\n      const [symbolPrices, symbolVolatilities] = await Promise.all([\n        getOraclePricesForOption(\n          chainId,\n          symbols.map((s) => s.symbol)\n        ),\n        volatilitiesCache.get(\n          poolAddress,\n          symbols.map((s) => s.symbol)\n        ),\n      ]);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatio } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatio: feeRatio.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n      };\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      //minPoolMarginRatio: '',\n      initialMarginRatio: '',\n      maintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { symbol: symbolStr } = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols;\n      let symbolPrices = [],\n        symbolVolatilities = [],\n        volPrice;\n      if (symbols && symbols.length > 0) {\n        [symbolPrices, symbolVolatilities, volPrice] = await Promise.all([\n          getOraclePricesForOption(\n            chainId,\n            symbols.map((s) => s.symbol)\n          ),\n          volatilitiesCache.get(\n            poolAddress,\n            symbols.map((s) => s.symbol)\n          ),\n          getPriceFromRest(`VOL-${normalizeOptionSymbol(symbolStr)}`, 'option'),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolStr,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: bg(symbol.pmmPrice, -18).toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].premiumFundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    'getPositionInfo',\n    {\n      price: '',\n      strikePrice: '',\n      timePrice: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      premiumFundingAccrued: '',\n      liquidationPrice: '',\n      volatility: '',\n    }\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols;\n      const [symbolPrices, symbolVolatilities, volPrices] = await Promise.all([\n        getOraclePricesForOption(\n          chainId,\n          symbols.map((s) => s.symbol)\n        ),\n        volatilitiesCache.get(\n          poolAddress,\n          symbols.map((s) => s.symbol)\n        ),\n        getOracleVolatilitiesForOption(symbols.map((s) => s.symbol)),\n      ]);\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].premiumFundingAccrued,\n            isCall: s.isCall,\n            volatility: deriToNatural(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.activeSymbols;\n  const [symbolPrices, symbolVolatilities] = await Promise.all([\n    getOraclePricesForOption(\n      chainId,\n      symbols.map((s) => s.symbol)\n    ),\n    volatilitiesCache.get(\n      poolAddress,\n      symbols.map((s) => s.symbol)\n    ),\n  ]);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    symbolPrices,\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.premiumFundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.premiumFundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, prices, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      const intrinsicPrice = getIntrinsicPrice(\n        prices[curSymbolIndex],\n        symbol.strikePrice,\n        symbol.isCall\n      );\n      //console.log(volume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\n      return bg(volume)\n        .abs()\n        .times(intrinsicPrice.plus(symbol.timeValue))\n        .times(symbol.multiplier)\n        .times(symbolInfo.feeRatio)\n        .toString();\n    },\n    args,\n    'getFundingFee',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n    'getFundingRate',\n    {\n      premiumFunding0: '',\n      premiumFundingPerSecond: '',\n      liquidity: '',\n      volume: '-',\n      tradersNetVolume: '',\n    }\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    {\n      liquidityUsed0: '',\n    }\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    {\n      liquidityUsed1: '',\n    }\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbolVolatilities = await volatilitiesCache.get(\n        poolAddress,\n        optionPool.activeSymbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    'getEstimatedMarkPrice',\n    ''\n  );\n};\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getRestServerConfig,\n  DeriEnv,\n} from '../../shared/config';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.optionValue);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId\n  const index = symbolIdList.indexOf(symbolId)\n\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume.abs().times(price).times(multiplier[index]).toString(),\n      transactionFee: calculateTxFee( tradeVolume, price, multiplier[index], feeRatio[index]).toString(),\n      time,\n    };\n  } else {\n    return null\n  }\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const [toBlock] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool._updateConfig(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i]));\n  }\n  let symbols = await Promise.all(promises)\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, optionPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  let result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n      optionPool.activeSymbolIds,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  result = result.filter((tr) => tr !== null)\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool._updateConfig()\n    ]);\n    if (res && res.success) {\n      //console.log('his res', res.data)\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.activeSymbols\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        //.filter((i) => i)\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\n          if (index > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null\n          }\n        });\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\n    // fetch tradeHistory on the block with fromBlock from rest api\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import {\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n  VERSIONS,\n} from '../shared/config';\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (VERSIONS.includes(version)) {\n    return getPoolV2ConfigList(version);\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport { getPoolVersion, LITE_VERSIONS } from '../shared/config';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getPoolLiquidity as getPoolLiquidity2,\n  getPoolInfoApy as getPoolInfoApy2,\n} from '../shared/api/database_api';\nimport {\n  getLiquidityInfoV2,\n  getPoolLiquidityV2,\n  getPoolInfoApyV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n} from '../v2_lite/api';\nimport {\n  getLiquidityInfoOption,\n} from '../option/api';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (version === 'v2_lite') {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (LITE_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (LITE_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol()\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersion } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress) \n  if (version === 'v2_lite') {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const version = getPoolVersion(poolAddress) \n  if (version === 'v2_lite') {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'option') {\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","import {\n  getEstimatedFundingRateOption,\n  getFundingRateCacheOption,\n  getFundingRateOption,\n  getLiquidityUsedOption,\n  getPositionInfoOption,\n  getSpecificationOption,\n  getWalletBalanceOption,\n  getEstimatedFeeOption,\n  getEstimatedMarginOption,\n  getEstimatedLiquidityUsedOption,\n  isUnlockedOption,\n  getPositionInfosPosition,\n} from '../option/api';\nimport { getPoolVersion, isDeriUnlocked } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getSpecificationOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getPositionInfoOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'option') {\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\n  } else {\n    // return empty array for v1, v2, v2_lite\n    return []\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'option') {\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedFundingRateOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedLiquidityUsedOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'v2_lite') {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\nimport { getPoolVersion, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (version === 'v2_lite') {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return unlockOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (version === 'v2_lite') {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (version === 'v2_lite') {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'option') {\n    return withdrawMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (version === 'v2_lite') {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return tradeWithMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (version === 'v2_lite') {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'v2_lite'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n        perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\nimport { pTokenOptionFactory} from '../factory/tokens';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'option'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { getPoolVersion } from '../shared';\nimport { getTradeHistoryOption } from '../option/api';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (getPoolVersion(poolAddress) === 'option') {\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 10,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version,isOptions){\n    let current = version && version.current;\n    if(isOptions){\n      current = 'option'\n    }\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(isOptions){\n      configs = sortOptionSymbols(configs)\n    }\n    if(!isOptions && version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = null;\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// == contract gen\nexport const deleteIndexedKey = (obj) => {\n  if (isObject(obj)) {\n    let newObj = {}\n    Object.keys(obj).forEach((k) => {\n      if (!(/^\\d/.test(k))) {\n        newObj[k] = obj[k];\n      }\n    });\n    return newObj;\n  } else {\n    return obj\n  }\n};\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(a) - parseInt(b));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nconst versionKey = 'deri-current-version'\n\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    } else {\n      symbol = symbol.split('-')[0]\n    }\n  }\n  return version.isV2 || version.isV2Lite || type.isOption ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 1440\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 1440\n  }\n  return [from,to]\n \n}\n\n\n\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n}\nexport default new Version()","var map = {\n\t\"./de/Signin.json\": 566,\n\t\"./de/bridge.json\": 567,\n\t\"./de/broker.json\": 568,\n\t\"./de/dip-history.json\": 569,\n\t\"./de/footer.json\": 570,\n\t\"./de/governance.json\": 571,\n\t\"./de/header.json\": 572,\n\t\"./de/home.json\": 573,\n\t\"./de/lite.json\": 574,\n\t\"./de/mining.json\": 575,\n\t\"./de/mobile-lite.json\": 576,\n\t\"./de/pro.json\": 577,\n\t\"./de/team.json\": 578,\n\t\"./en/Signin.json\": 579,\n\t\"./en/bridge.json\": 580,\n\t\"./en/broker.json\": 581,\n\t\"./en/dip-history.json\": 582,\n\t\"./en/footer.json\": 583,\n\t\"./en/governance.json\": 584,\n\t\"./en/header.json\": 585,\n\t\"./en/home.json\": 586,\n\t\"./en/lite.json\": 587,\n\t\"./en/mining.json\": 588,\n\t\"./en/mobile-lite.json\": 589,\n\t\"./en/pro.json\": 590,\n\t\"./en/team.json\": 591,\n\t\"./zh/Signin.json\": 592,\n\t\"./zh/bridge.json\": 593,\n\t\"./zh/broker.json\": 594,\n\t\"./zh/dip-history.json\": 595,\n\t\"./zh/footer.json\": 596,\n\t\"./zh/governance.json\": 597,\n\t\"./zh/header.json\": 598,\n\t\"./zh/home.json\": 599,\n\t\"./zh/lite.json\": 600,\n\t\"./zh/mining.json\": 601,\n\t\"./zh/mobile-lite.json\": 602,\n\t\"./zh/pro.json\": 603,\n\t\"./zh/team.json\": 604\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 565;","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\nimport { useRouteMatch } from 'react-router-dom';\nimport type from './model/Type'\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\n  const isOption = isOptionsLite || isOptionsPro\n  const categry = isOption ? 'option' : 'future'\n  type.setCurrent(categry)\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  }\n  if(isMobile){\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    // symbol = symbol+'_V2'\n    this.initWebSocket()\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    if(this.ws){\n      this.ws.emit('un_get_kline_update', {\n        symbol : symbol, 'time_type' : 'min'\n      })\n    }\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\nimport { eqInNumber } from '../utils/utils';\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   spec = null\n   isOption =null;\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,spec,callback,isOption){\n     this.isOption = isOption\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   async loadAll(wallet,spec,callback,isOption){\n    this.isOption = isOption\n      if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\n        let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n        let positions = [] \n        if(res.length){\n          positions = res.map(item=>{\n            item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n            item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\n            return item\n          })\n        }\n        if(positions){\n          if(callback){\n            callback(positions)\n          }\n        }\n        this.startAll(wallet,spec,callback)\n        return positions;\n       }\n   }\n\n   startAll(wallet,spec,callback){\n    if(this.intervalAll !== null){\n      clearInterval(this.intervalAll);\n    }\n   this.intervalAll = window.setInterval(() => this.loadAll(wallet,spec,callback,this.isOption),3000)      \n   if(wallet){\n     this.wallet= wallet; \n   }\n   if(spec){\n     this.spec = spec\n   }\n   if(callback){\n     this.callbackALL = callback;\n   }\n  }\n\n   start(wallet,spec,callback){\n     if(this.interval !== null){\n       clearInterval(this.interval);\n     }\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback,this.isOption),3000)      \n    if(wallet){\n      this.wallet= wallet; \n    }\n    if(spec){\n      this.spec = spec\n    }\n    if(callback){\n      this.callback = callback;\n    }\n   }\n\n   \n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\n      if(type.isOption){\n        spec.underlier = spec.symbol.split('-')[0]\n        spec.strike = spec.symbol.split('-')[1]\n        spec.optionType = spec.symbol.split('-')[2]\n      }\n      \n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption){\n      return [spec.bTokenSymbol];\n    }\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      positions : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setPositions : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      optionFundingRateTip : computed,\n      initialMarginRatioTip : computed,\n      maintenanceMarginRatioTip : computed,\n      TransactionFeeTip : computed,\n      multiplierTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,version,isOption,finishedCallback){  \n    const all = await this.configInfo.load(version,isOption);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version,isOption);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback,isOption){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback,isOption)\n  }\n\n  async onChange(config,changed,finishedCallback,isOption){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\n     //切换指数\n    if(symbolChanged && config){\n      const symbol = getFormatSymbol(config.symbol)\n      this.oracle.unsubscribeBars(symbol);\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(symbol)\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,(position) => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet,config,isOption)\n        },isOption),\n        this.contractInfo.load(wallet,config,isOption),\n        this.loadFundingRate(wallet,config,isOption),\n        this.historyInfo.load(wallet,config,isOption),\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions),isOption),\n      ]).then(results => {\n        if(results.length === 5){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n          results[4] && this.setPositions(results[4]);\n          // this.refreshCache();\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  refreshCache(){\n    const {pool} = this.config;\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\n    priceCache.clear();\n    priceCache.update(pool,symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setPositions(positions){\n    if(positions){\n      this.positions = positions\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\n      if(type.isOption){\n        volume = +volume * +this.contract.multiplier\n        let index = this.contract.multiplier.indexOf('.')\n        let num = this.contract.multiplier.slice(index);\n        let length = num.length \n        let value = volume.toString()\n        if(value.indexOf(\".\") != '-1'){\n          value = value.substring(0,value.indexOf(\".\") + length)\n        }\n        this.setVolume(value)\n      }else{\n        this.setVolume(volume.toFixed(0))\n      }\n      \n    }\n  }\n\n\n  get volumeDisplay(){\n    // if(type.isOption){\n    //   if( this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n    //     return '';\n    //   } else {\n    //     return Math.abs(this.volume)\n    //   }\n    // }else if(type.isFuture){\n      if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\n        return '';\n      } else {\n        return Math.abs(this.volume)\n      }\n    // }\n    \n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    const volume = optionVolume\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n    \n    \n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config,isOption){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    \n   \n  }\n\n  get optionFundingRateTip(){\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\n      if(Intl.locale === 'zh'){\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \n      } else {\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \n      }\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip(){\n    if(this.contract && this.contract.initialMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip(){\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip(){\n    if(this.contract && this.config){\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip(){\n    if(this.contract && this.config){\n        return `${Intl.get('lite','transaction-fee-tip')}${this.config.unit} = ${Intl.get('lite','transaction-fee-tip1')} ${this.contract.feeRatio * 100}%`\n    }\n    return ''\n  }\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport type from './model/Type';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\n// DeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}