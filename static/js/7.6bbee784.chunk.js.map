{"version":3,"sources":["utils/DeriNumberFormat.js","components/Tab/Tab.js","components/Input/Input.js","components/Slider/TimeSlider.js","components/ButtonGroup/ButtonGroup.js","pages/Pool/Claim.js","pages/Pool/img/staked.svg","pages/Pool/OperateLiquidity.js","pages/Pool/img/back.svg","pages/Pool/Detail.js"],"names":["DeriNumberFormat","props","useState","className","renderablity","setRenderablity","isValidate","allowZero","value","undefined","isNaN","Math","abs","useEffect","wallet","defaultValue","others","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","isConnected","clearTimeout","Wrapper","styled","div","width","height","borderR","borderL","size","inactiveBgColor","borderB","activeFontColor","activeBgColor","borderT","Tab","tabSet","icon","borderTop","borderBottom","divider","arr","Object","keys","selected","setSelected","styles","style","borderColor","fontColor","map","item","direction","onClick","select","content","inputWidth","unitPadding","Input","unit","max","step","onChange","focus","readOnly","disabled","inputRef","useRef","current","type","min","ref","e","target","bg","gt","Warpper","TimeSlider","startTimestamp","nowTimestamp","endTimestamp","parseInt","ButtonGroup","groups","defaultBorderColor","outline","outlineColor","bgColor","setValue","text","index","label","isSelected","Claim","lang","poolShow","remainingTime","setRemainingTime","setStartTimestamp","setEndTimestamp","setNowTimestamp","claimInfo","setClaimInfo","interval","setInterval","period","Date","now","epochBegin","dis","h","m","s","clearInterval","loadClaimInfo","a","apiProxy","request","detail","account","claimed","total","toFixed","unclaimed","valid","amount","harvestDeriLp","lp","harvestDeriTrade","trade","chainId","OperateLiquidity","isLp","bTokenId","poolConfig","version","baseToken","address","walletBalance","poolInfo","afterTransaction","addRemoveValue","setAddRemoveValue","alert","useAlert","estimatedLiquidityInfo","setEstimatedLiquidityInfo","getEstimatedLiquidityInfoApi","newAmount","res","addLiquidity","param","removeLiquidity","totalShares","cur","error","eq","success","decimalScale","balance","percentage","times","toString","percent","suffix","percentage1","formatShares","shareValue1","Button","pool","fontSize","PRIMARY","chainInfo","config","DeriEnv","get","inject","observer","poolManager","useParams","symbol","nowToken","setNowToken","nowTokenId","setNowTokenId","nowIsStaked","setNowIsStaked","setIsStakedList","setPoolConfig","bTokenList","setBTokenList","isShowInfo","setIsShowInfo","setPoolInfo","symbols","setSymbols","setWalletBalance","networkText","name","onImgError","event","src","errorimg","getWalletBalance","params","push","openConfigListCache","update","getLiquidityInfo","background","load","pools","loadDoubleMingingPool","lpPools","loadOpen","openPools","filter","p","bToken0","bTokens","bTokenSymbol","isCakeLP","isSushiLP","join","getPoolInfo","apy","bTokensApy","i","info","apyMuList","multiplier","liquidity","bTokensLiq","getIsStaked","isStaked","checkoutBaseToken","b","to","alt","backIcon","id","BSC","POLYGON","ETH","networkLogo","onError","length","stakedLogo","downIcon","shareValue","prefix","swappedPnl","formatAddress"],"mappings":"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","file":"static/js/7.6bbee784.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\n\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') \n          || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true )\n  }\n\n  useEffect(() => {\n    const {allowZero,wallet,defaultValue = '--',...others} = props \n    if(isValidate()) {\n      setRenderablity(<NumberFormat {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n    } else {\n      setRenderablity(<span className='loading-line'></span>)\n    } \n    const timeout = window.setTimeout(() => {\n      if(!isValidate() && wallet && !wallet.isConnected()){\n        setRenderablity(defaultValue)\n      }\n    },30000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value]);\n\n  return renderablity;\n}\n\nexport default DeriNumberFormat","import styled from 'styled-components'\nimport React, { useState } from 'react';\nconst Wrapper = styled.div`\n    cursor: pointer;\n    width:${props => props.width}px;\n    height:${props => props.height}px;\n    display:flex;\n    .tab-left.inactive{\n      border-radius:0px 0px 4px 0px;\n    }\n    .tab-right.inactive{\n      border-radius:0px 0px 0px 4px;\n    }\n    .tab-left.active{\n      border-radius:0px 4px 0px 0px;\n      ${props => props.borderR};\n      height:14px;\n    }\n    .tab-right.active{\n      border-radius:4px 0px 0px 0px;\n      ${props => props.borderL};\n      height:14px;\n    }\n    .inactive,.active{\n      width:50%;\n      box-sizing: content-box;\n      padding: 15px 24px;\n      font-size:${props => props.size}px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .inactive{\n      background:${props => props.inactiveBgColor};\n      ${props => props.borderB}\n    }\n    .active {\n      color: ${props => props.activeFontColor};\n      background : ${props => props.activeBgColor};\n      ${props => props.borderT};\n    }\n  `\nexport default function Tab({ tabSet, inactiveBgColor,activeBgColor,icon, className, width = 238, height = 47, size = 16,borderTop = false,borderBottom = false, divider = false }) {\n  const arr = Object.keys(tabSet)\n  const [selected, setSelected] = useState(arr[0])\n  const styles = tabSet[selected].style\n  const borderT = borderTop ? `border-top:1px solid ${tabSet[selected].borderColor}`:\"border-top:0\"\n  const borderB = borderBottom ? `border-bottom:1px solid ${tabSet[selected].borderColor}`:\"border-bottom:0\"\n  const borderL = divider ? `border-left:1px solid ${tabSet[selected].borderColor}`:\"border-left:0\"\n  const borderR = divider ? `border-right:1px solid ${tabSet[selected].borderColor}`:\"border-right:0\"\n  const activeFontColor = tabSet[selected].fontColor ? tabSet[selected].fontColor : '#FFFFFF'\n\n  function select(item) {\n    setSelected(item)\n  }\n\n  return (\n    <div style={styles} className={className}>\n      <Wrapper className='width' width={width} height={height} \n        activeFontColor={activeFontColor} activeBgColor ={activeBgColor} inactiveBgColor={inactiveBgColor} size={size} borderT={borderT} borderB={borderB} borderL={borderL} borderR={borderR}>\n        {arr.map(item => (\n          <div\n            key={item}\n            className={item === selected ? `${tabSet[item].direction} active` : `${tabSet[item].direction} inactive`}\n            onClick={() => select(item)}>\n            {item}\n          </div>\n        ))}\n      </Wrapper>\n      {tabSet[selected].content}\n    </div>\n  )\n}","import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { bg } from '../../lib/web3js';\n\nconst Wrapper = styled.div`\ndisplay : flex;\nfont-size : 14px;\nalign-items : center;\nbackground: rgba(85, 119, 253, 0.1);\nborder-radius: 4px;\njustify-content: space-between;\ninput {\n  background: transparent;\n  border-radius: 4px;\n  // min-width: 240px;\n  border: 0;\n  width : ${props => props.inputWidth};\n  height: 56px;\n  color : #E0ECFF;\n  font-size : 18px;\n  padding-left: 16px;\n}\ninput:focus {\n  outline: none;\n}\n.unit {\n  margin-right: ${props => props.unitPadding};\n}\n`\nexport default function Input({value,unit,max,step,onChange,styles = {},focus,unitPadding = '24px',readOnly,inputWidth = '50%',className,disabled = false}){\n  const inputRef = useRef(null);\n  const change = e => {\n    const {value} = e.target\n    if(max && bg(value).gt(max)){    \n      onChange && onChange(max)\n    } else if(value <0 || isNaN(value)) {\n      onChange && onChange('')\n    } else {\n      onChange && onChange(value)\n    }\n  }\n\n  useEffect(()=>{\n    if(inputRef.current && focus){\n      inputRef.current.focus();\n    }\n  },[focus])\n\n\n  return (\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\n      <input type='number' disabled = {disabled} value={value} max={max}  min='0'  step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\n      <div className='unit'>{unit}</div>\n    </Wrapper>    \n  )\n}","import styled from 'styled-components'\nimport {useState,useEffect} from 'react'\nconst Warpper = styled.div`\nwidth:${props=>props.width}%;\nmax-width:100%;\nheight:10px;\nbackground-color: #5577FD;\n`\nexport default function TimeSlider({startTimestamp,nowTimestamp,endTimestamp }) {\n  const width = parseInt(((nowTimestamp-startTimestamp) / (endTimestamp-startTimestamp))*100)\n  return (\n    <div className='time-slider'>\n      <Warpper width={width}>\n\n      </Warpper>\n    </div>\n\n  )\n}","import React, { useState ,useEffect} from 'react';\nimport Button from \"../Button/Button\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display : flex;\n    width: 100%;\n    justify-content: space-between;\n  `\nexport default function ButtonGroup({groups = ['25%','50%','75%','100%'],defaultBorderColor ,onChange,defaultValue ,outline,outlineColor,width,height,bgColor,className}){\n  const [value, setValue] = useState(defaultValue)\n  const select = current => {\n    if(current !== value) {\n      setValue(current)\n      onChange && onChange(current);\n    } else if(current === value){\n      setValue('')\n      onChange && onChange('');\n    } else {\n      setValue(current)\n    }\n  }\n  useEffect(() => {\n    setValue(defaultValue)\n  }, [defaultValue])\n  return (\n  <Wrapper className={className}>\n    {groups.map((text,index) => (\n      <Button label={text} key={index} isSelected={text === value} disabled={false} outline = {outline} bgColor={bgColor} className='g-button' defaultBorderColor={defaultBorderColor} outlineColor={outlineColor} width={width} height={height} onClick={() => select(text)}/>\n    ))}\n  </Wrapper>)\n}","import React, { useState, useEffect } from 'react'\nimport Button from '../../components/Button/Button'\nimport Slider from '../../components/Slider/TimeSlider';\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\nimport apiProxy from '../../model/ApiProxy';\nimport './claim.less'\nexport default function Claim({ lang, poolShow = true, wallet }) {\n  const [remainingTime, setRemainingTime] = useState('')\n  const [startTimestamp, setStartTimestamp] = useState(0)\n  const [endTimestamp, setEndTimestamp] = useState(0)\n  const [nowTimestamp, setNowTimestamp] = useState(0)\n  const [claimInfo, setClaimInfo] = useState({})\n  useEffect(() => {\n    let interval = null;\n    //计数器\n    interval = window.setInterval(() => {\n      let period = 3600 * 8;\n      let current = parseInt(Date.now() / 1000);\n      let epochBegin = parseInt(current / period) * period;\n      let dis = (epochBegin + period - current);\n      let h = parseInt(dis / 3600);\n      let m = parseInt((dis % 3600) / 60)\n      let s = parseInt(dis % 60)\n      setStartTimestamp(epochBegin)\n      setEndTimestamp(epochBegin + period)\n      setNowTimestamp(current)\n      setRemainingTime(`${h} ${lang['h']} ${m} ${lang['m']} ${s} ${lang['s']}`);\n    }, 1000);\n    return () => {\n      interval && clearInterval(interval);\n    };\n\n  }, []);\n  const loadClaimInfo = async () => {\n    if (wallet.isConnected()) {\n      const claimInfo = await apiProxy.request('getUserInfoAll', [wallet.detail.account])\n      const claimed = (+claimInfo.total).toFixed(2);\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\n      const chainId = claimInfo.chainId\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade,chainId})\n    }\n  }\n  useEffect(() => {\n      let interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\n      loadClaimInfo();\n    return () => clearInterval(interval);\n  }, [wallet.detail.account])\n  return (\n    <div className='mining-claim'>\n      <div className='mining-claim-info'>\n        <div className='deri-num-slider'>\n          <div className='deri-claim-time'>\n            {remainingTime}\n          </div>\n          {+claimInfo.harvestDeriLp > 0 && <div className='deri-claim-text'>\n            {lang['your-harvest-in-current']}  <DeriNumberFormat value={claimInfo.harvestDeriLp} displayType='text' thousandSeparator={true} />  DERI.\n          </div>}\n          {poolShow && <div className='deri-claim-text'>\n            You have <DeriNumberFormat value={claimInfo.unclaimed} displayType='text' thousandSeparator={true} /> unclaimed $DERI across all staked pools. You’ve earned a total of <DeriNumberFormat value={claimInfo.claimed} displayType='text' thousandSeparator={true} /> Deri token since Sep 12, 2021. Woohoo!\n          </div>}\n          <div className='deri-claim-slider'>\n            <Slider startTimestamp={startTimestamp} nowTimestamp={nowTimestamp} endTimestamp={endTimestamp} />\n          </div>\n        </div>\n        {poolShow && <div className='cliam-button'>\n          <Button label={lang['claim-all']} />\n        </div>}\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/staked.45c27f0b.svg\";","import { useEffect, useState } from 'react'\nimport Input from \"../../components/Input/Input\"\nimport Button from \"../../components/Button/Button\"\nimport ButtonGroup from \"../../components/ButtonGroup/ButtonGroup\"\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\nimport { PRIMARY } from '../../utils/Constants';\nimport apiProxy from \"../../model/ApiProxy\";\nimport { useAlert } from 'react-alert'\nimport './operateLiauidity.less'\nimport { bg } from \"../../lib/web3js/index\"\nexport default function OperateLiquidity({ wallet, lang, type, isLp, bTokenId, poolConfig, version, baseToken, address, walletBalance, poolInfo, afterTransaction }) {\n  const [addRemoveValue, setAddRemoveValue] = useState('')\n  \n  const alert = useAlert();\n  const [estimatedLiquidityInfo, setEstimatedLiquidityInfo] = useState({})\n  const getValue = (value) => {\n    setAddRemoveValue(value)\n  }\n  const unit = type === 'add' || version === 'v2' ? baseToken : lang['shares']\n  const groupValue = (value) => {\n    value = parseInt(value)\n    let balance = type === 'add' ? walletBalance : poolInfo.totalShares;\n    let percentage = bg(balance).times(bg(value / 100)).toString()\n    setAddRemoveValue(percentage)\n  }\n\n  const getEstimatedLiquidityInfoApi = async () => {\n    let newAmount = type === 'add' ? addRemoveValue : -addRemoveValue;\n    const res = await apiProxy.request('getEstimatedLiquidityInfo', [wallet.detail.chainId, address, wallet.detail.account, newAmount, bTokenId])\n    setEstimatedLiquidityInfo(res)\n  }\n\n  const addLiquidity = async () => {\n    const max = bg(walletBalance)\n    const cur = bg(addRemoveValue);\n    if (cur.gt(max)) {\n      alert(lang['not-sufficient-funds']);\n      return false;\n    }\n    if (addRemoveValue <= 0 || isNaN(addRemoveValue)) {\n      alert(lang['it-has-to-be-greater-than-zero']);\n      return false;\n    }\n    if (isLp === 'lp') {\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue]\n      let res = await apiProxy.request('addLpLiquidity', param)\n    } else {\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue, bTokenId]\n      let res = await apiProxy.request('addLiquidity', param)\n    }\n\n    afterTransaction(true)\n    // if(!res || !res.success){\n    //   alert(lang['failure-of-transaction']);\n    //   return false; \n    // }\n\n    return true;\n  }\n  const removeLiquidity = async () => {\n    const max = bg(poolInfo.totalShares)\n    const cur = bg(addRemoveValue)\n    if (cur.gt(max)) {\n      alert.error(`${lang['your-current-max-removable-shares-are']}  ${poolInfo.totalShares}`);\n      return false;\n    }\n\n    if (+addRemoveValue <= 0 || isNaN(addRemoveValue)) {\n      alert.error(lang['invalid-liquidity']);\n      return false;\n    }\n    let res;\n    if (isLp === 'lp') {\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue]\n      res = await apiProxy.request('removeLpLiquidity', param)\n    } else {\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue, bTokenId, max.eq(cur)]\n      res = await apiProxy.request('removeLiquidity', param)\n    }\n    if (!res || !res.success) {\n      alert.error(lang['failure-of-transaction']);\n    }\n    afterTransaction()\n    return true;\n  }\n  useEffect(() => {\n    if (addRemoveValue) {\n      getEstimatedLiquidityInfoApi()\n    }\n  }, [addRemoveValue])\n  useEffect(() => {\n    setAddRemoveValue('')\n  }, [type])\n  return (\n    <div className='operate'>\n      <div className='add-input'>\n        <Input value={addRemoveValue} unit={unit} onChange={getValue} styles={{ width: \"332px\" }} />\n      </div>\n      {type === 'add' && <div className='wallet-balance'>\n        {lang['wallet-balance']} <DeriNumberFormat value={walletBalance} displayType='text' decimalScale={2} /> {baseToken}\n      </div>}\n      {type === 'remove' && <div className='wallet-balance'>\n        {lang['staked-balance']} <DeriNumberFormat value={poolInfo.totalShares} displayType='text' decimalScale={2} /> {unit}\n      </div>}\n\n      <div className='check-proportion'>\n        <ButtonGroup groups={['25%', '50%', '75%', '100%']} onChange={groupValue} outline={true} bgColor=' rgba(85, 119, 253, 0.1)' width={77} height={40} />\n      </div>\n      <div className='information'>\n        {addRemoveValue && <div>\n          <div className='percentage'>\n            <div className='info-box-title'>{lang['my-liquidity-percentage']}</div>\n            <div className='info-box-num'><DeriNumberFormat allowZero={true} value={poolInfo.percent} decimalScale={2} suffix={'%'} /> ->  <DeriNumberFormat allowZero={true} value={estimatedLiquidityInfo.percentage1*100} decimalScale={2} suffix={'%'} /></div>\n          </div>\n          <div className='staked-balance'>\n            <div className='info-box-title'>{lang['staked-balance']}</div>\n            <div className='info-box-num'>\n              <DeriNumberFormat allowZero={true} value={poolInfo.formatShares} decimalScale={2} /> -> <DeriNumberFormat allowZero={true} value={estimatedLiquidityInfo.shareValue1} decimalScale={2} /> \n              {version === 'v2' ? \" \" + baseToken : \" \" + lang['shares']}\n            </div>\n          </div>\n        </div>}\n\n      </div>\n      <div className='add-remove-btn'>\n        {type === 'add' && <Button onClick={addLiquidity} pool={poolConfig} wallet={wallet} bTokenId={bTokenId} fontSize='18' type={PRIMARY} width=\"331\" label={lang[\"add-liquidity\"]} lang={lang} />}\n        {type === 'remove' && <Button onClick={removeLiquidity}  pool={poolConfig} type={PRIMARY} wallet={wallet} bTokenId={bTokenId} fontSize='18' width=\"331\" label={lang[\"remove-liquidity\"]} lang={lang} />}\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/back.b0297594.svg\";","import { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport Claim from './Claim'\nimport OperateLiquidity from './OperateLiquidity'\nimport Tab from '../../components/Tab/Tab'\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\nimport apiProxy from \"../../model/ApiProxy\"\nimport { formatAddress,isCakeLP,isSushiLP } from \"../../utils/utils\"\nimport config from '../../config.json'\nimport { DeriEnv,openConfigListCache } from '../../lib/web3js/index'\nimport './detail.less'\nimport backIcon from './img/back.svg'\nimport BSC from '../../assets/img/bsc-logo.svg'\nimport POLYGON from '../../assets/img/polygon-logo.svg'\nimport ETH from '../../assets/img/ethereum.svg'\nimport downIcon from '../../assets/img/arrow-down.svg'\nimport stakedLogo from './img/staked.svg'\nimport errorimg from '../../assets/img/ErrorImg.png'\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\nfunction Detail({ lang, wallet = {}, poolManager }) {\n  const { version, chainId, symbol, address, type } = useParams();\n  const [nowToken, setNowToken] = useState('')\n  const [nowTokenId, setNowTokenId] = useState('')\n  const [nowIsStaked,setNowIsStaked] = useState(false);\n  const [isStakedList,setIsStakedList] = useState({})\n  const [poolConfig, setPoolConfig] = useState('')\n  const [bTokenList, setBTokenList] = useState([])\n  const [isShowInfo, setIsShowInfo] = useState('show')\n  const [poolInfo, setPoolInfo] = useState({})\n  const [symbols, setSymbols] = useState('')\n  const [walletBalance, setWalletBalance] = useState()\n  const networkText = chainInfo[chainId] && chainInfo[chainId].name;\n  const networkLogo = (chainId) => {\n    let src;\n    let id = +chainId\n    if (id === 56 || id === 97) {\n      src = BSC\n    } else if (id === 137) {\n      src = POLYGON\n    } else if (id === 1) {\n      src = ETH\n    }\n    return src\n  }\n\n  const onImgError = (event) => {\n    event.target.src = errorimg\n  }\n\n  const getWalletBalance = async () => {\n    if (wallet.isConnected()) {\n      let params = [wallet.detail.chainId, address, wallet.detail.account]\n      let balance = null;\n      if (poolConfig.isLp) {\n        balance = await apiProxy.request('getLpWalletBalance', params)\n      } else {\n        params.push(nowTokenId)\n        if(version==='v2_lite_open'){\n          await openConfigListCache.update()\n        }\n        balance = await apiProxy.request('getBTokenBalance', params)\n      }\n      setWalletBalance(balance)\n    }\n  }\n  const afterTransaction = () => {\n    getWalletBalance()\n    getLiquidityInfo()\n  }\n  const tabSet = {\n    [lang['add']]: {\n      content: <OperateLiquidity poolConfig={poolConfig} isLp={type} wallet={wallet} afterTransaction={afterTransaction} version={version} bTokenId={nowTokenId} address={address} lang={lang} type='add' poolInfo={poolInfo} baseToken={nowToken} walletBalance={walletBalance} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      direction: \"tab-left\"\n    },\n    [lang['remove']]: {\n      content: <OperateLiquidity isLp={type} poolConfig={poolConfig} wallet={wallet} afterTransaction={afterTransaction} lang={lang} address={address} type='remove' bTokenId={nowTokenId} poolInfo={poolInfo} balance={poolInfo} baseToken={nowToken} version={version} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      direction: \"tab-right\"\n    },\n  }\n  const load = async () => {\n    \n    await poolManager.load()\n    let pool = poolManager.pools;\n    if (type === 'lp') {\n      await poolManager.loadDoubleMingingPool();\n      pool = poolManager.lpPools\n    }\n    if(version === 'v2_lite_open'){\n      await poolManager.loadOpen();\n      pool = poolManager.openPools\n    }\n    pool = pool.filter(p => p.address === address)\n    pool = pool[0]\n    let bToken0 = pool.bTokens[0].bTokenSymbol\n    if(isCakeLP(address)){\n      bToken0 = 'CAKE-LP'\n    }else if(isSushiLP(address)){\n      bToken0 = 'DERI-USDT SLP'\n    }\n    let bTokenId = pool.bTokens[0].bTokenId\n    let symbols = pool.symbols.map(item => {\n      let arr = [];\n      arr.push(item.symbol)\n      return arr\n    })\n    symbols = symbols.join(',')\n    setSymbols(symbols)\n    setPoolConfig(pool)\n    setBTokenList(pool.bTokens)\n    setNowToken(bToken0)\n    setNowTokenId(bTokenId)\n  }\n  const getPoolInfo = async () => {\n    if (poolConfig) {\n      let res = await poolConfig.getPoolInfo(wallet, poolConfig);\n      let arr = bTokenList.map(item => {\n        if (version === 'v2') {\n          item.apy = (+(res.bTokensApy.filter(i => i.bTokenId === item.bTokenId)[0].apy) * 100)\n        } else if(version !== 'v2_lite_open'){\n          item.apy = +(res.bTokensApy[0].apy) * 100\n        }\n        return item\n      })\n      return res\n    }\n  }\n  const getLiquidityInfo = async () => {\n    let info = null\n    if (poolConfig) {\n      let res = await poolConfig.getPoolInfo(wallet, poolConfig);\n      let apy;\n      let liquidity;\n      let apyMuList;\n      let multiplier;\n      if (version === 'v2' && nowTokenId) {\n        apyMuList = res.bTokensApy.filter(p => p.bTokenId === nowTokenId);\n        apy = apyMuList[0].apy;\n        multiplier = apyMuList[0].multiplier\n        liquidity = res.bTokensLiq.filter(p => p.bTokenId === nowTokenId);\n        liquidity = liquidity[0].liquidity;\n      } else if(version !== 'v2_lite_open'){\n        apy = res.bTokensApy[0].apy\n        liquidity = res.bTokensLiq[0].liquidity\n      }else{\n        // liquidity = res.bTokensLiq[0].liquidity\n      }\n      info = {\n        total: liquidity,\n        apy: (+apy) * 100,\n        multiplier : multiplier,\n      }\n      if (wallet.isConnected()) {\n        let res = await poolConfig.getLiquidityInfo(wallet, address, poolConfig.version, poolConfig.isLp, nowTokenId)\n        info = res;\n        info['apy'] = (+apy) * 100;\n        info['multiplier'] = multiplier\n      }\n      setPoolInfo(info)\n    }\n  }\n\n  const getIsStaked = async ()=>{\n    if(wallet.isConnected() && poolConfig){\n      let res = await poolConfig.getIsStaked(wallet,poolConfig)\n      setNowIsStaked(res.isStaked)\n      setIsStakedList(res)\n    }\n  }\n\n  const checkoutBaseToken = async (bTokenId) => {\n    let now = poolConfig.bTokens.filter(b => b.bTokenId === bTokenId)\n    setNowTokenId(bTokenId)\n    setNowToken(now[0].bTokenSymbol)\n  }\n  useEffect(() => {\n    load()\n  }, [])\n  useEffect(() => {\n    getPoolInfo()\n  }, [poolConfig, bTokenList])\n  useEffect(() => {\n    getLiquidityInfo()\n    getWalletBalance()\n  }, [nowTokenId, poolConfig, wallet.detail.account])\n  useEffect(()=>{\n    getIsStaked()\n  },[poolConfig,wallet.detail.account])\n  return (\n    <div className='pool-detail'>\n      <div className='back-pool'>\n        <Link to='/pool'>\n          <div className='icon-back'>\n            <img alt='' src={backIcon} />\n            <span>{lang['back']}</span>\n          </div>\n        </Link>\n      </div>\n      <div className='pool-deatail-info'>\n        <div className='pool-detail-basetoken-info'>\n          <div className='pool-info-text'>\n            <div className='pool-network-type'>\n              <div className='network-logo'>\n                <img alt='' src={networkLogo(chainId)} />\n              </div>\n              <div className='pool-type-network-text'>\n                <div className='pool-type-text'>\n                  {lang[version]}\n                </div>\n                <div className='pool-network-text'>\n                  {networkText}\n                </div>\n              </div>\n            </div>\n            <div className='pool-des'>\n              {lang['pool-des']}\n              <span className='learn-more'> {lang['learn-more']}</span>\n            </div>\n          </div>\n          <div className='select-basetoken-info'>\n            <div className='select-coin-title'>\n              {lang['select-the-coin']}\n            </div>\n            <div className='coin-list'>\n              {type !== 'lp' && version!=='v2_lite_open' && <>\n                {bTokenList.map((item, index) =>\n                (<div className='coin-box' onClick={() => { checkoutBaseToken(item.bTokenId) }}>\n                  <div className='base-apy-info'>\n                    <div className={`btoken-logo ${item.bTokenSymbol}`}></div>\n                    <div className='apy-base-staked'>\n                      <div className='base-name'>{item.bTokenSymbol}</div>\n                      <div className='base-apy'>\n                        {lang['apy']} <DeriNumberFormat value={item.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='staked'></div>\n                </div>)\n                )}\n              </>}\n              {version === 'v2_lite_open' && <>\n              {bTokenList.map((item, index) =>\n                (<div className='coin-box' onClick={() => { checkoutBaseToken(item.bTokenId) }}>\n                  <div className='base-apy-info'>\n                    <div className={`btoken-logo ${item.bTokenSymbol}`}>\n                      <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${item.bTokenSymbol}.png`} />\n                    </div>\n                    <div className='apy-base-staked'>\n                      <div className='base-name'>{item.bTokenSymbol}</div>\n                    </div>\n                  </div>\n                  <div className='staked'></div>\n                </div>)\n                )}\n              </>}\n              {type === 'lp' && bTokenList.length && <>\n                <div className='coin-box'>\n                  <div className='base-apy-info'>\n                    <div className='lp-btoken-logo'>\n                      <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                      <span className='conect-logo'>+</span>\n                      <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                    </div>\n                    <div className='apy-base-staked'>\n                      <div className='base-name'>{nowToken}</div>\n                      <div className='base-apy'>\n                        {lang['apy']} <DeriNumberFormat value={bTokenList[1].apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>}\n            </div>\n          </div>\n        </div>\n        <div className='pool-detail-add-remove-info'>\n          <div className='mining-deri-liquidity'>\n            <div className='btoken-liquidity'>\n              {type !== 'lp'  &&  <>\n                <div className={`btoken-logo ${nowToken}`}>\n                  {version === 'v2_lite_open' && <>\n                  <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${nowToken}.png`} />\n                  </>}\n                </div>\n                <div className='manage-stake'>\n                  <div className='manage'>\n                    {lang['manage']} {nowToken} {lang['liquidity']}\n                  </div>\n                  {nowIsStaked && <div className='stake'>\n                    <img src={stakedLogo} alt='' />\n                    {lang['staked']}\n                  </div>} \n                </div>\n              </>}\n              \n              {type === 'lp' && bTokenList.length && <>\n                <div className='lp-btoken-logo'>\n                  <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                  <span className='conect-logo'>+</span>\n                  <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                </div>\n                <div className='manage-stake'>\n                  <div className='manage'>\n                    {lang['manage']} {nowToken} {lang['liquidity']}\n                  </div>\n                  {nowIsStaked && <div className='stake'>\n                    <img src={stakedLogo} alt='' />\n                    {lang['staked']}\n                  </div>} \n                </div>\n              </>}\n            </div>\n            <div className='deri-current-epoch'>\n              <Claim poolShow={false} lang={lang} />\n            </div>\n          </div>\n          <div className='mining-add-remove-liquidity'>\n            <div className='pool-info'>\n              <div className='pool-info-title'>\n                <div className='pool-info-title-text'>\n                  {lang['pool-info']}\n                </div>\n                <div className='down-up'>\n                  {isShowInfo === 'show' && <span onClick={() => setIsShowInfo('hide')}>\n                    <img className='up-icon' alt='' src={downIcon} />\n                  </span>}\n                  {isShowInfo === 'hide' && <span onClick={() => setIsShowInfo('show')}>\n                    <img alt='' src={downIcon} />\n                  </span>}\n                </div>\n              </div>\n              <div className={`'pool-info-text' ${isShowInfo}`}>\n                <div className='pool-info-text-one'>\n                 {version !== 'v2_lite_open' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['apy']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat value={poolInfo.apy} displayType='text' decimalScale={2} suffix='%' />\n                    </div>\n                  </div>}\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['pool-liquidity']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat value={poolInfo.total} displayType='text' thousandSeparator={true} suffix={` ${nowToken}`} />\n                    </div>\n                  </div>\n                  {version === 'v2' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['multiplier']}</div>\n                    <div className='info-box-num'>{poolInfo.multiplier}</div>\n                  </div>}\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['my-liquidity-percentage']}</div>\n                    <div className='info-box-num'><DeriNumberFormat allowZero={true} value={poolInfo.percent} decimalScale={2} suffix={'%'} /></div>\n                  </div>\n                  {version !== 'v2' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['liquidity-share-value']}</div>\n                    <div className='info-box-num'><DeriNumberFormat allowZero={true} decimalScale={6} value={poolInfo.shareValue} thousandSeparator={true} /> {nowToken}</div>\n                  </div>}\n\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['staked-balance']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat allowZero={true} value={poolInfo.formatShares} decimalScale={2} />\n                      {version === 'v2' ? \" \" + nowToken : \" \" + lang['shares']}\n                    </div>\n                  </div>\n                  {version === 'v2' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['mining-pnl']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat allowZero={true} prefix=' ' value={poolInfo.swappedPnl} decimalScale={2} /> {nowToken}\n                    </div>\n                  </div>}\n                </div>\n                <div className='pool-info-text-two'>\n                  {type !== 'lp' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['symbols']}</div>\n                    <div className='info-box-num symbols'>\n                      {symbols}\n                    </div>\n                  </div>}\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['contract-address']}</div>\n                    <div className='info-box-num'>\n                      {formatAddress(address)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='add-remove-liquidity'>\n              <Tab tabSet={tabSet} width={379} size={18} inactiveBgColor='#0c192d' icon='' borderBottom={true} divider={true} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default inject('wallet', 'poolManager')(observer(Detail))"],"sourceRoot":""}