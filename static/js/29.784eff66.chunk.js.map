{"version":3,"sources":["utils/DeriNumberFormat.js","components/Token/img/pancake.svg","components/Token/img/sushi.svg","components/Token/Token.js","mobile/pages/Token/Token.js"],"names":["DeriNumberFormat","props","useState","renderablity","setRenderablity","useEffect","allowZero","others","undefined","value","isNaN","Math","abs","displayType","inject","observer","wallet","lang","deriTokenAddress","setDeriTokenAddress","deriInfo","setDeriInfo","addToken","a","window","ethereum","request","method","params","type","options","address","symbol","decimals","console","log","getDeriInfo","fetch","resp","json","res","obj","price","current_price","market_cap","circulating_supply","parseInt","total_supply","detail","account","chainId","interval","setInterval","clearInterval","className","onClick","target","href","src","pancake","sushi","thousandSeparator","decimalScale","Token"],"mappings":"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","file":"static/js/29.784eff66.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","export default __webpack_public_path__ + \"static/media/pancake.c40eba3d.svg\";","export default __webpack_public_path__ + \"static/media/sushi.084b9b6d.svg\";","import React, { useEffect, useState } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport pancake from './img/pancake.svg'\nimport sushi from './img/sushi.svg'\nfunction Token({ wallet = {}, lang }) {\n    const [deriTokenAddress, setDeriTokenAddress] = useState()\n    const [deriInfo, setDeriInfo] = useState()\n    const addToken = async () => {\n        if (deriTokenAddress) {\n            const tokenSymbol = 'DERI';\n            const tokenDecimals = 18;\n            try {\n                const wasAdded = await window.ethereum.request({\n                    method: 'wallet_watchAsset',\n                    params: {\n                        type: 'ERC20', // Initially only supports ERC20, but eventually more!\n                        options: {\n                            address: deriTokenAddress, // The address that the token is at.\n                            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n                            decimals: tokenDecimals, // The number of decimals in the token\n                        },\n                    },\n                });\n\n                if (wasAdded) {\n                    console.log('Thanks for your interest!');\n                } else {\n                    console.log('Your loss!');\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n    const getDeriInfo = async () => {\n        let path = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=deri-protocol&order=market_cap_desc&per_page=100&page=1&sparkline=false'\n        let resp = await fetch(path);\n        let res = await resp.json();\n        if (res) {\n            let obj = {}\n            obj.price = res[0].current_price\n            obj.market_cap = res[0].market_cap\n            obj.circulating_supply = parseInt(res[0].circulating_supply)\n            obj.total_supply = parseInt(res[0].total_supply)\n            setDeriInfo(obj)\n        }\n\n    }\n    const hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n\n    useEffect(() => {\n        if (hasConnectWallet()) {\n            let address;\n            if (wallet.detail.chainId == 56) {\n                address = '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5'\n            } else if (wallet.detail.chainId == 1) {\n                address = '0xa487bf43cf3b10dffc97a9a744cbb7036965d3b9'\n            } else if (wallet.detail.chainId == 128) {\n                address = '0x2bdA3e331Cf735D9420e41567ab843441980C4B8'\n            } else if (wallet.detail.chainId == 137) {\n                address = '0x3d1d2afd191b165d140e3e8329e634665ffb0e5e'\n            }\n            setDeriTokenAddress(address)\n        }\n\n    }, [wallet.detail])\n    useEffect(() => {\n        let interval = null;\n        //计数器\n        interval = window.setInterval(() => {\n            getDeriInfo()\n        }, 1000);\n        return () => {\n            interval && clearInterval(interval);\n        };\n    }, [])\n    return (\n        <div className='token-info'>\n            <div className='title'>\n                {lang['the-deri-token']}\n            </div>\n            <div className='add-to-matemask'>\n                <button onClick={addToken}>\n                    {lang['add-deri-to-matemask']}\n                </button>\n            </div>\n            <div className='buy-deri'>\n                <a target='_blank' href='https://app.sushi.com/swap?inputCurrency=&amp;outputCurrency=0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9'>\n                    <div className='pancake-buy'>\n                        <div>\n                            <img src={pancake} />\n                        </div>\n                        <span>\n                            {lang['buy-deri']}\n                        </span>\n                    </div>\n                </a>\n                <a target='_blank' href='https://exchange.pancakeswap.finance/#/swap?inputCurrency=0xe60eaf5a997dfae83739e035b005a33afdcc6df5'>\n                    <div className='sushi-buy'>\n                        <div>\n                            <img src={sushi} />\n                        </div>\n                        <span>\n                            {lang['buy-deri']}\n                        </span>\n                    </div>\n                </a>\n            </div>\n            <div className='deri-info'>\n                <div className='bottom-square'></div>\n                <div className='line-of-box'>\n                    <div className='box'>\n                        <div className='num'>\n                            $ {deriInfo ? <DeriNumberFormat value={deriInfo.price} displayType='text' thousandSeparator={true} decimalScale='4' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['price']}\n                        </div>\n                    </div>\n                    <div className='box'>\n                        <div className='num'>\n                            $ {deriInfo ? <DeriNumberFormat value={deriInfo.market_cap} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['market-cap']}\n                        </div>\n                    </div>\n                </div>\n                <div className='line-of-box'>\n                    <div className='box'>\n                        <div className='num'>\n                            {deriInfo ? <DeriNumberFormat value={deriInfo.circulating_supply} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['circulating-supply']}\n                        </div>\n                    </div>\n                    <div className='box'>\n                        <div className='num'>\n                            {deriInfo ? <DeriNumberFormat value={deriInfo.total_supply} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['total-supply']}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default inject('wallet')(observer(Token))","import TokenInfo from '../../../components/Token/Token';\nimport './token.less'\nexport default function Token({lang}){\n    return(\n        <div className='token'>\n           <TokenInfo lang={lang}></TokenInfo>\n        </div>\n    )\n}"],"sourceRoot":""}