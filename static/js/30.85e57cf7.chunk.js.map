{"version":3,"sources":["desktop/pages/Info/Detail.js","utils/DeriNumberFormat.js","desktop/pages/Info/Table.js","desktop/pages/Info/Chart.js"],"names":["LIQUIDITY_HEADER","LIQUIDITY_COLUMNS","GET_LIQUIDITY_URL","process","REACT_APP_INFO_HTTP_URL","TRADE_HEADER","TRADE_COLUMNS","columnFormat","account","data","formatAddress","timestamp","moment","Date","utc","format","notional","value","prefix","thousandSeparator","decimalScale","amount","suffix","bToken","price","direction","className","action","Detail","useParams","network","add","catalog","getLiquidityDataUrl","getTradeDataUrl","style","window","screen","width","to","toUpperCase","title","url","seriesType","headers","columns","columnRenders","pagination","DeriNumberFormat","props","useState","renderablity","setRenderablity","useEffect","allowZero","others","undefined","isNaN","Math","abs","displayType","inject","observer","dataSet","loading","onRowClick","setData","page","setPage","count","setCount","pageSize","loadData","a","restUrl","axios","get","res","status","Array","isArray","floor","loaded","map","header","length","d","onClick","cursor","col","call","AreaSeries","chartRef","useRef","series","curValue","setCurValue","curDate","setCurDate","lastDataRef","crosshairMove","param","point","current","seriesPrices","forEach","item","time","year","month","day","addAreaSeries","chart","areaSeries","priceLineVisible","lastValueVisible","topColor","bottomColor","lineColor","priceFormat","precision","minMove","sort","item1","item2","dateFormat","last","timeScale","fitContent","addHistogramSeries","histogramSeries","color","type","priceFormatter","scaleMargins","top","bottom","Number","last_24h","rect","document","querySelector","getBoundingClientRect","createChart","localization","convertToInternationalCurrencySystem","locale","rightOffset","leftOffset","timeVisible","borderColor","borderVisible","height","priceScale","position","mode","handleScroll","handleScale","crosshair","CrosshairMode","Normal","vertLine","labelVisible","visible","horzLine","grid","vertLines","horzLines","layout","backgroundColor","textColor","fontSize","initChart","subscribeCrosshairMove","unsubscribeCrosshairMove","removeSeries","remove","ref"],"mappings":"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","file":"static/js/30.85e57cf7.chunk.js","sourcesContent":["\r\nimport './info.less'\r\nimport Table from './Table'\r\nimport { useParams } from 'react-router-dom'\r\nimport { formatAddress } from '../../../utils/utils'\r\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat'\r\nimport moment from 'moment'\r\nimport Chart from './Chart'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LIQUIDITY_HEADER = ['ACTION','ACCOUNT','LIQUIDITY','AMOUNT','TIMESTAMP (UTC)']\r\nconst LIQUIDITY_COLUMNS = ['action','account','notional','amount','timestamp']\r\nconst GET_LIQUIDITY_URL = `${process.env.REACT_APP_INFO_HTTP_URL}`\r\n\r\nconst TRADE_HEADER = ['DIRECTION','ACCOUNT','SYMBOL','PRICE','VOLUME','NOTIONAL','TIMESTAMP (UTC)']\r\nconst TRADE_COLUMNS = ['direction','account','symbol','price','volume','notional','timestamp']\r\n\r\n\r\nconst columnFormat = {\r\n  account : data => formatAddress(data.account),\r\n  timestamp : data =>  moment(new Date(data.timestamp * 1000)).utc().format('YYYY-MM-DD HH:mm:ss'),\r\n  notional : data => <DeriNumberFormat value={data.notional} prefix='$' thousandSeparator={true} decimalScale={5}/>,  \r\n  amount : data =>  <DeriNumberFormat value={data.amount} suffix={` ${data.bToken}`} thousandSeparator={true} decimalScale={5}/> ,\r\n  price : data =>  <DeriNumberFormat value={data.price} thousandSeparator={true}  decimalScale={5}/>,\r\n  direction : data => <span className={`direction ${data.direction}`}>{data.direction}</span>,\r\n  action : data => <span className={`action ${data.action}`}>{data.action}</span>\r\n}\r\n\r\n\r\nexport default function Detail(){\r\n  const {network,add,catalog,bToken} =  useParams();\r\n  const getLiquidityDataUrl = `${GET_LIQUIDITY_URL}/get_liquidity?pool=${add}`\r\n  const getTradeDataUrl = `${GET_LIQUIDITY_URL}/get_trade?pool=${add}`\r\n\r\n  return(\r\n    <div className='info' style={{'width': `calc(100vw - ${window.screen.width * 0.25}px)`}}>\r\n    <div className='title'><Link to='/info'>Deri Overview</Link> &gt; {`${network} - ${catalog.toUpperCase()} - ${formatAddress(add)} (${bToken})`}</div>\r\n      <div className='chart-box'>\r\n        <div className='chart'><Chart title='TVL' url = {`${process.env.REACT_APP_INFO_HTTP_URL}/get_liquidity_history?pool=${add}`} seriesType='area'/> </div>\r\n        <div className='chart'><Chart title='Volume 24H' url = {`${process.env.REACT_APP_INFO_HTTP_URL}/get_trade_history?pool=${add}`} seriesType='histogram'/> </div>\r\n      </div>\r\n      <div className='table-by-network'>\r\n        <Table title='LIQUIDITY' headers={LIQUIDITY_HEADER} columns={LIQUIDITY_COLUMNS} columnRenders={columnFormat} url={getLiquidityDataUrl} pagination={true}/>\r\n        <Table title='TRADE' headers={TRADE_HEADER} columns={TRADE_COLUMNS} columnRenders={columnFormat}  url={getTradeDataUrl} pagination={true}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nexport default function DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n\r\n  useEffect(() => {\r\n    const {allowZero,...others} = props \r\n    if(((typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\r\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\r\n    } \r\n    return () => {};\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { inject, observer } from 'mobx-react'\r\n\r\nfunction Table({title,dataSet,url,headers,columns,columnRenders = {},pagination,loading,onRowClick}){\r\n  const [data, setData] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [count, setCount] = useState()\r\n  const [pageSize, setPageSize] = useState(10)\r\n\r\n  const loadData = async (url,page) => {\r\n    let restUrl = url;\r\n    if(pagination){\r\n      restUrl = `${restUrl}&page=${page}&page_amount=${pageSize}`\r\n    }\r\n    loading.loading()\r\n    const res = await axios.get(restUrl);\r\n    if(res.status === 200 && Array.isArray(res.data.data)){\r\n      setCount(res.data.count / pageSize)\r\n      if(res.data.count % pageSize > 0 ){\r\n        setCount(Math.floor(res.data.count / pageSize) +1)\r\n      }\r\n      setData(res.data.data)\r\n      setPage(page)\r\n      loading.loaded()\r\n    }\r\n  }\r\n\r\n  const prePage = () => {\r\n    if(page === 1){\r\n      return;\r\n    }\r\n    loadData(url,page - 1)\r\n  }\r\n  const nextPage = () => {\r\n    if(page === count){\r\n      return;\r\n    }\r\n\r\n    loadData(url,page +1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(dataSet){\r\n      setData(dataSet)\r\n    } else {\r\n      loadData(url,1);\r\n    }\r\n  }, [url])\r\n  return(\r\n    <div className='info-table'>\r\n      <div className='t-title'>{title}</div>\r\n      <div className='tbody'>\r\n        <div className='theader'>\r\n          {headers.map(header => <div className='col'>{header}</div>)}\r\n        </div>\r\n        {data.length > 0 ? data.map(d => (\r\n          <div className='row' onClick={() => onRowClick && onRowClick(d)} style={{cursor : onRowClick ? 'pointer' : 'normal'}}>\r\n            {columns.map(col => <div className='col'>{columnRenders[col] ? columnRenders[col].call(null,d) :d[col]}</div>)}\r\n          </div>))\r\n          :\r\n          <div className='row'><div className='col no-data'>No Data</div></div>\r\n          }\r\n         \r\n\r\n        {pagination && data.length > 0 && <div className='pagination row'>\r\n          <span className='arrow' onClick={prePage}> &lt; </span><span>Page {page} of {count}</span><span className='arrow' onClick={nextPage}> &gt; </span>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default inject('loading')(observer(Table))","import { useRef,useEffect,useState } from \"react\"\r\nimport { createChart, CrosshairMode } from \"lightweight-charts\";\r\nimport axios from \"axios\";\r\nimport dateFormat from 'dateformat'\r\nimport { convertToInternationalCurrencySystem } from \"../../../utils/utils\";\r\n\r\nexport default function AreaSeries({title,url,seriesType}){\r\n  const chartRef = useRef(null);\r\n  const series = useRef(null)\r\n  const [curValue, setCurValue] = useState('')\r\n  const [curDate, setCurDate] = useState('')\r\n  const lastDataRef = useRef()\r\n\r\n  const initChart = () => {\r\n    const rect = document.querySelector('.info-chart').getBoundingClientRect()\r\n    const chart = createChart(chartRef.current, { \r\n      localization : {\r\n        priceFormatter: price => '$ ' + convertToInternationalCurrencySystem(price),\r\n        locale: 'en-US'\r\n      },\r\n      timeScale: {\r\n        rightOffset : 0,\r\n        leftOffset : 5,\r\n        timeVisible : true,\r\n        borderColor : '#fff',\r\n        borderVisible :  false\r\n      },\r\n      width: rect.width,\r\n      height: rect.height,\r\n      priceScale: {\r\n        position: 'none',\r\n        borderColor: '#fff',\r\n        borderVisible : false,\r\n        mode: 0,\r\n        scaleMargins: {\r\n          top: 0.3,\r\n          bottom: 0.01\r\n        },\r\n      },\r\n\r\n      handleScroll: false,\r\n      handleScale: false,\r\n      crosshair: {\r\n        mode: CrosshairMode.Normal,  \r\n        vertLine: {\r\n          labelVisible : false,  \r\n          visible : false\r\n        },\r\n        horzLine: {\r\n          labelVisible : false,  \r\n          visible : false\r\n        },\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          visible: false,\r\n        },\r\n        horzLines: {\r\n          visible: false,\r\n        },\r\n      },\r\n      layout: {\r\n        backgroundColor: '#212327',\r\n        textColor: '#fff',\r\n        fontSize: 12\r\n      },\r\n    });\r\n    return chart;\r\n  }\r\n\r\n  const crosshairMove = param => {\r\n      if (!param.point) {\r\n        setCurDate('')\r\n        if(lastDataRef.current){\r\n          setCurValue(lastDataRef.current)\r\n        }\r\n        return;\r\n      }\r\n      param.seriesPrices.forEach(item => {\r\n        if(item){\r\n          setCurValue(item)\r\n        }\r\n      })\r\n      param.time && setCurDate(`${param.time.year}-${param.time.month}-${param.time.day} (UTC)`)\r\n  }\r\n\r\n  const addAreaSeries = async(chart) => {\r\n    const areaSeries = chart.addAreaSeries({\r\n      priceLineVisible : false,\r\n      lastValueVisible: false,\r\n      topColor: 'RGBA(0,101,159,.5)',\r\n      bottomColor: 'RGBA(0,101,159,0)',\r\n      lineColor: 'RGB(0,101,159)',\r\n      priceFormat: {        \r\n        precision: 1,\r\n        minMove : '1000',\r\n      }\r\n    })\r\n  \r\n    \r\n    const res = await axios.get(url)\r\n    if(res.status === 200 && Array.isArray(res.data.data)){\r\n      let data = res.data.data.sort((item1,item2) => {\r\n        if(item1.timestamp > item2.timestamp) {\r\n          return 1\r\n        } else if(item1.timestamp < item2.timestamp){\r\n          return -1\r\n        } else {\r\n          return 0\r\n        }\r\n      })\r\n      data = data.map(d => ({time : dateFormat(new Date(d.timestamp * 1000),'yyyy-mm-dd'),value : d.value}))\r\n      areaSeries.setData(data)\r\n      const last = data[data.length -1].value\r\n      setCurValue(last)\r\n      lastDataRef.current = last\r\n    }\r\n    series.current = areaSeries\r\n    chart.timeScale().fitContent();\r\n    return areaSeries;\r\n  }\r\n\r\n  const addHistogramSeries = async (chart) => {\r\n    const histogramSeries = chart.addHistogramSeries({\r\n      color: '#00659F',\r\n      priceLineVisible : false,\r\n      lastValueVisible: false,\r\n      priceFormat: {\r\n        type: \"volume\",\r\n        priceFormatter: price => '$ ' + price\r\n      },\r\n      scaleMargins: {\r\n        top: 0.2,\r\n        bottom: 0\r\n      }\r\n    })\r\n    const res = await axios.get(url)\r\n    if(res.status === 200 && Array.isArray(res.data.data)){\r\n      const data = res.data.data.sort((item1,item2) => {\r\n        if(item1.timestamp > item2.timestamp) {\r\n          return 1\r\n        } else if(item1.timestamp < item2.timestamp){\r\n          return -1\r\n        } else {\r\n          return 0\r\n        }\r\n      }).map(d => ({time : dateFormat(new Date(d.timestamp * 1000),'yyyy-mm-dd'),value : Number(d.value)}))\r\n      \r\n      histogramSeries.setData(data)\r\n      const last = res.data.last_24h ? res.data.last_24h : data[data.length -1].value\r\n      setCurValue(last)\r\n      lastDataRef.current = last\r\n    }\r\n    series.current = histogramSeries\r\n    chart.timeScale().fitContent();\r\n    return histogramSeries;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const chart = initChart();\r\n    if(seriesType === 'area'){\r\n      addAreaSeries(chart)\r\n    }\r\n    if(seriesType === 'histogram'){\r\n      addHistogramSeries(chart)\r\n    }\r\n    chart.subscribeCrosshairMove(crosshairMove);\r\n    return () => {\r\n      if(chart){\r\n        chart.unsubscribeCrosshairMove(crosshairMove)\r\n        if(series.current){\r\n          chart.removeSeries(series.current);\r\n        }\r\n        chart.remove();\r\n      }\r\n    }\r\n  }, [url,seriesType])\r\n\r\n  return(\r\n    <div className='info-chart'>\r\n      <div className='chart-title'>\r\n        <div className='title-label'>{title}</div>\r\n        <div className='title-value'>{curValue ? `$${convertToInternationalCurrencySystem(curValue)}` : ''} </div>\r\n        <div className='title-date'>{curDate} </div>\r\n        </div>\r\n      <div className='series' ref={chartRef}></div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}