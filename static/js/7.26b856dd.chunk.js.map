{"version":3,"sources":["pages/Pool/OperateLiquidity.js","pages/Pool/img/back.svg","pages/Pool/img/add-icon.svg","pages/Pool/img/remove-icon.svg","pages/Pool/Detail.js","utils/DeriNumberFormat.js","components/UnderlineText/UnderlineText.js","components/Tab/Tab.js","components/Input/Input.js","components/Slider/TimeSlider.js","components/ButtonGroup/ButtonGroup.js","pages/Pool/Claim.js","pages/Pool/img/staked.svg"],"names":["OperateLiquidity","wallet","lang","type","isLp","bTokenId","poolConfig","version","baseToken","address","walletBalance","poolInfo","afterTransaction","useState","addRemoveValue","setAddRemoveValue","alert","useAlert","estimatedLiquidityInfo","setEstimatedLiquidityInfo","unit","getEstimatedLiquidityInfoApi","a","newAmount","apiProxy","request","detail","chainId","account","res","addLiquidity","max","bg","gt","isNaN","param","removeLiquidity","totalShares","cur","error","includeResponse","eq","success","useEffect","className","Input","value","onChange","styles","width","DeriNumberFormat","displayType","decimalScale","ButtonGroup","groups","parseInt","balance","percentage","times","toString","outline","bgColor","height","allowZero","percent","suffix","percentage1","formatShares","shareValue1","Button","onClick","pool","fontSize","PRIMARY","label","chainConfig","config","DeriEnv","get","chainInfo","inject","observer","poolManager","useParams","symbol","nowToken","setNowToken","nowTokenId","setNowTokenId","nowIsStaked","setNowIsStaked","setPoolConfig","bTokenList","setBTokenList","isShowInfo","setIsShowInfo","setPoolInfo","useConfig","symbols","setSymbols","setWalletBalance","networkText","name","switchNetwork","onImgError","event","target","src","errorimg","getWalletBalance","isConnected","params","push","openConfigListCache","update","getLiquidityInfo","tabSet","content","style","background","borderColor","icon","addicon","direction","removeicon","load","pools","loadDoubleMingingPool","lpPools","loadOpen","openPools","filter","p","bToken0","bTokens","bTokenSymbol","isCakeLP","isSushiLP","map","item","arr","join","getPoolInfo","apy","bTokensApy","i","lpApy","info","apyMuList","multiplier","liquidity","bTokensLiq","total","getIsStaked","staked","isStaked","now","checkoutBaseToken","b","to","alt","backIcon","id","BSC","POLYGON","ETH","networkLogo","rel","href","index","stakedLogo","onError","length","UnderlineText","text","toFixed","tip","Claim","poolShow","downIcon","thousandSeparator","shareValue","prefix","swappedPnl","formatAddress","Tab","size","inactiveBgColor","borderBottom","divider","Wrapper","styled","NumberFormat","props","renderablity","setRenderablity","isValidate","undefined","Math","abs","defaultValue","others","fixedDecimalScale","timeout","window","setTimeout","clearTimeout","div","MD5","multiline","isMobile","test","navigator","userAgent","data-for","data-tip","data-event","padding","place","borderRadius","borderR","borderL","borderB","activeFontColor","activeBgColor","borderT","borderTop","Object","keys","selected","setSelected","fontColor","select","inputWidth","unitPadding","step","focus","readOnly","disabled","inputRef","useRef","current","min","ref","e","Warpper","TimeSlider","startTimestamp","nowTimestamp","endTimestamp","selectedBorderColor","defaultBorderColor","outlineColor","setValue","isSelected","remainingTime","setRemainingTime","setStartTimestamp","setEndTimestamp","setNowTimestamp","claimInfo","setClaimInfo","claimed","setClaimed","firstTime","setFirstTime","interval","setInterval","period","Date","epochBegin","dis","h","m","s","clearInterval","loadClaimInfo","unclaimed","valid","amount","harvestDeriLp","lp","harvestDeriTrade","trade","claimDeri","eqInNumber","click","connect","result","getMonth","month","monthText","getUserFirstClaimInfo","first_timestamp","date","year","getFullYear","day","getDate","fontWeight"],"mappings":"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","file":"static/js/7.26b856dd.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Input from \"../../components/Input/Input\"\r\nimport Button from \"../../components/Button/Button\"\r\nimport ButtonGroup from \"../../components/ButtonGroup/ButtonGroup\"\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\r\nimport { PRIMARY } from '../../utils/Constants';\r\nimport apiProxy from \"../../model/ApiProxy\";\r\nimport { useAlert } from 'react-alert'\r\nimport './operateLiauidity.less'\r\nimport { bg } from \"../../lib/web3js/index\"\r\nexport default function OperateLiquidity({ wallet, lang, type, isLp, bTokenId, poolConfig, version, baseToken, address, walletBalance, poolInfo, afterTransaction }) {\r\n  const [addRemoveValue, setAddRemoveValue] = useState('')\r\n  \r\n  const alert = useAlert();\r\n  const [estimatedLiquidityInfo, setEstimatedLiquidityInfo] = useState({})\r\n  const getValue = (value) => {\r\n    setAddRemoveValue(value)\r\n  }\r\n  const unit = type === 'add' || version === 'v2' ? baseToken : lang['shares']\r\n  const groupValue = (value) => {\r\n    value = parseInt(value)\r\n    let balance = type === 'add' ? walletBalance : poolInfo.totalShares;\r\n    let percentage = bg(balance).times(bg(value / 100)).toString()\r\n    setAddRemoveValue(percentage)\r\n  }\r\n\r\n  const getEstimatedLiquidityInfoApi = async () => {\r\n    let newAmount = type === 'add' ? addRemoveValue : -addRemoveValue;\r\n    const res = await apiProxy.request('getEstimatedLiquidityInfo', [wallet.detail.chainId, address, wallet.detail.account, newAmount, bTokenId])\r\n    setEstimatedLiquidityInfo(res)\r\n  }\r\n\r\n  const addLiquidity = async () => {\r\n    const max = bg(walletBalance)\r\n    const cur = bg(addRemoveValue);\r\n    if (cur.gt(max)) {\r\n      alert(lang['not-sufficient-funds']);\r\n      return false;\r\n    }\r\n    if (addRemoveValue <= 0 || isNaN(addRemoveValue)) {\r\n      alert(lang['it-has-to-be-greater-than-zero']);\r\n      return false;\r\n    }\r\n    if (isLp === 'lp') {\r\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue]\r\n      let res = await apiProxy.request('addLpLiquidity', param)\r\n    } else {\r\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue, bTokenId]\r\n      let res = await apiProxy.request('addLiquidity', param)\r\n    }\r\n\r\n    afterTransaction(true)\r\n    // if(!res || !res.success){\r\n    //   alert(lang['failure-of-transaction']);\r\n    //   return false; \r\n    // }\r\n\r\n    return true;\r\n  }\r\n  const removeLiquidity = async () => {\r\n    const max = bg(poolInfo.totalShares)\r\n    const cur = bg(addRemoveValue)\r\n    if (cur.gt(max)) {\r\n      alert.error(`${lang['your-current-max-removable-shares-are']}  ${poolInfo.totalShares}`);\r\n      return false;\r\n    }\r\n\r\n    if (+addRemoveValue <= 0 || isNaN(addRemoveValue)) {\r\n      alert.error(lang['invalid-liquidity']);\r\n      return false;\r\n    }\r\n    let res;\r\n    if (isLp === 'lp') {\r\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue]\r\n      res = await apiProxy.request('removeLpLiquidity', param,{ includeResponse: true })\r\n    } else {\r\n      let param = [wallet.detail.chainId, address, wallet.detail.account, addRemoveValue, bTokenId, max.eq(cur)]\r\n      res = await apiProxy.request('removeLiquidity', param,{ includeResponse: true })\r\n    }\r\n    if (!res || !res.success) {\r\n      alert.error(lang['failure-of-transaction']);\r\n    }\r\n    afterTransaction()\r\n    return true;\r\n  }\r\n  useEffect(() => {\r\n    if (addRemoveValue) {\r\n      getEstimatedLiquidityInfoApi()\r\n    }\r\n  }, [addRemoveValue])\r\n  useEffect(() => {\r\n    setAddRemoveValue('')\r\n  }, [type])\r\n  return (\r\n    <div className='operate'>\r\n      <div className='add-input'>\r\n        <Input value={addRemoveValue} unit={unit} onChange={getValue} styles={{ width: \"332px\" }} />\r\n      </div>\r\n      {type === 'add' && <div className='wallet-balance'>\r\n        {lang['wallet-balance']} <DeriNumberFormat value={walletBalance} displayType='text' decimalScale={2} /> {baseToken}\r\n      </div>}\r\n      {type === 'remove' && <div className='wallet-balance'>\r\n        {lang['staked-balance']} <DeriNumberFormat value={poolInfo.totalShares} displayType='text' decimalScale={2} /> {unit}\r\n      </div>}\r\n\r\n      <div className='check-proportion'>\r\n        <ButtonGroup groups={['25%', '50%', '75%', '100%']} onChange={groupValue} outline={true} bgColor=' rgba(85, 119, 253, 0.1)' width={77} height={40} />\r\n      </div>\r\n      <div className='information'>\r\n        {addRemoveValue && <div>\r\n          <div className='percentage'>\r\n            <div className='info-box-title'>{lang['my-liquidity-percentage']}</div>\r\n            <div className='info-box-num'><DeriNumberFormat allowZero={true} value={poolInfo.percent} decimalScale={2} suffix={'%'} /> ->  <DeriNumberFormat allowZero={true} value={estimatedLiquidityInfo.percentage1*100} decimalScale={2} suffix={'%'} /></div>\r\n          </div>\r\n          <div className='staked-balance'>\r\n            <div className='info-box-title'>{lang['staked-balance']}</div>\r\n            <div className='info-box-num'>\r\n              <DeriNumberFormat allowZero={true} value={poolInfo.formatShares} decimalScale={2} /> -> <DeriNumberFormat allowZero={true} value={estimatedLiquidityInfo.shareValue1} decimalScale={2} /> \r\n              {version === 'v2' ? \" \" + baseToken : \" \" + lang['shares']}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n      </div>\r\n      <div className='add-remove-btn'>\r\n        {type === 'add' && <Button onClick={addLiquidity} pool={poolConfig} wallet={wallet} bTokenId={bTokenId} fontSize='18' type={PRIMARY} width=\"331\" label={lang[\"add-liquidity\"]} lang={lang} />}\r\n        {type === 'remove' && <Button onClick={removeLiquidity}  pool={poolConfig} type={PRIMARY} wallet={wallet} bTokenId={bTokenId} fontSize='18' width=\"331\" label={lang[\"remove-liquidity\"]} lang={lang} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/back.300bea44.svg\";","export default __webpack_public_path__ + \"static/media/add-icon.c1698228.svg\";","export default __webpack_public_path__ + \"static/media/remove-icon.25438226.svg\";","import { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport Claim from './Claim'\r\nimport OperateLiquidity from './OperateLiquidity'\r\nimport Tab from '../../components/Tab/Tab'\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\r\nimport apiProxy from \"../../model/ApiProxy\"\r\nimport { formatAddress, isCakeLP, isSushiLP } from \"../../utils/utils\"\r\nimport UnderlineText from '../../components/UnderlineText/UnderlineText'\r\nimport config from '../../config.json'\r\nimport useConfig from '../../hooks/useConfig';\r\nimport { DeriEnv, openConfigListCache } from '../../lib/web3js/index'\r\nimport './detail.less'\r\nimport backIcon from './img/back.svg'\r\nimport BSC from '../../assets/img/bsc-logo.svg'\r\nimport POLYGON from '../../assets/img/polygon-logo.svg'\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport downIcon from '../../assets/img/arrow-down.svg'\r\nimport stakedLogo from './img/staked.svg'\r\nimport errorimg from '../../assets/img/ErrorImg.png'\r\nimport addicon from './img/add-icon.svg'\r\nimport removeicon from './img/remove-icon.svg'\r\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\r\n\r\nconst env = DeriEnv.get();\r\nconst { chainInfo } = config[env]\r\nfunction Detail({ lang, wallet = {}, poolManager }) {\r\n  const { version, chainId, symbol, address, type } = useParams();\r\n  const [nowToken, setNowToken] = useState('')\r\n  const [nowTokenId, setNowTokenId] = useState('')\r\n  const [nowIsStaked, setNowIsStaked] = useState(false);\r\n  const [poolConfig, setPoolConfig] = useState('')\r\n  const [bTokenList, setBTokenList] = useState([])\r\n  const [isShowInfo, setIsShowInfo] = useState('show')\r\n  const [poolInfo, setPoolInfo] = useState({})\r\n  const config = useConfig();\r\n  const [symbols, setSymbols] = useState('')\r\n  const [walletBalance, setWalletBalance] = useState()\r\n  const networkText = chainInfo[chainId] && chainInfo[chainId].name;\r\n  const networkLogo = (chainId) => {\r\n    let src;\r\n    let id = +chainId\r\n    if (id === 56 || id === 97) {\r\n      src = BSC\r\n    } else if (id === 137) {\r\n      src = POLYGON\r\n    } else if (id === 1) {\r\n      src = ETH\r\n    }\r\n    return src\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (wallet.detail.chainId !== chainId) {\r\n      wallet.switchNetwork(config[chainId])\r\n    }\r\n  }, [wallet.detail])\r\n\r\n  const onImgError = (event) => {\r\n    event.target.src = errorimg\r\n  }\r\n\r\n  const getWalletBalance = async () => {\r\n    if (wallet.isConnected()) {\r\n      let params = [wallet.detail.chainId, address, wallet.detail.account]\r\n      let balance = null;\r\n      if (poolConfig.isLp) {\r\n        balance = await apiProxy.request('getLpWalletBalance', params)\r\n      } else {\r\n        params.push(nowTokenId)\r\n        if (version === 'v2_lite_open') {\r\n          await openConfigListCache.update()\r\n        }\r\n        balance = await apiProxy.request('getBTokenBalance', params)\r\n      }\r\n      setWalletBalance(balance)\r\n    }\r\n  }\r\n  const afterTransaction = () => {\r\n    getWalletBalance()\r\n    getLiquidityInfo()\r\n  }\r\n  const tabSet = {\r\n    [lang['add']]: {\r\n      content: <OperateLiquidity poolConfig={poolConfig} isLp={type} wallet={wallet} afterTransaction={afterTransaction} version={version} bTokenId={nowTokenId} address={address} lang={lang} type='add' poolInfo={poolInfo} baseToken={nowToken} walletBalance={walletBalance} />,\r\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\r\n      borderColor: \"#203B60\",\r\n      icon: addicon,\r\n      direction: \"tab-left\"\r\n    },\r\n    [lang['remove']]: {\r\n      content: <OperateLiquidity isLp={type} poolConfig={poolConfig} wallet={wallet} afterTransaction={afterTransaction} lang={lang} address={address} type='remove' bTokenId={nowTokenId} poolInfo={poolInfo} balance={poolInfo} baseToken={nowToken} version={version} />,\r\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\r\n      borderColor: \"#203B60\",\r\n      icon: removeicon,\r\n      direction: \"tab-right\",\r\n    },\r\n  }\r\n  const load = async () => {\r\n    await poolManager.load()\r\n    let pool = poolManager.pools;\r\n    if (type === 'lp') {\r\n      await poolManager.loadDoubleMingingPool();\r\n      pool = poolManager.lpPools\r\n    }\r\n    if (version === 'v2_lite_open') {\r\n      await poolManager.loadOpen();\r\n      pool = poolManager.openPools\r\n    }\r\n    pool = pool.filter(p => p.address === address)\r\n    pool = pool[0]\r\n    let bToken0 = pool.bTokens[0].bTokenSymbol\r\n    if (isCakeLP(address)) {\r\n      bToken0 = 'CAKE-LP'\r\n    } else if (isSushiLP(address)) {\r\n      bToken0 = 'DERI-USDT SLP'\r\n    }\r\n    let bTokenId = pool.bTokens[0].bTokenId\r\n    let symbols = pool.symbols.map(item => {\r\n      let arr = [];\r\n      arr.push(item.symbol)\r\n      return arr\r\n    })\r\n    symbols = symbols.join(',')\r\n    setSymbols(symbols)\r\n    setPoolConfig(pool)\r\n    setBTokenList(pool.bTokens)\r\n    setNowToken(bToken0)\r\n    setNowTokenId(bTokenId)\r\n  }\r\n  const getPoolInfo = async () => {\r\n    if (poolConfig) {\r\n      let res = await poolConfig.getPoolInfo(wallet, poolConfig);\r\n      let arr = bTokenList.map(item => {\r\n        if (version === 'v2') {\r\n          item.apy = (+(res.bTokensApy.filter(i => i.bTokenId === item.bTokenId)[0].apy) * 100)\r\n        } else if (version !== 'v2_lite_open') {\r\n          item.apy = +(res.bTokensApy[0].apy) * 100\r\n          if (isSushiLP(address)) {\r\n            item.lpApy = res.lpApy\r\n          }\r\n        }\r\n        return item\r\n      })\r\n      return res\r\n    }\r\n  }\r\n  const getLiquidityInfo = async () => {\r\n    let info = null\r\n    if (poolConfig) {\r\n      let res = await poolConfig.getPoolInfo(wallet, poolConfig);\r\n      let apy;\r\n      let liquidity;\r\n      let apyMuList;\r\n      let multiplier;\r\n      if (version === 'v2' && nowTokenId) {\r\n        apyMuList = res.bTokensApy.filter(p => p.bTokenId === nowTokenId);\r\n        apy = apyMuList[0].apy;\r\n        multiplier = apyMuList[0].multiplier\r\n        liquidity = res.bTokensLiq.filter(p => p.bTokenId === nowTokenId);\r\n        liquidity = liquidity[0].liquidity;\r\n      } else if (version !== 'v2_lite_open') {\r\n        apy = res.bTokensApy[0].apy\r\n        liquidity = res.bTokensLiq[0].liquidity\r\n      } else {\r\n        // liquidity = res.bTokensLiq[0].liquidity\r\n      }\r\n      info = {\r\n        total: liquidity,\r\n        apy: (+apy) * 100,\r\n        multiplier: multiplier,\r\n      }\r\n      if (wallet.isConnected()) {\r\n        let res = await poolConfig.getLiquidityInfo(wallet, address, poolConfig.version, poolConfig.isLp, nowTokenId)\r\n        info = res;\r\n        info['apy'] = (+apy) * 100;\r\n        info['multiplier'] = multiplier\r\n      }\r\n      setPoolInfo(info)\r\n    }\r\n  }\r\n\r\n  const getIsStaked = async () => {\r\n    if (wallet.isConnected() && poolConfig) {\r\n      let res = await poolConfig.getIsStaked(wallet, poolConfig)\r\n      let arr = bTokenList.map((item) => {\r\n        if (version === 'v2') {\r\n          item.staked = res.bTokens.filter(p => p.bTokenId === item.bTokenId)[0].isStaked\r\n        } else {\r\n          item.staked = res.isStaked\r\n        }\r\n        return item\r\n      })\r\n      let now;\r\n      if(version === 'v2'){\r\n       if(nowTokenId){\r\n        now = res.bTokens.filter(p=>p.bTokenId === nowTokenId)[0].isStaked\r\n       }\r\n      }else{\r\n        now = res.isStaked\r\n      }\r\n      setNowIsStaked(now)\r\n    }\r\n  }\r\n\r\n  const checkoutBaseToken = async (bTokenId) => {\r\n    let now = poolConfig.bTokens.filter(b => b.bTokenId === bTokenId)\r\n    setNowTokenId(bTokenId)\r\n    setNowToken(now[0].bTokenSymbol)\r\n    setNowIsStaked()\r\n  }\r\n  useEffect(() => {\r\n    load()\r\n  }, [])\r\n  useEffect(() => {\r\n    getPoolInfo()\r\n  }, [poolConfig, bTokenList])\r\n  useEffect(() => {\r\n    getLiquidityInfo()\r\n    getWalletBalance()\r\n  }, [nowTokenId, poolConfig, wallet.detail.account])\r\n  useEffect(() => {\r\n    getIsStaked()\r\n  }, [poolConfig, wallet.detail.account, bTokenList,nowTokenId])\r\n  return (\r\n    <div className='pool-detail'>\r\n      <div className='back-pool'>\r\n        <Link to='/pool'>\r\n          <div className='icon-back'>\r\n            <img alt='' src={backIcon} />\r\n            <span>{lang['back']}</span>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n      <div className='pool-deatail-info'>\r\n        <div className='pool-detail-basetoken-info'>\r\n          <div className='pool-info-text'>\r\n            <div className='pool-network-type'>\r\n              <div className='network-logo'>\r\n                <img alt='' src={networkLogo(chainId)} />\r\n              </div>\r\n              <div className='pool-type-network-text'>\r\n                <div className='pool-type-text'>\r\n                  {lang[version]}\r\n                </div>\r\n                <div className='pool-network-text'>\r\n                  {networkText}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='pool-des'>\r\n              {lang['pool-des']}\r\n              <a rel='norelerror' href='https://docs.deri.finance/mining-faq#is-the-liquidity-mining-on-deri-pools-risk-free'><span className='learn-more'> {lang['learn-more']}</span></a>\r\n            </div>\r\n          </div>\r\n          <div className='select-basetoken-info'>\r\n            <div className='select-coin-title'>\r\n              {lang['select-the-coin']}\r\n            </div>\r\n            <div className='coin-list'>\r\n              {type !== 'lp' && version !== 'v2_lite_open' && <>\r\n                {bTokenList.map((item, index) =>\r\n                (<div className={nowToken === item.bTokenSymbol ? 'coin-box checked-base' : 'coin-box'} onClick={() => { checkoutBaseToken(item.bTokenId) }}>\r\n                  <div className='base-apy-info'>\r\n                    <div className={`btoken-logo ${item.bTokenSymbol}`}></div>\r\n                    <div className='apy-base-staked'>\r\n                      <div className='base-name'>{item.bTokenSymbol}</div>\r\n                      <div className='base-apy'>\r\n                        {lang['apy']} &nbsp; <DeriNumberFormat value={item.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {item.staked && <div className='stake'>\r\n                    <img src={stakedLogo} alt='' />\r\n                    {lang['staked']}\r\n                  </div>}\r\n                </div>)\r\n                )}\r\n              </>}\r\n              {version === 'v2_lite_open' && <>\r\n                {bTokenList.map((item, index) =>\r\n                (<div className='coin-box checked-base' onClick={() => { checkoutBaseToken(item.bTokenId) }}>\r\n                  <div className='base-apy-info'>\r\n                    <div className={`btoken-logo ${item.bTokenSymbol}`}>\r\n                      <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${item.bTokenSymbol}.png`} />\r\n                    </div>\r\n                    <div className='apy-base-staked'>\r\n                      <div className='base-name'>{item.bTokenSymbol}</div>\r\n                    </div>\r\n                  </div>\r\n                  {item.staked && <div className='staked'>\r\n                    <img src={stakedLogo} alt='' />\r\n                    {lang['staked']}\r\n                  </div>}\r\n                </div>)\r\n                )}\r\n              </>}\r\n              {type === 'lp' && bTokenList.length && <>\r\n                <div className='coin-box checked-base'>\r\n                  <div className='base-apy-info'>\r\n                    <div className='lp-btoken-logo'>\r\n                      <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\r\n                      <span className='conect-logo'>+</span>\r\n                      <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\r\n                    </div>\r\n                    <div className='apy-base-staked'>\r\n                      <div className='base-name'>{nowToken}</div>\r\n                      <div className='base-apy'>\r\n                        {isCakeLP(address) && <>\r\n                          {lang['apy']} &nbsp; <DeriNumberFormat value={bTokenList[1].apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\r\n                        </>}\r\n                        {isSushiLP(address) && <>\r\n                          <UnderlineText text={`${lang['apy']} ${(+(bTokenList[1].apy)).toFixed(2)} %`} tip={lang['deri-apy']} />\r\n                          &nbsp; + &nbsp; <UnderlineText text={`${lang['apy']}  ${(+(bTokenList[1].lpApy)).toFixed(2)} %`} tip={lang['sushi-apy']} />\r\n                        </>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='pool-detail-add-remove-info'>\r\n          <div className='mining-deri-liquidity'>\r\n            <div className='btoken-liquidity'>\r\n              {type !== 'lp' && <>\r\n                <div className={`btoken-logo ${nowToken}`}>\r\n                  {version === 'v2_lite_open' && <>\r\n                    <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${nowToken}.png`} />\r\n                  </>}\r\n                </div>\r\n                <div className='manage-stake'>\r\n                  <div className='manage'>\r\n                    {lang['manage']} {nowToken} {lang['liquidity']}\r\n                  </div>\r\n                  {nowIsStaked && <div className='stake'>\r\n                    <img src={stakedLogo} alt='' />\r\n                    {lang['staked']}\r\n                  </div>}\r\n                </div>\r\n              </>}\r\n\r\n              {type === 'lp' && bTokenList.length && <>\r\n                <div className='lp-btoken-logo'>\r\n                  <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\r\n                  <span className='conect-logo'>+</span>\r\n                  <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\r\n                </div>\r\n                <div className='manage-stake'>\r\n                  <div className='manage'>\r\n                    {lang['manage']} {nowToken} {lang['liquidity']}\r\n                  </div>\r\n                  {nowIsStaked && <div className='stake'>\r\n                    <img src={stakedLogo} alt='' />\r\n                    {lang['staked']}\r\n                  </div>}\r\n                </div>\r\n              </>}\r\n            </div>\r\n            <div className='deri-current-epoch'>\r\n              <Claim poolShow={false} lang={lang} wallet={wallet} />\r\n            </div>\r\n          </div>\r\n          <div className='mining-add-remove-liquidity'>\r\n            <div className='pool-info'>\r\n              <div className='pool-info-title'>\r\n                <div className='pool-info-title-text'>\r\n                  {lang['pool-info']}\r\n                </div>\r\n                <div className='down-up'>\r\n                  {isShowInfo === 'show' && <span onClick={() => setIsShowInfo('hide')}>\r\n                    <img className='up-icon' alt='' src={downIcon} />\r\n                  </span>}\r\n                  {isShowInfo === 'hide' && <span onClick={() => setIsShowInfo('show')}>\r\n                    <img alt='' src={downIcon} />\r\n                  </span>}\r\n                </div>\r\n              </div>\r\n              <div className={`'pool-info-text' ${isShowInfo}`}>\r\n                <div className='pool-info-text-one'>\r\n                  {version !== 'v2_lite_open' && <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['apy']}</div>\r\n                    <div className='info-box-num'>\r\n                      <DeriNumberFormat value={poolInfo.apy} displayType='text' decimalScale={2} suffix='%' />\r\n                    </div>\r\n                  </div>}\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['pool-liquidity']}</div>\r\n                    <div className='info-box-num'>\r\n                      <DeriNumberFormat value={poolInfo.total} displayType='text' decimalScale={2} thousandSeparator={true} suffix={` ${nowToken}`} />\r\n                    </div>\r\n                  </div>\r\n                  {version === 'v2' && <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['multiplier']}</div>\r\n                    <div className='info-box-num'>{poolInfo.multiplier}</div>\r\n                  </div>}\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['my-liquidity-percentage']}</div>\r\n                    <div className='info-box-num'><DeriNumberFormat allowZero={true} value={poolInfo.percent} decimalScale={2} suffix={'%'} /></div>\r\n                  </div>\r\n                  {version !== 'v2' && <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['liquidity-share-value']}</div>\r\n                    <div className='info-box-num'><DeriNumberFormat allowZero={true} decimalScale={6} value={poolInfo.shareValue} thousandSeparator={true} /> {nowToken}</div>\r\n                  </div>}\r\n\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['staked-balance']}</div>\r\n                    <div className='info-box-num'>\r\n                      <DeriNumberFormat allowZero={true} value={poolInfo.formatShares} decimalScale={2} />\r\n                      {version === 'v2' ? \" \" + nowToken : \" \" + lang['shares']}\r\n                    </div>\r\n                  </div>\r\n                  {version === 'v2' && <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['mining-pnl']}</div>\r\n                    <div className='info-box-num'>\r\n                      <DeriNumberFormat allowZero={true} prefix=' ' value={poolInfo.swappedPnl} decimalScale={2} /> {nowToken}\r\n                    </div>\r\n                  </div>}\r\n                </div>\r\n                <div className='pool-info-text-two'>\r\n                  {type !== 'lp' && <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['symbols']}</div>\r\n                    <div className='info-box-num symbols'>\r\n                      {symbols}\r\n                    </div>\r\n                  </div>}\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['contract-address']}</div>\r\n                    <div className='info-box-num'>\r\n                      <a target='_blank' rel='noreferrer' href={`${chainConfig[chainId] && chainConfig[chainId]['viewUrl']}/address/${address}`}>\r\n                        {formatAddress(address)}\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='add-remove-liquidity'>\r\n              <Tab tabSet={tabSet} width={379} size={18} inactiveBgColor='#0c192d' icon='' borderBottom={true} divider={true} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default inject('wallet', 'poolManager')(observer(Detail))","import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\n\r\nfunction DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n\r\n  const isValidate = () => {\r\n    const {allowZero} = props \r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') \r\n          || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const {allowZero,wallet,defaultValue = '--',...others} = props \r\n    if(isValidate()) {\r\n      setRenderablity(<Wrapper {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\r\n    } else {\r\n      setRenderablity(<span className='loading-line'></span>)\r\n    } \r\n    const timeout = window.setTimeout(() => {\r\n      if(!isValidate() && wallet && !wallet.isConnected()){\r\n        setRenderablity(defaultValue)\r\n      }\r\n    },30000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}\r\n\r\nexport default DeriNumberFormat","/* eslint-disable react/no-danger-with-children */\r\nimport styled from 'styled-components';\r\nimport Tooltip from '../Tooltip/Tooltip';\r\nimport { MD5 } from '../../utils/utils';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  .text {\r\n    border-bottom : 1px dashed #93A1B8;\r\n    width : max-content;\r\n    cursor : pointer;\r\n  }\r\n`\r\n\r\nexport default function UnderlineText({text,id = MD5(text) ,tip,multiline,className,width = 256}){\r\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  return(\r\n    <Wrapper className={className}>\r\n      <div className='text' data-for={id} data-tip={tip} data-event={isMobile ? 'click' : undefined}>\r\n        {text}\r\n      </div>\r\n      {tip &&<Tooltip id={id} width={width} padding='12px' place='bottom' borderRadius={8} multiline={multiline}>\r\n      </Tooltip>}\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components'\r\nimport React, { useState } from 'react';\r\nconst Wrapper = styled.div`\r\n    cursor: pointer;\r\n    width:${props => props.width}px;\r\n    height:${props => props.height}px;\r\n    display:flex;\r\n    .tab-left.inactive{\r\n      border-radius:0px 0px 4px 0px;\r\n    }\r\n    .tab-right.inactive{\r\n      border-radius:0px 0px 0px 4px;\r\n    }\r\n    .tab-left.active{\r\n      border-radius:0px 4px 0px 0px;\r\n      ${props => props.borderR};\r\n      height:14px;\r\n    }\r\n    .tab-right.active{\r\n      border-radius:4px 0px 0px 0px;\r\n      ${props => props.borderL};\r\n      height:14px;\r\n    }\r\n    .inactive,.active{\r\n      width:50%;\r\n      box-sizing: content-box;\r\n      padding: 15px 24px;\r\n      font-size:${props => props.size}px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    .inactive{\r\n      background:${props => props.inactiveBgColor};\r\n      ${props => props.borderB}\r\n    }\r\n    .active {\r\n      color: ${props => props.activeFontColor};\r\n      background : ${props => props.activeBgColor};\r\n      ${props => props.borderT};\r\n    }\r\n    .icon-tab{\r\n      margin-right:20px;\r\n      width:25px;\r\n      height:25px;\r\n    }\r\n  `\r\nexport default function Tab({ tabSet, inactiveBgColor,activeBgColor,icon, className, width = 238, height = 47, size = 16,borderTop = false,borderBottom = false, divider = false }) {\r\n  const arr = Object.keys(tabSet)\r\n  const [selected, setSelected] = useState(arr[0])\r\n  const styles = tabSet[selected].style\r\n  const borderT = borderTop ? `border-top:1px solid ${tabSet[selected].borderColor}`:\"border-top:0\"\r\n  const borderB = borderBottom ? `border-bottom:1px solid ${tabSet[selected].borderColor}`:\"border-bottom:0\"\r\n  const borderL = divider ? `border-left:1px solid ${tabSet[selected].borderColor}`:\"border-left:0\"\r\n  const borderR = divider ? `border-right:1px solid ${tabSet[selected].borderColor}`:\"border-right:0\"\r\n  const activeFontColor = tabSet[selected].fontColor ? tabSet[selected].fontColor : '#FFFFFF'\r\n\r\n  function select(item) {\r\n    setSelected(item)\r\n  }\r\n\r\n  return (\r\n    <div style={styles} className={className}>\r\n      <Wrapper className='width' width={width} height={height} \r\n        activeFontColor={activeFontColor} activeBgColor ={activeBgColor} inactiveBgColor={inactiveBgColor} size={size} borderT={borderT} borderB={borderB} borderL={borderL} borderR={borderR}>\r\n        {arr.map(item => (\r\n          <div\r\n            key={item}\r\n            className={item === selected ? `${tabSet[item].direction} active` : `${tabSet[item].direction} inactive`}\r\n            onClick={() => select(item)}>\r\n            {tabSet[item].icon ? <img alt='' className='icon-tab' src={tabSet[item].icon} /> :\"\"}  {item}\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n      {tabSet[selected].content}\r\n    </div>\r\n  )\r\n}","import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { bg } from '../../lib/web3js';\r\n\r\nconst Wrapper = styled.div`\r\ndisplay : flex;\r\nfont-size : 14px;\r\nalign-items : center;\r\nbackground: rgba(85, 119, 253, 0.1);\r\nborder-radius: 4px;\r\njustify-content: space-between;\r\ninput {\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  // min-width: 240px;\r\n  border: 0;\r\n  width : ${props => props.inputWidth};\r\n  height: 56px;\r\n  color : #E0ECFF;\r\n  font-size : 18px;\r\n  padding-left: 16px;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\n.unit {\r\n  margin-right: ${props => props.unitPadding};\r\n}\r\n`\r\nexport default function Input({value,unit,max,step,onChange,styles = {},focus,unitPadding = '24px',readOnly,inputWidth = '50%',className,disabled = false}){\r\n  const inputRef = useRef(null);\r\n  const change = e => {\r\n    const {value} = e.target\r\n    if(max && bg(value).gt(max)){    \r\n      onChange && onChange(max)\r\n    } else if(value <0 || isNaN(value)) {\r\n      onChange && onChange('')\r\n    } else {\r\n      onChange && onChange(value)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(inputRef.current && focus){\r\n      inputRef.current.focus();\r\n    }\r\n  },[focus])\r\n\r\n\r\n  return (\r\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\r\n      <input type='number' disabled = {disabled} value={value} max={max}  min='0'  step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\r\n      <div className='unit'>{unit}</div>\r\n    </Wrapper>    \r\n  )\r\n}","import styled from 'styled-components'\r\nimport {useState,useEffect} from 'react'\r\nconst Warpper = styled.div`\r\nwidth:${props=>props.width}%;\r\nmax-width:100%;\r\nheight:10px;\r\nbackground-color: #5577FD;\r\n`\r\nexport default function TimeSlider({startTimestamp,nowTimestamp,endTimestamp }) {\r\n  const width = parseInt(((nowTimestamp-startTimestamp) / (endTimestamp-startTimestamp))*100)\r\n  return (\r\n    <div className='time-slider'>\r\n      <Warpper width={width}>\r\n\r\n      </Warpper>\r\n    </div>\r\n\r\n  )\r\n}","import React, { useState ,useEffect} from 'react';\r\nimport Button from \"../Button/Button\";\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    display : flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  `\r\nexport default function ButtonGroup({groups = ['25%','50%','75%','100%'],selectedBorderColor,defaultBorderColor ,onChange,defaultValue ,outline,outlineColor,width,height,bgColor,className}){\r\n  const [value, setValue] = useState(defaultValue)\r\n  const select = current => {\r\n    if(current !== value) {\r\n      setValue(current)\r\n      onChange && onChange(current);\r\n    } else if(current === value){\r\n      setValue('')\r\n      onChange && onChange('');\r\n    } else {\r\n      setValue(current)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setValue(defaultValue)\r\n  }, [defaultValue])\r\n  return (\r\n  <Wrapper className={className}>\r\n    {groups.map((text,index) => (\r\n      <Button label={text} key={index} selectedBorderColor ={selectedBorderColor} isSelected={text === value} disabled={false} outline = {outline} bgColor={bgColor} className='g-button' defaultBorderColor={defaultBorderColor} outlineColor={outlineColor} width={width} height={height} onClick={() => select(text)}/>\r\n    ))}\r\n  </Wrapper>)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Button from '../../components/Button/Button'\r\nimport Slider from '../../components/Slider/TimeSlider';\r\nimport useConfig from \"../../hooks/useConfig\";\r\nimport { useAlert } from 'react-alert'\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\r\nimport apiProxy from '../../model/ApiProxy';\r\nimport { eqInNumber } from '../../utils/utils';\r\nimport './claim.less'\r\nexport default function Claim({ lang, poolShow = true, wallet={} }) {\r\n  const [remainingTime, setRemainingTime] = useState('')\r\n  const [startTimestamp, setStartTimestamp] = useState(0)\r\n  const alert = useAlert();\r\n  const [endTimestamp, setEndTimestamp] = useState(0)\r\n  const [nowTimestamp, setNowTimestamp] = useState(0)\r\n  const [claimInfo, setClaimInfo] = useState({})\r\n  const [claimed, setClaimed] = useState(false);\r\n  const [firstTime, setFirstTime] = useState('')\r\n  const config = useConfig(claimInfo.chainId) \r\n  useEffect(() => {\r\n    let interval = null;\r\n    //计数器\r\n    interval = window.setInterval(() => {\r\n      let period = 3600 * 8;\r\n      let current = parseInt(Date.now() / 1000);\r\n      let epochBegin = parseInt(current / period) * period;\r\n      let dis = (epochBegin + period - current);\r\n      let h = parseInt(dis / 3600);\r\n      let m = parseInt((dis % 3600) / 60)\r\n      let s = parseInt(dis % 60)\r\n      setStartTimestamp(epochBegin)\r\n      setEndTimestamp(epochBegin + period)\r\n      setNowTimestamp(current)\r\n      setRemainingTime(`${h} ${lang['h']} ${m} ${lang['m']} ${s} ${lang['s']}`);\r\n    }, 1000);\r\n    return () => {\r\n      interval && clearInterval(interval);\r\n    };\r\n\r\n  }, []);\r\n  const loadClaimInfo = async () => {\r\n    if (wallet.isConnected()) {\r\n      const claimInfo = await apiProxy.request('getUserInfoAll', [wallet.detail.account])\r\n      const claimed = (+claimInfo.total).toFixed(2);\r\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\r\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\r\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\r\n      const chainId = claimInfo.chainId\r\n      setClaimInfo({ claimed, unclaimed, harvestDeriLp, harvestDeriTrade, chainId })\r\n    }\r\n  }\r\n\r\n  const claimDeri = async ()=>{\r\n    if(config.name === undefined) {\r\n\t\t\talert.error(`${lang['wrong-network']}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!eqInNumber(wallet.detail.chainId,claimInfo.chainId)) {\r\n\t\t\talert.error(`${lang['your-deri-is-on']} ${ config.name } ${lang['connect-to']} ${ config.name } ${lang['to-claim']}`)\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif ((+claimInfo.unclaimed) === 0) {\r\n\t\t\talert.error(lang['no-deri-to-claim-yet']);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\r\n\t\tif (now < 1800) {\r\n\t\t\talert.error(lang['claiming-DERI-is-disabled-during-first-30-minutes-of-each-epoch']);\r\n\t\t\treturn;\r\n    }\r\n    let res = await apiProxy.request('mintDToken',[wallet.detail.chainId,wallet.detail.account],{ includeResponse: true })\r\n\t\tif(res.success){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\talert.error(lang['claim-failed'])\r\n\t\t\treturn false;\r\n\t\t}\r\n    \r\n  }\r\n  const click = async () => {\r\n\t\tif(wallet.isConnected()){\r\n\t\t\tconst res = await claimDeri();\r\n\t\t\tif(res){\r\n\t\t\t\tsetClaimed(true)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry{\r\n\t\t\t\tconst result =await wallet.connect();\r\n\t\t\t\treturn result ? true : false\r\n\t\t\t} catch (e){\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\r\n  const getMonth = (month) => {\r\n    let monthText;\r\n    switch (month) {\r\n      case 1:\r\n        monthText = lang['jan']\r\n        break;\r\n      case 2:\r\n        monthText = lang['feb']\r\n        break;\r\n      case 3:\r\n        monthText = lang['mar']\r\n        break;\r\n      case 4:\r\n        monthText = lang['apr']\r\n        break;\r\n      case 5:\r\n        monthText = lang['may']\r\n        break;\r\n      case 6:\r\n        monthText = lang['jun']\r\n        break;\r\n      case 7:\r\n        monthText = lang['jul']\r\n        break;\r\n      case 8:\r\n        monthText = lang['aug']\r\n        break;\r\n      case 9:\r\n        monthText = lang['sep']\r\n        break;\r\n      case 10:\r\n        monthText = lang['oct']\r\n        break;\r\n      case 11:\r\n        monthText = lang['nov']\r\n        break;\r\n      case 12:\r\n        monthText = lang['dec']\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return monthText\r\n  }\r\n\r\n  const getUserFirstClaimInfo = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserFirstClaimInfo', [wallet.detail.account])\r\n      if (res.first_timestamp) {\r\n        let date = new Date(res.first_timestamp*1000)\r\n        let year = date.getFullYear()\r\n        let month = date.getMonth() + 1;\r\n        month = getMonth(month)\r\n        let day = date.getDate();\r\n        setFirstTime(`${month} ${day}, ${year}` )\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    let interval = window.setInterval(loadClaimInfo, 1000 * 60 * 3);\r\n    loadClaimInfo();\r\n    getUserFirstClaimInfo();\r\n    return () => clearInterval(interval);\r\n  }, [wallet.detail.account])\r\n  return (\r\n    <div className='mining-claim'>\r\n      <div className='mining-claim-info'>\r\n        <div className='deri-num-slider'>\r\n          <div className='deri-claim-time'>\r\n          {lang['current-epoch-remaining-time']} {remainingTime}\r\n          </div>\r\n          {+claimInfo.harvestDeriLp > 0 && <div className='deri-claim-text'>\r\n            {lang['your-harvest-in-current']}  <DeriNumberFormat value={claimInfo.harvestDeriLp} displayType='text' thousandSeparator={true} />  DERI.\r\n          </div>}\r\n          {poolShow && <div className='deri-claim-text'>\r\n            You have <DeriNumberFormat value={claimInfo.unclaimed} displayType='text' thousandSeparator={true} /> unclaimed $DERI across all staked pools. You’ve earned a total of <DeriNumberFormat value={claimed ? (+claimInfo.claimed) + (+claimInfo.unclaimed) : claimInfo.claimed} displayType='text' thousandSeparator={true} /> Deri token \r\n            {firstTime && <span> since {firstTime}. Woohoo!</span>}\r\n          </div>} \r\n          <div className='deri-claim-slider'>\r\n            <Slider startTimestamp={startTimestamp} nowTimestamp={nowTimestamp} endTimestamp={endTimestamp} />\r\n          </div>\r\n        </div>\r\n        {poolShow && <div className='cliam-button'>\r\n          <Button fontWeight='bold' label={lang['claim-all']} onClick={click} />\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/staked.46571832.svg\";"],"sourceRoot":""}