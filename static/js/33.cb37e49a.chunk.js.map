{"version":3,"sources":["mobile/pages/Mining/Mining.js"],"names":["env","DeriEnv","get","chainInfo","config","inject","observer","wallet","lang","currentTab","setCurrentTab","useState","version","chainId","baseToken","address","type","useParams","query","useQuery","networkText","name","isController","setIsController","props","poolInfoClass","classnames","has","useEffect","detail","account","async","res","isPoolController","PoolController","openConfigListCache","update","openConfigList","className","onClick","alert"],"mappings":"4KAAA,yHAYA,MAAMA,EAAMC,IAAQC,OACd,UAACC,GAAaC,EAAOJ,GAkEZK,sBAAO,SAAPA,CAAiBC,aAhEhC,UAAgB,OAACC,EAAD,KAAQC,IACvB,MAAOC,EAAWC,GAAiBC,mBAAS,cACtC,QAACC,EAAD,QAASC,EAAT,UAAiBC,EAAjB,QAA2BC,EAA3B,KAAmCC,GAASC,sBAC5CC,EAAQC,cACRC,EAAcjB,EAAUU,GAASQ,MAChCC,EAAaC,GAAmBZ,oBAAS,GAC1Ca,EAAQ,CAACZ,UAAQC,UAAQC,YAAUC,UAAQR,SAAOS,OAAKR,QACvDiB,EAAgBC,IAAW,cAAcjB,GA+B/C,OA9BGS,EAAMS,IAAI,iBACZH,EAAK,YAAkBN,EAAMhB,IAAI,gBAE/BgB,EAAMS,IAAI,cACZH,EAAK,SAAeN,EAAMhB,IAAI,aAiB/B0B,qBAAU,KAfqBrB,GAAUA,EAAOsB,QAAUtB,EAAOsB,OAAOC,UAEjDC,WACtB,IAAIC,QAAYC,YAAiB1B,EAAOsB,OAAOhB,QAAQE,EAAQR,EAAOsB,OAAOC,SAC7EP,EAAgBS,IAafE,GACe,iBAAZtB,GAPkBmB,iBAChBI,IAAoBC,UAOxBC,MAGD,CAAC9B,EAAOA,EAAOsB,OAAOd,IAGrB,sBAAKuB,UAAWb,EAAhB,UACD,sBAAKa,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UACGxB,EADH,MACiBM,KAEJ,iBAAZR,GAA8B,qBAAK0B,UAAU,wBAAf,SAC7B,qBAAKA,UAAU,mBAAmBC,QAAS,IAAM7B,EAAc,aAA/D,SACEF,EAAK,2BAIX,qBAAK8B,UAAU,YAAf,SACE,cAAC,IAAD,IAAqBd,MAEtBF,GAAgB,mCAChB,qBAAKgB,UAAU,aAAf,SACC,wBAAQC,QAAS,KAjCpBC,MAAMhC,EAAK,mBAiCR,SACEA,EAAK","file":"static/js/33.cb37e49a.chunk.js","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport {useParams} from \"react-router-dom\";\r\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\r\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\r\nimport {DeriEnv,isPoolController,openConfigListCache} from '../../../lib/web3js/indexV2'\r\nimport config from '../../../config.json'\r\nimport classnames from \"classnames\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport useQuery from '../../../hooks/useQuery'\r\nimport './mining.less'\r\nimport './de-mining.less'\r\n\r\nconst env = DeriEnv.get();\r\nconst {chainInfo} = config[env]\r\n\r\nfunction Mining({wallet,lang}){\r\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\r\n\tconst {version,chainId,baseToken,address,type} =  useParams();\r\n\tconst query = useQuery();\r\n\tconst networkText = chainInfo[chainId].name;\r\n\tconst [isController,setIsController] = useState(false)\r\n\tconst props = {version,chainId,baseToken,address,wallet,type,lang}\r\n\tconst poolInfoClass = classnames('mining-info',currentTab)\r\n\tif(query.has('baseTokenId')) {\r\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\r\n\t}\r\n\tif(query.has('symbolId')){\r\n\t\tprops['symbolId'] = query.get('symbolId')\r\n\t}\r\n\tconst hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\r\n\r\n\tconst PoolController = async () => {\r\n\t\tlet res = await isPoolController(wallet.detail.chainId,address,wallet.detail.account)\r\n\t\tsetIsController(res)\r\n\t}\r\n\r\n\tconst gotoMining = ()=>{\r\n\t\talert(lang['please-operat'])\r\n\t}\r\n\r\n\tconst openConfigList = async ()=>{\r\n\t\tawait openConfigListCache.update()\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(hasConnectWallet()){\r\n\t\t\tPoolController()\r\n\t\t\tif(version === 'v2_lite_open'){\r\n\t\t\t\topenConfigList()\r\n\t\t\t}\r\n\t\t}\r\n\t},[wallet,wallet.detail,address])\r\n\t\r\n\treturn(\r\n    <div className={poolInfoClass}>\r\n\t\t\t<div className=\"pool-header\">\r\n\t\t\t\t\t<div className=\"pool-network\">\r\n\t\t\t\t\t\t\t{baseToken} @ {networkText}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{version !== 'v2_lite_open' && <div className=\"check-trade-liquidity\">\r\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\r\n\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>}\r\n\t\t\t</div>\r\n\t\t\t<div className='pool-info'>\r\n\t\t\t\t\t<LiquidityMining {...props}/>\r\n\t\t\t</div>\r\n\t\t\t{isController && <>\r\n\t\t\t\t<div className='add-symbol'>\r\n\t\t\t\t\t<button onClick={() => gotoMining()} >\r\n\t\t\t\t\t\t{lang['add-symbol']}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}