{"version":3,"sources":["lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/config/config.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/api/config_api.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/abi/perpetualPoolLiteManagerDpmmAbi.js","lib/web3js/v2_lite_open/contract/gen/PerpetualPoolLiteManagerDpmm.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/factory.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/contract/PoolApi.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/option/api/index.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/v2_lite/contract/index.js","assets/img/arrow-down.svg","lib/web3js/shared/contract/b_token.js","model/WebSocket.js","components/Spinner/Spinner.js","components/Button/Button.js","lib/web3js/shared/config/check.js","assets/img/bsc-logo.svg","lib/web3js/shared/utils/api.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/error/error_code.js","lib/web3js/shared/error/error.js","lib/web3js/shared/config/env.js","utils/utils.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/shared/config/database.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","model/Type.js","lib/web3js/shared/utils/convert.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/pancakePairAbi.js","lib/web3js/shared/contract/gen/PancakePair.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/abi/bTokenOracle1Abi.js","lib/web3js/shared/contract/gen/BTokenOracle1.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/config/pool_v1.js","model/ApiProxy.js","lib/web3js/shared/config/token.js","model/Version.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/derijsnext.js","utils/Constants.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/contract/abis.js","../lang).)*/.json$","assets/img/logo.svg","components/Label/Label.js","components/Header/Menu.js","assets/img/lang-icon.svg","components/Header/LangSelector.js","components/Header/NetworkSelector.js","assets/img/matemask-logo.svg","components/Header/WalletSelector.js","components/Header/Header.js","hooks/useLang.js","components/Footer/Footer.js","utils/LoadableComponent.js","hoc/withLanguage.js","components/IndexRoute/IndexRoute.js","pages/PageRouter.js","App.js","model/Intl.js","reportWebVitals.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Pool.js","model/PoolManager.js","model/Trading.js","model/Loading.js","index.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/config/constant.js","lib/web3js/v2_lite/contract/abis.js"],"names":["getChainProviderUrl","chainId","a","normalizeChainId","urls","getChainProviderUrls","length","getLatestRPCServer","url","Error","getDailyBlockNumber","blockNumbers","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","intRe","deleteIndexedKey","obj","Object","keys","intKeyCount","reduce","acc","k","test","newObj","forEach","res","i","Array","isArray","push","getLatestBlockNumber","web3Factory","get","web3","eth","getBlockNumber","getBlockInfo","blockNumber","getBlock","getPastEvents","contract","eventName","filter","fromBlock","to","events","amount","includes","toBlock","es","e","getPastEventsUseAbi","contractAddress","contractAbi","Contract","MAX_GAS_AMOUNT","ContractBase","this","method","args","retry","_init","methods","call","AppError","name","accountAddress","gas","estimateGas","from","console","log","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","_estimatedGas","txRaw","numberToHex","value","data","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","duration","Number","MAX_SAFE_INTEGER","Web3","providers","HttpProvider","startTime","Date","now","promises","all","sort","b","latestBlockNumber","index","findIndex","startsWith","getRestServerConfig","env","process","WrappedOracle","address","symbol","decimal","wrappedOracleAbi","_call","deriToNatural","toString","getJsonConfig","rawConfig","checkEnv","jsonTestnetConfig","jsonDevConfig","jsonProdConfig","config","JSON","parse","pools","getPoolViewerConfig","version","configs","viewers","c","getPoolConfig","poolAddress","DeriEnv","pool","concat","getPoolV1ConfigList","find","v","getPoolVersionId","checkAddress","versionId","failed","response","code","message","getLpConfigList","catchApiError","_getLpConfigList","getPreminingConfigList","_getPreminingConfigList","getRetiredPoolConfigList","_getRetiredPoolConfigList","getDeriConfig","_getDeriConfig","delay","ms","getPriceInfoForV1","baseUrl","addSymbolParam","fetch","mode","cache","ok","json","priceInfo","stringify","getOracleUrl","type","PRESERVED_SYMBOLS","getPriceFromRest","getPriceInfo","price","volatility","mapToBTokenInternal","getOracleInfosFromRest","symbolList","headers","Accept","body","DEBUG","getPriceInfos","oraclePricesCache","pending","symbols","key","join","Math","floor","timestamp","RestOracle","getPrice","getOraclePrice2","oracleAddress","mapToSymbolInternal","oracle","wrappedOracleFactory","getOraclePriceFromCache2","getOracleVolatilitiesForOption","oracleSymbols","map","normalizeOptionSymbol","indexOf","os","volatilities","s","checkOffChainOracleSymbol","offChainOracleFactory","signer","signatory","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","symbolId","_symbol","f","onChainSymbolPrices","offChainSymbolPrices","fromWei","symbolPrices","o","shift","SymbolOracleOffChain","symbolOracleOffChainAbi","WooOracle","wooOracleAbi","wooOracleAddresses","instanceMap","factory","wooOracleFactory","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddress","database","DatabaseContract","databaseActivityFactory","databaseActivityClaimFactory","databaseDeriVoteFactory","databaseWormholeFactory","getDBWormholeAddress","DatabaseWormholeContract","databaseAirdropFactory","getDBAirdropAddress","DatabaseAirdropContract","TERC20","TERC20Abi","owner","spender","account","_transact","CONTRACT_ABI","DeriContract","allowance","gt","MAX_UINT256","_balanceOf","decimals","bg","MiningVaultPool","MiningVaultRouter","WormholeContract","toChainId","toWormholeAddress","wormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","r","deriFactory","wormholeFactory","miningVaultRouterFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clp2PoolFactory","clpPoolInstanceMap","clp2PoolInstanceMap","clp2Pool","hasWallet","BrokerManager","PTokenAirdrop","catchSyncApiError","isMetaMask","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","hexToNumber","getUserWalletBalance","checkChainId","getBalance","balance","getUserInfo","userAddress","db","toChecksumAddress","getValues","getTime","deriToString","deadline","nonce","valid","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","assign","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","priceCache","_prices","split","set","val","isNaN","parseFloat","fundingRateCache","resourceMap","resource","liquidatePriceCache","_cache","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deriAddress","deri","isUnlocked","getDeriBalance","balanceOf","mintDeri","catchTxApiError","wormhole","unlockDeri","unlock","mintAirdrop","miningVaultAddress","getMiningVaultRouterConfig","miningVaultRouter","mint","getSlpLiquidityInfo","getLpConfig","bTokenAddress","bToken","ERC20Factory","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","isSlpUnlocked","getSlpWalletBalance","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","unlockSlp","getClp2LiquidityInfo","isClp2Unlocked","getClp2WalletBalance","addClp2Liquidity","removeClp2Liquidity","unlockClp2","calculateLiquidityUsed","tradersNetVolume","multiplier","poolMarginRatio","abs","calculateFundingRate","fundingRateCoefficient","processFundingRate","fundingRate","annualBlockCount","times","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","tradersNetCost","minPoolMarginRatio","removable","plus","minus","max","min","calculateEntryPrice","volume","cost","calculateMarginHeld","minInitialMarginRatio","calculatePnl","calculateLiquidationPrice","margin","minMaintenanceMarginRatio","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","success","POOL_ABI","PerpetualPool","isProvider","defaultValue","result","cumuFundingRate","cumuFundingRateBlock","feeRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","errorMessage","signed","getStateValues","stateValues","getParameters","parameters","args1","validateArgs","fundingRatePerBlock","args2","liquidityUsed","transaction","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","queryTradePMM","theoreticalPrice","K","invalidValues","NaN","undefined","getEverlastingTimePriceAndDelta","S","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","positions","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","pnl","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","maintenanceMargin","klass","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionOldAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","PTokenOption","tokenId","lastCumulativePremiumFundingRate","operator","optionPricerAbi","OptionPricer","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","optionPricerFactory","volatilitiesCache","_calculateDpmmPrice","indexPrice","alpha","tradersNetPosition","_queryTradeDpmm","tradePosition","EverlastingOption","viewerAddress","usedByEstimatedApi","addresses","getAddresses","pTokenAddress","lTokenAddress","optionPricerAddress","pricer","viewer","bTokenSymbol","fundingCoefficient","getActiveSymbolIds","symbolIds","activeSymbolIds","getSymbol","activeSymbolNames","ttt","symbolVolatilities","getPoolStates","activeSymbols","volatilitySymbols","getVolatilitySymbols","getPoolStateValues","preTimestamp","lastTimestamp","curTimestamp","userState","protocolFeeAccrued","chainlinkOracleFactory","symbolIndexPrices","getEverlastingTimeValueAndDelta","toWei","timeValues","dynamicEquity","intrinsicValue","dpmmPrice","fundingPerSecond","fundingPerVolume","funding","offset2","cumulativeFundingRate","getPosition","totalPnl","totalFundingAccrued","fundingAccrued","volatilityInfos","values","p","oracleSymbol","bAmount","_getVolSymbolPrices","prices","lShares","tradeVolume","event","info","returnValues","block","tradeFee","direction","tradeCost","notional","contractValue","transactionFee","transactionHash","time","extra","everlastingOptionFactory","getSpecification","checkApiInputWithoutAccount","optionPool","init","symbolInfo2","poolInfo2","symbolIndex","symbolInfo","feeRatioOTM","feeRatioITM","protocolFeeCollectRatio","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","indexConstituents","getIndexInfo","getPositionInfo","checkApiInput","symbolName","getTraderStates","volPrice","timePrice","markPrice","averageEntryPrice","marginHeld","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","oS","premiumFundingAccrued","liquidationPrice","getPositionInfos","volPrices","vIndex","getWalletBalance","_getFundingRate","totalDynamicEquity","curSymbolIndex","liquidityUsedInAmount","premiumFunding","premiumFundingPerSecond","getEstimatedFee","fee","getEstimatedMargin","leverage","parameterInfo","marginRatio","getFundingRateCache","getFundingRate","premiumFunding0","getEstimatedFundingRate","newNetVolume","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getVolatility","openPoolChainIds","prod","dev","testnet","getPoolV2LiteManagerDpmmConfig","initialBlock","getOracleFactoryChainlinkConfig","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","trim","oracleFactoryChainlinkAbi","OracleFactoryChainlink","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","perpetualPoolLiteManagerDpmmAbi","PerpetualPoolLiteManagerDpmm","poolId","sourcePool","pairedTokenAddress","processPosition","lastCumulativeFundingRate","PTokenLite","isProdChain","getOracleServerUrl","calculateK","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","processMethod","methodName","propList","originMethod","prototype","apply","processResult","processTxMethod","toWeiArgPositions","_getSymbolPrices","newArgs","arg","isEstimatedApi","getFundingPeriod","pTokenLiteFactory","lTokenLiteFactory","offChainOracleSymbolNames","offChainOracleSymbolIds","getConfig","bTokens","unit","normalizeSymbolUnit","getSymbols","indexPrices","SECONDS_IN_A_DAY","getPositions","getLastTimestamp","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","getMargin","requiredInitialMargin","formatTradeEvent","priceInfos","getPoolExtraInfo","getHttpBase","fetchJson","chain_id","block_number","target_pool","migration_timestamp","isMigrationPrepared","migrationDestination","isMigrationApproved","getOpenzoneConfig","extraInfo","hasMigration","targetPool","migrationTimestamp","isValid","getOpenzoneConfigAlt","PerpetualPoolLite","target","graceDays","source","lTokenLiteAbi","LTokenLite","perpetualPoolLiteDpmmFactory","contractFactory","addMethods","getProtocolFeeAccrued","lTokenLiteAdapter","pTokenLiteAdapter","updateAddresses","getBTokenSymbol","isMigrationExecuted","PerpetualPoolLiteManager","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","perpetualPoolLiteViewerFactory","perpetualPoolLiteManagerDpmmFactory","chainlinkFeedFactory","oracleFactoryChainlinkFactory","getPoolOpenConfigList","chainIds","version_id","getConfigAlt","chain","zone","getConfigZone","getPoolOpenConfig","perpetualPoolLite","getPoolOpenOracleList","oracleFactoryConfig","oracleFactory","oracles","eventBlock","number","isPoolController","controller","poolController","getPoolAllSymbolNames","poolViewer","getOffChainOracleSymbols","getPoolAcitveSymbolIds","openConfigListCache","update","OPEN_POOL_EXPIRE_TIME","updatedAt","createPool","poolManagerAddress","poolManager","newParameters","createMigrationPool","addSymbol","prepareMigration","targetPoolAddress","approveMigration","executeMigration","oldPoolAddress","getLastUpdateBlock","lastUpdateBlock","perpetualPoolLiteDpmm","executeMigrationWithTimestamp","createOracle","feedAddress","feedContract","PerpetualPoolLiteOld","perpetualPoolLiteOldAbi","offChainOracleSymbols","instances","getPTokenAirdropConfig","getDeriVoteConfig","getStakingMiningVaultRouterConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isUserPTokenExist","isBTokenUnlocked","hasRequiredBalance","unlockBToken","airdropPToken","keyPrefix","epoch","claimKeyPrefix","getStakingTop10Users","n","fill","resultPnl","no","userAddr","feePaid","score","evgCoeff","specialRewardsA","specialRewardsB","top10","top10Pnl","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","topPnlUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getUserStakingClaimInfo","claimable","claimed","locked","unclaimed","deriPrice","bnbPrice","claimMyStaking","claimArgs","getVotingResult","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","option","vote","deriVote","voteId","getPoolConfigList","includeOpenPools","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","getPoolV1Config","depositMargin","pPool","withdrawMargin","totalSupply","maxRemovableShares","tradeWithMargin","closePosition","processTradeEvent","txHash","_getTimeStamp","timeStamp","_calculateFee","baseToken","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","item","unshift","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","getLiquidityInfo","poolDynamicEquity","catch","err","poolInfo","fundingRate0","naturalWithPercentage","toExponential","fundingRate1","_getLiquidityInfo","isMaximum","dynamicCost","calculateTxFee","calculateFundingFee","lastUpdatedBlockNumber","calculateMaxRemovableLiquidity","userLiquidity","restLiquidity","discount","positionInfo","totalCost","accum","fundingFee","idx","addMargin","removeMargin","orderValidation","symbolIdList","getTradeHistory","ids","volumes","id","flat","PoolApi","checkSymbolId","funding0","funding1","poolApiFactory","checkTokenId","getEstimatedTimePrice","api","checkAmount","range","getLengths","lengths","routerAddress","router","perpetualPoolRouterDpmmFactory","bTokenIds","bTokenId","getBToken","bTokenOracle1Factory","equity","bTokenSymbols","toUpperCase","getBTokens","bTokenIndex","ratePerSecond","diff","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","margins","getMargins","totapPnl","totalEquity","m","totalNotional","lTokenAbi","LToken","pTokenAbi","PToken","perpetualPoolAbi","perpetualPoolRouterAbi","PerpetualPoolRouter","infos","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","getAsset","lTokenAsset","lastCumulativePnl","approximatePnl","cumulativePnl","bToken0Symbol","swappedPnl","minBToken0Ratio","bTokenMultiplier","balances","walletBalance","availableBalance","getPoolBTokensBySymbolId","getFundingFee","MAX_INT256","tr","toNumber","LITE_VERSIONS","getLiquidityInfoV2l","apiOption","apiV2lDpmm","apiV2Dpmm","getLiquidityInfo2","totalValue","apys","maxApy","apy1","addLiquidityV2l","addLiquidity2","removeLiquidityV2l","removeLiquidity2","getEstimatedLiquidatePrice","getSpecificationV2l","getSpecification2","getPositionInfoV2l","getPositionInfo2","getPositionInfosV2l","getBTokenBalance","getWalletBalanceV2l","getWalletBalance2","isUnlockedV2l","isUnlocked2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedMarginV2l","getEstimatedMargin2","getFundingRateV2l","getFundingRate2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getLiquidityUsedV2l","getLiquidityUsed2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","unlockV2l","unlock2","depositMarginV2l","depositMargin2","withdrawMarginV2l","withdrawMargin2","tradeWithMarginV2l","tradeWithMargin2","closePositionV2l","closePosition2","getTradeHistoryV2l","brokerManagerAbi","brokerAddress","pTokenAirdropAbi","WebSocket","socket","io","transports","withCredentials","reconnectListeners","reconnected","callback","emit","onMessage","listener","time_type","equalIgnoreCase","findEvent","pos","splice","Spinner","className","Button","backgroundColor","label","fontColor","PRIMARY","bgColor","defaultBorderColor","borderSize","outline","isSelected","outlineColor","iconsrc","onClick","width","fontSize","fontWeight","height","styles","useState","setPending","SECONDARY","borderColor","Wrapper","styled","click","clazz","classNames","selected","style","src","alt","Env","getChainIds","utils","tokenIds","REST_API_CALL_RETRY","resp","func","keyArray","ErrorMessage","ErrorName","ErrorCode","WEB3_WALLET_NOT_FOUND","BROWSER_NOT_SUPPORTED","INVALID_DERI_ENV","INVALID_VERSION","INVALID_VERSION_ID","INVALID_CHAIN_ID","INVALID_ADDRESS","INVALID_TOKEN_ID","INVALID_TOKEN_ID_IN_RANGE","INVALID_SYMBOl","INVALID_BASE_TOKEN","INVALID_AMOUNT","INVALID_TRADE_VOLUME","INVALID_DATA","CONFIG_LIST_NOT_FOUND","CONFIG_NOT_FOUND","RPC_NODE_ALL_UNAVAILABLE","INVALID_JSON_RPC_RESPONSE","JSON_RPC_CALL_TIMEOUT","REST_API_CALL_TIMEOUT","INSUFFICIEN_MARGIN","INSUFFICIENT_BALANCE","INSUFFICIEN_LIQUIDITY","PRICE_EXPIRED","VOLATILITY_EXPIRED","DEADLINE_EXPIRED","OUT_OF_GAS","TRANSACTION_REVERTED","API_REQUEST_TIMEOUT","UNKOWN_ERROR","freeze","INVALID_SYMBOL","fullMessage","PROD","TESTNET","DEV","_env","chainInfo","formatAddress","substr","formatBalance","toFixed","eqInNumber","str1","str2","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","restoreChain","storeLocale","locale","restoreLocale","getFormatSymbol","curChain","isOption","isV1","getDefaultNw","getNetworkList","network","isDefault","getMarkpriceSymbol","Type","current","intervalRange","makeAutoObservable","observable","setCurrent","action","computed","isFuture","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","hexToString","hexToUtf8","sd","formatBN","bigNumber","toFormat","replaceAll","isBrowser","document","isJsDom","navigator","userAgent","keyList","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","pancakePairAbi","PancakePair","ERC20Adapter","ERC20Abi","ERC20","chainlinkOracleAbi","ChainlinkOracle","offChainOracleAbi","inputs","internalType","stateMutability","outputs","OffChainOracle","offChainVolatilityOracleAbi","OffChainVolatilityOracle","TERC20MintLimitAbi","TERC20MintLimit","bTokenOracle1Abi","BTokenOracle1","offChainOracleAdapter","offChainVolatilityOracleAdapter","isQuoteToken0","qDecimals","bDecimals","pair","priceCumulativeLast1","priceCumulativeLast2","timestampLast1","timestampLast2","pancakePair","getReserves","reserveQ","_reserve0","reserveB","_reserve1","_blockTimestampLast","price0CumulativeLast","price1CumulativeLast","tmpPairState","bTokenOracle1Adapter","dToken","MiningVault","retired","isLp","filteredConfig","getDeriConfigList","Deri","Wormhole","staking","isInTvlRace","premining","getMiningVaultConfig","dTokenAdress","MinningVaultAddress","ApiProxy","bTokenPairs","AMUSDC","symbolPairs","IBSCDEFI","IGAME","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","SHIBUSDT","optionSymbol","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","re","RegExp","mapToSymbol","replace","internalSymbol","customIndexs","tokens","IMEME","Version","isV2","isV2Lite","processObjectResult","prop","DEPOSIT","WITHDRAW","BUY","SELL","ARROW_UP","FUTURE","OPTION","VERSION_V2","VERSION_V2_LITE","VERSION_V2_OPEN","every","bTokenAbi","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","Label","text","color","borderRadius","icon","Menu","lang","useLocation","menus","link","subMenu","menu","pathname","Panel","LangSelector","langIcon","NetworkSelector","bscLogoIcon","arrowDownIcon","inject","observer","wallet","btnText","setBtnText","isIndex","useRouteMatch","isRoot","path","exact","isMining","isTeam","isRetired","isOptionsLite","isOptionsPro","isDownload","isInfo","isOptions","notConnectWalletPage","setAccountText","detail","isConnected","isSupportChain","useEffect","connect","href","matemaskIcon","dict","page","intl","logo","Footer","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","withLanguage","WithLanguage","prevProps","props","onRouteChanged","isMobile","mobile","IndexRoute","Home","Pool","PoolDetail","Trade","Bridge","Governance","Token","Info","InfoDetail","PageRouter","withRouter","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Wallet","defaultNw","supportWeb3","approve","approved","apiProxy","loadWalletBalance","switchNetwork","metamask","isOpen","supported","setDetail","setDefaultNw","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","setIndex","webSocket","subscribe","close","setSymbol","setTimeType","unsubscribe","setPause","unsubscribeBars","Position","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","selectedSymbol","balanceContract","started","runInAction","loadAll","startedAll","load","timer","clean","require","toLowerCase","pageName","makeObservable","setLocale","localeLabel","language","prefix","supportedCatalog","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","setInfo","History","columnMap","markpriceSymbolFormat","currentSymbol","setCurrentSymbol","setMarkpriceSymbolFormat","isInno","hasOwnProperty","apyInfo","liq","totalLiquidity","bTokensApy","bTokensLiq","staked","lpApy","multipliedBy","percent","dividedBy","formatShares","totalShares","PoolManager","lpPools","setPools","setLpPools","v2Pools","innoPools","openPools","optionsPools","ammPools","futurePools","loadDoubleMingingPool","mapPools","FUTURE_INNO","FUTURE_OPEN","Trading","priceDecimals","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setPriceDecimals","setMarkPrice","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setVolatility","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","indexOracle","markOracle","contractInfo","historyInfo","finishedCallback","loadByType","defaultPool","setPool","loadByPool","changed","onChange","store","symbolChanged","addListener","syncFundingRate","syncVolatility","loadFundingRate","results","finally","startAll","resume","histories","defaultConfig","fromStore","getFromStore","pause","setPaused","increment","MarginRatio","substring","num","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","lt","dynBalance","available","exchanged","totalContractValue","curContractValue","afterLeverage","Intl","tokenInfo","symbolDisplay","optionSymbols","groupConfigBySymbol","isLoading","setIsLoading","isShowMask","trading","ReactDOM","StrictMode","getElementById","LP","VERSIONS_RETIRED","VERSIONS","VERSION_IDS","VERSIONS_ALL","VERSION_IDS_ALL","chainIdNamePairs","infuraAccount","provider_urls","chainBlockNumberList","web3InstanceMap","walletChainId","providerUrl"],"mappings":"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","file":"static/js/main.75a4ae9a.chunk.js","sourcesContent":["\r\nconst paddingDate = (date) => {\r\n  date = date.toString()\r\n  if (date.length === 1) {\r\n    return '0' + date\r\n  } else {\r\n    return date\r\n  }\r\n}\r\nexport const getEpochTimeRange = (time) => {\r\n  //console.log('1', time.getTime()/1000)\r\n  const year = time.getUTCFullYear()\r\n  const month = time.getUTCMonth()\r\n  const day = time.getUTCDate()\r\n  let epochs = []\r\n  for (let i = 0; i< 3; i++) {\r\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\r\n    //console.log(newDate.getTime()/1000)\r\n    epochs.push(newDate)\r\n  }\r\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\r\n  let index = -1\r\n  for (let i = 0; i< epochs.length; i++) {\r\n    //console.log(i, epochs[i].getTime()/1000)\r\n    if (time.getTime() < epochs[i].getTime()) {\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  if (index !== -1) {\r\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\r\n  }\r\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\r\n}","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\nconst intRe = /^\\d+$/\r\n// adopt from derijs next\r\nexport const deleteIndexedKey = (obj) => {\r\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\r\n    const keys = Object.keys(obj);\r\n    const intKeyCount = keys.reduce(\r\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\r\n      0\r\n    );\r\n    //console.log(keys);\r\n    // is leaf array\r\n    if (intKeyCount * 2 === keys.length) {\r\n      let newObj = {};\r\n      Object.keys(obj).forEach((k) => {\r\n        if (!intRe.test(k)) {\r\n          newObj[k] = obj[k];\r\n        }\r\n      });\r\n      return newObj;\r\n    } else if (intKeyCount === keys.length) {\r\n      // is array container\r\n      let res = [];\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (Array.isArray(obj[i])) {\r\n          res.push(deleteIndexedKey(obj[i]));\r\n        } else {\r\n          res.push(obj[i]);\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n\r\n  export const getPastEventsUseAbi = async(chainId, contractAddress, contractAbi, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const contract = new web3.eth.Contract(contractAbi, contractAddress);\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","import { AppError } from '../error/error';\r\nimport { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731 * 3;\r\n////const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\r\n//const RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 3\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        if (retry === 1) {\r\n          this.web3 = null\r\n        }\r\n        // if (err.toString().includes('Invalid JSON RPC response')) {\r\n        //   console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        // } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n        //   console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        // } else {\r\n        //   //console.log('error:', err.toString())\r\n        // }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new AppError('JSON_RPC_CALL_TIMEOUT', {\r\n        name: method,\r\n        args: [...args, this.contractAddress],\r\n      });\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        console.log(`-- estimatedGas: ${error}`)\r\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\r\n        // if (Array.isArray(res) && res.length >= 2) {\r\n        //   throw new Error(res[1].trim())\r\n        // }\r\n      }\r\n    }\r\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          //receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\n// export const shuffleArray = (urls) => {\r\n//   const newUrls = deepClone(urls)\r\n//   const length = urls.length\r\n//   let res = []\r\n//   for (let i = 0; i < length; i++) {\r\n//     const index = Math.floor(Math.random() * urls.length)\r\n//     res = res.concat(newUrls.splice(index,1))\r\n//   }\r\n//   return res\r\n// }\r\nexport const shuffleArray = (array) => {\r\n  let currentIndex = array.length, randomIndex;\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n  return array;\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  // urls = shuffleArray(urls)\r\n  // pick 2 random urls\r\n  // urls = urls.length >= 2 ? urls.slice(0,2) : urls\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","export const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    // for production\r\n    return (\r\n      (process && process.env && process.env.REACT_APP_REST_SERVER_URL) ||\r\n      'https://api.deri.finance'\r\n    );\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return (\r\n      (process && process.env && process.env.REACT_APP_REST_SERVER_URL) ||\r\n      'https://testnetapi.deri.finance'\r\n    );\r\n  }\r\n};\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    // console.log('hit wrapped oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","// import { DeriEnv } from './env';\r\n// import jsonConfig from '../resources/config.json';\r\nimport jsonProdConfig from '../resources/config.prod.json';\r\nimport jsonTestnetConfig from '../resources/config.testnet.json';\r\nimport jsonDevConfig from '../resources/config.dev.json';\r\n// import { VERSIONS } from './version';\r\nimport { checkEnv } from './check';\r\nimport { AppError } from '../error/error';\r\n\r\n// export const getJsonConfig = (version, env) => {\r\n//   env = env || DeriEnv.get();\r\n//   // for browser and nodejs\r\n//   let configs =\r\n//     typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n//   if (configs[version] && VERSIONS.includes(version)) {\r\n//     configs = configs[version];\r\n//     if (['prod', 'dev', 'testnet'].includes(env)) {\r\n//       if (configs && configs[env]) {\r\n//         return configs[env];\r\n//       }\r\n//     }\r\n//   } else {\r\n//     throw new Error(\r\n//       `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n//     );\r\n//   }\r\n// };\r\n\r\nexport const getJsonConfig = (env) => {\r\n  env = checkEnv(env);\r\n  let rawConfig =\r\n    env !== 'prod'\r\n      ? env === 'testnet'\r\n        ? jsonTestnetConfig\r\n        : jsonDevConfig\r\n      : jsonProdConfig;\r\n  // to support both nodejs and browser\r\n  let config =\r\n    typeof rawConfig === 'object' ? rawConfig : JSON.parse(rawConfig);\r\n  if (config.pools) {\r\n    return config.pools;\r\n  }\r\n  throw new AppError('CONFIG_LIST_NOT_FOUND', { name: 'getJsonConfig', env });\r\n};\r\n","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { getPoolV1ConfigList } from './pool_v1';\r\n// import { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\r\n// import { validateObjectKeyExist } from '../utils';\r\n// import { poolProcessor, poolValidator } from './config_processor';\r\n// import { openConfigListCache } from '../../v2_lite_open/api/query_api';\r\nimport { AppError } from '../error/error';\r\nimport { checkAddress } from '.';\r\n\r\n// const expandPoolConfigV2 = (config) => {\r\n//   const pools = config.pools;\r\n//   //console.log(pools)\r\n//   return pools\r\n//     .map((pool) => {\r\n//       let result = [];\r\n//       for (let i = 0; i < pool.bTokens.length; i++) {\r\n//         const bToken = pool.bTokens[i];\r\n//         for (let i = 0; i < pool.symbols.length; i++) {\r\n//           const symbol = pool.symbols[i];\r\n//           result.push({\r\n//             pool: pool.pool,\r\n//             pToken: pool.pToken,\r\n//             lToken: pool.lToken,\r\n//             router: pool.router,\r\n//             initialBlock: pool.initialBlock,\r\n//             chainId: pool.chainId,\r\n//             bToken: bToken.bToken,\r\n//             bTokenId: bToken.bTokenId,\r\n//             bTokenSymbol: bToken.bTokenSymbol,\r\n//             symbol: symbol.symbol,\r\n//             symbolId: symbol.symbolId,\r\n//             unit: symbol.unit,\r\n//             decimals: symbol.decimals ? symbol.decimals : '2',\r\n//             type: 'perpetual',\r\n//             version: 'v2',\r\n//             versionId: pool.versionId,\r\n//             isOption: false,\r\n//           });\r\n//         }\r\n//       }\r\n//       return result;\r\n//     })\r\n//     .flat();\r\n// };\r\n\r\n// const expandPoolConfigV2Lite = (config) => {\r\n//   const pools = config.pools;\r\n//   //console.log(pools)\r\n//   return pools\r\n//     .map((pool) => {\r\n//       let result = [];\r\n//       for (let i = 0; i < pool.symbols.length; i++) {\r\n//         const symbol = pool.symbols[i];\r\n//         result.push({\r\n//           pool: pool.pool,\r\n//           pToken: pool.pToken,\r\n//           lToken: pool.lToken,\r\n//           initialBlock: pool.initialBlock,\r\n//           chainId: pool.chainId,\r\n//           bToken: pool.bToken,\r\n//           bTokenSymbol: pool.bTokenSymbol,\r\n//           symbol: symbol.symbol,\r\n//           symbolId: symbol.symbolId,\r\n//           offchainSymbolIds: pool.offchainSymbolIds,\r\n//           offchainSymbols: pool.offchainSymbols,\r\n//           unit: symbol.unit,\r\n//           decimals: symbol.decimals ? symbol.decimals : '2',\r\n//           type: 'perpetual',\r\n//           version: 'v2_lite',\r\n//           versionId: pool.versionId,\r\n//           isOption: false,\r\n//         });\r\n//       }\r\n//       return result;\r\n//     })\r\n//     .flat();\r\n// };\r\n\r\n// const expandPoolConfigOption = (config) => {\r\n//   const pools = config.pools;\r\n//   //console.log(pools)\r\n//   return pools\r\n//     .map((pool) => {\r\n//       let result = [];\r\n//       for (let i = 0; i < pool.symbols.length; i++) {\r\n//         const symbol = pool.symbols[i];\r\n//         result.push({\r\n//           pool: pool.pool,\r\n//           pToken: pool.pToken,\r\n//           lToken: pool.lToken,\r\n//           initialBlock: pool.initialBlock,\r\n//           chainId: pool.chainId,\r\n//           bToken: pool.bToken,\r\n//           pricer: pool.pricer,\r\n//           bTokenSymbol: pool.bTokenSymbol,\r\n//           symbol: symbol.symbol,\r\n//           symbolId: symbol.symbolId,\r\n//           offchainSymbolIds: pool.offchainSymbolIds,\r\n//           offchainSymbols: pool.offchainSymbols,\r\n//           volatilitySymbols: pool.volatilitySymbols,\r\n//           decimals: symbol.decimals ? symbol.decimals : '2',\r\n//           unit: symbol.unit,\r\n//           type: 'option',\r\n//           version: 'option',\r\n//           versionId: pool.versionId,\r\n//           isOption: true,\r\n//         });\r\n//       }\r\n//       return result;\r\n//     })\r\n//     .flat();\r\n// };\r\n\r\n// const expandPoolConfigV2LiteOpen = (config) => {\r\n//   const pools = config.pools;\r\n//   //console.log(pools)\r\n//   return pools\r\n//     .map((pool) => {\r\n//       let result = [];\r\n//       if (pool.symbols.length > 0) {\r\n//         for (let i = 0; i < pool.symbols.length; i++) {\r\n//           const symbol = pool.symbols[i];\r\n//           result.push({\r\n//             pool: pool.pool,\r\n//             pToken: pool.pToken,\r\n//             lToken: pool.lToken,\r\n//             initialBlock: pool.initialBlock,\r\n//             chainId: pool.chainId,\r\n//             bToken: pool.bToken,\r\n//             bTokenSymbol: pool.bTokenSymbol,\r\n//             symbol: symbol.symbol,\r\n//             symbolId: symbol.symbolId,\r\n//             offchainSymbolIds: pool.offchainSymbolIds,\r\n//             offchainSymbols: pool.offchainSymbols,\r\n//             unit: symbol.unit,\r\n//             decimals: symbol.decimals ? symbol.decimals : '2',\r\n//             type: 'perpetual',\r\n//             version: 'v2_lite_open',\r\n//             versionId: pool.versionId,\r\n//             isOpen: true,\r\n//           });\r\n//         }\r\n//       } else {\r\n//         result.push({\r\n//           pool: pool.pool,\r\n//           pToken: pool.pToken,\r\n//           lToken: pool.lToken,\r\n//           initialBlock: pool.initialBlock,\r\n//           chainId: pool.chainId,\r\n//           bToken: pool.bToken,\r\n//           bTokenSymbol: pool.bTokenSymbol,\r\n//           symbol: '--',\r\n//           symbolId: '',\r\n//           offchainSymbolIds: pool.offchainSymbolIds,\r\n//           offchainSymbols: pool.offchainSymbols,\r\n//           unit: '',\r\n//           type: 'perpetual',\r\n//           version: 'v2_lite_open',\r\n//           versionId: pool.versionId,\r\n//           isOpen: true,\r\n//         });\r\n//       }\r\n//       return result;\r\n//     })\r\n//     .flat();\r\n// };\r\n\r\n// export const getConfig = (version='v2', env='dev') => {\r\n//   let config = getJsonConfig(version, env);\r\n//   if (version === 'v2_lite_open') {\r\n//     //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\r\n//       //console.log('hit openConfigListCache')\r\n//     config.pools = openConfigListCache.get()\r\n//     //}\r\n//   }\r\n\r\n//   const pools = config.pools;\r\n//   if (pools && Array.isArray(pools)) {\r\n//     for (let i = 0; i < pools.length; i++) {\r\n//       poolProcessor[version](pools[i])\r\n//       poolValidator[version](pools[i])\r\n//     }\r\n//   }\r\n\r\n//   //validateObjectKeyExist(['oracle'], config, 'oracle');\r\n//   //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n//   return config;\r\n// };\r\n\r\n// export const getPoolConfigList = (version = 'v2', env = 'dev') => {\r\n//   let config;\r\n//   config = getConfig(version, env);\r\n//   if (version === 'v2') {\r\n//     return expandPoolConfigV2(config);\r\n//   } else if (version === 'v2_lite') {\r\n//     return expandPoolConfigV2Lite(config, version);\r\n//   } else if (version === 'v2_lite_open') {\r\n//     return expandPoolConfigV2LiteOpen(config);\r\n//   } else if (version === 'option') {\r\n//     return expandPoolConfigOption(config);\r\n//   }\r\n// };\r\n\r\n// export const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n//   bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n//   symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n//   const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n//   const check = bTokenId != null\r\n//     ? symbolId != null\r\n//       ? (i) =>\r\n//           i.pool === poolAddress &&\r\n//           i.bTokenId === bTokenId &&\r\n//           i.symbolId === symbolId\r\n//       : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n//     : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n//   if (poolConfigList.length > 0) {\r\n//     const res = poolConfigList.filter(check)\r\n//     if (res && res.length > 0) {\r\n//       return res\r\n//     }\r\n//   }\r\n//   throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n// }\r\n\r\n// export const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n//   const version = getPoolVersion(poolAddress)\r\n//   //console.log('version', version, poolAddress)\r\n//   // check the bToken in v2_lite\r\n//   if (LITE_AND_OPTION_VERSIONS.includes(version)) {\r\n//     bTokenId = undefined\r\n//   }\r\n//   const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n//   return res[0]\r\n// }\r\n// export const getFilteredPoolConfig  = getPoolConfig\r\n\r\n\r\n// export const getPoolVersion = (poolAddress) => {\r\n//   let pools = VERSIONS.reduce((acc, version) => {\r\n//     return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n//   }, [])\r\n//   //console.log(pools)\r\n//   // add v1 config\r\n//   pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n//   const index = pools.findIndex((v) => v.pool === poolAddress)\r\n//   //console.log('pools index', index)\r\n//   if (index >= 0) {\r\n//     return pools[index].version\r\n//   }\r\n// }\r\n\r\n// export const getPoolVersionId = (poolAddress) => {\r\n//   let pools = VERSIONS.reduce((acc, version) => {\r\n//     return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n//   }, [])\r\n//   // add v1 config\r\n//   pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n//   const index = pools.findIndex((v) => v.pool === poolAddress)\r\n//   if (index >= 0) {\r\n//     return pools[index].versionId\r\n//   }\r\n// }\r\n\r\n// export const _getPoolConfig = (poolAddress) => {\r\n//   const version = getPoolVersion(poolAddress);\r\n//   // console.log('version', version)\r\n//   const config = getConfig(version, DeriEnv.get());\r\n//   const pools = config.pools;\r\n//   let pool = pools.find((p) => p.pool === poolAddress);\r\n//   //console.log(pool)\r\n//   if (pool) {\r\n//     return pool;\r\n//   } else {\r\n//     throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\r\n//   }\r\n// };\r\n\r\n// export const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n//   const pool = _getPoolConfig(poolAddress);\r\n//   const defaultBToken = {\r\n//     bTokenId: '',\r\n//     bTokenSymbol: '',\r\n//     bToken: '',\r\n//   };\r\n//   const defaultSymbol = {\r\n//     symbolId: '',\r\n//     symbol: '',\r\n//     unit: '',\r\n//   };\r\n//   let bToken, symbol;\r\n//   if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\r\n//     bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\r\n//   }\r\n//   if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\r\n//     symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n//   }\r\n//   bToken = bToken || defaultBToken;\r\n//   symbol = symbol || defaultSymbol\r\n//   return {\r\n//     pool: pool.pool,\r\n//     pToken: pool.pToken,\r\n//     lToken: pool.lToken,\r\n//     router: pool.router,\r\n//     bTokenCount: pool.bTokenCount,\r\n//     symbolCount: pool.symbolCount,\r\n//     initialBlock: pool.initialBlock,\r\n//     chainId: pool.chainId,\r\n//     bToken: bToken.bToken,\r\n//     bTokenId: bToken.bTokenId,\r\n//     bTokenSymbol: bToken.bTokenSymbol,\r\n//     symbol: symbol.symbol,\r\n//     symbolId: symbol.symbolId,\r\n//     unit: symbol.unit,\r\n//     version: 'v2',\r\n//   };\r\n// };\r\n\r\n// export const getPoolBTokenList = (poolAddress) => {\r\n//   const pool = _getPoolConfig(poolAddress);\r\n//   return pool.bTokens.map((b) => {\r\n//     return {\r\n//       bTokenId: b.bTokenId,\r\n//       bTokenSymbol: b.bTokenSymbol,\r\n//       bTokenAddress: b.bToken,\r\n//     };\r\n//   });\r\n// };\r\n\r\n// export const getPoolBTokenIdList = (poolAddress) => {\r\n//   const pool = _getPoolConfig(poolAddress);\r\n//   return pool.bTokens.map((b) => b.bTokenId);\r\n// };\r\n\r\n// export const getPoolSymbolList = (poolAddress) => {\r\n//   const pool = _getPoolConfig(poolAddress);\r\n//   return pool.symbols.map((s) => {\r\n//     return {\r\n//       symbol: s.symbol,\r\n//       symbolId: s.symbolId,\r\n//       unit: s.unit,\r\n//     };\r\n//   });\r\n// };\r\n\r\n// export const getPoolSymbolIdList = (poolAddress) => {\r\n//   const pool = _getPoolConfig(poolAddress);\r\n//   return pool.symbols.map((b) => b.symbolId);\r\n// };\r\n\r\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const configs = [\r\n    {\r\n      chainId: '97',\r\n      address: '0x2cADdC11aDD70E520D950A51606243970A54d80a',\r\n      version: 'option',\r\n    },\r\n    {\r\n      chainId: '56',\r\n      address: '0x04e1b1A97bd59EeE1Ac249eb98B3EfefbAd3239e',\r\n      version: 'option',\r\n    },\r\n  ];\r\n  const viewers = configs.filter(\r\n    (c) => c.chainId === chainId && c.version === version\r\n  );\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new AppError('CONFIG_NOT_FOUND', {\r\n      name: 'getPoolViewerConfig',\r\n      args: [chainId, version],\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPoolConfig = (poolAddress) => {\r\n  let pools = getJsonConfig(DeriEnv.get());\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()));\r\n  const pool = pools.find((v) => v.pool === poolAddress);\r\n  if (pool) {\r\n    return pool;\r\n  }\r\n  throw new AppError('CONFIG_NOT_FOUND', {\r\n    name: 'getPoolConfig',\r\n    args: [DeriEnv.get(), poolAddress],\r\n  });\r\n};\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  return getPoolConfig(poolAddress).version\r\n};\r\n\r\nexport const getPoolVersionId = (poolAddress) => {\r\n  try {\r\n    poolAddress = checkAddress(poolAddress)\r\n    return getPoolConfig(poolAddress).versionId;\r\n  } catch (error) {\r\n    return {\r\n      failed: true,\r\n      response: {\r\n        data: {},\r\n        error: { code: error.code, message: error.message },\r\n      },\r\n    };\r\n  }\r\n};\r\n","import { catchApiError } from '../utils/api';\r\nimport {\r\n  getLpConfigList as _getLpConfigList,\r\n  getPreminingConfigList as _getPreminingConfigList,\r\n  getPoolV1ConfigList as _getRetiredPoolConfigList,\r\n  getDeriConfig as _getDeriConfig,\r\n  getDeriConfigList as _getDeriConfigList,\r\n} from '../config/pool_v1';\r\n\r\nexport { DeriEnv, Env } from '../config/env';\r\nexport {\r\n  getPoolVersion,\r\n  getPoolVersionId,\r\n} from '../config/pool';\r\n\r\nexport const getLpConfigList = async(env) => {\r\n  return catchApiError(_getLpConfigList, [env], []);\r\n};\r\nexport const getPreminingConfigList = async(env) => {\r\n  return catchApiError(_getPreminingConfigList, [env], []);\r\n};\r\nexport const getRetiredPoolConfigList = async(env) => {\r\n  return catchApiError(_getRetiredPoolConfigList, [env], []);\r\n};\r\nexport const getDeriConfig = async(env, chainId) => {\r\n  return catchApiError(_getDeriConfig, [env, chainId]);\r\n};\r\nexport const getDeriConfigList = async(env) => {\r\n  return catchApiError(_getDeriConfigList, [env], []);\r\n};\r\n","import { DEBUG } from '../config/constant';\r\nimport { getOracleConfig } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory, wrappedOracleFactory } from '../factory/oracle';\r\nimport { deriToNatural, fromWei } from './convert';\r\nimport {\r\n  mapToSymbolInternal,\r\n  mapToBTokenInternal,\r\n  normalizeOptionSymbol,\r\n} from '../config/token';\r\nimport { PRESERVED_SYMBOLS } from '../config/version';\r\nimport { offChainOracleFactory } from '../contract/factory';\r\n\r\n// import fetch from 'node-fetch';\r\n\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const getPriceInfoForV1 = async(symbol) => {\r\n  const env = DeriEnv.get();\r\n  let method = 'get_signed_price'\r\n  let url\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n  if (symbol) {\r\n    url = addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    url = baseUrl;\r\n  }\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n        //return deriToNatural(priceInfo.data.price).toString()\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n}\r\n\r\n\r\nexport const getOracleUrl = (symbol, type='futures') => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = 'get_signed_price'\r\n  if (type === 'option') {\r\n    method = 'get_signed_volatility'\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = 'get_price'\r\n    symbol = `${symbol}_v2_bsc`\r\n  }\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol, type='futures') => {\r\n  const res = await getPriceInfo(symbol, type)\r\n  if (type === 'futures' && res.price) {\r\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\r\n  } else if (type === 'option' && res.volatility) {\r\n    return deriToNatural(res.volatility).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol, type='futures') => {\r\n  symbol = mapToBTokenInternal(symbol)\r\n  let url = getOracleUrl(symbol, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n          return priceInfo.data\r\n        }\r\n      }\r\n    } catch(err) {\r\n      //console.log(err.toString())\r\n      retry -= 1;\r\n    }\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\r\n  let url = getOracleUrl(null, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, {\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(symbolList),\r\n      });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n          return priceInfo.data;\r\n        }\r\n      }\r\n    } catch (err) {\r\n      DEBUG &&  console.log(err)\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getOracleInfosFromRest exceed max retry(3): ${symbolList}`);\r\n  }\r\n};\r\n\r\n// cache\r\n// export const getOraclePriceFromCache = (function () {\r\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\r\n//   let cache = {};\r\n//   return {\r\n//     async get(chainId, symbol = '_', version = 'v2') {\r\n//       const key = `${chainId}_${symbol}_${version}`\r\n//       if (\r\n//         Object.keys(cache).includes(key) &&\r\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n//       ) {\r\n//         return cache[key].data;\r\n//       } else {\r\n//         const data = await getOraclePrice(chainId, symbol, version);\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp: Math.floor(Date.now() / 1000),\r\n//         };\r\n//         return cache[key].data;\r\n//       }\r\n//     },\r\n//   };\r\n// })();\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const oraclePricesCache = (function(){\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=[]) {\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(version, chainId, symbol);\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  if (oracleAddress !== '') {\r\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\n// cache\r\nexport const getOraclePriceFromCache2 = (function () {\r\n  let cache = {};\r\n  return {\r\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\r\n      const key = `${chainId}_${symbol}_${oracleAddress}`\r\n      if (\r\n        Object.keys(cache).includes(key) &&\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n      ) {\r\n        return cache[key].data;\r\n      } else {\r\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\r\n        cache[key] = {\r\n          data,\r\n          timestamp: Math.floor(Date.now() / 1000),\r\n        };\r\n        return cache[key].data;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n// export const getOraclePriceForOption = async (chainId, symbol) => {\r\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\r\n// };\r\n\r\n// for viewer use\r\n// export const getOraclePricesForOption = async (chainId, symbols) => {\r\n//   const oracleSymbols = symbols\r\n//     .map((i) => normalizeOptionSymbol(i))\r\n//     .filter((value, index, self) => self.indexOf(value) === index);\r\n//   const oracleSymbolPrices = await Promise.all(\r\n//     oracleSymbols.reduce(\r\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\r\n//       []\r\n//     )\r\n//   );\r\n//   return symbols.map((s) => {\r\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\r\n//   });\r\n// };\r\n\r\n// // for tx use\r\n// export const getOracleVolatilityForOption = async (symbols) => {\r\n//   const volSymbols = getVolatilitySymbols(symbols)\r\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\r\n\r\n//   const volatilities = await Promise.all(\r\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\r\n//   );\r\n//   //return volatilities;\r\n//   return symbols.map((s) => {\r\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\r\n//   });\r\n// };\r\n\r\n// for viewer use\r\nexport const getOracleVolatilitiesForOption = async (symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\r\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\r\n  //console.log('volatilities', volatilities)\r\n  return symbols.map((s) => {\r\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\r\n  });\r\n};\r\n\r\n// check symbol is used offchain oracle\r\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return \"\"\r\n};\r\n\r\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\r\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\r\n    offChainSymbolIds.indexOf(s.symbolId) > -1\r\n      ? ''\r\n      : s.oracleAddress\r\n  );\r\n\r\n  const onChainSymbolPrices = await Promise.all(\r\n    onChainOracleAddressWithPlaceHolder\r\n      .reduce((acc, address, index) => {\r\n        const _symbol = symbols.map((s) => s.symbol)[index];\r\n        if (address !== '') {\r\n          return acc.concat(\r\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n          );\r\n        } else {\r\n          return acc.concat('');\r\n        }\r\n      }, [])\r\n      .filter((f) => f !== '')\r\n  );\r\n\r\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\r\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\r\n\r\n  // combine offChain and onChain symbol prices\r\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\r\n    if (o !== '') {\r\n      return onChainSymbolPrices.shift();\r\n    } else {\r\n      return offChainSymbolPrices.shift();\r\n    }\r\n  });\r\n  return symbolPrices\r\n};","import { ContractBase } from \"../contract_base\";\r\nimport { symbolOracleOffChainAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils';\r\n\r\nexport class SymbolOracleOffChain extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, symbolOracleOffChainAbi);\r\n  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', []);\r\n    return deriToNatural(res);\r\n  }\r\n  async signer() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signer']().call();\r\n    return res;\r\n  }\r\n  async signatory() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signatory']().call();\r\n    return res;\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wooOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WooOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wooOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    //console.log('hit woo oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { isUsedRestOracle } from '../config/token';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\nimport { factory } from '../utils/factory';\r\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\r\nimport { WooOracle } from '../contract/oracle/woo_oracle';\r\n\r\nconst wooOracleAddresses = [\r\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\r\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\r\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\r\n]\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (wooOracleAddresses.includes(address)) {\r\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const wrappedOracleFactory = factory(WrappedOracle);\r\nexport const wooOracleFactory = factory(WooOracle);\r\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\r\n","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseActivityFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address =\r\n      DeriEnv.get() === 'prod'\r\n        ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571'\r\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseActivityClaimFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address =\r\n      DeriEnv.get() === 'prod'\r\n        ? '0xe40a75957034A003Da4b341FBb02a457Af2aa302'\r\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseDeriVoteFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address =\r\n      DeriEnv.get() === 'prod'\r\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\r\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from './contract_base'\r\nimport { deleteIndexedKey } from '../utils'\r\nimport { TERC20Abi } from './abis'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  // only for testnet\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\nimport { TERC20 } from '../../contract/TERC20';\r\n\r\n//export const bTokenFactory = factory(BToken);\r\nexport const TERC20Factory = factory(TERC20)","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();","import {\r\n  hexToNumber,\r\n  fromWei,\r\n  catchSyncApiError,\r\n  catchApiError,\r\n} from '../utils';\r\nimport {\r\n  checkChainId,\r\n  checkAddress,\r\n} from '../config'\r\nimport { web3Factory } from '../factory';\r\nimport { AppError } from '../error/error';\r\n\r\nexport const hasWallet = () => {\r\n  return catchSyncApiError(() => {\r\n    let res = {};\r\n    if (window.ethereum) {\r\n      res.hasWallet = true;\r\n      if (window.ethereum.isMetaMask) {\r\n        res.isMetaMask = true;\r\n      }\r\n      return res;\r\n    }\r\n    throw new AppError('WEB3_WALLET_NOT_FOUND');\r\n  });\r\n};\r\n\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      if (typeof window != null && typeof window.ethereum != null) {\r\n        const accounts = await window.ethereum.request({\r\n          method: 'eth_requestAccounts',\r\n        });\r\n        const chainId = parseInt(\r\n          await window.ethereum.request({ method: 'net_version' })\r\n        );\r\n        // const chainId = hexToNumber(\r\n        //   await window.ethereum.request({ method: 'eth_chainId' })\r\n        // );\r\n        const account = Array.isArray(accounts) && accounts[0];\r\n\r\n        window.ethereum.on('accountsChanged', (accounts) => {\r\n          let account;\r\n          if (accounts.length > 0) {\r\n            account = accounts[0];\r\n          } else {\r\n            account = '';\r\n          }\r\n          if (typeof handleAccountChanged === 'function') {\r\n            handleAccountChanged(account);\r\n          } else {\r\n            window.location.reload();\r\n          }\r\n        });\r\n        window.ethereum.on('chainChanged', (chainId) => {\r\n          let res = hexToNumber(chainId);\r\n          if (typeof handleChainChanged === 'function') {\r\n            handleChainChanged(res);\r\n          } else {\r\n            window.location.reload();\r\n          }\r\n        });\r\n        return { account, chainId };\r\n      }\r\n      throw new AppError('WEB3_WALLET_NOT_FOUND');\r\n    },\r\n    [],\r\n    { account: '', chainId: '' }\r\n  );\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, accountAddress) => {\r\n  return catchApiError(\r\n    async () => {\r\n      chainId = checkChainId(chainId);\r\n      accountAddress = checkAddress(accountAddress);\r\n      const web3 = await web3Factory.get(chainId);\r\n      const balance = await web3.eth.getBalance(accountAddress);\r\n      return fromWei(balance);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  catchApiError,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport {\r\n  checkChainId,\r\n  checkAddress,\r\n  checkTokenId,\r\n} from '../config/check'\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  let res,\r\n    retry = 2;\r\n  while (retry > 0) {\r\n    res = await db.getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ]);\r\n    if (\r\n      Math.floor(new Date().getTime() / 1000) < parseInt(deriToString(res[2]))\r\n    ) {\r\n      break;\r\n    } else {\r\n      retry -= 1;\r\n      db.web3 = null;\r\n      if (retry === 0) {\r\n        // if deadline is outdated\r\n        res = [...res];\r\n        res[7] = false;\r\n      }\r\n    }\r\n  }\r\n  const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n  return {\r\n    chainId: deriToString(chainId),\r\n    amount: deriToNatural(amount).toString(),\r\n    deadline: deriToString(deadline),\r\n    nonce: deriToString(nonce),\r\n    v: deriToString(v),\r\n    r,\r\n    s,\r\n    valid: deriToBool(valid),\r\n  };\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db.getValues([\r\n    `${userAddress}.claim.harvest.lp`,\r\n    `${userAddress}.claim.harvest.trade`,\r\n  ]);\r\n  const [harvestLp, harvestTrade] = res;\r\n  return {\r\n    lp: deriToNatural(harvestLp).toString(),\r\n    trade: deriToNatural(harvestTrade).toString(),\r\n  };\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db.getValues([`${userAddress}.claim.total`]);\r\n  const [total] = res;\r\n  return {\r\n    total: deriToNatural(total).toString(),\r\n  };\r\n};\r\n\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  return catchApiError(async () => {\r\n    const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\r\n      getUserInfo(userAddress),\r\n      getUserInfoHarvest(userAddress),\r\n      getUserInfoTotal(userAddress),\r\n    ]);\r\n    return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n  });\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    const db = databaseFactory();\r\n    const res = await db.getValues([`${chainId}.${poolAddress}.liquidity`]);\r\n    const [liquidity] = res;\r\n    return {\r\n      liquidity: deriToNatural(liquidity).toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    const db = databaseFactory(true);\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db.getValues([\r\n      `${poolNetwork}.${poolAddress}.apy`,\r\n      `${poolNetwork}.${poolAddress}.volume.1h`,\r\n      `${poolNetwork}.${poolAddress}.volume.24h`,\r\n    ]);\r\n    const [apy, volume1h, volume24h] = res;\r\n    return {\r\n      apy: deriToNatural(apy).toString(),\r\n      volume1h: deriToNatural(volume1h).toString(),\r\n      volume24h: deriToNatural(volume24h).toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolLiquidityV2 = async (chainId, poolAddress, bTokenId) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    bTokenId = checkTokenId(bTokenId)\r\n    const db = databaseFactory();\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n    const [liquidity] = res;\r\n    return {\r\n      liquidity: deriToNatural(liquidity).toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolInfoApyV2 = async (chainId, poolAddress, bTokenId) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    bTokenId = checkTokenId(bTokenId)\r\n    const db = databaseFactory(true);\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db.getValues([\r\n      `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n      `${poolNetwork}.${poolAddress}.volume.1h`,\r\n      `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n    ]);\r\n    const [apy, volume1h, volume24h, multiplier] = res;\r\n    return {\r\n      apy: deriToNatural(apy).toString(),\r\n      volume1h: deriToNatural(volume1h).toString(),\r\n      volume24h: deriToNatural(volume24h).toString(),\r\n      multiplier: deriToNatural(multiplier).toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    const db = databaseFactory(true);\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n    const [apy, apy2, volume1h, volume24h] = res;\r\n    return {\r\n      apy: deriToNatural(apy).toString(),\r\n      apy2: deriToNatural(apy2).toString(),\r\n      volume1h: deriToNatural(volume1h).toString(),\r\n      volume24h: deriToNatural(volume24h).toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    const db = databaseFactory(true);\r\n    userAddress = toChecksumAddress(userAddress);\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db.getValues([\r\n      `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n      `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n    ]);\r\n    const [volume1h, volume24h] = res;\r\n    return {\r\n      volume1h: deriToNatural(volume1h).toString(),\r\n      volume24h: deriToNatural(volume24h).toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  return catchApiError(async () => {\r\n    const db = databaseAirdropFactory(true);\r\n    userAddress = toChecksumAddress(userAddress);\r\n    const res = await db.getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ]);\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  });\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const liquidatePriceCache = (function() {\r\n  let _cache = {}\r\n  return {\r\n    get(address) {\r\n      if (Object.keys(_cache).includes(address)) {\r\n        return _cache[address]\r\n      } else {\r\n        return {}\r\n      }\r\n    },\r\n    set(address, val) {\r\n      _cache[address] = val\r\n    },\r\n  }\r\n})()\r\n","import { getDeriConfig, checkAddress, DeriEnv, checkChainId } from '../config';\r\nimport { deriFactory, databaseWormholeFactory } from '../factory';\r\nimport { catchApiError } from '../utils';\r\n\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  return catchApiError(async () => {\r\n    accountAddress = checkAddress(accountAddress);\r\n    const databaseWormhole = databaseWormholeFactory(true);\r\n    return await databaseWormhole.signature(accountAddress);\r\n  });\r\n};\r\n\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  return catchApiError(async () => {\r\n    const env = DeriEnv.get();\r\n    chainId = checkChainId(chainId);\r\n    accountAddress = checkAddress(accountAddress);\r\n    const { wormholeAddress, deriAddress } = await getDeriConfig(env, chainId);\r\n    const deri = deriFactory(chainId, deriAddress);\r\n    return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n  });\r\n};\r\n\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  return catchApiError(async () => {\r\n    const env = DeriEnv.get();\r\n    chainId = checkChainId(chainId);\r\n    accountAddress = checkAddress(accountAddress);\r\n    const { deriAddress } = await getDeriConfig(env, chainId);\r\n    const deri = deriFactory(chainId, deriAddress);\r\n    return (await deri.balanceOf(accountAddress)).toString();\r\n  });\r\n};\r\n","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n  checkChainId,\r\n  checkAddress,\r\n} from '../config';\r\nimport { naturalToDeri,  catchTxApiError } from '../../shared/utils';\r\nimport { AppError } from '../error/error';\r\n\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const userInfo = await getUserInfoAll(accountAddress);\r\n    const amount = naturalToDeri(userInfo.amount);\r\n    const { deadline, nonce, v, r, s } = userInfo;\r\n    // const { nonce } = userInfo;\r\n    // const { v } = userInfo;\r\n    // const { r } = userInfo;\r\n    // const { s } = userInfo;\r\n    if (userInfo.valid) {\r\n      const miningVaultAddress = getMiningVaultConfig(chainId);\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      return await miningVault.mintDToken(\r\n        accountAddress,\r\n        amount,\r\n        deadline,\r\n        nonce,\r\n        v,\r\n        r,\r\n        s\r\n      );\r\n    } else {\r\n      throw new AppError('INVALID_DATA', userInfo);\r\n    }\r\n  });\r\n};\r\n\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    toChainId = checkChainId(toChainId)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { wormholeAddress } = getDeriConfig(chainId);\r\n    const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n    return await wormhole.freeze(accountAddress, amount, toChainId);\r\n  });\r\n};\r\n\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    toChainId = checkChainId(toChainId)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const databaseWormhole = databaseWormholeFactory(true);\r\n    const userInfo = await databaseWormhole.signature(accountAddress);\r\n    const {\r\n      amount,\r\n      fromChainId,\r\n      fromWormhole,\r\n      nonce: fromNonce,\r\n      v,\r\n      r,\r\n      s,\r\n    } = userInfo;\r\n    // const { fromChainId } = userInfo;\r\n    // const { fromWormhole } = userInfo;\r\n    // const fromNonce = userInfo.nonce;\r\n    // const { v } = userInfo;\r\n    // const { r } = userInfo;\r\n    // const { s } = userInfo;\r\n    if (userInfo.valid) {\r\n      const { wormholeAddress } = getDeriConfig(toChainId);\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      return await wormhole.mintDeri(\r\n        accountAddress,\r\n        amount,\r\n        fromChainId,\r\n        fromWormhole,\r\n        fromNonce,\r\n        v,\r\n        r,\r\n        s\r\n      );\r\n    } else {\r\n      throw new AppError('INVALID_DATA', userInfo);\r\n    }\r\n  });\r\n};\r\n\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n    const deri = deriFactory(chainId, deriAddress);\r\n    return await deri.unlock(accountAddress, wormholeAddress);\r\n  });\r\n};\r\n\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n    const amount = naturalToDeri(userInfo.amount).toString();\r\n    const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n    if (userInfo.valid) {\r\n      const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      return await miningVaultRouter.mint(\r\n        accountAddress,\r\n        amount,\r\n        deadline,\r\n        nonce,\r\n        v1,\r\n        r1,\r\n        s1,\r\n        v2,\r\n        r2,\r\n        s2\r\n      );\r\n    } else {\r\n      throw new AppError('INVALID_DATA', userInfo);\r\n    }\r\n  });\r\n};","import { getLpConfig, checkChainId, checkAddress  } from '../config';\r\nimport { ERC20Factory } from '../contract';\r\nimport { slpPoolFactory } from '../factory/contract';\r\nimport { catchApiError, catchTxApiError } from '../utils';\r\n\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  });\r\n};\r\n\r\n\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.isUnlocked(accountAddress, poolAddress);\r\n  });\r\n};\r\n\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    const balance = await bToken.balanceOf(accountAddress);\r\n    return balance.toString();\r\n  });\r\n};\r\n\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    await getLpConfig(chainId, poolAddress);\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    return await slpPool.addLiquidity(accountAddress, amount);\r\n  });\r\n};\r\n\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    await getLpConfig(chainId, poolAddress);\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    return await slpPool.removeLiquidity(accountAddress, amount);\r\n  });\r\n};\r\n\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  });\r\n};\r\n\r\n","import { clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\nimport { catchApiError, catchTxApiError} from '../utils';\r\nimport { checkChainId, checkAddress } from '../config/check';\r\nimport { ERC20Factory } from '../contract';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  });\r\n};\r\n\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.isUnlocked(accountAddress, poolAddress);\r\n  });\r\n};\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    const balance = await bToken.balanceOf(accountAddress);\r\n    return balance.toString();\r\n  });\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    await getLpConfig(chainId, poolAddress);\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    return await clp2Pool.addLiquidity(accountAddress, amount);\r\n  });\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    await getLpConfig(chainId, poolAddress);\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    return await clp2Pool.removeLiquidity(accountAddress, amount);\r\n  });\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    chainId = checkChainId(chainId)\r\n    poolAddress = checkAddress(poolAddress)\r\n    accountAddress = checkAddress(accountAddress)\r\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  });\r\n};\r\n\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\r\n  const removable = bg(liquidity)\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return bg(volume).times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = bg(volume)\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = bg(liquidity)\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (bg(margin).plus(amount).gte(minMargin)) {\r\n    if (\r\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const MAX_GAS_AMOUNT = 582731\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfoForV1(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { version } = await getLpConfig(chainId, poolAddress);\r\n  if (version === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  // } else if (type === 'clp') {\r\n  //   return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'clp') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  }\r\n};\r\n\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { version } = await getLpConfig(chainId, poolAddress);\r\n  if (version === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  // } else if (version === 'clp') {\r\n  //   return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'clp') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  }\r\n};\r\n\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { version } = await getLpConfig(chainId, poolAddress);\r\n  if (version === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  // } else if (version === 'clp') {\r\n  //   return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (version  === 'clp') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  }\r\n};\r\n","import { getLpConfig } from '../config';\r\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\r\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\r\nimport {\r\n  unlockClp2,\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2_pool_api';\r\n\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { version } = await getLpConfig(chainId, poolAddress);\r\n  if (version === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  // } else if (version === 'clp') {\r\n  //   return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'clp') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  }\r\n};\r\n\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { version } = await getLpConfig(chainId, poolAddress);\r\n  if (version === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  // } else if (type === 'clp') {\r\n  //   return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'clp') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n};\r\n\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { version } = await getLpConfig(chainId, poolAddress);\r\n  if (version === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (version === 'clp') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  }\r\n};\r\n","/*\r\n    1. Calculate the cost for user input volume\r\n    2. Calculate the final price if user input volume is traded\r\n*/\r\n\r\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\r\n    return theoreticalPrice * (1 + K * tradersNetVolume)\r\n}\r\n\r\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\r\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\r\n}\r\n","const invalidValues = [NaN, null, undefined];\r\n\r\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\r\n  let u = Math.sqrt(8 / V / V / T + 1);\r\n  let timeValue, delta;\r\n  if (S > K) {\r\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\r\n    delta = ((1 - u) * timeValue) / S / 2;\r\n  } else if (S === K) {\r\n    timeValue = K / u;\r\n    delta = 0;\r\n  } else {\r\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\r\n    delta = ((1 + u) * timeValue) / S / 2;\r\n  }\r\n  return [timeValue, delta];\r\n}\r\n\r\nfunction getDynamicInitialMarginRatio(\r\n  spot,\r\n  strike,\r\n  isCall,\r\n  initialMarginRatio,\r\n  minInitialMarginRatio\r\n) {\r\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\r\n    return initialMarginRatio;\r\n  } else {\r\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\r\n    return Math.max(\r\n      (1 - otmRatio * 3) * initialMarginRatio,\r\n      minInitialMarginRatio\r\n    );\r\n  }\r\n}\r\n\r\n// multiple position for same underlier, e.x. BTCUSD\r\nfunction canLiquidateWithPrice(\r\n  pool,\r\n  trader,\r\n  symbols,\r\n  positions,\r\n  newUnderlierPrice\r\n) {\r\n  let newDynamicMargin = trader.dynamicMargin;\r\n  let newInitialMargin = trader.initialMargin;\r\n\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    let symbol = symbols[i];\r\n    let position = positions[i];\r\n    if (position.volume === 0) {\r\n      continue;\r\n    }\r\n\r\n    let newIntrinsicValue = symbol.isCall\r\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\r\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\r\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.volatility,\r\n      pool.fundingPeriod\r\n    );\r\n    if (newIntrinsicValue > 0) {\r\n      newDelta += symbol.isCall ? 1 : -1;\r\n    }\r\n    let newPnl =\r\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\r\n      position.cost;\r\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.isCall,\r\n      pool.initialMarginRatio,\r\n      0.01\r\n    );\r\n\r\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\r\n    newInitialMargin =\r\n      newInitialMargin -\r\n      Math.abs(\r\n        position.volume *\r\n          symbol.spotPrice *\r\n          symbol.multiplier *\r\n          symbol.dynamicMarginRatio\r\n      ) +\r\n      Math.abs(\r\n        position.volume *\r\n          newUnderlierPrice *\r\n          symbol.multiplier *\r\n          newDynamicMarginRatio\r\n      );\r\n  }\r\n\r\n  let newMaintenanceMargin =\r\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\r\n\r\n  if (\r\n    invalidValues.includes(newMaintenanceMargin) ||\r\n    invalidValues.includes(newDynamicMargin)\r\n  ) {\r\n    throw new Error(\r\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\r\n    );\r\n  }\r\n  return newMaintenanceMargin > newDynamicMargin;\r\n}\r\n\r\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\r\n  if (symbols.length != positions.length) {\r\n    throw new Error(\r\n      'canLiquidateWithPrice: symbols and positions length not match'\r\n    );\r\n  }\r\n  if (symbols.length === 0) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: null,\r\n      price2: null,\r\n    };\r\n  }\r\n  let head = symbols[0].symbol.slice(0, 6);\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    if (!symbols[i].symbol.startsWith(head)) {\r\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\r\n    }\r\n  }\r\n\r\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: symbols[0].spotPrice,\r\n      price2: symbols[0].spotPrice,\r\n    };\r\n  }\r\n\r\n  let final1, final2;\r\n  let price1, price2;\r\n  let l1, l2;\r\n\r\n  price1 = symbols[0].spotPrice / 10;\r\n  price2 = symbols[0].spotPrice;\r\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\r\n  l2 = false;\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final1 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  price1 = symbols[0].spotPrice;\r\n  price2 = symbols[0].spotPrice * 10;\r\n  l1 = false;\r\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final2 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  return {\r\n    numPositions: positions.length,\r\n    price1: final1,\r\n    price2: final2,\r\n  };\r\n}\r\n","import { bg, max, toNumberForObject } from \"../../shared/utils\"\r\nimport { normalizeOptionSymbol } from \"../../shared/config\"\r\nimport { findLiquidationPrice } from './findLiquidationPrice2';\r\n\r\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\r\n  }\r\n}\r\n\r\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  // for pool\r\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\r\n  }\r\n}\r\n\r\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(delta)\r\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\r\n        .times(price)\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.deltaFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(symbol.timeValue)\r\n        .times(symbol.multiplier)\r\n        .times(premiumFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\n\r\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\r\n  return isCall\r\n    ? max(bg(price).minus(strikePrice), bg(0))\r\n    : max(bg(strikePrice).minus(price), bg(0));\r\n};\r\n\r\n\r\nexport const getMarginHeldBySymbol = (\r\n  volume,\r\n  price,\r\n  symbol,\r\n  initialMarginRatio\r\n) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(\r\n      dynamicInitialMarginRatio(\r\n        price,\r\n        symbol.strikePrice,\r\n        symbol.isCall,\r\n        initialMarginRatio\r\n      )\r\n    );\r\n};\r\n\r\nexport const getAverageEntryPrice = (position, symbol) => {\r\n  return bg(position.volume).eq(0)\r\n    ? '0'\r\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\r\n};\r\n\r\nexport const getLiquidationPrice = (state, symbolId)  => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\r\n  let res = findLiquidationPrice(\r\n    toNumberForObject(poolState, [\r\n      'initialMarginRatio',\r\n      'maintenanceMarginRatio',\r\n      'fundingPeriod',\r\n      'fundingCoefficient',\r\n      'marginMultiplier',\r\n      'liquidity',\r\n      'totalDynamicEquity',\r\n      'totalInitialMargin',\r\n    ]),\r\n    toNumberForObject(traderState, [\r\n      'margin',\r\n      'totalPnl',\r\n      'totalFundingAccrued',\r\n      'dynamicMargin',\r\n      'initialMargin',\r\n      'maintenanceMargin',\r\n    ]),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'volatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativeFundingRate',\r\n          'fundingPerSecond',\r\n        ])\r\n      ),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(positionState[s.symbolId], [\r\n          'volume',\r\n          'cost',\r\n          'lastCumulativePremiumFundingRate',\r\n          'pnl',\r\n          'premiumFundingAccrued',\r\n        ])\r\n      )\r\n  );\r\n  res.underlier = normalizedSymbol\r\n  return res\r\n}\r\n\r\nexport const getLiquidationPrices = (state) => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\r\n    let res = findLiquidationPrice(\r\n      toNumberForObject(poolState, [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      toNumberForObject(traderState, [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n          ])\r\n        ),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(positionState[s.symbolId], [\r\n            'volume',\r\n            'cost',\r\n            'lastCumulativeDeltaFundingRate',\r\n            'lastCumulativePremiumFundingRate',\r\n            'pnl',\r\n            'deltaFundingAccrued',\r\n            'premiumFundingAccrued',\r\n          ])\r\n        )\r\n    );\r\n    return res;\r\n  });\r\n  return oracleSymbols.map((i, index) => { \r\n    liquidationPrices[index].underlier = i\r\n    return liquidationPrices[index]\r\n  })\r\n};","// this file is generated by script, don't modify it !!!\r\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\r\nimport {\r\n  toWei,\r\n  getLiquidity,\r\n  getProtocolFeeAccrued,\r\n  getLastTimestamp,\r\n  bg,\r\n  processResult,\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getHttpBase,\r\n  fetchJson,\r\n  toChecksumAddress,\r\n} from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\nimport { getSymbolPrices } from '../../shared/utils/oracle'\r\nimport { getPriceInfos } from \"../utils.js\";\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\r\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\r\n\r\n\r\n// klass = addInstanceMethods(klass, [])\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\n\r\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return ''\r\n};\r\n\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const prices = await this._getSymbolPrices()\r\n    // console.log('prices', prices)\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst init = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.activeSymbolIds) {\r\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n        this.getPoolStateValues(),\r\n        this.getFundingPeriod(),\r\n      ]);\r\n      this.fundingPeriod = parseInt(this.fundingPeriod);\r\n      // console.log(this.addresses, this.parameters)\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n\r\n      // init tokens\r\n      [this.bTokenSymbol ] = await Promise.all([\r\n        this.bToken.symbol(),\r\n      ]);\r\n      this.symbols = []\r\n      this.positions = []\r\n\r\n    }\r\n    // update symbols\r\n    // estimated for estimated* api use to disable async call\r\n    if (!isEstimatedApi) {\r\n      const symbolIds = await this.pToken.getActiveSymbolIds();\r\n      if (\r\n        !this.activeSymbolIds ||\r\n        this.activeSymbolIds.toString() !== symbolIds.toString()\r\n      ) {\r\n        this.poolLiquidity = await this.getPoolLiquidity();\r\n        this.activeSymbolIds = symbolIds;\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n        this.offChainOracleSymbolNames = await Promise.all(\r\n          this.symbols\r\n            .map((s) => s.oracleAddress)\r\n            .reduce(\r\n              (acc, o, index) => [\r\n                ...acc,\r\n                checkOffChainOracleSymbol(\r\n                  this.chainId,\r\n                  o,\r\n                  this.symbols[index].symbol\r\n                ),\r\n              ],\r\n              []\r\n            )\r\n        );\r\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n          (acc, i, index) => {\r\n            return this.offChainOracleSymbolNames[index] === ''\r\n              ? acc\r\n              : [...acc, i];\r\n          },\r\n          []\r\n        );\r\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\r\n          (s) => s && s !== ''\r\n        );\r\n        // console.log(\r\n        //   `${this.contractAddress} offchain`,\r\n        //   this.offChainOracleSymbolNames\r\n        // );\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\n\r\n// this.addresses\r\n// this.parameters\r\n\r\nconst getConfig = (klass) => {\r\n  klass.prototype[\"getConfig\"] = async function () {\r\n    await this.init()\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      bToken: this.addresses.bTokenAddress,\r\n      // bTokenSymbol: this.bTokenSymbol,\r\n      bTokens: [\r\n        {\r\n          bTokenSymbol: this.bTokenSymbol,\r\n          bToken: this.addresses.bTokenAddress,\r\n        },\r\n      ],\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: this.activeSymbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"future\",\r\n      version: \"v2_lite\",\r\n      versionId: \"v2_lite_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype[\"getStateValues\"] = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state = { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\n// getSymbol()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    // const indexPrices = await Promise.all(\r\n    //   symbols.map((s) => {\r\n    //     const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\r\n    //     return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\r\n    //   })\r\n    // )\r\n\r\n    const indexPrices = await getSymbolPrices(\r\n      this.chainId,\r\n      symbols,\r\n      this.offChainOracleSymbolIds,\r\n      this.offChainOracleSymbolNames\r\n    );\r\n    //console.log('indexPrices', indexPrices);\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index]\r\n      s.K = calculateK(\r\n        s.indexPrice,\r\n        this.state.liquidity,\r\n        s.alpha\r\n      ).toString();\r\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      ).toString();\r\n\r\n      const pnl = calculateDpmmCost(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier,\r\n        bg(s.tradersNetVolume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(s.tradersNetCost);\r\n      s.pnl = pnl.toString()\r\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\r\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\r\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.symbols[symbolIndex] = symbols[0]\r\n      }\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\r\n        []\r\n      )\r\n    );\r\n    await this.getLastTimestamp()\r\n\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\n// check is updated\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype['isSymbolsUpdated'] = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype['isPositionsUpdated'] = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce(\r\n          (acc, s) =>\r\n          acc.minus(s.pnl),\r\n            // acc\r\n            //   .plus(s.tradersNetCost)\r\n            //   .minus(\r\n            //     bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\r\n            //   ),\r\n          bg(0)\r\n        )\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    const { poolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(poolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.margin) {\r\n      this.margin = await this.pToken.getMargin(account)\r\n    }\r\n    // console.log(this.positions)\r\n    // console.log(this.symbols)\r\n    const { initialMarginRatio } = this.parameters;\r\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\r\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\r\n      const s = this.symbols[i];\r\n      const p = this.positions[i];\r\n      dynamicMargin = dynamicMargin.plus(\r\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\r\n      );\r\n      requiredInitialMargin = requiredInitialMargin.plus(\r\n        bg(p.volume)\r\n          .times(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .abs()\r\n          .times(initialMarginRatio)\r\n      );\r\n    }\r\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst formatTradeEvent = (klass) => {\r\n  klass.prototype['formatTradeEvent'] = async function (event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume);\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    if (index > -1) {\r\n      const symbol = this.symbols[index];\r\n      const tradeFee = info.tradeFee;\r\n\r\n      const direction =\r\n        tradeFee !== '-1'\r\n          ? bg(tradeVolume).gt(0)\r\n            ? 'LONG'\r\n            : 'SHORT'\r\n          : 'LIQUIDATION';\r\n      const price = bg(info.tradeCost)\r\n        .div(info.tradeVolume)\r\n        .div(symbol.multiplier)\r\n        .toString();\r\n      const notional = bg(tradeVolume)\r\n        .abs()\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n\r\n      const res = {\r\n        symbolId: info.symbolId,\r\n        symbol: symbol.symbol,\r\n        trader: info.trader,\r\n        direction,\r\n        volume: bg(tradeVolume).abs().toString(),\r\n        price: price,\r\n        indexPrice: deriToNatural(info.indexPrice).toString(),\r\n        notional: notional,\r\n        transactionFee:\r\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\r\n        transactionHash: event.transactionHash,\r\n        time: block.timestamp * 1000,\r\n        extra: {},\r\n      };\r\n      return res;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return klass\r\n};\r\n\r\nconst _getSymbolPrices = (klass) => {\r\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\r\n    await this.init()\r\n    let prices = []\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbolNames);\r\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n            this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbolNames.indexOf(Object.keys(priceInfos)[index])\r\n            ],\r\n            p.timestamp,\r\n            p.price,\r\n            parseInt(p.v).toString(),\r\n            p.r,\r\n            p.s,\r\n        ]);\r\n        return acc;\r\n        }, []);\r\n    }\r\n    return prices;\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\n// migration\r\nconst getPoolExtraInfo = (klass) => {\r\n  klass.prototype['getPoolExtraInfo'] = async function() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`;\r\n    const res = await fetchJson(url);\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data;\r\n    } else {\r\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`);\r\n      return {\r\n        chain_id: this.chainId,\r\n        pool: this.contractAddress,\r\n        block_number: '1000000000',\r\n        version: '',\r\n        target_pool:'',\r\n        migration_timestamp: ''\r\n      };\r\n    }\r\n  }\r\n  return klass\r\n}\r\n\r\nconst isMigrationPrepared = (klass) => {\r\n  klass.prototype['isMigrationPrepared'] = async function() {\r\n    const res = await this.migrationDestination();\r\n    return res !== '0x0000000000000000000000000000000000000000';\r\n  }\r\n  return klass\r\n}\r\nconst isMigrationApproved = (klass) => {\r\n  klass.prototype['isMigrationApproved'] = async function() {\r\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\r\n    return poolAddress !== toChecksumAddress(this.contractAddress);\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getOpenzoneConfig = (klass) => {\r\n  klass.prototype['getOpenzoneConfig'] = async function () {\r\n    await this.init();\r\n    const [\r\n      extraInfo,\r\n      isMigrationPrepared,\r\n      isMigrationApproved,\r\n    ] = await Promise.all([\r\n      this.getPoolExtraInfo(),\r\n      this.isMigrationPrepared(),\r\n      this.isMigrationApproved(),\r\n    ]);\r\n    const hasMigration = false;\r\n    return {\r\n      pool: this.contractAddress,\r\n      targetPool: extraInfo.target_pool || '',\r\n      migrationTimestamp: extraInfo.migration_timestamp || '',\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      bToken: this.addresses.bTokenAddress,\r\n      bTokenSymbol: this.bTokenSymbol,\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: this.activeSymbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: extraInfo.block_number || '',\r\n      type: 'perpetual',\r\n      version: extraInfo.version || '',\r\n      versionId: \"v2_lite_dpmm\",\r\n      chainId: this.chainId,\r\n      hasMigration,\r\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\r\n      isMigrationApproved: hasMigration && isMigrationApproved,\r\n      isValid:\r\n        (!hasMigration && !isMigrationApproved),\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\n// reduce request for rest api\r\nconst getOpenzoneConfigAlt = (klass) => {\r\n  klass.prototype['getOpenzoneConfigAlt'] = async function () {\r\n    await this.init();\r\n    const [\r\n      isMigrationPrepared,\r\n      isMigrationApproved,\r\n    ] = await Promise.all([\r\n      this.isMigrationPrepared(),\r\n      this.isMigrationApproved(),\r\n    ]);\r\n    const hasMigration = false;\r\n    return {\r\n      pool: this.contractAddress,\r\n      //targetPool: extraInfo.targetPool ? extraInfo.targetPool : '',\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      bToken: this.addresses.bTokenAddress,\r\n      bTokenSymbol: this.bTokenSymbol,\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: this.activeSymbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      //initialBlock: extraInfo.block_number,\r\n      type: 'perpetual',\r\n      //version: extraInfo.version,\r\n      versionId: \"v2_lite_dpmm\",\r\n      chainId: this.chainId,\r\n      hasMigration,\r\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\r\n      isMigrationApproved: hasMigration && isMigrationApproved,\r\n      isValid:\r\n        (!hasMigration && !isMigrationApproved),\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nexport const perpetualPoolLiteAdapter = (klass) => {\r\n  //klass = processMethod(klass, \"getFundingPeriod\")\r\n\r\n  klass = addMethods(klass, [\r\n    init,\r\n\r\n    getConfig,\r\n    getLiquidity,\r\n    getLastTimestamp,\r\n    getProtocolFeeAccrued,\r\n    getStateValues,\r\n    getSymbols,\r\n    getPositions,\r\n    getDynamicEquity,\r\n    getPoolRequiredMargin,\r\n    getTraderMarginStatus,\r\n    isSymbolsUpdated,\r\n    isPositionsUpdated,\r\n    getTraderLiquidity,\r\n    formatTradeEvent,\r\n    _getSymbolPrices,\r\n\r\n    getPoolExtraInfo,\r\n    isMigrationPrepared,\r\n    isMigrationApproved,\r\n    getOpenzoneConfig,\r\n    getOpenzoneConfigAlt,\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [\r\n      processMethod,\r\n      'getParameters',\r\n      [\r\n        'poolMarginRatio',\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'minLiquidationReward',\r\n        'maxLiquidationReward',\r\n        'liquidationCutRatio',\r\n        'protocolFeeCollectRatio',\r\n      ],\r\n    ],\r\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\r\n    [processMethod, 'getFundingPeriod'],\r\n    [\r\n      processMethod,\r\n      'getSymbol',\r\n      [\r\n        'multiplier',\r\n        'feeRatio',\r\n        'fundingRateCoefficient',\r\n        'price',\r\n        'alpha',\r\n        'cumulativeFundingRate',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n      ],\r\n    ],\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['1']],\r\n    [processTxMethod, 'removeLiquidity', ['1']],\r\n    [processTxMethod, 'addMargin', ['1']],\r\n    [processTxMethod, 'removeMargin', ['1']],\r\n    [processTxMethod, 'trade', ['2']],\r\n  ]);\r\n\r\n  return klass;\r\n};\r\n\r\nexport const lTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'balanceOf'],\r\n    [processMethod, 'totalSupply'],\r\n  ]);\r\n};\r\n\r\nexport const pTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'getMargin'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n};\r\n\r\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    return klass\r\n}\r\n\r\n","/* eslint-disable */\r\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n/* eslint-enable */","import { ContractBase } from '../../shared/contract';\r\nimport { deleteIndexedKey, fromWeiForObject } from '../../shared/utils';\r\nimport { everlastingOptionViewerAbi } from './abis';\r\n\r\nexport class EverlastingOptionViewer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\r\n  }\r\n\r\n  // query\r\n  async _getTraderPortfolio(state, account) {\r\n    const res = await this._call('_getTraderPortfolio', [state, account]);\r\n    return res;\r\n  }\r\n  async _initState(poolAddress, oraclePrices) {\r\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\r\n    return res;\r\n  }\r\n  async _updateSymbolPrices(state) {\r\n    const res = await this._call('_updateSymbolPrices', [state]);\r\n    return res;\r\n  }\r\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        //'cumulativeDeltaFundingRate',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      symbolState,\r\n    };\r\n  }\r\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getTraderStates', [\r\n      poolAddress,\r\n      account,\r\n      oraclePrices,\r\n      oracleVolatilities,\r\n    ]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    const positionState = res[3].reduce((acc, i) => {\r\n      const position = fromWeiForObject(deleteIndexedKey(i), [\r\n        'volume',\r\n        'cost',\r\n        'pnl',\r\n        //'lastCumulativeDeltaFundingRate',\r\n        'lastCumulativeFundingRate',\r\n        //'deltaFundingAccrued',\r\n        'fundingAccrued',\r\n      ])\r\n      return acc.concat([position])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState: symbolState,\r\n      positionState: positionState,\r\n    };\r\n  }\r\n  async getVolatilityOracles(poolAddress) {\r\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n  async getPriceOracles(poolAddress) {\r\n    const res = await this._call('getPriceOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n\r\n  // tx\r\n}\r\n","import { ContractBase } from '../../shared/contract';\r\nimport { fromWei } from '../../shared/utils';\r\nimport { lTokenOptionAbi } from './abis.js';\r\n\r\nexport class LTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenOptionAbi);\r\n  }\r\n\r\n  // query\r\n  // async allowance(owner, spender) {\r\n  //   const res = await this._call('allowance', [owner, spender])\r\n  //   return res\r\n  // }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account]);\r\n    return fromWei(res);\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', []);\r\n    return res;\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', []);\r\n    return res;\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', []);\r\n    return res;\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', []);\r\n    return fromWei(res);\r\n  }\r\n\r\n  // tx\r\n  // async approve(accountAddress, spender, amount) {\r\n  //   return await this._transact('approve', [spender, amount], accountAddress)\r\n  // }\r\n  // async transfer(accountAddress, to, amount) {\r\n  //   return await this._transact('transfer', [to, amount], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, amount) {\r\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  // }\r\n}\r\n","import { ContractBase } from '../../shared/contract';\r\nimport { fromWei } from '../../shared/utils';\r\nimport { pTokenOptionAbi } from './abis.js'\r\n\r\nexport class PTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return res\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return res\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return res\r\n  }\r\n  async getApproved(tokenId) {\r\n    const res = await this._call('getApproved', [tokenId])\r\n    return res\r\n  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return fromWei(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return res\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return {\r\n      volume: fromWei(res[0]),\r\n      cost: fromWei(res[1]),\r\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\r\n    };\r\n }\r\n  async getTokenId(owner) {\r\n    const res = await this._call('getTokenId', [owner])\r\n    return res\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return res\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    const res = await this._call('isApprovedForAll', [owner, operator])\r\n    return res\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async ownerOf(tokenId) {\r\n    const res = await this._call('ownerOf', [tokenId])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async addMargin(accountAddress, owner, delta) {\r\n    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  }\r\n  async updateMargin(accountAddress, owner, margin) {\r\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  }\r\n  async updatePosition(accountAddress, owner, symbolId, position) {\r\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  }\r\n\r\n  // async approve(accountAddress, operator, tokenId) {\r\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  // }\r\n  // async setApprovalForAll(accountAddress, operator, approved) {\r\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  // }\r\n  // async toggleCloseOnly(accountAddress, symbolId) {\r\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n}","import { ContractBase } from '../../shared/contract';\r\nimport { fromWei } from '../../shared/utils';\r\n\r\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\r\n\r\nexport class OptionPricer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, optionPricerAbi)\r\n  }\r\n\r\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\r\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\r\n    return {\r\n      timeValue: fromWei(res.timeValue),\r\n      delta: fromWei(res.delta),\r\n    };\r\n  }\r\n}","import { factory } from '../../shared/utils';\r\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\r\nimport { LTokenOption } from '../contract/l_token_option';\r\nimport { PTokenOption } from '../contract/p_token_option';\r\nimport { OptionPricer } from '../contract/option_pricer';\r\n\r\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\r\nexport const lTokenOptionFactory = factory(LTokenOption);\r\nexport const pTokenOptionFactory = factory(PTokenOption);\r\nexport const optionPricerFactory = factory(OptionPricer);","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const volatilitiesCache = (function() {\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=['BTCUSD']){\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            //console.log('data', data)\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\n// export const volatilityCache = (function() {\r\n//   const cache = {}\r\n//   return {\r\n//     async get(symbol){\r\n//       const key = symbol\r\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\r\n//         const timestamp = Math.floor(Date.now()/1000)\r\n//         const res = await getPriceInfo(symbol, 'option')\r\n//         const data = deriToNatural(res.volatility).toString()\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp,\r\n//         }\r\n//         //console.log('new key')\r\n//         return cache[key].data\r\n//       } else {\r\n//         return cache[key].data\r\n//       }\r\n//     }\r\n//   }\r\n// })()\r\n\r\n// export const volatilitiesCache2 = async (symbols) => {\r\n//   return await Promise.all(\r\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\r\n//   )\r\n// }\r\n","import { ContractBase } from '../../shared/contract';\r\nimport {\r\n  deleteIndexedKey,\r\n  fromWeiForObject,\r\n  fromWei,\r\n  toWei,\r\n  naturalToDeri,\r\n  getBlockInfo,\r\n  deriToNatural,\r\n  bg,\r\n  max,\r\n } from '../../shared/utils';\r\nimport { getVolatilitySymbols, normalizeOptionSymbol } from '../../shared/config/token';\r\nimport { getPoolViewerConfig } from '../../shared/config/pool';\r\nimport { chainlinkOracleFactory, ERC20Factory\r\n } from '../../shared/contract/factory';\r\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\r\nimport {\r\n  everlastingOptionViewerFactory,\r\n  lTokenOptionFactory,\r\n  optionPricerFactory,\r\n  pTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { everlastingOptionAbi } from './abis.js';\r\n\r\nconst SECONDS_IN_A_DAY = 60 * 60 * 24\r\nconst _calculateDpmmPrice = (\r\n  indexPrice,\r\n  theoreticalPrice,\r\n  delta,\r\n  alpha,\r\n  tradersNetPosition,\r\n  liquidity\r\n) => {\r\n  let K = \"0\", dpmmPrice = \"0\";\r\n  if (bg(liquidity).gt(0)) {\r\n    K = bg(indexPrice)\r\n      .times(indexPrice)\r\n      .div(theoreticalPrice)\r\n      .times(bg(delta).abs())\r\n      .times(alpha)\r\n      .div(liquidity);\r\n  } \r\n  dpmmPrice = theoreticalPrice.times(\r\n    bg(1).plus(bg(K).times(tradersNetPosition))\r\n  );\r\n  return [K, dpmmPrice];\r\n};\r\n\r\nconst _queryTradeDpmm = (\r\n  tradersNetPosition,\r\n  theoreticalPrice,\r\n  tradePosition,\r\n  K\r\n) => {\r\n  const r = bg(tradersNetPosition)\r\n    .plus(tradePosition)\r\n    .pow(2)\r\n    .minus(bg(tradersNetPosition).pow(2))\r\n    .times(K)\r\n    .div(2)\r\n    .plus(bg(tradePosition));\r\n  return bg(theoreticalPrice).times(r);\r\n};\r\n\r\nexport class EverlastingOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionAbi);\r\n\r\n    // this.config = getPoolConfig(\r\n    //   contractAddress,\r\n    //   undefined,\r\n    //   undefined,\r\n    //   'option'\r\n    // );\r\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    // this.offchainSymbols = this.config.offchainSymbols;\r\n    // this.volatilitySymbols = this.config.volatilitySymbols;\r\n    // this.bTokenAddress = this.config.bToken;\r\n    // this.lTokenAddress = this.config.lToken;\r\n    // this.pTokenAddress = this.config.pToken;\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\r\n  }\r\n  async init(usedByEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.pToken) {\r\n      [this.addresses, this.parameters] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n      ]);\r\n      //console.log(this.addresses, this.parameters, this.state)\r\n      const {\r\n        pTokenAddress,\r\n        lTokenAddress,\r\n        optionPricerAddress,\r\n        bTokenAddress,\r\n      } = this.addresses;\r\n      this.lToken = lTokenOptionFactory(this.chainId, lTokenAddress);\r\n      this.pToken = pTokenOptionFactory(this.chainId, pTokenAddress);\r\n      this.pricer = optionPricerFactory(this.chainId, optionPricerAddress);\r\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\r\n      this.viewer = everlastingOptionViewerFactory(\r\n        this.chainId,\r\n        this.viewerAddress\r\n      );\r\n      this.bTokenSymbol = await this.bToken.symbol();\r\n      this.fundingPeriod = bg(1).div(365).toString();\r\n      this.fundingCoefficient = bg(1).div(24).div(3600).toString();\r\n    }\r\n    if (!usedByEstimatedApi) {\r\n      const symbolIds = await this.pToken.getActiveSymbolIds();\r\n      if (\r\n        !this.activeSymbolIds ||\r\n        this.activeSymbolIds.toString() !== symbolIds.toString()\r\n      ) {\r\n        this.activeSymbolIds = symbolIds;\r\n\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n        const ttt = await volatilitiesCache.get(this.activeSymbolNames)\r\n        const symbolVolatilities = ttt.map((v) => v.volatility);\r\n        const state = await this.viewer.getPoolStates(\r\n          this.contractAddress,\r\n          [],\r\n          symbolVolatilities\r\n        );\r\n        const { symbolState } = state;\r\n\r\n        // update state\r\n        //this.activeSymbolIds = activeSymbolIds;\r\n        this.activeSymbols = symbolState.filter((s) =>\r\n          this.activeSymbolIds.includes(s.symbolId)\r\n        );\r\n        // for tx use\r\n        this.volatilitySymbols = getVolatilitySymbols(\r\n          this.symbols.map((s) => s.symbol)\r\n        );\r\n      }\r\n      this.state = await this.getPoolStateValues();\r\n      this.state.preTimestamp = this.state.lastTimestamp;\r\n      this.state.curTimestamp = Math.floor(Date.now() / 1000).toString();\r\n      this.userState = {}\r\n    }\r\n  }\r\n\r\n  // query\r\n  // async OptionPricer() {\r\n  //   const res = await this._call('OptionPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async PmmPricer() {\r\n  //   const res = await this._call('PmmPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async _T() {\r\n  //   const res = await this._call('_T', []);\r\n  //   return fromWei(res);\r\n  // }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getLastTimestamp() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1];\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return fromWei(res[0]);\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return {\r\n      liquidity: fromWei(res[0]),\r\n      lastTimestamp: res[1],\r\n      protocolFeeAccrued: fromWei(res[2]),\r\n    };\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'initialMarginRatio',\r\n      'liquidationCutRatio',\r\n      'maintenanceMarginRatio',\r\n      'maxLiquidationReward',\r\n      'minLiquidationReward',\r\n      'minPoolMarginRatio',\r\n      'protocolFeeCollectRatio',\r\n    ]);\r\n  }\r\n  // async getProtocolFeeAccrued() {\r\n  //   const res = await this._call('getPoolStateValues', []);\r\n  //   return fromWei(res[2])\r\n  // }\r\n\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'strikePrice',\r\n      'multiplier',\r\n      'feeRatioITM',\r\n      'feeRatioOTM',\r\n      'alpha',\r\n      'tradersNetVolume',\r\n      'tradersNetCost',\r\n      'cumulativeFundingRate',\r\n    ]);\r\n  }\r\n  async getSymbols(volatilities = []) {\r\n    const symbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, i) => acc.concat([this.getSymbol(i)]),\r\n        []\r\n      )\r\n    );\r\n    const symbolIndexPrices = await Promise.all(\r\n      symbols.reduce(\r\n        (acc, s) => [\r\n          ...acc,\r\n          chainlinkOracleFactory(this.chainId, s.oracleAddress).getPrice(),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n    if (volatilities.length !== this.activeSymbolIds.length) {\r\n      // volatilities = await Promise.all(\r\n      //   symbols.reduce(\r\n      //     (acc, s) => [\r\n      //       ...acc,\r\n      //       offChainVolatilityOracleFactory(\r\n      //         this.chainId,\r\n      //         s.volatilityAddress\r\n      //       ).volatility(),\r\n      //     ],\r\n      //     []\r\n      //   )\r\n      // );\r\n      volatilities = (\r\n        await volatilitiesCache.get(this.activeSymbolNames)\r\n      ).map((v) => deriToNatural(v.volatility).toString());\r\n    }\r\n    const timeValues = await Promise.all(\r\n      symbols.reduce(\r\n        (acc, s, index) => [\r\n          ...acc,\r\n          this.pricer.getEverlastingTimeValueAndDelta(\r\n            toWei(symbolIndexPrices[index]),\r\n            toWei(s.strikePrice),\r\n            toWei(volatilities[index]),\r\n            toWei(this.fundingPeriod)\r\n          ),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n    let dynamicEquity = this.state.liquidity;\r\n    for (let i = 0; i < symbols.length; i++) {\r\n      const s = symbols[i];\r\n      s.tradersNetPosition = bg(s.tradersNetVolume)\r\n        .times(s.multiplier)\r\n        .toString();\r\n      s.indexPrice = symbolIndexPrices[i];\r\n      s.volatility = volatilities[i];\r\n      s.intrinsicValue = s.isCall\r\n        ? max(bg(s.indexPrice).minus(s.strikePrice), 0).toString()\r\n        : max(bg(s.strikePrice).minus(s.indexPrice), 0).toString();\r\n      s.timeValue = timeValues[i].timeValue;\r\n      s.theoreticalPrice = bg(s.intrinsicValue).plus(s.timeValue).toString();\r\n      s.delta = timeValues[i].delta;\r\n      if (bg(s.intrinsicValue).gt(0)) {\r\n        if (s.isCall) {\r\n          s.delta = bg(s.delta).plus(1).toString();\r\n        } else {\r\n          s.delta = bg(s.delta).minus(1).toString();\r\n        }\r\n      } else if (bg(s.indexPrice).eq(s.strikePrice)) {\r\n        s.delta = bg(1).div(2).toString();\r\n      }\r\n      const [K, dpmmPrice] = _calculateDpmmPrice(\r\n        s.indexPrice,\r\n        bg(s.intrinsicValue).plus(s.timeValue),\r\n        s.delta,\r\n        s.alpha,\r\n        bg(s.tradersNetVolume).times(s.multiplier),\r\n        this.state.liquidity\r\n      );\r\n      s.K = K.toString();\r\n      s.dpmmPrice = dpmmPrice.toString();\r\n      const cost = _queryTradeDpmm(\r\n        s.tradersNetPosition,\r\n        s.theoreticalPrice,\r\n        bg(s.tradersNetPosition).negated().toString(),\r\n        s.K\r\n      ).negated();\r\n      s.pnl = cost.minus(s.tradersNetCost).toString();\r\n      dynamicEquity = bg(dynamicEquity).minus(s.pnl).toString();\r\n      s.fundingPerSecond = bg(s.dpmmPrice)\r\n        .minus(s.intrinsicValue)\r\n        .times(s.multiplier)\r\n        .times(this.fundingCoefficient)\r\n        .toString();\r\n      s.fundingPerVolume = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\r\n      s.funding = bg(s.fundingPerVolume).div(s.multiplier).toString()\r\n      const offset2 = bg(s.fundingPerSecond).times(\r\n        bg(this.state.curTimestamp).minus(this.state.preTimestamp)\r\n      );\r\n      // console.log('offset2', offset2.toString())\r\n      s.cumulativeFundingRate = bg(s.cumulativeFundingRate).plus(offset2).toString()\r\n    }\r\n\r\n    this.state.dynamicEquity = dynamicEquity;\r\n    this.symbols = symbols\r\n\r\n    return symbols;\r\n  }\r\n\r\n  async getPositions(accountAddress) {\r\n    const positions = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(accountAddress, symbolId)],\r\n        []\r\n      )\r\n    );\r\n    let totalPnl = '0', totalFundingAccrued = '0'\r\n    for (let i = 0; i < positions.length; i++) {\r\n      // const cost = bg(positions[i].volume).times(this.symbols[i].dpmmPrice).times(this.symbols[i].multiplier).toString()\r\n      const cost = _queryTradeDpmm(\r\n        this.symbols[i].tradersNetPosition,\r\n        this.symbols[i].theoreticalPrice,\r\n        bg(positions[i].volume)\r\n          .times(this.symbols[i].multiplier)\r\n          .negated()\r\n          .toString(),\r\n        this.symbols[i].K\r\n      )\r\n        .negated()\r\n        .toString();\r\n      positions[i].pnl = bg(cost).minus(positions[i].cost).toString();\r\n      positions[i].fundingAccrued = bg(positions[i].volume)\r\n        .times(\r\n          bg(this.symbols[i].cumulativeFundingRate).minus(\r\n            positions[i].lastCumulativePremiumFundingRate\r\n          )\r\n        )\r\n        .toString();\r\n      totalPnl = bg(totalPnl).plus(positions[i].pnl).toString()\r\n      totalFundingAccrued = bg(totalFundingAccrued).plus(positions[i].fundingAccrued).toString()\r\n    }\r\n    this.userState.totalPnl = totalPnl\r\n    this.userState.totalFundingAccrued = totalFundingAccrued\r\n    this.positions = positions\r\n\r\n    return positions\r\n  }\r\n\r\n  // tx\r\n  async _getVolSymbolPrices() {\r\n    await this._init();\r\n    let volatilities = [];\r\n    let oracleSymbols = [];\r\n    if (this.volatilitySymbols.length > 0) {\r\n      const volatilityInfos = await getOracleVolatilitiesForOption(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\r\n        const oracleSymbol = normalizeOptionSymbol(\r\n          this.activeSymbolNames[index]\r\n        );\r\n        if (!oracleSymbols.includes(oracleSymbol)) {\r\n          oracleSymbols.push(oracleSymbol);\r\n          acc.push([\r\n            this.activeSymbolIds[index],\r\n            p.timestamp,\r\n            p.volatility,\r\n            parseInt(p.v).toString(),\r\n            p.r,\r\n            p.s,\r\n          ]);\r\n        }\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return volatilities;\r\n  }\r\n\r\n  async addLiquidity(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, lShares) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    let amount = naturalToDeri(lShares);\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [amount, prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(bAmount)],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(tradeVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // trade history\r\n  async formatTradeEvent(event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume).toString();\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const indexPrice = deriToNatural(info.indexPrice).toString();\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    if (index > -1) {\r\n      const symbol = this.symbols[index];\r\n      const tradeFee = info.tradeFee;\r\n\r\n      const direction =\r\n        tradeFee !== '-1'\r\n          ? bg(tradeVolume).gt(0)\r\n            ? 'LONG'\r\n            : 'SHORT'\r\n          : 'LIQUIDATION';\r\n      const price = bg(info.tradeCost)\r\n        .div(info.tradeVolume)\r\n        .div(symbol.multiplier)\r\n        .toString();\r\n      const notional = bg(tradeVolume)\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n      const contractValue = bg(tradeVolume)\r\n        .abs()\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n\r\n      const res = {\r\n        symbolId: info.symbolId,\r\n        symbol: symbol.symbol,\r\n        trader: info.trader,\r\n        direction,\r\n        volume: bg(tradeVolume).abs().toString(),\r\n        price,\r\n        indexPrice,\r\n        notional,\r\n        contractValue,\r\n        transactionFee:\r\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\r\n        transactionHash: event.transactionHash,\r\n        time: block.timestamp * 1000,\r\n        extra: {},\r\n      };\r\n      //console.log(JSON.stringify(res));\r\n      return res;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { factory } from '../../shared/utils';\r\nimport { EverlastingOption } from '../contract/everlasting_option';\r\n\r\nexport const everlastingOptionFactory = factory(EverlastingOption);","import {\r\n  bg,\r\n  max,\r\n  catchApiError,\r\n  fromWei,\r\n} from '../../shared/utils';\r\nimport { fundingRateCache } from '../../shared/api/api_globals';\r\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\r\nimport { queryTradePMM } from '../calculation/PMM2';\r\nimport {\r\n  dynamicInitialMarginRatio,\r\n  dynamicInitialPoolMarginRatio,\r\n  getAverageEntryPrice,\r\n  //getDeltaFundingPerSecond,\r\n  getLiquidationPrice,\r\n  getLiquidationPrices,\r\n  getMarginHeldBySymbol,\r\n} from '../calculation/trade';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport {\r\n  checkApiInput,\r\n  checkApiInputWithoutAccount,\r\n} from '../../shared/config';\r\n\r\n//\r\nconst SECONDS_IN_A_DAY = 86400;\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress)\r\n      //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init();\r\n      const [symbolInfo2, poolInfo2] = await Promise.all([\r\n        optionPool.getSymbol(symbolId),\r\n        optionPool.getParameters(),\r\n      ]);\r\n\r\n      const symbols = optionPool.activeSymbols\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        symbols.map((s) => s.symbol)\r\n      );\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { symbolState } = state;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbolInfo = symbolState[symbolIndex];\r\n      const { dynamicMarginRatio, isCall } =\r\n        symbolInfo;\r\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\r\n      const {\r\n        initialMarginRatio,\r\n        maintenanceMarginRatio,\r\n        minLiquidationReward,\r\n        maxLiquidationReward,\r\n        liquidationCutRatio,\r\n        protocolFeeCollectRatio,\r\n      } = poolInfo2;\r\n\r\n      return {\r\n        symbol,\r\n        bTokenSymbol: optionPool.bTokenSymbol,\r\n        multiplier: multiplier.toString(),\r\n        feeRatioOTM: feeRatioOTM.toString(),\r\n        feeRatioITM: feeRatioITM.toString(),\r\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\r\n        initialMarginRatio: dynamicMarginRatio.toString(),\r\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\r\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\r\n          .times(maintenanceMarginRatio)\r\n          .div(initialMarginRatio)\r\n          .toString(),\r\n        minLiquidationReward: minLiquidationReward.toString(),\r\n        maxLiquidationReward: maxLiquidationReward.toString(),\r\n        liquidationCutRatio: liquidationCutRatio.toString(),\r\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n        isCall: isCall,\r\n        indexConstituents: getIndexInfo(symbol),\r\n      };\r\n    },\r\n    args,\r\n    {}\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      // const { symbol: symbolName} = getPoolConfig(\r\n      //   poolAddress,\r\n      //   undefined,\r\n      //   symbolId,\r\n      //   'option'\r\n      // );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.symbols\r\n      const symbolName = symbols.find((s) => s.symbolId === symbolId).symbol\r\n      let symbolVolatilities = []\r\n      if (symbols && symbols.length > 0) {\r\n        [symbolVolatilities] = await Promise.all([\r\n          volatilitiesCache.get(\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\r\n        ]);\r\n      }\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { poolState, symbolState, traderState, positionState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, totalPnl, initialMargin } = traderState;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\r\n      const symbol = symbolState[symbolIndex];\r\n      const position = positionState[symbolIndex];\r\n      const price = await wrappedOracleFactory(\r\n        chainId,\r\n        symbol.oracleAddress\r\n      ).getPrice();\r\n      return {\r\n        symbolId,\r\n        symbol: symbolName,\r\n        price,\r\n        strikePrice: symbol.strikePrice.toString(),\r\n        timePrice: symbol.timeValue.toString(),\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\r\n        margin: margin.toString(),\r\n        marginHeld: initialMargin.toString(),\r\n        marginHeldBySymbol: getMarginHeldBySymbol(\r\n          position.volume,\r\n          price,\r\n          symbol,\r\n          initialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: totalPnl,\r\n        unrealizedPnlList: symbolState\r\n          .filter((s, index) => positionState[index].pnl !== '0')\r\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\r\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\r\n        isCall: symbol.isCall,\r\n        volatility: bg(volPrice).times(100).toString(),\r\n        liquidationPrice: getLiquidationPrice(state, symbolId),\r\n      };\r\n    },\r\n    args,\r\n    {}\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols\r\n      let [symbolVolatilities] = await Promise.all([\r\n        volatilitiesCache.get(\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\r\n      ]);\r\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\r\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, traderState, positionState, symbolState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, initialMargin } = traderState;\r\n      const prices = await Promise.all(\r\n        symbols.reduce(\r\n          (acc, s) =>\r\n            acc.concat([\r\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\r\n            ]),\r\n          []\r\n        )\r\n      );\r\n\r\n      const liquidationPrices = getLiquidationPrices(state);\r\n      return symbols\r\n        .filter((s) => positionState[s.symbolId].volume !== '0')\r\n        .map((s) => {\r\n          const vIndex = symbolState.findIndex(\r\n            (oS) => oS.symbolId === s.symbolId\r\n          );\r\n          return {\r\n            symbolId: s.symbolId,\r\n            symbol: s.symbol,\r\n            price: prices[vIndex],\r\n            // strikePrice: s.strikePrice.toString(),\r\n            // timePrice: s.timeValue.toString(),\r\n            volume: bg(positionState[vIndex].volume)\r\n              .times(symbolState[vIndex].multiplier)\r\n              .toString(),\r\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\r\n            margin: margin.toString(),\r\n            marginHeld: initialMargin.toString(),\r\n            marginHeldBySymbol: getMarginHeldBySymbol(\r\n              positionState[vIndex].volume,\r\n              prices[vIndex],\r\n              s,\r\n              initialMarginRatio\r\n            ).toString(),\r\n            unrealizedPnl: positionState[vIndex].pnl,\r\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\r\n            isCall: s.isCall,\r\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\r\n            liquidationPrice: liquidationPrices,\r\n          };\r\n        });\r\n    },\r\n    args,\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init();\r\n      // const { bToken: bTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      const balance = await optionPool.bToken.balanceOf(\r\n        accountAddress\r\n      );\r\n      return balance.toString();\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init();\r\n      //const bToken = bTokenFactory(chainId, bTokenAddress);\r\n      return await optionPool.bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool.init();\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n  const symbols = optionPool.activeSymbols;\r\n  const symbolVolatilities = (\r\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  ).map((v) => v.volatility);\r\n  const state = await optionPool.viewer.getPoolStates(\r\n    poolAddress,\r\n    [],\r\n    symbolVolatilities\r\n  );\r\n  const { poolState, symbolState } = state;\r\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\r\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\r\n  if (curSymbolIndex < 0) {\r\n    throw new Error(\r\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n    );\r\n  }\r\n  const symbolInfo = symbolState[curSymbolIndex];\r\n\r\n  const prices = await Promise.all(\r\n    symbolState.reduce(\r\n      (acc, s) =>\r\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\r\n      []\r\n    )\r\n  );\r\n\r\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\r\n    return acc.plus(\r\n      bg(s.tradersNetVolume)\r\n        .times(prices[index])\r\n        .times(s.multiplier)\r\n        .abs()\r\n        .times(\r\n          dynamicInitialPoolMarginRatio(\r\n            prices[index],\r\n            s.strikePrice,\r\n            s.isCall,\r\n            initialMarginRatio\r\n          )\r\n        )\r\n    );\r\n  }, bg(0));\r\n\r\n  const res = {\r\n    initialMarginRatio,\r\n    symbolIds: optionPool.activeSymbolIds,\r\n    symbols: symbolState,\r\n    liquidity,\r\n    totalDynamicEquity,\r\n    prices,\r\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\r\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\r\n      .div(symbolInfo.multiplier)\r\n      .times(SECONDS_IN_A_DAY)\r\n      .toString(),\r\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\r\n      symbolInfo.multiplier\r\n    ),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const symbolInfo = await optionPool.getSymbol(symbolId);\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { symbolIds, symbols } = res;\r\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      const symbol = symbols[curSymbolIndex];\r\n      let fee\r\n      const intrinsicValue = symbol.isCall\r\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\r\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\r\n      if (bg(intrinsicValue).gt(0)) {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.spotPrice)\r\n          .times(symbolInfo.feeRatioITM)\r\n          .toString();\r\n      } else {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.timeValue)\r\n          .times(symbolInfo.feeRatioOTM)\r\n          .toString();\r\n      }\r\n      return fee\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  const [parameterInfo, symbol] = await Promise.all([\r\n    optionPool.getParameters(),\r\n    optionPool.getSymbol(symbolId),\r\n  ]);\r\n  const price = await wrappedOracleFactory(\r\n    chainId,\r\n    symbol.oracleAddress\r\n  ).getPrice();\r\n  const { initialMarginRatio } = parameterInfo;\r\n  const marginRatio = dynamicInitialMarginRatio(\r\n    price,\r\n    symbol.strikePrice,\r\n    symbol.isCall,\r\n    initialMarginRatio\r\n  );\r\n  //console.log(marginRatio, symbol.multiplier, price, volume)\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(marginRatio);\r\n};\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      return {\r\n        premiumFunding0: bg(res.premiumFunding).toString(),\r\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\r\n        liquidity: res.liquidity.toString(),\r\n        volume: '-',\r\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\r\n      };\r\n    },\r\n    args,\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async () => {\r\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      // if (!res) {\r\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      // }\r\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\r\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      // if (curSymbolIndex < 0) {\r\n      //   throw new Error(\r\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n      //   );\r\n      // }\r\n      // let symbol = symbols[curSymbolIndex];\r\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\r\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\r\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\r\n      // const deltaFunding1 = getdeltaFundingPerSecond(\r\n      //   symbol,\r\n      //   symbol.delta,\r\n      //   prices[curSymbolIndex],\r\n      //   totalDynamicEquity,\r\n      //   newNetVolume\r\n      // );\r\n\r\n      return {\r\n        // deltaFunding1: bg(deltaFunding1)\r\n        //   .div(symbol.multiplier)\r\n        //   .times(SECONDS_IN_A_DAY)\r\n        //   .toString(),\r\n      };\r\n    },\r\n    args,\r\n    {\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      console.log('res', res.liquidityUsed.toString())\r\n      return {\r\n        liquidityUsed0: bg(res.liquidityUsed).times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    {}\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\r\n\r\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\r\n        if (symbolIds[index] == symbolId) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        }\r\n      }, bg(0));\r\n      return {\r\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\r\n          .div(liquidity)\r\n          .times(100)\r\n          .toString(),\r\n      };\r\n    },\r\n    args,\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init();\r\n      const symbolVolatilities = (await volatilitiesCache.get(\r\n        optionPool.activeSymbols.map((s) => s.symbol)\r\n      )).map((v) => v.volatility);\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      //const { liquidity } = poolState;\r\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      if (index > -1) {\r\n        const {\r\n          tradersNetVolume,\r\n          multiplier,\r\n          intrinsicValue,\r\n          timeValue,\r\n          K,\r\n        } = symbolState[index];\r\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\r\n        const args = [\r\n          bg(tradersNetVolume).times(multiplier).toNumber(),\r\n          bg(intrinsicValue).plus(timeValue).toNumber(),\r\n          bg(K).toNumber(),\r\n          bg(newNetVolume).times(multiplier).toNumber(),\r\n        ]\r\n\r\n        const res = queryTradePMM(...args);\r\n        //console.log('res', res)\r\n        return bg(res).div(newNetVolume).div(multiplier).toString();\r\n      } else {\r\n        console.log(\r\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\r\n        );\r\n        return '';\r\n      }\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\n// getVolatility\r\nexport const getVolatility = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init();\r\n      const symbols = optionPool.activeSymbols\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        symbols.map((s) => s.symbol)\r\n      );\r\n      const symbolIndex = symbols.findIndex((s) => s.symbolId === symbolId);\r\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\r\n      return bg(volPrice).times(100).toString()\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n","import { DeriEnv } from \"../shared/config/env\";\r\nimport { checkEnv, checkChainId } from \"../shared/config\";\r\n\r\nexport const openPoolChainIds = (env) => {\r\n  env = checkEnv(env)\r\n  const configs = {\r\n    prod: ['56'],\r\n    dev: ['97'],\r\n    testnet: ['97'],\r\n  }\r\n  return configs[env]\r\n};\r\n\r\nexport const getPoolV2LiteManagerConfig = (chainId) => {\r\n  chainId = checkChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\r\n        initialBlock: \"10133599\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n    testnet: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\nexport const getPoolV2LiteManagerDpmmConfig = (chainId) => {\r\n  chainId = checkChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x0000000000000000000000000000000000000000\",\r\n        initialBlock: \"0\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0xC02d12bAf07E03412847671727334E13C437DDdb\",\r\n        initialBlock: \"13986219\",\r\n      },\r\n    ],\r\n    testnet: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0xC02d12bAf07E03412847671727334E13C437DDdb\",\r\n        initialBlock: \"13986219\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerDpmmConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\r\n  chainId = checkChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\r\n        initialBlock: '11017943',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\r\n        initialBlock: '12440610',\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\n\r\nexport const expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller_\",\"type\":\"address\"},{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { chainlinkFeedAbi } from './abis';\r\n\r\nexport class ChainlinkFeed extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, chainlinkFeedAbi);\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('description');\r\n    return res.split('/').map((s) => s.trim()).join('')\r\n  }\r\n}\r\n","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\r\n\r\nexport class OracleFactoryChainlink extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getFeed(symbol) {\r\n    const res = await this._call('getFeed', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol) {\r\n    return await this._transact('createOracle', [symbol], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryOffChainAbi = [\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateVolatilityOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\r\n\r\nexport class OracleFactoryOffChain extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getVolatilityOracle(symbol) {\r\n    const res = await this._call('getVolatilityOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolLiteManagerDpmmAbi = [\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"protocolFeeCollector_\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"protocolFeeCollectRatio_\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oldController\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"newController\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"ChangeController\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"creator\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sourcePool\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"targetPool\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateMigrationPool\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"creator\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"pool\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreatePool\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"claimNewController\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"controller\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"createMigrationPool\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256[7]\",\r\n        \"name\": \"parameters\",\r\n        \"type\": \"uint256[7]\"\r\n      },\r\n      { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"pairedTokenAddress\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"createPool\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"getNumPools\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"poolTemplate\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"name\": \"pools\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"protocolFeeCollectRatio\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"protocolFeeCollector\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"setNewController\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"newTemplate\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"setPoolTemplate\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"newCollector\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"setProtocolFeeCollector\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"newProtocolFeeCollectRatio\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"setProtocolFeeCutRatio\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolLiteManagerDpmmAbi } from '../abi/perpetualPoolLiteManagerDpmmAbi.js'\r\n\r\nexport class PerpetualPoolLiteManagerDpmm extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerDpmmAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async poolTemplate() {\r\n  //    const res = await this._call('poolTemplate', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async protocolFeeCollectRatio() {\r\n  //    const res = await this._call('protocolFeeCollectRatio', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  async createMigrationPool(accountAddress, sourcePool) {\r\n    return await this._transact('createMigrationPool', [sourcePool], accountAddress)\r\n  }\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setPoolTemplate(accountAddress, newTemplate) {\r\n  //    return await this._transact('setPoolTemplate', [newTemplate], accountAddress)\r\n  //  }\r\n  //  async setProtocolFeeCollector(accountAddress, newCollector) {\r\n  //    return await this._transact('setProtocolFeeCollector', [newCollector], accountAddress)\r\n  //  }\r\n  //  async setProtocolFeeCutRatio(accountAddress, newProtocolFeeCollectRatio) {\r\n  //    return await this._transact('setProtocolFeeCutRatio', [newProtocolFeeCollectRatio], accountAddress)\r\n  //  }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\r\n\r\nexport const isProdChain = (chainId) => {\r\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\r\n};\r\n\r\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\r\n\r\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = \"get_signed_price\";\r\n  if (type === \"option\") {\r\n    method = \"get_signed_volatility\";\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = \"get_price\";\r\n    symbol = `${symbol}_v2_bsc`;\r\n  }\r\n  let baseUrl = isProdChain(chainId)\r\n    ? `https://oracle4.deri.finance/${method}`\r\n    : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceInfos = async (chainId, symbolList) => {\r\n  let url = getOracleServerUrl(chainId);\r\n  let retry = 3;\r\n  //console.log('url', url)\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n        return priceInfo.data;\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(\r\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\r\n        priceInfo\r\n      )}`\r\n    );\r\n  }\r\n};\r\n","import { bg } from \"../shared/utils\";\r\n\r\nexport const calculateK = (indexPrice, liquidity, alpha) => {\r\n  return bg(indexPrice).times(alpha).div(liquidity);\r\n};\r\nexport const calculateDpmmPrice = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\r\n  );\r\n};\r\nexport const calculateDpmmCost = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  tradeVolume\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(multiplier)\r\n      .times(tradersNetVolume)\r\n      .plus(bg(multiplier).times(tradeVolume))\r\n      .pow(2)\r\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\r\n      .times(K)\r\n      .div(2)\r\n      .plus(bg(tradeVolume).times(multiplier))\r\n  );\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[7]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[7]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[5]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[5]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getFundingPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"poolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setFundingPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock;\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getFundingPeriod() {\r\n    const res = await this._call('getFundingPeriod', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return deleteIndexedKey(res);\r\n  }\r\n   async migrationDestination() {\r\n     const res = await this._call('migrationDestination', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n   async migrationTimestamp() {\r\n     const res = await this._call('migrationTimestamp', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n\r\n  // tx\r\n  async addLiquidity(accountAddress, bAmount, prices) {\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bAmount, prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact('addMargin', [bAmount], accountAddress);\r\n  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  // async executeMigration(accountAddress, source) {\r\n  //   return await this._transact('executeMigration', [source], accountAddress)\r\n  // }\r\n  //  async liquidate(accountAddress, account, prices) {\r\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, pTokenId, prices) {\r\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, lShares, prices) {\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [lShares, prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount, prices) {\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [bAmount, prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  //  async setFundingPeriod(accountAddress, period) {\r\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, tradeVolume, prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // open zone methods\r\n  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  }\r\n   async removeSymbol(accountAddress, symbolId) {\r\n     return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n   }\r\n  async prepareMigration(accountAddress, target, graceDays) {\r\n    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  }\r\n  async approveMigration(accountAddress) {\r\n    return await this._transact('approveMigration', [], accountAddress)\r\n  }\r\n  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\r\n    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\r\n  }\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const lTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async allowance(owner, spender) {\r\n  //    const res = await this._call('allowance', [owner, spender])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, spender, amount) {\r\n  //    return await this._transact('approve', [spender, amount], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, account, amount) {\r\n  //    return await this._transact('mint', [account, amount], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const pTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"delta\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getActiveSymbolIds\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getNumPositionHolders\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isActiveSymbolId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"margin\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\r\n\r\nexport class PTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addMargin(accountAddress, owner, delta) {\r\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  //  }\r\n  //  async addSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async removeSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, margin) {\r\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport {\r\n  perpetualPoolLiteAdapter,\r\n  lTokenLiteAdapter,\r\n  pTokenLiteAdapter,\r\n} from \"./adapter.js\";\r\n\r\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\r\nimport { LTokenLite } from './gen/LTokenLite.js';\r\nimport { PTokenLite } from './gen/PTokenLite.js';\r\n\r\n\r\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\r\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\r\n);\r\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\r\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\r\n","import {\r\n  deriToNatural,\r\n  fetchJson,\r\n  getHttpBase,\r\n  toChecksumAddress,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport { ContractBase, ERC20Factory} from '../../shared/contract';\r\nimport { normalizeSymbolUnit } from '../../shared/config/token';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { PTokenLite } from './p_token';\r\nimport { perpetualPoolLiteDpmmFactory } from '../../v2_lite_dpmm/contract/factory';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async init() {\r\n    await this._init();\r\n    if (!this.pTokenAddress || !this.pToken) {\r\n      await this.updateAddresses();\r\n      // console.log(this.addresses, this.parameters)\r\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\r\n    }\r\n  }\r\n\r\n  async updateAddresses() {\r\n    if (!this.bTokenAddress || !this.pTokenAddress) {\r\n      const res = await this._call('getAddresses');\r\n      // update this state\r\n      this.bTokenAddress = res.bTokenAddress;\r\n      this.lTokenAddress = res.lTokenAddress;\r\n      this.pTokenAddress = res.pTokenAddress;\r\n    }\r\n  }\r\n\r\n  async controller() {\r\n    const res = await this._call('controller');\r\n    return res;\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return {\r\n      symbol: res.symbol,\r\n      oracleAddress: res.oracleAddress,\r\n      multiplier: deriToNatural(res.multiplier),\r\n      feeRatio: deriToNatural(res.feeRatio),\r\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n      price: deriToNatural(res.price),\r\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n      tradersNetCost: deriToNatural(res.tradersNetCost),\r\n    };\r\n  }\r\n  async getSymbols() {\r\n    await this.updateAddresses();\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\r\n    }\r\n    // update this state\r\n    this.symbolIds = await this.pToken.getActiveSymbolIds();\r\n    this.symbols = await Promise.all(\r\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n    );\r\n    return this.symbols;\r\n  }\r\n\r\n  async getBTokenSymbol() {\r\n    await this.updateAddresses();\r\n    if (!this.bToken) {\r\n      this.bToken = ERC20Factory(this.chainId, this.bTokenAddress);\r\n    }\r\n    // update this state\r\n    this.bTokenSymbol = await this.bToken.symbol();\r\n    return this.bTokenSymbol;\r\n  }\r\n\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res);\r\n  }\r\n\r\n  async migrationDestination() {\r\n    const res = await this._call('migrationDestination');\r\n    return res;\r\n  }\r\n\r\n  async migrationTimestamp() {\r\n    const res = await this._call('migrationTimestamp');\r\n    return res;\r\n  }\r\n\r\n  async isMigrationPrepared() {\r\n    const res = await this.migrationDestination();\r\n    return res !== '0x0000000000000000000000000000000000000000';\r\n  }\r\n\r\n  async isMigrationApproved() {\r\n    await this.init();\r\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\r\n    return poolAddress !== toChecksumAddress(this.contractAddress);\r\n  }\r\n  async isMigrationExecuted() {\r\n    await this.init();\r\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\r\n    if (poolAddress !== toChecksumAddress(this.contractAddress)) {\r\n      const pool = await perpetualPoolLiteDpmmFactory(\r\n        this.chainId,\r\n        poolAddress\r\n      );\r\n      const { liquidity } = await pool.getStateValues();\r\n      return bg(liquidity).gt(0);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getPoolExtraInfo() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`;\r\n    const res = await fetchJson(url);\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data;\r\n    } else {\r\n      return {\r\n        chain_id: this.chainId,\r\n        pool: this.contractAddress,\r\n        block_number: '1000000000',\r\n        version: '',\r\n        target_pool: '',\r\n        migration_timestamp: '',\r\n      };\r\n    }\r\n  }\r\n\r\n  async getConfig() {\r\n    const [\r\n      bToken,\r\n      symbols,\r\n      extraInfo,\r\n      isMigrationPrepared,\r\n      isMigrationApproved,\r\n      isMigrationExecuted,\r\n    ] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      this.getPoolExtraInfo(),\r\n      this.isMigrationPrepared(),\r\n      this.isMigrationApproved(),\r\n      this.isMigrationExecuted(),\r\n    ]);\r\n    const hasMigration = true;\r\n    return {\r\n      pool: this.contractAddress,\r\n      targetPool: extraInfo.target_pool || '',\r\n      migrationTimestamp: extraInfo.migration_timestamp || '',\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: extraInfo.block_number || '',\r\n      type: 'future',\r\n      version: extraInfo.version || '',\r\n      versionId: 'v2_lite',\r\n      chainId: this.chainId,\r\n      hasMigration,\r\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\r\n      isMigrationApproved: hasMigration && isMigrationApproved,\r\n      isMigrationExecuted: hasMigration && isMigrationExecuted,\r\n      isValid:\r\n        !(hasMigration && isMigrationExecuted) ||\r\n        (!hasMigration && !isMigrationApproved),\r\n    };\r\n  }\r\n\r\n  // reduce rest api call\r\n  async getConfigAlt() {\r\n    const [\r\n      bToken,\r\n      symbols,\r\n      //extraInfo,\r\n      isMigrationPrepared,\r\n      isMigrationApproved,\r\n      isMigrationExecuted,\r\n    ] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      //this.getPoolExtraInfo(),\r\n      this.isMigrationPrepared(),\r\n      this.isMigrationApproved(),\r\n      this.isMigrationExecuted(),\r\n    ]);\r\n    const hasMigration = true;\r\n    return {\r\n      pool: this.contractAddress,\r\n      //targetPool: extraInfo.target_pool,\r\n      //migrationTimestamp: extraInfo.migration_timestamp,\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      //initialBlock: extraInfo.block_number,\r\n      type: 'perpetual',\r\n      //version: extraInfo.version,\r\n      versionId: 'v2_lite',\r\n      chainId: this.chainId,\r\n      hasMigration,\r\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\r\n      isMigrationApproved: hasMigration && isMigrationApproved,\r\n      isMigrationExecuted: hasMigration && isMigrationExecuted,\r\n      isValid:\r\n        !(hasMigration && isMigrationExecuted) ||\r\n        (!hasMigration && !isMigrationApproved),\r\n    };\r\n  }\r\n\r\n  // tx\r\n  async addSymbol(accountAddress, parameters) {\r\n    return await this._transact('addSymbol', parameters, accountAddress);\r\n  }\r\n\r\n  async removeSymbol(accountAddress, symbolId) {\r\n    return await this._transact('removeSymbol', [symbolId], accountAddress);\r\n  }\r\n\r\n  async prepareMigration(accountAddress, target, graceDays) {\r\n    return await this._transact(\r\n      'prepareMigration',\r\n      [target, graceDays],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\r\n\r\nexport class PerpetualPoolLiteManager extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\r\n  }\r\n\r\n  // query\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return res\r\n  }\r\n  async poolTemplate() {\r\n    const res = await this._call('poolTemplate', [])\r\n    return res\r\n  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return res\r\n  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return res\r\n  }\r\n  async protocolFeeCutRatio() {\r\n    const res = await this._call('protocolFeeCutRatio', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { factory } from '../shared/utils/factory'\r\nimport { oracleFactoryChainlinkAdapter, oracleFactoryOffChainAdapter, perpetualPoolLiteManagerDpmmAdapter } from './adapter'\r\nimport { ChainlinkFeed } from './contract/chainlink_feed'\r\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\r\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\r\nimport { PerpetualPoolLiteManagerDpmm} from './contract/gen/PerpetualPoolLiteManagerDpmm'\r\n\r\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\r\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\r\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite);\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer);\r\nexport const perpetualPoolLiteManagerFactory = factory(\r\n  PerpetualPoolLiteManager\r\n);\r\nexport const perpetualPoolLiteManagerDpmmFactory = factory(\r\n  perpetualPoolLiteManagerDpmmAdapter(PerpetualPoolLiteManagerDpmm)\r\n);\r\nexport const chainlinkFeedFactory = factory(ChainlinkFeed);\r\n\r\nexport const oracleFactoryChainlinkFactory = factory(\r\n  oracleFactoryChainlinkAdapter(OracleFactoryChainlink)\r\n);\r\nexport const oracleFactoryOffChainFactory = factory(\r\n  oracleFactoryOffChainAdapter(OracleFactoryOffChain)\r\n);","import { catchApiError } from \"../../shared/utils/api\"\r\nimport { getPoolViewerConfig } from \"../../shared/config/pool\"\r\nimport {\r\n  fetchJson,\r\n  getBlockInfo,\r\n  getHttpBase,\r\n  getPastEvents,\r\n  getNetworkName,\r\n} from '../../shared/utils';\r\nimport {\r\n  checkChainId,\r\n  checkAddress,\r\n  checkApiInputWithoutAccount,\r\n} from '../../shared/config/check'\r\nimport {\r\n  getOracleFactoryChainlinkConfig,\r\n  openPoolChainIds,\r\n} from '../config';\r\nimport {\r\n  oracleFactoryChainlinkFactory,\r\n  perpetualPoolLiteFactory,\r\n  perpetualPoolLiteManagerDpmmFactory,\r\n  perpetualPoolLiteManagerFactory,\r\n  perpetualPoolLiteViewerFactory,\r\n} from '../factory';\r\nimport { perpetualPoolLiteDpmmFactory } from \"../../v2_lite_dpmm/contract/factory\"\r\nimport { getConfigZone } from \"../../shared/config/version\"\r\nimport { OPEN_POOL_EXPIRE_TIME } from \"../../shared/config\";\r\n\r\nexport const getPoolOpenConfigList = async (env) => {\r\n  return catchApiError(\r\n    async () => {\r\n      let configs = [];\r\n      const chainIds = openPoolChainIds(env);\r\n      const url = `${getHttpBase(env)}/open_pools`;\r\n      const res = await fetchJson(url);\r\n      //console.log(res)\r\n      if (res.success && Array.isArray(res.data)) {\r\n        const addresses = res.data.filter((p) => chainIds.includes(p.chain_id));\r\n        configs = await Promise.all(\r\n          addresses.reduce((acc, config) => {\r\n            if (config.version_id === 'v2_lite_dpmm') {\r\n              return acc.concat([\r\n                perpetualPoolLiteDpmmFactory(\r\n                  config.chain_id,\r\n                  config.pool\r\n                ).getOpenzoneConfigAlt(),\r\n              ]);\r\n            } else {\r\n              return acc.concat([\r\n                perpetualPoolLiteFactory(\r\n                  config.chain_id,\r\n                  config.pool\r\n                ).getConfigAlt(),\r\n              ]);\r\n            }\r\n          }, [])\r\n        );\r\n        configs.forEach((config, index) => {\r\n          config.initialBlock = addresses[index].block_number;\r\n          config.migrationTimestamp =\r\n            addresses[index].migration_timestamp || '';\r\n          config.targetPool = addresses[index].target_pool || '';\r\n          config.version = addresses[index].version || 'v2_lite_open';\r\n          config.chain = getNetworkName(config.chainId);\r\n          config.zone = getConfigZone(config.version);\r\n          config.env = env;\r\n        });\r\n      }\r\n      return configs\r\n        .sort((a, b) => parseInt(b.initialBlock) - parseInt(a.initialBlock))\r\n        .filter((c) => c.isValid === true);\r\n    },\r\n    [],\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolOpenConfig = async (chainId, poolAddress) => {\r\n  return catchApiError(async () => {\r\n    [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress)\r\n\r\n    const url = `${getHttpBase()}/open_pools`;\r\n    const res = await fetchJson(url);\r\n    if (res.success && res.data && res.data.length > 0) {\r\n      const address = res.data.find((c) => c.pool === poolAddress)\r\n      if (address && address.pool) {\r\n        if (address.version_id === 'v2_lite_dpmm') {\r\n          const perpetualPoolLite = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n          await perpetualPoolLite.init()\r\n          return await perpetualPoolLite.getOpenzoneConfig()\r\n        } else {\r\n          const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n          await perpetualPoolLite.init()\r\n          return await perpetualPoolLite.getConfig()\r\n        }\r\n\r\n      }\r\n    }\r\n    return {}\r\n  }, [], {});\r\n};\r\n\r\nexport const getPoolOpenOracleList = async(chainId, accountAddress) => {\r\n  return catchApiError(\r\n    async () => {\r\n    chainId = checkChainId(chainId)\r\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n    const oracleFactory = oracleFactoryChainlinkFactory(\r\n      chainId,\r\n      oracleFactoryConfig.address\r\n    );\r\n    await oracleFactory._init()\r\n    let eventBlock, oracles= [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\r\n    );\r\n    if (res && res.success) {\r\n      eventBlock = parseInt(res.data.eventBlock);\r\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\r\n        oracles = res.data.oracles;\r\n      }\r\n      if (eventBlock === 0) {\r\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\r\n      }\r\n      const toBlock = await getBlockInfo(chainId, 'latest');\r\n      // fetch online\r\n      let events = await getPastEvents(\r\n        chainId,\r\n        oracleFactory.contract,\r\n        'CreateOracle',\r\n        {},\r\n        eventBlock,\r\n        toBlock.number\r\n      );\r\n      if (events.length > 0) {\r\n        for (let i = 0; i < events.length; i++) {\r\n          const event = events[i];\r\n          const info = event.returnValues;\r\n          oracles.push({\r\n            chainId,\r\n            symbol: info.symbol,\r\n            address: info.oracle,\r\n            blockNumber: event.blockNumber,\r\n          });\r\n        }\r\n        return oracles\r\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\r\n          .reduce((acc, i) => {\r\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\r\n          }, []);\r\n      } else {\r\n        return oracles\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\r\n    },\r\n    [],\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolController = async(chainId, poolAddress) => {\r\n  chainId = checkChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPoolLite.controller();\r\n    },\r\n    [chainId, poolAddress],\r\n    ''\r\n  );\r\n}\r\nexport const isPoolController = async (chainId, poolAddress, controller) => {\r\n  chainId = checkChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress, controller) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const poolController = await perpetualPoolLite.controller();\r\n      return (\r\n        checkAddress(controller) === checkAddress(poolController)\r\n      );\r\n    },\r\n    [chainId, poolAddress, controller],\r\n    false\r\n  );\r\n};\r\n\r\n// export const getExpandedPoolOpenConfigList = async () => {\r\n//   const env = DeriEnv.get()\r\n//   //const version = 'v2_lite_open'\r\n//   let config = getJsonConfig(env);\r\n\r\n//   config =  await getPoolOpenConfigList()\r\n//   const pools = config.pools\r\n//   if (pools && Array.isArray(pools)) {\r\n//     for (let i = 0; i < pools.length; i++) {\r\n//       poolProcessor[version](pools[i])\r\n//       poolValidator[version](pools[i])\r\n//     }\r\n//   }\r\n//   return expandPoolConfigV2LiteOpen(config);\r\n// }\r\n\r\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\r\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\r\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\r\n    },\r\n    [chainId.toString(), poolAddress],\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolAcitveSymbolIds = async (...args) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      chainId = chainId.toString()\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPoolLite.init()\r\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\r\n    },\r\n    args,\r\n    []\r\n  );\r\n};\r\n\r\n\r\n// v2lite open config list cache\r\nexport const openConfigListCache = (() => {\r\n  let cache = {\r\n    data: [],\r\n    timestamp: 0,\r\n  };\r\n  return {\r\n    async update() {\r\n      const oldData = cache.data;\r\n      if (Date.now() / 1000 - cache.timestamp >= OPEN_POOL_EXPIRE_TIME) {\r\n        const res = await getPoolOpenConfigList();\r\n        if (res.success) {\r\n          cache.data = res.response.data;\r\n          cache.timestamp = Date.now() / 1000;\r\n        } else {\r\n          console.log(res.response.error && res.response.error.message);\r\n        }\r\n      }\r\n      return cache.data;\r\n    },\r\n    updatedAt() {\r\n      return cache.timestamp;\r\n    },\r\n    get() {\r\n      return cache.data;\r\n    },\r\n  };\r\n})()\r\n","import { AppError } from '../../shared/error/error';\r\nimport {\r\n  catchTxApiError,\r\n  getBlockInfo,\r\n  naturalToDeri,\r\n} from '../../shared/utils';\r\nimport {\r\n  checkAddress,\r\n  checkApiInput,\r\n} from '../../shared/config'\r\nimport { normalizeChainId } from '../../shared/utils/validate';\r\nimport { perpetualPoolLiteDpmmFactory } from '../../v2_lite_dpmm/contract/factory';\r\nimport {\r\n  getOracleFactoryChainlinkConfig,\r\n  getPoolV2LiteManagerDpmmConfig,\r\n} from '../config';\r\nimport {\r\n  chainlinkFeedFactory,\r\n  oracleFactoryChainlinkFactory,\r\n  perpetualPoolLiteFactory,\r\n  perpetualPoolLiteManagerDpmmFactory,\r\n  perpetualPoolLiteManagerFactory,\r\n} from '../factory';\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const createPool = async (...args) => {\r\n  return catchTxApiError(\r\n    async (\r\n      chainId,\r\n      accountAddress,\r\n      parameters,\r\n      bTokenAddress,\r\n      pairedTokenAddress\r\n    ) => {\r\n      chainId = normalizeChainId(chainId);\r\n      const { address: poolManagerAddress } = getPoolV2LiteManagerDpmmConfig(\r\n        chainId\r\n      );\r\n      const poolManager = perpetualPoolLiteManagerDpmmFactory(\r\n        chainId,\r\n        poolManagerAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString());\r\n      // send tx\r\n      return await poolManager.createPool(\r\n        accountAddress,\r\n        newParameters,\r\n        bTokenAddress,\r\n        pairedTokenAddress\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const createMigrationPool = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const { address: poolManagerAddress } = getPoolV2LiteManagerDpmmConfig(\r\n      chainId\r\n    );\r\n    const poolManager = perpetualPoolLiteManagerDpmmFactory(\r\n      chainId,\r\n      poolManagerAddress\r\n    );\r\n    // send tx\r\n    return await poolManager.createMigrationPool(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const addSymbol = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, parameters) => {\r\n      chainId = normalizeChainId(chainId);\r\n      const perpetualPoolLite = perpetualPoolLiteDpmmFactory(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p, index) =>\r\n        index > 2 ? naturalToDeri(p).toString() : p\r\n      );\r\n      // send tx\r\n      return await perpetualPoolLite.addSymbol(accountAddress, newParameters);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const prepareMigration = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  targetPoolAddress\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    chainId = normalizeChainId(chainId);\r\n    const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    // send tx\r\n    return await perpetualPoolLite.prepareMigration(\r\n      accountAddress,\r\n      targetPoolAddress,\r\n      3\r\n    );\r\n  }, []);\r\n};\r\n\r\nexport const approveMigration = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const perpetualPoolLite = perpetualPoolLiteDpmmFactory(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n    // send tx\r\n    return await perpetualPoolLite.approveMigration(accountAddress);\r\n  }, []);\r\n};\r\n\r\nexport const executeMigration = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  oldPoolAddress\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const perpetualPoolLite = perpetualPoolLiteFactory(chainId, oldPoolAddress);\r\n    const lastUpdateBlock = await perpetualPoolLite.getLastUpdateBlock();\r\n    const lastTimestamp = (await getBlockInfo(chainId, lastUpdateBlock))\r\n      .timestamp;\r\n    const perpetualPoolLiteDpmm = perpetualPoolLiteDpmmFactory(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n    // send tx\r\n    return await perpetualPoolLiteDpmm.executeMigrationWithTimestamp(\r\n      accountAddress,\r\n      oldPoolAddress,\r\n      lastTimestamp\r\n    );\r\n  }, []);\r\n};\r\n\r\nexport const createOracle = async (...args) => {\r\n  return catchTxApiError(async (chainId, accountAddress, feedAddress) => {\r\n    chainId = normalizeChainId(chainId);\r\n    feedAddress = checkAddress(feedAddress);\r\n    const feedContract = chainlinkFeedFactory(chainId, feedAddress);\r\n    const symbol = await feedContract.symbol();\r\n    if (typeof symbol === 'string' && symbol !== '') {\r\n      const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n      const oracleFactory = oracleFactoryChainlinkFactory(\r\n        chainId,\r\n        oracleFactoryConfig.address\r\n      );\r\n      // process parameters\r\n      // send tx\r\n      return await oracleFactory.createOracle(accountAddress, symbol);\r\n    } else {\r\n      throw new AppError('INVALID_SYMBOL', symbol);\r\n    }\r\n  }, args);\r\n};\r\n","import {\r\n  //getPoolConfig,\r\n  ContractBase,\r\n  //isEqualSet,\r\n  ERC20Factory,\r\n} from '../../shared/contract';\r\nimport {\r\n  deriToNatural,\r\n  naturalToDeri,\r\n} from '../../shared/utils'\r\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteOldAbi} from './abis';\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\r\n\r\nexport class PerpetualPoolLiteOld extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\r\n  }\r\n\r\n  async init() {\r\n    // init web3 and contract\r\n    await this._init();\r\n    // init address and parameters\r\n    if (!this.addresses || !this.pToken) {\r\n      [this.addresses, this.parameters] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n      ]);\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      // init bToken, pToken and lToken\r\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.bTokenSymbol = await this.bToken.symbol();\r\n    }\r\n    const symbolIds = await this.pToken.getActiveSymbolIds();\r\n    // update symbolIds\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\r\n      this.offChainOracleSymbolIds == null\r\n    ) {\r\n      this.activeSymbolIds = symbolIds;\r\n      this.symbols = await Promise.all(\r\n        this.activeSymbolIds.reduce(\r\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n          []\r\n        )\r\n      );\r\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n      this.offChainOracleSymbols = await Promise.all(\r\n        this.symbols\r\n          .map((s) => s.oracleAddress)\r\n          .reduce(\r\n            (acc, o, index) => [\r\n              ...acc,\r\n              checkOffChainOracleSymbol(\r\n                this.chainId,\r\n                o,\r\n                this.symbols[index].symbol\r\n              ),\r\n            ],\r\n            []\r\n          )\r\n      );\r\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n        (acc, i, index) => {\r\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\r\n        },\r\n        []\r\n      );\r\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\r\n        (s) => s && s !== ''\r\n      );\r\n      //console.log('offchain', this.offChainOracleSymbols);\r\n    }\r\n  }\r\n\r\n  // update symbols\r\n  async getSymbols() {\r\n    await this.init()\r\n    this.symbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n    return this.symbols\r\n  }\r\n\r\n  // update positions\r\n  async getPositions(accountAddress) {\r\n    await this.init()\r\n    this.positions = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [\r\n          ...acc,\r\n          this.pToken.getPosition(accountAddress, symbolId),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n    return this.positions\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    return res;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res);\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = [];\r\n    await this.init()\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import {\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// const factoryWithUpgrade = (klass, klassOld, newPoolList) => {\r\n//   let instances = {}\r\n//   return (chainId, address, initialBlock='') => {\r\n//     const key = address\r\n//     if (Object.keys(instances).includes(key)) {\r\n//       return instances[key];\r\n//     } else {\r\n//       if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\r\n//         instances[key] = new klass(chainId, address, initialBlock);\r\n//         return instances[key];\r\n//       } else {\r\n//         instances[key] = new klassOld(chainId, address, initialBlock);\r\n//         return instances[key];\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLiteOld);\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { DeriEnv } from \"../shared/config\"\r\n\r\nexport const getPTokenAirdropConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n\r\nexport const getDeriVoteConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '1',\r\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\r\n      },\r\n      {\r\n        chainId: '56',\r\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\r\n      },\r\n      {\r\n        chainId: '128',\r\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\r\n      },\r\n      {\r\n        chainId: '137',\r\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getDeriVoteConfig(): invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n\r\nexport const getStakingMiningVaultRouterConfig = (chainId='56', env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get()\r\n  const configs = [\r\n    {\r\n      chainId: '56',\r\n      address: '0x224a441f7a4C6775009a1f506e725FE1D180950e',\r\n      env: 'prod',\r\n    }\r\n  ]\r\n  const res = configs.find((c) => c.chainId === chainId && c.env === env)\r\n  if (res) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getStakingMiningVaultRouterConfig(): invalid env(${env}) or chainId(${chainId})`)\r\n  }\r\n}\r\n","import Web3 from \"web3\";\r\nimport { bg } from \"../shared/utils\";\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// convert\r\nexport const toWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.toWei(number, unit);\r\n};\r\n\r\nexport const fromWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.fromWei(number, unit);\r\n};\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// adapter\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = bg(fromWei(val[prop])).toString();\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nconst processResult = (val, propList = []) => {\r\n  if (isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (isObject(val)) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return bg(fromWei(val)).toString();\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAirdropNULSAbi = [{\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    }, {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AirdropPToken\",\r\n        \"type\": \"event\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"airdropPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"getBTokenBalance\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isAirdropPToken\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"isStartAirdrop\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"marginUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"maxAirdropLimit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"ownerAddress\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"marginUnit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMarginUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"maxAirdropLimit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMaxAirdropLimit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeUnit_\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"setTradeUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"startAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"stopAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"totalAirdropCount\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"tradeUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"withdrawBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\r\n\r\nexport class PTokenAirdropNULS extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\r\n  }\r\n\r\n  // query\r\n  //  async getBTokenBalance() {\r\n  //    const res = await this._call('getBTokenBalance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isAirdropPToken(account) {\r\n    const res = await this._call('isAirdropPToken', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isStartAirdrop() {\r\n  //    const res = await this._call('isStartAirdrop', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async marginUnit() {\r\n  //    const res = await this._call('marginUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async maxAirdropLimit() {\r\n  //    const res = await this._call('maxAirdropLimit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerAddress() {\r\n  //    const res = await this._call('ownerAddress', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalAirdropCount() {\r\n    const res = await this._call('totalAirdropCount', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async tradeUnit() {\r\n  //    const res = await this._call('tradeUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n  //  async setMarginUnit(accountAddress, marginUnit_) {\r\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\r\n  //  }\r\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\r\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\r\n  //  }\r\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\r\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\r\n  //  }\r\n  //  async startAirdrop(accountAddress) {\r\n  //    return await this._transact('startAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async stopAirdrop(accountAddress) {\r\n  //    return await this._transact('stopAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async withdrawBToken(accountAddress) {\r\n  //    return await this._transact('withdrawBToken', [], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const deriVoteAbi = [\r\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"voter\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingId\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingOption\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Vote\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"controller\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"initializeVote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"numVotingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"setController\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"vote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingDeadline\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingId\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"votingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"name\": \"votingTopics\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\r\n\r\nexport class DeriVote extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, deriVoteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numVotingOptions() {\r\n    const res = await this._call('numVotingOptions', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingDeadline() {\r\n    const res = await this._call('votingDeadline', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingId() {\r\n    const res = await this._call('votingId', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingOptions(votingId, voter) {\r\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async votingTopics(votingId) {\r\n    const res = await this._call('votingTopics', [votingId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\r\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\r\n  //  }\r\n  //  async setController(accountAddress, newController) {\r\n  //    return await this._transact('setController', [newController], accountAddress)\r\n  //  }\r\n  async vote(accountAddress, votingOption) {\r\n    return await this._transact('vote', [votingOption], accountAddress)\r\n  }\r\n\r\n}","import { contractFactory } from \"../utils\";\r\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\r\n\r\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\r\nimport { DeriVote } from \"./gen/DeriVote.js\";\r\n\r\n// pToken airdrop\r\nexport const PTokenAirdropNULSFactory = contractFactory(\r\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\r\n);\r\n\r\n// deri vote\r\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\r\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\r\nimport { getPTokenAirdropConfig } from \"../config\"\r\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\r\n\r\nexport const isPTokenAirdropped = async (...args) => {\r\n  return catchApiError(async(chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).isAirdropPToken(accountAddress);\r\n  }, args, 'isPTokenAirdropped', '')\r\n};\r\n\r\nexport const totalAirdropCount = async (...args) => {\r\n  return catchApiError(async(chainId) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).totalAirdropCount();\r\n  }, args, 'totalAirdropCount', '')\r\n};\r\n\r\nexport const isUserPTokenExist = async (...args) => {\r\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\r\n    let res = '';\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const result = await pool.pToken.balanceOf(accountAddress);\r\n    if (result === '1') {\r\n      res = true;\r\n    } else if (result === '0') {\r\n      res = false;\r\n    }\r\n    return res;\r\n  }, args, 'isUserPTokenExist', '');\r\n};\r\n\r\nexport const isBTokenUnlocked = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nexport const hasRequiredBalance = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const res = await pool.bToken.balanceOf(accountAddress)\r\n    console.log('res', res)\r\n    return bg(res).gte(100)\r\n  }, args, 'hasRequiredBalance', '')\r\n}\r\n\r\n\r\n// tx\r\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const airdropPToken = async (...args) => {\r\n  return catchTxApiError(async (chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).airdropPToken(accountAddress);\r\n  }, args);\r\n};\r\n","import { DeriEnv } from '../../shared/config';\r\nimport {\r\n  databaseActivityFactory,\r\n  miningVaultRouterFactory,\r\n} from '../../shared/factory';\r\nimport {\r\n  catchApiError,\r\n  bg,\r\n  deriToNatural,\r\n  deriToString,\r\n  toChecksumAddress,\r\n  max,\r\n  catchTxApiError,\r\n} from '../../shared/utils';\r\nimport { databaseActivityClaimFactory } from '../../shared/factory/database';\r\nimport { getStakingMiningVaultRouterConfig } from '../config';\r\n\r\nconst range = (n) => new Array(n).fill(0).map((i, index) => index);\r\n\r\nconst keyPrefix = (epoch) => {\r\n  if (!epoch || epoch.toString() === '1') {\r\n    return DeriEnv.get() === 'prod' ? 'TE' : 'TE10';\r\n  } else if (epoch.toString() === '2') {\r\n    return DeriEnv.get() === 'prod' ? 'TE2' : 'TE7';\r\n  }\r\n};\r\nconst claimKeyPrefix = (epoch) => {\r\n  if (!epoch || epoch.toString() === '1') {\r\n    return DeriEnv.get() === 'prod' ? 'TE1' : 'TE11';\r\n  } else if (epoch.toString() === '2') {\r\n    return DeriEnv.get() === 'prod' ? 'TE2' : 'TE9';\r\n  }\r\n};\r\n\r\nexport const getStakingTop10Users = async (epoch) => {\r\n  return catchApiError(\r\n    async () => {\r\n      //console.log('key', keyPrefix(epoch))\r\n      const db = databaseActivityFactory();\r\n      const key = range(10).reduce(\r\n        (acc, i) =>\r\n          acc.concat([\r\n            `${keyPrefix(epoch)}.top.${i + 1}.account`,\r\n            `${keyPrefix(epoch)}.top.${i + 1}.fee`,\r\n            `${keyPrefix(epoch)}.top.${i + 1}.score`,\r\n            `${keyPrefix(epoch)}.top.${i + 1}.cont`,\r\n            `${keyPrefix(epoch)}.toppnl.${i + 1}.account`,\r\n            `${keyPrefix(epoch)}.toppnl.${i + 1}.pnl`,\r\n          ]),\r\n        []\r\n      );\r\n      //console.log(key)\r\n      const res = await db.getValues(key);\r\n      //console.log(res)\r\n      if (Array.isArray(res) && res.length === 6 * 10) {\r\n        let result = [],\r\n          resultPnl = [];\r\n        for (let i = 0; i < res.length; i++) {\r\n          if ((i + 1) % 6 === 0) {\r\n            const info = res.slice(i - 5, i + 1);\r\n            const index = (i + 1) / 6;\r\n            result.push({\r\n              no: index,\r\n              userAddr: info[0].slice(0, 42),\r\n              feePaid: deriToNatural(info[1]).toString(),\r\n              score: deriToNatural(info[2]).toString(),\r\n              evgCoeff: deriToNatural(info[1]).eq(0)\r\n                ? '0'\r\n                : bg(info[3]).div(info[1]).toString(),\r\n              specialRewardsA:\r\n                index <= 5\r\n                  ? index <= 4\r\n                    ? index <= 3\r\n                      ? index <= 2\r\n                        ? index <= 1\r\n                          ? '80000'\r\n                          : '60000'\r\n                        : '40000'\r\n                      : '20000'\r\n                    : '10000'\r\n                  : '8000',\r\n            });\r\n            resultPnl.push({\r\n              no: index,\r\n              userAddr: info[4].slice(0, 42),\r\n              pnl: deriToNatural(info[5]).toString(),\r\n              specialRewardsB:\r\n                index <= 5\r\n                  ? index <= 4\r\n                    ? index <= 3\r\n                      ? index <= 2\r\n                        ? index <= 1\r\n                          ? '80000'\r\n                          : '60000'\r\n                        : '40000'\r\n                      : '20000'\r\n                    : '10000'\r\n                  : '8000',\r\n            });\r\n          }\r\n        }\r\n        return {\r\n          top10: result.filter(\r\n            (r) => r.userAddr !== '0x0000000000000000000000000000000000000000'\r\n          ),\r\n          top10Pnl: resultPnl.filter(\r\n            (r) => r.userAddr !== '0x0000000000000000000000000000000000000000'\r\n          ),\r\n        };\r\n      } else {\r\n        return { top10: [], top10Pnl: [] };\r\n      }\r\n    },\r\n    [],\r\n    'getStakingTop10Users',\r\n    { top10: [], top10Pnl: [] }\r\n  );\r\n};\r\n\r\nexport const getUserStakingInfo = async (accountAddress, epoch) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix(epoch)}.Q1.cont`,\r\n        `${keyPrefix(epoch)}.Q2.cont`,\r\n        `${keyPrefix(epoch)}.Q3.cont`,\r\n        `${keyPrefix(epoch)}.Q4.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.fee`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.coef`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0)\r\n        ? '0'\r\n        : bg(10000).times(bg(res[4]).div(res[0]));\r\n      const scoreQ2 = bg(res[1]).eq(0)\r\n        ? '0'\r\n        : bg(20000).times(bg(res[5]).div(res[1]));\r\n      const scoreQ3 = bg(res[2]).eq(0)\r\n        ? '0'\r\n        : bg(30000).times(bg(res[6]).div(res[2]));\r\n      const scoreQ4 = bg(res[3]).eq(0)\r\n        ? '0'\r\n        : bg(50000).times(bg(res[7]).div(res[3]));\r\n\r\n      const coef = deriToNatural(res[9]);\r\n      return {\r\n        userAddr: accountAddress,\r\n        feePaid: deriToNatural(res[8]).toString(),\r\n        coef: max(coef, bg(1)).toString(),\r\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingInfo',\r\n    {\r\n      userAddr: '',\r\n      feePaid: '',\r\n      coef: '',\r\n      score: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserStakingReward = async (accountAddress, epoch) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix(epoch)}.Q1.cont`,\r\n        `${keyPrefix(epoch)}.Q2.cont`,\r\n        `${keyPrefix(epoch)}.Q3.cont`,\r\n        `${keyPrefix(epoch)}.Q4.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix(epoch)}.top.1.account`,\r\n        `${keyPrefix(epoch)}.top.2.account`,\r\n        `${keyPrefix(epoch)}.top.3.account`,\r\n        `${keyPrefix(epoch)}.top.4.account`,\r\n        `${keyPrefix(epoch)}.top.5.account`,\r\n        `${keyPrefix(epoch)}.top.6.account`,\r\n        `${keyPrefix(epoch)}.top.7.account`,\r\n        `${keyPrefix(epoch)}.top.8.account`,\r\n        `${keyPrefix(epoch)}.top.9.account`,\r\n        `${keyPrefix(epoch)}.top.10.account`,\r\n        `${keyPrefix(epoch)}.toppnl.1.account`,\r\n        `${keyPrefix(epoch)}.toppnl.2.account`,\r\n        `${keyPrefix(epoch)}.toppnl.3.account`,\r\n        `${keyPrefix(epoch)}.toppnl.4.account`,\r\n        `${keyPrefix(epoch)}.toppnl.5.account`,\r\n        `${keyPrefix(epoch)}.toppnl.6.account`,\r\n        `${keyPrefix(epoch)}.toppnl.7.account`,\r\n        `${keyPrefix(epoch)}.toppnl.8.account`,\r\n        `${keyPrefix(epoch)}.toppnl.9.account`,\r\n        `${keyPrefix(epoch)}.toppnl.10.account`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0)\r\n        ? '0'\r\n        : bg(10000).times(bg(res[4]).div(res[0]));\r\n      const scoreQ2 = bg(res[1]).eq(0)\r\n        ? '0'\r\n        : bg(20000).times(bg(res[5]).div(res[1]));\r\n      const scoreQ3 = bg(res[2]).eq(0)\r\n        ? '0'\r\n        : bg(30000).times(bg(res[6]).div(res[2]));\r\n      const scoreQ4 = bg(res[3]).eq(0)\r\n        ? '0'\r\n        : bg(50000).times(bg(res[7]).div(res[3]));\r\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\r\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\r\n\r\n      const topUsers = res\r\n        .slice(8, 18)\r\n        .map((u) => toChecksumAddress(u.slice(0, 42)));\r\n      const topPnlUsers = res\r\n        .slice(18)\r\n        .map((u) => toChecksumAddress(u.slice(0, 42)));\r\n      let specialRewardsA = '0';\r\n      if (topUsers.includes(accountAddress)) {\r\n        if (accountAddress === topUsers[0]) {\r\n          specialRewardsA = '80000';\r\n        } else if (accountAddress === topUsers[1]) {\r\n          specialRewardsA = '60000';\r\n        } else if (accountAddress === topUsers[2]) {\r\n          specialRewardsA = '40000';\r\n        } else if (accountAddress === topUsers[3]) {\r\n          specialRewardsA = '20000';\r\n        } else if (accountAddress === topUsers[4]) {\r\n          specialRewardsA = '10000';\r\n        } else {\r\n          specialRewardsA = '8000';\r\n        }\r\n      }\r\n      let specialRewardsB = '0';\r\n      if (topPnlUsers.includes(accountAddress)) {\r\n        if (accountAddress === topPnlUsers[0]) {\r\n          specialRewardsB = '80000';\r\n        } else if (accountAddress === topPnlUsers[1]) {\r\n          specialRewardsB = '60000';\r\n        } else if (accountAddress === topPnlUsers[2]) {\r\n          specialRewardsB = '40000';\r\n        } else if (accountAddress === topPnlUsers[3]) {\r\n          specialRewardsB = '20000';\r\n        } else if (accountAddress === topPnlUsers[4]) {\r\n          specialRewardsB = '10000';\r\n        } else {\r\n          specialRewardsB = '8000';\r\n        }\r\n      }\r\n      return {\r\n        userAddr: accountAddress,\r\n        rewardDERI,\r\n        specialRewardsA,\r\n        specialRewardsB,\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingReward',\r\n    { userAddr: '', rewardDERI: '', specialRewardsA: '', specialRewardsB: '' }\r\n  );\r\n};\r\n\r\nexport const getUserStakingContribution = async (accountAddress, epoch) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix(epoch)}.Q1.cont`,\r\n        `${keyPrefix(epoch)}.Q2.cont`,\r\n        `${keyPrefix(epoch)}.Q3.cont`,\r\n        `${keyPrefix(epoch)}.Q4.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0)\r\n        ? '0'\r\n        : bg(10000).times(bg(res[4]).div(res[0]));\r\n      const scoreQ2 = bg(res[1]).eq(0)\r\n        ? '0'\r\n        : bg(20000).times(bg(res[5]).div(res[1]));\r\n      const scoreQ3 = bg(res[2]).eq(0)\r\n        ? '0'\r\n        : bg(30000).times(bg(res[6]).div(res[2]));\r\n      const scoreQ4 = bg(res[3]).eq(0)\r\n        ? '0'\r\n        : bg(50000).times(bg(res[7]).div(res[3]));\r\n\r\n      return {\r\n        userAddr: accountAddress,\r\n        totalContrib: deriToNatural(\r\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\r\n        ).toString(),\r\n        userContrib: deriToNatural(\r\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\r\n        ).toString(),\r\n        Q1Contrib: deriToNatural(res[0]).toString(),\r\n        Q2Contrib: deriToNatural(res[1]).toString(),\r\n        Q3Contrib: deriToNatural(res[2]).toString(),\r\n        Q4Contrib: deriToNatural(res[3]).toString(),\r\n        userQ1Contrib: deriToNatural(res[4]).toString(),\r\n        userQ2Contrib: deriToNatural(res[5]).toString(),\r\n        userQ3Contrib: deriToNatural(res[6]).toString(),\r\n        userQ4Contrib: deriToNatural(res[7]).toString(),\r\n        userQ1Point: scoreQ1.toString(),\r\n        userQ2Point: scoreQ2.toString(),\r\n        userQ3Point: scoreQ3.toString(),\r\n        userQ4Point: scoreQ4.toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingContribution',\r\n    { userAddr: '', totalContrib: '', userContrib: '' }\r\n  );\r\n};\r\n\r\nexport const getUserStakingClaimInfo = async (accountAddress, epoch) => {\r\n  return catchApiError(\r\n    async () => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseActivityClaimFactory();\r\n      const key = [\r\n        `${claimKeyPrefix(epoch)}.${accountAddress}.claimed.amount`,\r\n        `${claimKeyPrefix(epoch)}.${accountAddress}.unclaimed.amount`,\r\n        `${claimKeyPrefix(epoch)}.${accountAddress}.claimable.amount`,\r\n      ];\r\n      // console.log('key',key)\r\n      const res = await db.getValues(key);\r\n      const claimable = deriToNatural(res[2]).toString();\r\n      return {\r\n        claimed: deriToNatural(res[0]).toString(),\r\n        // unclaimed: deriToNatural(res[1]).toString(),\r\n        locked: deriToNatural(res[1]).minus(claimable).toString(),\r\n        claimable,\r\n        // deriPrice: '0.56',\r\n        // bnbPrice: '640.7',\r\n      };\r\n    },\r\n    [],\r\n    'getUserStakingClaimInfo',\r\n    {\r\n      claimed: '',\r\n      unclaimed: '',\r\n      claimable: '',\r\n      deriPrice: '',\r\n      bnbPrice: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const claimMyStaking = async (accountAddress, epoch) => {\r\n  return catchTxApiError(async () => {\r\n    const chainId = '56';\r\n    accountAddress = toChecksumAddress(accountAddress);\r\n    const db = databaseActivityClaimFactory();\r\n    const key = [\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.amount`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.deadline`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.nonce`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.v1`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.r1`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.s1`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.v2`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.r2`,\r\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.s2`,\r\n    ];\r\n    //console.log('key', key);\r\n    const res = await db.getValues(key);\r\n    const [amount, deadline, nonce, v1, r1, s1, v2, r2, s2] = res;\r\n    //\r\n    const claimArgs = [\r\n      accountAddress,\r\n      amount,\r\n      deriToString(deadline),\r\n      deriToString(nonce),\r\n      deriToString(v1),\r\n      r1,\r\n      s1,\r\n      deriToString(v2),\r\n      r2,\r\n      s2,\r\n    ];\r\n\r\n    const miningVaultAddress = getStakingMiningVaultRouterConfig(\r\n      chainId,\r\n      'prod'\r\n    ).address;\r\n    //console.log('miningVaultAddress', miningVaultAddress);\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      //console.log(claimArgs)\r\n      return await miningVaultRouter.mint(...claimArgs);\r\n    }\r\n  }, []);\r\n};\r\n","import { DeriEnv } from '../../shared/config/env';\r\nimport {\r\n  catchApiError,\r\n  catchTxApiError,\r\n  fromWei,\r\n  hexToNumberString,\r\n  toChecksumAddress,\r\n} from '../../shared/utils';\r\nimport { databaseDeriVoteFactory } from '../../shared/factory/database';\r\nimport { getDeriVoteConfig } from '../config';\r\nimport { deriVoteFactory } from '../contract/factory';\r\n\r\nconst votingId = '2';\r\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\r\n\r\nexport const getVotingResult = async () => {\r\n  return catchApiError(\r\n    async () => {\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.OP1.count`,\r\n        `${keyPrefix()}.OP2.count`,\r\n        `${keyPrefix()}.OP3.count`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return res.map((v) => fromWei(hexToNumberString(v)));\r\n    },\r\n    [],\r\n    'getOptionsVotingPowers',\r\n    ['', '', '']\r\n  );\r\n};\r\n\r\nexport const getUserVotingPower = async (accountAddress) => {\r\n  return catchApiError(\r\n    async () => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [`${keyPrefix()}.${accountAddress}.count`];\r\n      const res = await db.getValues(keys);\r\n      return res.map((v) => fromWei(hexToNumberString(v)))[0];\r\n    },\r\n    [accountAddress],\r\n    'getUserVotingPowers',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getUserVotingResult = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async () => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.${accountAddress}.count`,\r\n        `${keyPrefix()}.${accountAddress}.option`,\r\n        `${keyPrefix()}.${accountAddress}.timestamp`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return {\r\n        votingPower: fromWei(hexToNumberString(res[0])),\r\n        option: hexToNumberString(res[1]),\r\n        timestamp: hexToNumberString(res[2]),\r\n      };\r\n    },\r\n    args,\r\n    'getVoteResult',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const vote = async (chainId, accountAddress, votingOption) => {\r\n  const args = [chainId, accountAddress, votingOption];\r\n  return catchTxApiError(async () => {\r\n    chainId = chainId.toString();\r\n    accountAddress = toChecksumAddress(accountAddress);\r\n    const config = getDeriVoteConfig(chainId);\r\n    const deriVote = deriVoteFactory(chainId, config.address);\r\n    const voteId = await deriVote.votingId();\r\n    if (voteId !== votingId) {\r\n      throw new Error(\r\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\r\n      );\r\n    }\r\n    return await deriVote.vote(accountAddress, votingOption);\r\n  }, args);\r\n};\r\n","import { checkEnv, getPoolV1ConfigList } from '../shared/config';\r\nimport { getJsonConfig } from '../shared/config/config';\r\nimport { catchApiError } from '../shared/utils';\r\nimport { getPoolOpenConfigList } from '../v2_lite_open/api/query_api';\r\n\r\n// export const getContractAddressConfig = (env, version) => {\r\n//   env = env || DeriEnv.get()\r\n//   if (version === 'v1') {\r\n//     return getPoolV1ConfigList(env);\r\n//   } else if (VERSIONS.includes(version)) {\r\n//     return getPoolV2ConfigList(version, env);\r\n//   } else if (version === undefined) {\r\n//     return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\r\n//   } else {\r\n//     throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n//   }\r\n// };\r\n\r\nexport const getPoolConfigList = async (env, type=null, includeOpenPools = false) => {\r\n  return catchApiError(async () => {\r\n    env = checkEnv(env);\r\n    let res = getJsonConfig(env);\r\n    // add v1 config\r\n    // res= res.concat(getPoolV1ConfigList(env));\r\n    if (includeOpenPools) {\r\n      const result = await getPoolOpenConfigList();\r\n      if (result.success) {\r\n        res = [...res, ...result.response.data];\r\n      } else {\r\n        console.log(result.response.error && result.response.error.message);\r\n      }\r\n    }\r\n    if (!!type) {\r\n      res = res.filter((c) => c.version === type)\r\n    }\r\n    return res;\r\n  }, [env, type, includeOpenPools]);\r\n};\r\n","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// // websocket instance\r\n// export const wsInstance = (function(){\r\n//   let _ws = null;\r\n//   return {\r\n//     get() {\r\n//       if (_ws) {\r\n//         return _ws\r\n//       } else {\r\n//         console.log('wsInstance.get() error: ws instance is not init')\r\n//       }\r\n//     },\r\n//     set(url) {\r\n//       try {\r\n//         const ws = io(url, {\r\n//           transports: ['websocket'],\r\n//           path: '/ws',\r\n//         });\r\n//         ws.on('connect', () => {\r\n//           console.log('hello from ws:', ws.id);\r\n//         })\r\n//         if (ws) {\r\n//           _ws = ws\r\n//         } else {\r\n//           console.log('wsInstance.get() error: ws instance is not init')\r\n//         }\r\n//       } catch (err) {\r\n//         console.log('wsInstance.set():', err)\r\n//       }\r\n//     },\r\n//     getOrSet(url) {\r\n//       if (!_ws) {\r\n//         this.set(url)\r\n//       }\r\n//       return _ws\r\n//     }\r\n//   }\r\n// })();\r\n","import {\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  deriToNatural,\r\n} from '../../shared/utils';\r\nimport {\r\n  getPoolV1Config,\r\n} from '../../shared/config';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  isOrderValid,\r\n} from '../calculation';\r\nimport { catchTxApiError } from '../../shared/utils';\r\nimport { AppError } from '../../shared/error/error';\r\nimport { ERC20Factory } from '../../shared/contract';\r\n\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress, poolAddress);\r\n\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  });\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n  });\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    //let res;\r\n    //const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    //pPool.setAccount(accountAddress);\r\n    //const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n    //pToken.setAccount(accountAddress);\r\n\r\n    // const price = deriToNatural(\r\n    //   (await getPriceInfoForV1(symbol)).price\r\n    // ).toString();\r\n    // const { volume, margin, cost } = await pToken.getPositionInfo(\r\n    //   accountAddress\r\n    // );\r\n    // const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n    // const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    //   price,\r\n    //   volume,\r\n    //   margin,\r\n    //   cost,\r\n    //   multiplier,\r\n    //   minInitialMarginRatio\r\n    // );\r\n    return await pPool._transact(\r\n      'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  });\r\n};\r\n\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  return catchTxApiError(async () => {\r\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress, poolAddress);\r\n    const decimals = await bToken.decimals();\r\n    const BONE = 10 ** decimals;\r\n    amount = formatBN(bg(amount).multipliedBy(BONE));\r\n    return await bToken._transact('mint', [amount], accountAddress);\r\n  });\r\n};\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  })\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n    const price = deriToNatural(\r\n      (await getPriceInfoForV1(symbol)).price\r\n    ).toString();\r\n\r\n    const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n      lToken.balance(accountAddress),\r\n      lToken.totalSupply(),\r\n    ]);\r\n    const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n    const {\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n    } = await pPool.getStateValues();\r\n\r\n    const maxRemovableShares = calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    );\r\n    if (bg(shares).lte(maxRemovableShares)) {\r\n      return await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      throw new AppError('UNKOWN_ERROR', 'removeLiquidity');\r\n    }\r\n  });\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  return catchTxApiError(async () => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n      return await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n  } else {\r\n    throw new AppError('UNKOWN_ERROR', 'tradeWithMargin');\r\n  }\r\n})\r\n};\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  return catchTxApiError(async () => {\r\n    const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n    let { volume } = await pToken.getPositionInfo(accountAddress);\r\n    volume = volume.negated();\r\n    if (!volume.eq(0)) {\r\n      return await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      //res = { success: false, error: 'no position to close' };\r\n      throw new AppError('UNKOWN_ERROR', 'closePosition');\r\n    }\r\n  });\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getPoolV1Config } from '../../shared/config';\r\nimport { bg, deriToNatural, getHttpBase, fetchJson, catchApiError } from '../../shared/utils';\r\nimport {\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\n// /**\r\n//  * Get specification from REST API, please refer {@link getSpecification}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getSpecification2 = async (chainId, poolAddress) => {\r\n//   const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get funding rate from REST API, please refer {@link getFundingRate}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getFundingRate2 = async (chainId, poolAddress) => {\r\n//   const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n//   const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     let result = res.data;\r\n//     result.price = bg(result.price);\r\n//     result.fundingRate = bg(result.fundingRate);\r\n//     result.liquidityUsed = bg(result.liquidityUsed);\r\n//     return result;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get position info from REST API, please refer {@link getPositionInfo}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getPositionInfo2 = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress\r\n// ) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getLiquidityInfo2 = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress\r\n// ) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get balance from REST API, please refer {@link getWalletBalance}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getWalletBalance2 = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress\r\n// ) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getSlpLiquidityInfo2 = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress\r\n// ) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getSlpWalletBalance2 = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress\r\n// ) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getClpLiquidityInfo2 = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress\r\n// ) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getClpWalletBalance2 = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress\r\n// ) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\n// /**\r\n//  * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n//  * @async\r\n//  * @method\r\n//  * @param {string} chainId\r\n//  * @param {string} poolAddress\r\n//  * @param {string} accountAddress\r\n//  * @returns {Object}\r\n//  */\r\n// export const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n//   const res = await fetchJson(\r\n//     `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n//   );\r\n//   if (res && res.success) {\r\n//     return res.data;\r\n//   }\r\n//   return res;\r\n// };\r\n\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(async () => {\r\n    let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n    const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n      tradeHistory = res.data.tradeHistory;\r\n    }\r\n\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const { multiplier } = await perpetualPool.getParameters();\r\n    tradeHistory = tradeHistory\r\n      .filter((i) => i)\r\n      .map((i) => {\r\n        return {\r\n          direction: i.direction.trim(),\r\n          baseToken: bTokenSymbol,\r\n          price: deriToNatural(i.price).toString(),\r\n          notional: deriToNatural(i.notional).toString(),\r\n          volume: deriToNatural(i.volume).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(i.transactionFee).toString(),\r\n          transactionHash: i.transactionHash,\r\n          time: i.time.toString(),\r\n        };\r\n      });\r\n    if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      liquidateFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  }, [], []);\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n  catchApiError,\r\n  toChecksumAddress,\r\n} from '../../shared/utils';\r\n// import {\r\n//   bTokenFactory,\r\n// } from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared/config/pool_v1';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ERC20Factory } from '../../shared/contract';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress\r\n  //accountAddress,\r\n) => {\r\n  return catchApiError(async () => {\r\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    const {\r\n      multiplier,\r\n      feeRatio,\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minAddLiquidity,\r\n      redemptionFeeRatio,\r\n      fundingRateCoefficient,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      priceDelayAllowance,\r\n    } = await pPool.getParameters();\r\n    let symbol = await pPool.symbol();\r\n    const bTokenSymbol = await bToken.symbol();\r\n    return {\r\n      addresses: poolAddress,\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minAddLiquidity: minAddLiquidity.toString(),\r\n      redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      priceDelayAllowance: priceDelayAllowance.toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(async () => {\r\n    poolAddress = toChecksumAddress(poolAddress);\r\n    accountAddress = toChecksumAddress(accountAddress);\r\n    const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n    const {\r\n      multiplier,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = await pPool.getParameters();\r\n    const symbol = await pPool.symbol();\r\n    const { volume, margin, cost } = await pToken.getPositionInfo(\r\n      accountAddress\r\n    );\r\n    const price = await getPriceFromRest(symbol);\r\n    if (price === '') {\r\n      return {\r\n        price,\r\n        volume: bg(volume).times(multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(\r\n          volume,\r\n          cost,\r\n          multiplier\r\n        ).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: '',\r\n        unrealizedPnl: '',\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          cost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    } else {\r\n      return {\r\n        price,\r\n        volume: bg(volume).times(multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(\r\n          volume,\r\n          cost,\r\n          multiplier\r\n        ).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: calculateMarginHeld(\r\n          price,\r\n          volume,\r\n          multiplier,\r\n          minInitialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          cost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(async () => {\r\n    const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    //pPool.setAccount(accountAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n    //lToken.setAccount(accountAddress);\r\n\r\n    const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n      lToken.balanceOf(accountAddress),\r\n      lToken.totalSupply(),\r\n      pPool.symbol(),\r\n    ]);\r\n    const price = await getPriceFromRest(symbol);\r\n    const {\r\n      liquidity,\r\n      tradersNetCost,\r\n      tradersNetVolume,\r\n    } = await pPool.getStateValues();\r\n    const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n    const poolDynamicEquity = liquidity.plus(\r\n      tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n    );\r\n\r\n    return {\r\n      totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: liquidity.toString(),\r\n      shares: lTokenBalance.toString(),\r\n      shareValue: calculateShareValue(\r\n        lTokenTotalSupply,\r\n        poolDynamicEquity\r\n      ).toString(),\r\n      maxRemovableShares: calculateMaxRemovableShares(\r\n        lTokenBalance,\r\n        lTokenTotalSupply,\r\n        liquidity,\r\n        tradersNetVolume,\r\n        tradersNetCost,\r\n        multiplier,\r\n        minPoolMarginRatio,\r\n        price\r\n      ).toString(),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(async () => {\r\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    const balance = await bToken.balanceOf(accountAddress);\r\n    return balance.toString();\r\n  });\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(async () => {\r\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.isUnlocked(accountAddress, poolAddress);\r\n  });\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  return catchApiError(async () => {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    //pPool.setAccount(accountAddress);\r\n    const { multiplier } = await pPool.getParameters();\r\n    const symbol = await pPool.symbol();\r\n    const price = await getPriceFromRest(symbol);\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .div(bg(leverage))\r\n      .toString();\r\n  }, [], '');\r\n};\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  return catchApiError(async () => {\r\n    // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n    let price = priceCache.get();\r\n    let parameters = PerpetualPoolParametersCache.get();\r\n    if (price === '') {\r\n      const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const symbol = await pPool.symbol();\r\n      await priceCache._update(poolAddress, symbol);\r\n      price = priceCache.get();\r\n    }\r\n    // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n    // const { multiplier, feeRatio } = await pPool.getParameters();\r\n    if (!parameters.multiplier) {\r\n      parameters = await PerpetualPoolParametersCache.update(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n    }\r\n    //console.log('price', price);\r\n    const { multiplier, feeRatio } = parameters;\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  });\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  return catchApiError(async () => {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n    const res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getFundingRate', err));\r\n    fundingRateCache.set(chainId, poolAddress, res);\r\n    const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n    if (res) {\r\n      const {\r\n        fundingRate,\r\n        fundingRatePerBlock,\r\n        liquidity,\r\n        tradersNetVolume,\r\n        multiplier,\r\n      } = res;\r\n      const volume = poolInfo.volume24h;\r\n\r\n      return {\r\n        fundingRate0: naturalWithPercentage(fundingRate),\r\n        fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n        liquidity: liquidity.toString(),\r\n        volume: deriToNatural(volume).toString(),\r\n        tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (chainId, poolAddress, newNetVolume) => {\r\n  return catchApiError(async () => {\r\n    let fundingRate1;\r\n    let res;\r\n    res = fundingRateCache.get(chainId, poolAddress);\r\n    if (!res) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      res = await perpetualPool.getFundingRate();\r\n    }\r\n    if (res) {\r\n      const parameters = [\r\n        bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...parameters)) {\r\n        return {\r\n          fundingRate1: '0',\r\n        };\r\n      }\r\n      // console.log(parameters)\r\n      fundingRate1 = calculateFundingRate(...parameters);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: naturalWithPercentage(fundingRate1),\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  return catchApiError(async () => {\r\n    let res;\r\n    res = fundingRateCache.get(chainId, poolAddress);\r\n    if (!res) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      res = await perpetualPool.getFundingRate();\r\n    }\r\n    if (res) {\r\n      const { liquidityUsed } = res;\r\n      return {\r\n        liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  return catchApiError(async () => {\r\n    let res;\r\n    res = fundingRateCache.get(chainId, poolAddress);\r\n    if (!res) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      res = await perpetualPool\r\n        .getFundingRate()\r\n        .catch((err) => console.log('getLiquidityUsed', err));\r\n    }\r\n    if (res) {\r\n      const parameters = [\r\n        bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.poolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...parameters)) {\r\n        return {\r\n          liquidityUsed1: '0',\r\n        };\r\n      }\r\n      const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n      return {\r\n        liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n      };\r\n    }\r\n  });\r\n};\r\n","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\r\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const lToken = perpetualPool.lToken\r\n  // const pToken = perpetualPool.pToken\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  //const symbolIndex = symbolIds.indexOf(symbolId)\r\n  //const symbols = perpetualPool.symbols\r\n\r\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    //perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    //pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      // totalSupply: '',\r\n      // poolLiquidity: '',\r\n      // shares: '',\r\n      // shareValue: '',\r\n      // maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\n// replace by database api\r\n\r\n// export const getPoolLiquidity = async (chainId, poolAddress) => {\r\n//   // use the dev database\r\n//   const db = databaseFactory();\r\n//   try {\r\n//     const res = await db\r\n//       .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n//       .catch((err) => console.log('getPoolLiquidity', err));\r\n//     if (res) {\r\n//       const [liquidity] = res;\r\n//       return {\r\n//         liquidity: deriToNatural(liquidity).toString(),\r\n//         symbol:'',\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(`${err}`)\r\n//   }\r\n//   return {\r\n//     // liquidity: '',\r\n//     // symbol:'',\r\n//   };\r\n// };\r\n\r\n// export const getPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(`${err}`)\r\n//   }\r\n// };\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bg(bToken.liquidity).minus(\r\n          bg(minPoolMarginRatio)\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        bg(userLiquidity)\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","import { fromWei } from \"../shared/utils\";\r\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\r\n\r\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\r\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\r\n    offChainSymbolIds.indexOf(s.symbolId) > -1\r\n      ? ''\r\n      : s.oracleAddress\r\n  );\r\n\r\n  const onChainSymbolPrices = await Promise.all(\r\n    onChainOracleAddressWithPlaceHolder\r\n      .reduce((acc, address, index) => {\r\n        const _symbol = symbols.map((s) => s.symbol)[index];\r\n        if (address !== '') {\r\n          return acc.concat(\r\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n          );\r\n        } else {\r\n          return acc.concat('');\r\n        }\r\n      }, [])\r\n      .filter((f) => f !== '')\r\n  );\r\n\r\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\r\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\r\n\r\n  // combine offChain and onChain symbol prices\r\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\r\n    if (o !== '') {\r\n      return onChainSymbolPrices.shift();\r\n    } else {\r\n      return offChainSymbolPrices.shift();\r\n    }\r\n  });\r\n  return symbolPrices\r\n};","import {\r\n  calculateEntryPrice,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\n//import { getPoolConfig } from \"../../shared/config\"\r\n//import { bTokenFactory } from \"../../shared/factory\"\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLatestBlockNumber,\r\n} from '../../shared/utils';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { getSymbolPrices } from '../utils';\r\nimport {\r\n  checkApiInput,\r\n  checkApiInputWithoutAccount,\r\n} from '../../shared/config';\r\nimport { AppError } from '../../shared/error/error';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\r\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const bTokenSymbol = perpetualPool.bTokenSymbol\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol),\r\n    }\r\n  }, args, {\r\n    // symbol: '',\r\n    // bTokenSymbol: '',\r\n    // multiplier: '',\r\n    // feeRatio: '',\r\n    // fundingRateCoefficient: '',\r\n    // minPoolMarginRatio: '',\r\n    // minInitialMarginRatio: '',\r\n    // minMaintenanceMarginRatio: '',\r\n    // minLiquidationReward: '',\r\n    // maxLiquidationReward: '',\r\n    // liquidationCutRatio: '',\r\n    // protocolFeeCollectRatio: '',\r\n    // indexConstituents: { url: '', tokens: [] },\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    if (symbolIndex > -1) {\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      //const symbol = symbols[symbolIndex].symbol\r\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        symbolInfo,\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        positionInfo,\r\n        margin,\r\n        //latestPrice,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbolInfo;\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      //const symbols = await Promise.all(promises);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n      let price;\r\n      if (symbolIndex === '-1') {\r\n        price = '0';\r\n      } else {\r\n        price = symbolPrices[symbolIndex];\r\n        priceCache.set(poolAddress, symbolId, price);\r\n      }\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [\r\n          s.symbol,\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n            .toString(),\r\n        ];\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n      const dynamicCost = symbols.reduce((accum, s, index) => {\r\n        if (index !== symbolIndex) {\r\n          return accum.plus(\r\n            bg(positions[index].volume)\r\n              .times(symbolPrices[index])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n\r\n      liquidatePriceCache.set(poolAddress, {\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol:symbols[symbolIndex].symbol,\r\n        price,\r\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(\r\n          volume,\r\n          cost,\r\n          multiplier\r\n        ).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee: fundingFee.toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    } else {\r\n      throw new AppError('INVALID_SYMBOL_ID', symbolId)\r\n    }\r\n  }, args)\r\n}\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        margin,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        //perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        //pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      const symbolList = symbols.map((s) => s.symbol);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n\r\n      return positions.map((p, index) => {\r\n      const symbolId = symbolList[index]\r\n      const symbol = symbols[index]\r\n      const price = symbolPrices[index]\r\n\r\n      const { volume, cost, lastCumulativeFundingRate } = p\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbol;\r\n      priceCache.set(poolAddress, symbolId, price);\r\n\r\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n\r\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n        if (idx !== index) {\r\n          return accum.plus(\r\n            bg(positions[idx].volume)\r\n              .times(symbolPrices[idx])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n        return {\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          price,\r\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\r\n          averageEntryPrice: calculateEntryPrice(\r\n            volume,\r\n            cost,\r\n            multiplier\r\n          ).toString(),\r\n          margin: margin.toString(),\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          //unrealizedPnlList,\r\n          fundingFee: fundingFee.toString(),\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            multiplier,\r\n            minMaintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      }).filter((p) => p.volume !== '0')\r\n  }, args, [])\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const balance = await perpetualPool.bToken.balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    return await perpetualPool.bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n\r\n  if (symbolIndex > -1) {\r\n    const symbolInfo = symbols[symbolIndex];\r\n    // const symbol = symbols[symbolIndex].symbol;\r\n    // const isOffchainOracleSymbol =\r\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n    // const oracleAddress = isOffchainOracleSymbol\r\n    //   ? ''\r\n    //   : symbols[symbolIndex].oracleAddress;\r\n    const [liquidity, prices] = await Promise.all([\r\n      perpetualPool.getLiquidity(),\r\n      getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      ),\r\n    ]);\r\n    const price = prices[symbolIndex]\r\n    priceCache.set(poolAddress, symbolId, price);\r\n    const {\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      tradersNetVolume,\r\n      feeRatio,\r\n    } = symbolInfo;\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    const fundingRateArgs = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient,\r\n    ];\r\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\r\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\r\n\r\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .times(minPoolMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n\r\n    const res = {\r\n      price,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n      liquidity: liquidity.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock,\r\n      fundingRate: fundingRate,\r\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\r\n    };\r\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n    return res;\r\n  } else {\r\n    throw new AppError('INVALID_SYMBOL_ID', symbolId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\r\n\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    //const symbol = symbols[symbolIndex]\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    //console.log('symbol',symbol)\r\n\r\n    if (!price) {\r\n      // const symbolName = symbol.symbol;\r\n      // const isOffchainOracleSymbol =\r\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    if (symbolIndex > -1) {\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      const price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n      const { multiplier } = symbols[symbolIndex]\r\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n    } else {\r\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\r\n    }\r\n\r\n  }, args, '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    [chainId, poolAddress ] = checkApiInput(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\r\n    }\r\n  }, args, {\r\n    // fundingRate0: '',\r\n    // fundingRatePerBlock: '',\r\n    // liquidity: '',\r\n    // volume: '',\r\n    // tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n    [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n      chainId,\r\n      poolAddress,\r\n    );\r\n\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   symbolId,\r\n      //   'v2_lite'\r\n      // );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      const pToken = perpetualPool.pToken\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n}\r\n","import { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    // const { bToken: bTokenAddress } = getPoolConfig(\r\n    //   poolAddress,\r\n    //   '0',\r\n    //   null,\r\n    //   'v2_lite'\r\n    // );\r\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n      await perpetualPool.init()\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const parameterInfo = perpetualPool.parameters\r\n      // const symbols = perpetualPool.symbols\r\n      const symbolIds = perpetualPool.activeSymbolIds\r\n      const [liquidity, margin] = await Promise.all([\r\n        //perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        //pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson, catchTxApiError } from '../../shared/utils';\r\n// import {\r\n//   getPoolConfig,\r\n//   getPoolConfig2,\r\n// } from '../../shared/config';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  bTokenSymbol,\r\n  symbols,\r\n  symbolIds,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const index = symbolIds.findIndex((s) => s === symbolId)\r\n  const symbol = symbols[index]\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    symbol.multiplier,\r\n    symbol.feeRatio,\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    //volume: volume.toString(),\r\n    volume: bg(volume).times(symbol.multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  //console.log('symbolIdList', symbolIdList);\r\n  //const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const bTokenSymbol = perpetualPool.bTokenSymbol\r\n  const { pTokenAddress } = await perpetualPool.getAddresses()\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  const symbolIdList = await pToken.getActiveSymbolIds()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      symbols,\r\n      symbolIdList,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await perpetualPool.init();\r\n    const symbolIds = perpetualPool.activeSymbolIds;\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    let symbols = await Promise.all(promises);\r\n\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          if (i.direction !== 'LIQUIDATION') {\r\n            const index = symbolIds.indexOf(i.symbolId);\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              //volume: deriToNatural(i.volume).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(symbols[index].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            if (\r\n              i.volume !== '' &&\r\n              i.volume.indexOf(',') > -1 &&\r\n              !i.price.startsWith('NaN')\r\n            ) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc;\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\r\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\r\n              return ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id]\r\n                    .abs()\r\n                    .times(symbols[id].multiplier)\r\n                    .toString(),\r\n                  price: prices[id].toString(),\r\n                  notional: volumes[id]\r\n                    .abs()\r\n                    .times(prices[id])\r\n                    .times(symbols[id].multiplier)\r\n                    .toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              });\r\n            } else {\r\n              // handle missing price data\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                price: '',\r\n                notional: '',\r\n                //volume: deriToNatural(i.volume).toString(),\r\n                volume: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            }\r\n          }\r\n        })\r\n        .flat();\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      //const { initialBlock } = getPoolConfig2(poolAddress);\r\n      const initialBlock = 100000000\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  });\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\nimport { contractFactory } from '../../shared/utils';\r\nimport { getIndexInfo, SECONDS_IN_A_DAY, checkSymbolId } from '../../shared/config';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateLiquidationPrice } from '../../v2/calculation';\r\nimport { calculateDpmmPrice } from '../calc';\r\nimport { perpetualPoolLiteDpmmFactory} from './factory';\r\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\r\n\r\nexport class PoolApi{\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  }\r\n  async init(isEstimatedApi) {\r\n    await this.pool.init(isEstimatedApi);\r\n  }\r\n\r\n  // =================\r\n  //  api\r\n  // =================\r\n  async getLiquidityInfo(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const lToken = pool.lToken;\r\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n      pool.getPoolLiquidity(),\r\n      lToken.balanceOf(accountAddress),\r\n      lToken.totalSupply(),\r\n    ]);\r\n    const { poolMarginRatio } = pool.parameters;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const poolDynamicEquity = await pool.getDynamicEquity();\r\n    const shareValue = bg(lTokenTotalSupply).eq(0)\r\n      ? '0'\r\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\r\n\r\n    const value = pool.symbols.reduce((acc, s) => {\r\n      return acc.plus(\r\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\r\n      );\r\n    }, bg(0));\r\n    const removable = bg(poolDynamicEquity).minus(\r\n      bg(value).times(poolMarginRatio)\r\n    );\r\n    return {\r\n      totalSupply: lTokenTotalSupply,\r\n      poolLiquidity: liquidity,\r\n      shares: lTokenBalance,\r\n      shareValue,\r\n      maxRemovableShares: max(\r\n        min(\r\n          bg(lTokenBalance),\r\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\r\n        ),\r\n        bg(0)\r\n      ),\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n    const parameterInfo = pool.parameters;\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbol,\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\r\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\r\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\r\n      minLiquidationReward: parameterInfo.minLiquidationReward,\r\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\r\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\r\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\r\n    if (symbolIndex > -1) {\r\n      const oracleAddress =\r\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n          ? ''\r\n          : pool.symbols[symbolIndex].oracleAddress;\r\n      const [\r\n        symbols,\r\n        lastTimestamp,\r\n        margin,\r\n        fundingPeriod,\r\n        price,\r\n      ] = await Promise.all([\r\n        pool.getSymbols(),\r\n        pool.getLastTimestamp(),\r\n        pool.pToken.getMargin(accountAddress),\r\n        pool.getFundingPeriod(),\r\n        getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          pool.symbols[symbolIndex].symbol,\r\n          oracleAddress\r\n        ),\r\n      ]);\r\n\r\n      const positions = await pool.getPositions(accountAddress)\r\n\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n\r\n      const unrealizedPnl = positions.reduce((acc, p) => {\r\n        return acc.plus(\r\n          bg(p.traderPnl)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [s.symbol, positions[index].traderPnl];\r\n      });\r\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n      const dynamicCost = symbols.reduce((acc, s, index) => {\r\n        if (index !== parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n\r\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\r\n\r\n      // set liquidatePrice cache\r\n      liquidatePriceCache.set(this.poolAddress, {\r\n        volume: position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier: symbol.multiplier,\r\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol: symbol.symbol,\r\n        price: price,\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      symbols,\r\n      lastTimestamp,\r\n      margin,\r\n      fundingPeriod,\r\n    ] = await Promise.all([\r\n      pool.getSymbols(),\r\n      //pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargin(accountAddress),\r\n      pool.getFundingPeriod(),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions.map((p, index) => {\r\n      const symbolIndex = index;\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n      const unrealizedPnl = p.traderPnl\r\n      const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n        if (idx !== index) {\r\n          return acc.plus(\r\n            bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n      return {\r\n        symbol: symbol.symbol,\r\n        symbolId: symbol.symbolId,\r\n        price: symbol.indexPrice,\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }).filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n\r\n    const liquidity = pool.state.liquidity;\r\n    return {\r\n      funding0: bg(symbol.funding).div(symbol.multiplier).toString(),\r\n      fundingPerSecond: bg(symbol.fundingPerSecond)\r\n        .div(symbol.multiplier)\r\n        .toString(),\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(symbol.tradersNetVolume)\r\n        .times(symbol.multiplier)\r\n        .toString(),\r\n    };\r\n  }\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { poolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(poolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { poolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  // =================\r\n  // static method\r\n  // =================\r\n}\r\n\r\nexport const poolApiFactory = contractFactory(PoolApi);\r\n","import {\r\n  checkApiInput,\r\n  checkApiInputWithoutAccount,\r\n  checkSymbolId,\r\n  checkTokenId,\r\n} from '../../shared/config';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { bg } from '../../shared/utils';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\nimport { poolApiFactory } from '../contract/PoolApi';\r\nimport { calculateDpmmCost } from '../calc';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityInfo(accountAddress);\r\n    },\r\n    args,\r\n    {\r\n      // totalSupply: '',\r\n      // poolLiquidity: '',\r\n      // shares: '',\r\n      // shareValue: '',\r\n      // maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getSpecification(symbolId);\r\n    },\r\n    args,\r\n    {\r\n      // symbol: '',\r\n      // bTokenSymbol: '',\r\n      // multiplier: '',\r\n      // feeRatio: '',\r\n      // fundingRateCoefficient: '',\r\n      // minPoolMarginRatio: '',\r\n      // minInitialMarginRatio: '',\r\n      // minMaintenanceMarginRatio: '',\r\n      // minLiquidationReward: '',\r\n      // maxLiquidationReward: '',\r\n      // liquidationCutRatio: '',\r\n      // protocolFeeCollectRatio: '',\r\n      // indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfo(accountAddress, symbolId);\r\n    },\r\n    args,\r\n    {}\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfos(accountAddress);\r\n    },\r\n    args,\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.bToken.balanceOf(accountAddress);\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    false\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const args = [\r\n    chainId,\r\n    poolAddress,\r\n    accountAddress,\r\n    volume,\r\n    leverage,\r\n    symbolId,\r\n  ];\r\n  return catchApiError(\r\n    async (\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    ) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedMargin(\r\n        accountAddress,\r\n        volume,\r\n        leverage,\r\n        symbolId\r\n      );\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFee(volume, symbolId);\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getFundingRate(symbolId);\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityUsed(symbolId);\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    args,\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      //console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n","import {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n  catchTxApiError,\r\n} from '../../shared/utils';\r\n// import {\r\n//   getPoolConfig,\r\n// } from '../../shared/config';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  //console.log('bTokenSymbol', bTokenSymbol)\r\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await perpetualPool.formatTradeEvent(item);\r\n    if (res) {\r\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\r\n      result.unshift({\r\n        baseToken: perpetualPool.bTokenSymbol,\r\n        direction: res.direction,\r\n        volume: bg(res.volume)\r\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n          .toString(),\r\n        price: res.price,\r\n        indexPrice: res.indexPrice,\r\n        notional: res.notional,\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        time: res.time,\r\n        transactionFee: res.transactionFee,\r\n        transactionHash: res.transactionHash,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init();\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId);\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else if (i.direction === 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken ? i.baseToken.trim() : '',\r\n              symbolId: i.symbolId ? i.symbolId : '',\r\n              symbol: i.symbol ? i.symbol : '',\r\n              price: i.price ? deriToNatural(i.price).toString() : '',\r\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\r\n              volume: i.volume\r\n                ? deriToNatural(i.volume)\r\n                    .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n                    .toString()\r\n                : '',\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n        .filter((i) => i != null);\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      //const { initialBlock } = getPoolConfig(poolAddress);\r\n      const initialBlock = 100000000\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  });\r\n};\r\n","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../shared/api/database_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n};\r\n","import { bg, catchTxApiError } from '../../shared/utils';\r\nimport { checkAmount, checkAddress, checkApiInput, checkChainId } from '../../shared/config';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js';\r\n\r\n// mining\r\nexport const addLiquidity = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      chainId = checkChainId(chainId);\r\n      poolAddress = checkAddress(poolAddress);\r\n      accountAddress = checkAddress(accountAddress);\r\n      amount = checkAmount(amount);\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.addLiquidity(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount);\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.removeLiquidity(accountAddress, amount);\r\n  }, []);\r\n};\r\n\r\n//trading\r\nexport const unlock = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount);\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount);\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.removeMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      newVolume = checkAmount(newVolume);\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.trade(accountAddress, symbolId, newVolume);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      const { volume } = await pool.pToken.getPosition(\r\n        accountAddress,\r\n        symbolId\r\n      );\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await pool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","// this file is generated by script, don't modify it !!!\r\n// import { processMethod } from \"../../shared/utils/index.js\";\r\n\r\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\n// import {\r\n//   processResult,\r\n// } from \"../../shared/utils/contract.js\";\r\n//import { range } from '../../shared/utils/lang.js'\r\nimport { bTokenOracle1Factory, ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\r\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\r\n\r\n\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\r\n\r\nconst range = (n) => {\r\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\r\n    n = parseInt(n)\r\n  }\r\n  return [...Array(n).keys()]\r\n}\r\n\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    //const prices = await this._getSymbolPrices()\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    //newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nconst init = (klass) => {\r\n  klass.prototype.init = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.parameters) {\r\n      [this.addresses, this.parameters, this.state, this.lengths] =\r\n        await Promise.all([\r\n          this.getAddresses(),\r\n          this.getParameters(),\r\n          this.getPoolStateValues(),\r\n          this.getLengths(),\r\n        ]);\r\n      this.fundingPeriod = (3 * 24 * 3600).toString();\r\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\r\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\r\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\r\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\r\n    }\r\n    if (!isEstimatedApi) {\r\n      const lengths = await this.getLengths();\r\n      if (\r\n        !this.symbols ||\r\n        !this.bTokens ||\r\n        this.lengths.toString() !== lengths.toString()\r\n      ) {\r\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\r\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\r\n        this.bTokens = await Promise.all(\r\n          this.bTokenIds.reduce(\r\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n            []\r\n          )\r\n        );\r\n        // update bToken price\r\n        for (let i = 0; i < this.bTokenIds.length; i++) {\r\n          if (i === 0) {\r\n            this.bTokens[i].price = \"1\";\r\n          } else {\r\n            // this.bTokens[i].price = await offChainOracleFactory(\r\n            //   this.chainId,\r\n            //   this.bTokens[i].oracleAddress\r\n            // ).getPrice();\r\n            this.bTokens[i].price = await bTokenOracle1Factory(\r\n              this.chainId,\r\n              this.bTokens[i].oracleAddress\r\n            ).getPrice();\r\n          }\r\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n            .times(this.bTokens[i].price)\r\n            .times(this.bTokens[i].discount)\r\n            .plus(this.bTokens[i].pnl)\r\n            .toString();\r\n        }\r\n        this.bTokenSymbols = await Promise.all(\r\n          this.bTokens.reduce(\r\n            (acc, bToken) => [\r\n              ...acc,\r\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\r\n            ],\r\n            []\r\n          )\r\n        );\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n\r\n        // init\r\n        this.positions = [];\r\n        this.userState = {};\r\n        this.offChainOracleSymbolIds = [];\r\n        this.offChainOracleSymbolNames = [];\r\n\r\n        await this.getLiquidity()\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\nconst getConfig = (klass) => {\r\n  klass.prototype.getConfig = async function () {\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      router: this.addresses.routerAddress,\r\n      // bTokenSymbols: this.bTokenSymbols,\r\n      bTokens: this.bTokens.map((b, index) => ({\r\n        bTokenId: index.toString(),\r\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\r\n        bToken: b.bTokenAddress,\r\n      })),\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: index.toString(),\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"perpetual\",\r\n      version: 'v2',\r\n      versionId: \"v2_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLiquidity = async function () {\r\n    await this._init()\r\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\r\n    this.state = this.state || {}\r\n    this.state.liquidity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLastTimestamp = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return res[0]\r\n    }\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getProtocolFeeAccrued = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return fromWei(res[1])\r\n    }\r\n  return klass\r\n}\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype.getStateValues = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state= { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getBTokens = (klass) => {\r\n  klass.prototype.getBTokens = async function (bTokenId) {\r\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\r\n    const bTokens = await Promise.all(\r\n      bTokenIds.reduce(\r\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n        []\r\n      )\r\n    );\r\n    // update bToken price\r\n    for (let i = 0; i < this.bTokenIds.length; i++) {\r\n      if (i === 0) {\r\n        bTokens[i].price = \"1\";\r\n      } else {\r\n        bTokens[i].price = await offChainOracleFactory(\r\n          this.chainId,\r\n          this.bTokens[i].oracleAddress\r\n        ).getPrice();\r\n      }\r\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n        .times(this.bTokens[i].price)\r\n        .times(this.bTokens[i].discount)\r\n        .plus(this.bTokens[i].pnl)\r\n        .toString();\r\n    }\r\n\r\n    // update\r\n    if (bTokenId) {\r\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\r\n      if (bTokenIndex > -1) {\r\n        this.bTokens[bTokenIndex] = bTokens[0]\r\n      }\r\n    } else {\r\n      this.bTokens = bTokens\r\n    }\r\n    return bTokens\r\n  };\r\n  return klass\r\n};\r\n\r\n// getSymbols()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype.getSymbols = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    const indexPrices = await Promise.all(\r\n      symbols.map((s) => {\r\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\r\n          ? ''\r\n          : s.oracleAddress;\r\n        return getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          s.symbol,\r\n          oracleAddress\r\n        );\r\n      })\r\n    );\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index];\r\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\r\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\r\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      );\r\n\r\n      const pnl = calculateDpmmCost(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier,\r\n        bg(s.tradersNetVolume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(s.tradersNetCost);\r\n      const ratePerSecond = bg(s.dpmmPrice)\r\n        .minus(s.indexPrice)\r\n        .times(s.multiplier)\r\n        .div(this.fundingPeriod)\r\n        .toString();\r\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\r\n        this.state.lastTimestamp\r\n      );\r\n      s.fundingPerSecond = ratePerSecond\r\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\r\n      s.pnl = pnl.toString()\r\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\r\n        .minus(pnl)\r\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\r\n        .toString();\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      this.symbols[symbolIndex] = symbols[0]\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype.getPositions = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\r\n        []\r\n      )\r\n    );\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\nconst isBTokensUpdated = (klass) => {\r\n  klass.prototype.isBTokensUpdated = function() {\r\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\r\n  }\r\n  return klass\r\n}\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype.isSymbolsUpdated = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype.isPositionsUpdated = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols();\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res;\r\n    return res;\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    const { minPoolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.notional)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(minPoolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isBTokensUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated()) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.userState.margins) {\r\n      this.userState.margins = await this.pToken.getMargins(account);\r\n    }\r\n\r\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\r\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\r\n    this.userState.totalEquity = this.userState.margins.reduce(\r\n      (acc, m, i) =>\r\n        acc.plus(\r\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\r\n        ),\r\n      bg(this.userState.totalPnl)\r\n    );\r\n\r\n    this.userState.totalNotional = this.positions.reduce(\r\n      (acc, p) => acc.plus(p.notional),\r\n      bg(0)\r\n    );\r\n\r\n    return [this.userState.totalEquity, this.userState.totalNotional];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst formatTradeEvent = (klass) => {\r\n  klass.prototype['formatTradeEvent'] = async function (event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume);\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    const symbol = this.symbols[index];\r\n    const tradeFee = info.tradeFee;\r\n\r\n    const direction =\r\n      tradeFee !== '-1'\r\n        ? bg(tradeVolume).gt(0)\r\n          ? 'LONG'\r\n          : 'SHORT'\r\n        : 'LIQUIDATION';\r\n    const price = bg(info.tradeCost)\r\n      .div(info.tradeVolume)\r\n      .div(symbol.multiplier)\r\n      .toString();\r\n    const notional = bg(tradeVolume)\r\n      .abs()\r\n      .times(price)\r\n      .times(symbol.multiplier)\r\n      .toString();\r\n\r\n    const res = {\r\n      symbolId: info.symbolId,\r\n      symbol: symbol.symbol,\r\n      trader: info.trader,\r\n      direction,\r\n      volume: bg(tradeVolume).abs().toString(),\r\n      price: price,\r\n      indexPrice: deriToNatural(info.indexPrice).toString(),\r\n      notional: notional,\r\n      transactionFee:\r\n        tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\r\n      transactionHash: event.transactionHash,\r\n      time: block.timestamp * 1000,\r\n      extra: {},\r\n    };\r\n    return res;\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nexport const perpetualPoolDpmmAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    klass = addMethods(klass, [\r\n        init,\r\n        getConfig,\r\n        getLiquidity,\r\n        getLastTimestamp,\r\n        getProtocolFeeAccrued,\r\n        getStateValues,\r\n        getBTokens,\r\n        getSymbols,\r\n        getPositions,\r\n        isBTokensUpdated,\r\n        isSymbolsUpdated,\r\n        isPositionsUpdated,\r\n        getDynamicEquity,\r\n        getTraderLiquidity,\r\n        getTraderMarginStatus,\r\n        getPoolRequiredMargin,\r\n        formatTradeEvent,\r\n    ])\r\n    klass = overrideMethods(klass, [\r\n      [\r\n        processMethod,\r\n        \"getParameters\",\r\n        [\r\n          \"initialMarginRatio\",\r\n          \"liquidationCutRatio\",\r\n          \"maintenanceMarginRatio\",\r\n          \"maxLiquidationReward\",\r\n          \"minBToken0Ratio\",\r\n          \"minPoolMarginRatio\",\r\n          \"protocolFeeCollectRatio\",\r\n        ],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getBToken\",\r\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getSymbol\",\r\n        [\r\n          \"multiplier\",\r\n          \"feeRatio\",\r\n          //\"fundingRateCoefficient\",\r\n          \"alpha\",\r\n          \"distributedUnrealizedPnl\",\r\n          //\"price\",\r\n          \"cumulativeFundingRate\",\r\n          \"tradersNetVolume\",\r\n          \"tradersNetCost\",\r\n        ],\r\n      ],\r\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\r\n    ]);\r\n    return klass\r\n}\r\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['2']],\r\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'removeLiquidity', ['2']],\r\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'addMargin', ['2']],\r\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\r\n    [processTxMethod, 'removeMargin', ['2']],\r\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\r\n    [processTxMethod, 'trade', ['2']],\r\n    //[processTxMethod, 'tradeWithPrices', ['2']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const lTokenAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const pTokenAdapter = (klass) => {\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getMargins'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n    [\r\n      processMethod,\r\n      'getPositions',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const lTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateAsset\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getAsset\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getAssets\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"asset\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updateAsset\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\r\n\r\nexport class LToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async exists(owner) {\r\n  //    const res = await this._call('exists', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getAsset(owner, bTokenId) {\r\n    const res = await this._call('getAsset', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getAssets(owner) {\r\n    const res = await this._call('getAssets', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async numBTokens() {\r\n  //    const res = await this._call('numBTokens', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async pool() {\r\n  //    const res = await this._call('pool', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\r\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numSymbols_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargins\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getPositions\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numSymbols\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumSymbols\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"margins\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargins\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\r\n\r\nexport class PToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner, bTokenId) {\r\n    const res = await this._call('getMargin', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getMargins(owner) {\r\n    const res = await this._call('getMargins', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPositions(owner) {\r\n    const res = await this._call('getPositions', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numBTokens() {\r\n    const res = await this._call('numBTokens', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numSymbols() {\r\n    const res = await this._call('numSymbols', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setNumSymbols(accountAddress, num) {\r\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\r\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\r\n  //  }\r\n  //  async updateMargins(accountAddress, owner, margins) {\r\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[9]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[9]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[4]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[4]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"approveBTokenForTargetPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"routerAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBToken\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getLengths\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals0\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minBToken0Ratio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minPoolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbolOracle\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourcePool\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migratePoolStateValues\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"distributedUnrealizedPnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPoolForLTokenAndPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    const res = await this._call('getBToken', [bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getLengths() {\r\n    const res = await this._call('getLengths', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getSymbolOracle(symbolId) {\r\n  //    const res = await this._call('getSymbolOracle', [symbolId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, info) {\r\n  //    return await this._transact('addBToken', [info], accountAddress)\r\n  //  }\r\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addSymbol(accountAddress, info) {\r\n  //    return await this._transact('addSymbol', [info], accountAddress)\r\n  //  }\r\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\r\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, liquidator, trader) {\r\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\r\n  //  }\r\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\r\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\r\n  //  }\r\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\r\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\r\n  //  }\r\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\r\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\r\n  //  }\r\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\r\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\r\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolRouterAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"liquidatorQualifier\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"qualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setLiquidatorQualifier\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"tradeWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async liquidatorQualifier() {\r\n  //    const res = await this._call('liquidatorQualifier', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationDestination() {\r\n  //    const res = await this._call('migrationDestination', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationTimestamp() {\r\n  //    const res = await this._call('migrationTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async addMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async approveMigration(accountAddress) {\r\n  //    return await this._transact('approveMigration', [], accountAddress)\r\n  //  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async executeMigration(accountAddress, sourceRouter) {\r\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\r\n  //  }\r\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\r\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\r\n  //  }\r\n  async liquidate(accountAddress, trader) {\r\n    return await this._transact('liquidate', [trader], accountAddress)\r\n  }\r\n  async liquidateWithPrices(accountAddress, trader, infos) {\r\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\r\n  }\r\n  //  async prepareMigration(accountAddress, target, graceDays) {\r\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async removeMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\r\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, poolAddress) {\r\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\r\n  }\r\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\r\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\r\n\r\nimport { LToken } from './gen/LToken.js';\r\nimport { PToken } from './gen/PToken.js';\r\nimport { PerpetualPool} from './gen/PerpetualPool';\r\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\r\n\r\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\r\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\r\n\r\n// dpmm\r\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\r\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\r\n","import { contractFactory } from \"../../activity/utils\"\r\nimport { bg, max, min } from \"../../shared/utils\"\r\nimport { SECONDS_IN_A_DAY, checkSymbolId  } from \"../../shared/config\";\r\nimport { getIndexInfo } from \"../../shared/config/token\"\r\nimport {\r\n  calculateLiquidationPrice,\r\n  calculateMaxRemovableLiquidity,\r\n} from '../../v2/calculation';\r\nimport { perpetualPoolDpmmFactory } from './factory';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\r\nimport { ERC20Factory } from \"../../shared/contract/factory\";\r\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\r\n\r\n// PoolApi \r\nexport class PoolApi {\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  }\r\n\r\n  async init(usedByEstimatedApi) {\r\n    await this.pool.init(usedByEstimatedApi);\r\n  }\r\n\r\n  // API\r\n  async getLiquidityInfo(accountAddress, bTokenId) {\r\n    const pool = this.pool;\r\n    const [lTokenAsset, bTokens, symbols] = await Promise.all([\r\n      pool.lToken.getAsset(accountAddress, bTokenId),\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n    ]);\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\r\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const cost = symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\r\n    const totalPnl = symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\r\n\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenIndex],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    ).toString();\r\n    const approximatePnl = bg(pnl)\r\n      .plus(\r\n        bg(bTokens[bTokenIndex].cumulativePnl)\r\n          .minus(lastCumulativePnl)\r\n          .times(liquidity)\r\n      )\r\n      .toString();\r\n\r\n    return {\r\n      poolLiquidity,\r\n      shares: liquidity,\r\n      maxRemovableShares,\r\n      pnl: approximatePnl,\r\n      bToken0Symbol: pool.bTokenSymbols[0],\r\n      swappedPnl: bTokens[bTokenIndex].price ? bg(approximatePnl).div(bTokens[bTokenIndex].price).toString() : '',\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool\r\n    const {\r\n      minPoolMarginRatio,\r\n      initialMarginRatio,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      maintenanceMarginRatio,\r\n      minBToken0Ratio,\r\n    } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbols,\r\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio: initialMarginRatio,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const oracleAddress =\r\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n        ? ''\r\n        : pool.symbols[symbolIndex].oracleAddress;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      lastTimestamp,\r\n      margins,\r\n      price,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n      getOraclePriceFromCache2.get(\r\n        this.chainId,\r\n        pool.symbols[symbolIndex].symbol,\r\n        oracleAddress\r\n      ),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const symbol = symbols[symbolIndex];\r\n    const position = positions[symbolIndex];\r\n    // const { volume } = position\r\n    // const { multiplier, indexPrice } = symbol\r\n    const margin = bTokens\r\n      .reduce(\r\n        (acc, b, index) =>\r\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n        bg(0)\r\n      )\r\n      .toString();\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n    const marginHeldBySymbol = bg(position.volume)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.indexPrice)\r\n      .times(initialMarginRatio)\r\n      .abs();\r\n\r\n    const unrealizedPnl = positions.reduce(\r\n      (acc, p) => acc.plus(p.traderPnl),\r\n      bg(0)\r\n    );\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, positions[index].traderPnl];\r\n    });\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n    const dynamicCost = symbols.reduce((acc, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return acc.plus(\r\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n        );\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, bg(0));\r\n    const fundingFee = bg(symbol.cumulativeFundingRate)\r\n      .minus(position.lastCumulativeFundingRate)\r\n      .plus(\r\n        bg(symbol.dpmmPrice)\r\n          .minus(symbol.indexPrice)\r\n          .times(symbol.multiplier)\r\n          .div(pool.fundingPeriod)\r\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n      )\r\n      .times(position.volume)\r\n      .toString();\r\n\r\n    // set liquidatePrice cache\r\n    liquidatePriceCache.set(this.poolAddress, {\r\n      volume: position.volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier: symbol.multiplier,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n    });\r\n\r\n    return {\r\n      symbol: symbol.symbol,\r\n      price: price,\r\n      markPrice: symbol.dpmmPrice.toString(),\r\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n      averageEntryPrice: bg(position.volume).eq(0)\r\n        ? '0'\r\n        : bg(position.cost)\r\n            .div(position.volume)\r\n            .div(symbol.multiplier)\r\n            .toString(),\r\n      margin: margin,\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        symbol.multiplier,\r\n        maintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      lastTimestamp,\r\n      margins,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      //pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions\r\n      .map((p, index) => {\r\n        const symbolIndex = index;\r\n        const symbol = symbols[symbolIndex];\r\n        const position = positions[symbolIndex];\r\n        const margin = bTokens\r\n          .reduce(\r\n            (acc, b, index) =>\r\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n            bg(0)\r\n          )\r\n          .toString();\r\n        const marginHeld = symbols.reduce((acc, s, index) => {\r\n          return acc.plus(\r\n            bg(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume)\r\n              .times(initialMarginRatio)\r\n              .abs()\r\n          );\r\n        }, bg(0));\r\n        const marginHeldBySymbol = bg(position.volume)\r\n          .times(symbol.multiplier)\r\n          .times(symbol.indexPrice)\r\n          .times(initialMarginRatio)\r\n          .abs();\r\n        const unrealizedPnl = p.traderPnl\r\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n          if (idx !== index) {\r\n            return acc.plus(\r\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n            );\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, bg(0));\r\n        const fundingFee = bg(symbol.cumulativeFundingRate)\r\n          .minus(position.lastCumulativeFundingRate)\r\n          .plus(\r\n            bg(symbol.dpmmPrice)\r\n              .minus(symbol.indexPrice)\r\n              .times(symbol.multiplier)\r\n              .div(pool.fundingPeriod)\r\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n          )\r\n          .times(position.volume)\r\n          .toString();\r\n        return {\r\n          symbolId: symbolIndex.toString(),\r\n          symbol: symbol.symbol,\r\n          price: symbol.indexPrice,\r\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n          averageEntryPrice: bg(position.volume).eq(0)\r\n            ? '0'\r\n            : bg(position.cost)\r\n                .div(position.volume)\r\n                .div(symbol.multiplier)\r\n                .toString(),\r\n          margin: margin,\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          fundingFee,\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            position.volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            symbol.multiplier,\r\n            maintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      })\r\n      .filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init()\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\r\n    const liquidity = pool.state.liquidity\r\n    return {\r\n      funding0: bg(funding).div(multiplier).toString(),\r\n      fundingPerSecond: bg(fundingPerSecond).div(multiplier).toString(),\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n    };\r\n  }\r\n\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(minPoolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getPoolBTokensBySymbolId(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const { initialMarginRatio } = pool.parameters\r\n    const margins = await pool.pToken.getMargins(accountAddress);\r\n    const balances = await Promise.all(\r\n      pool.bTokens.reduce(\r\n        (acc, i) => [\r\n          ...acc,\r\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n\r\n    const margin = pool.bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0)).toString()\r\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(pool.positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0)).toString();\r\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\r\n\r\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\r\n      const bToken = pool.bTokens[i]\r\n      bToken.walletBalance = balances[i]\r\n      bToken.availableBalance = max(\r\n        min(\r\n          bg(margin)\r\n            .minus(marginHeld)\r\n            .plus(pnl)\r\n            .div(pool.bTokens[i].price)\r\n            .div(pool.bTokens[i].discount),\r\n          bg(margins[i])\r\n        ),\r\n        bg(0)\r\n      ).toString();\r\n    }\r\n    return pool.bTokens.map((b, index) => {\r\n      return {\r\n        bTokenId: index.toString(),\r\n        bTokenAddress: b.bTokenAddress,\r\n        bTokenSymbol: pool.bTokenSymbols[index],\r\n        availableBalance: b.availableBalance,\r\n        walletBalance: b.walletBalance,\r\n      }\r\n    })\r\n  }\r\n\r\n  async getFundingFee(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    return pool.positions[symbolIndex].fundingAccrued;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const poolApiFactory = contractFactory(PoolApi);","import {\r\n  checkApiInput,\r\n  checkApiInputWithoutAccount,\r\n  checkSymbolId,\r\n  checkTokenId,\r\n} from '../../shared/config';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { poolApiFactory } from '../contract/PoolApi';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\r\nimport { bg } from '../../shared/utils';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityInfo(accountAddress, bTokenId);\r\n    },\r\n    [],\r\n    {\r\n      // maxRemovableShares: '',\r\n      // pnl: '',\r\n      // poolLiquidity: '',\r\n      // shares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getSpecification(symbolId);\r\n    },\r\n    [],\r\n    {\r\n      // symbol: '',\r\n      // bTokenSymbol: [],\r\n      // bTokenMultiplier: [],\r\n      // multiplier: '',\r\n      // feeRatio: '',\r\n      // fundingRateCoefficient: '',\r\n      // minPoolMarginRatio: '',\r\n      // minInitialMarginRatio: '',\r\n      // minMaintenanceMarginRatio: '',\r\n      // liquidationCutRatio: '',\r\n      // protocolFeeCollectRatio: '',\r\n      // indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    symbolId = checkTokenId(symbolId);\r\n    const api = poolApiFactory(chainId, poolAddress);\r\n    await api.init();\r\n    return await api.getPositionInfo(accountAddress, symbolId);\r\n  });\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPositionInfos(accountAddress);\r\n    },\r\n    [],\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\r\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.balanceOf(accountAddress);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      bTokenId = checkTokenId(bTokenId);\r\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedMargin(\r\n        accountAddress,\r\n        volume,\r\n        leverage,\r\n        symbolId\r\n      );\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFee(volume, symbolId);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingRate(symbolId);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityUsed();\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      //symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPoolBTokensBySymbolId(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    []\r\n  );\r\n};\r\n\r\nexport const getFundingFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingFee(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    ''\r\n  );\r\n};\r\n","import {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n  catchTxApiError,\r\n  catchApiError,\r\n} from '../../shared/utils';\r\n// import {\r\n//   getPoolConfig,\r\n// } from '../../shared/config';\r\nimport { perpetualPoolDpmmFactory, } from '../contract/factory';\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await perpetualPool.formatTradeEvent(item);\r\n    if (res) {\r\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\r\n      result.unshift({\r\n        baseToken: '',\r\n        direction: res.direction,\r\n        volume: bg(res.volume)\r\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n          .toString(),\r\n        price: res.price,\r\n        indexPrice: res.indexPrice,\r\n        notional: res.notional,\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        time: res.time,\r\n        transactionFee: res.transactionFee,\r\n        transactionHash: res.transactionHash,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(async () => {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init();\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId);\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: '',\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else if (i.direction === 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: '',\r\n              symbolId: i.symbolId ? i.symbolId : '',\r\n              symbol: i.symbol ? i.symbol : '',\r\n              price: i.price ? deriToNatural(i.price).toString() : '',\r\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\r\n              volume: i.volume\r\n                ? deriToNatural(i.volume)\r\n                    .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n                    .toString()\r\n                : '',\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n        .filter((i) => i != null);\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      //const { initialBlock } = getPoolConfig(poolAddress);\r\n      const initialBlock = 100000000\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  });\r\n};\r\n","import {\r\n  checkApiInput,\r\n  MAX_INT256,\r\n} from '../../shared/config';\r\nimport {\r\n  bg,\r\n  deriToNatural,\r\n} from '../../shared/utils';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { catchTxApiError } from '../../shared/utils/api';\r\nimport { checkAmount, checkSymbolId, checkTokenId } from '../../shared/config';\r\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\r\n\r\n// mining\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount);\r\n    bTokenId = checkTokenId(bTokenId);\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\r\n  }, []);\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount);\r\n    bTokenId = checkTokenId(bTokenId);\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    if (isMaximum) {\r\n      amount = deriToNatural(MAX_INT256).toString()\r\n    }\r\n    return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\r\n  }, []);\r\n};\r\n\r\n//trading\r\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    bTokenId = checkTokenId(bTokenId)\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds)\r\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, []);\r\n};\r\n\r\nexport const depositMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.addMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.removeMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      newVolume = checkAmount(newVolume)\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      const { volume } = await pool.pToken.getPosition(\r\n        accountAddress,\r\n        symbolId\r\n      );\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    []\r\n  );\r\n};\r\n","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../v2/api/mining_query_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n  // extra for v2\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n};\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg } from '../../shared/utils';\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateShareValue,\r\n} from '../../v1/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\n\r\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  // const { lToken: lTokenAddress } = getPoolConfig(\r\n  //   poolAddress,\r\n  //   '0',\r\n  //   '0',\r\n  //   'option'\r\n  // );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool.init()\r\n  const lToken = optionPool.lToken\r\n  const [\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n  ] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n\r\n  const symbols = optionPool.activeSymbols\r\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\r\n  const { poolState } = state;\r\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\r\n  const value = symbols.reduce(\r\n    (acc, s) =>\r\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\r\n    bg(0)\r\n  );\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      totalDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      bg(initialMarginRatio).times(10)\r\n    ).toString(),\r\n  };\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n  );\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import { catchTxApiError, bg } from '../../shared/utils';\r\n//import { isOrderValid } from '../../v2/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n    await optionPool.init()\r\n    const bToken = optionPool.bToken\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n      //   optionPool.getParameters(),\r\n      //   optionPool.getLiquidity(),\r\n      //   pToken.getMargin(accountAddress),\r\n      //   pToken.getActiveSymbolIds(),\r\n      // ]);\r\n      // no minInitialMarginRatio in option\r\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      // let promises = [];\r\n\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      // const symbols = await Promise.all(promises);\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      // }\r\n      // const positions = await Promise.all(promises);\r\n\r\n      // let marginHeld = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .times(bg(positions[index]).volume.plus(newVolume))\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // marginHeld = marginHeld.times(initialMarginRatio);\r\n\r\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume)\r\n      //         .plus(newVolume)\r\n      //         .times(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      // const orderValidation = isOrderValid(\r\n      //   margin,\r\n      //   marginHeld,\r\n      //   liquidity,\r\n      //   liquidityUsed\r\n      // );\r\n      // if (orderValidation.success) {\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      // } else {\r\n      //   throw new Error(orderValidation.error);\r\n      // }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool.init()\r\n      const pToken = optionPool.pToken\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import {\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  bg,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getPastEventsUseAbi,\r\n  getHttpBase,\r\n  fetchJson,\r\n  max,\r\n  catchApiError,\r\n} from '../../shared/utils';\r\nimport { DeriEnv } from '../../shared/config';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { optionPricerFactory } from '../factory/tokens';\r\nimport { everlastingOptionOldAbi } from '../contract/abis';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  bTokenSymbol,\r\n  symbolIdList,\r\n  symbols,\r\n  pricer\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const tradeCost = deriToNatural(info.tradeCost);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const volume = tradeVolume.abs();\r\n  const symbolId = info.symbolId;\r\n  const volatility = info.volatility;\r\n  const index = symbolIdList.indexOf(symbolId);\r\n  const price = bg(tradeCost).div(\r\n    bg(tradeVolume).times(symbols[index].multiplier)\r\n  );\r\n  const indexPrice = deriToNatural(info.spotPrice);\r\n\r\n  const intrinsicValue = symbols[index].isCall\r\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\r\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\r\n  let timeValue = '0';\r\n  if (intrinsicValue.lte(0)) {\r\n    const res = await pricer.getEverlastingTimeValueAndDelta(\r\n      naturalToDeri(indexPrice),\r\n      naturalToDeri(symbols[index].strikePrice),\r\n      volatility,\r\n      naturalToDeri(bg(1).div(365).toString())\r\n    );\r\n    timeValue = res.timeValue;\r\n  }\r\n  if (index > -1) {\r\n    return {\r\n      direction,\r\n      baseToken: bTokenSymbol,\r\n      symbolId,\r\n      symbol: symbols[index].symbol,\r\n      price: price.toString(),\r\n      indexPrice: indexPrice.toString(),\r\n      volume: volume.times(symbols[index].multiplier).toString(),\r\n      transactionHash: txHash.toString(),\r\n      notional: tradeVolume\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      contractValue: tradeVolume\r\n        .abs()\r\n        .times(price)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      transactionFee: intrinsicValue.gt(0)\r\n        ? volume\r\n            .times(symbols[index].multiplier)\r\n            .times(indexPrice)\r\n            .times(symbols[index].feeRatioITM)\r\n            .toString()\r\n        : volume\r\n            .times(symbols[index].multiplier)\r\n            .times(timeValue)\r\n            .times(symbols[index].feeRatioOTM)\r\n            .toString(),\r\n      time,\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  // const { bTokenSymbol, pricer: pricerAddress } = getPoolConfig(\r\n  //   poolAddress,\r\n  //   undefined,\r\n  //   undefined,\r\n  //   'option'\r\n  // );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool.init()\r\n  const bTokenSymbol = optionPool.bTokenSymbol\r\n  const pricer = optionPool.pricer\r\n  const [toBlock] = await Promise.all([\r\n    getBlockInfo(chainId, 'latest'),\r\n    optionPool.init(),\r\n  ]);\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\r\n    promises.push(\r\n      optionPool.getSymbol(optionPool.activeSymbolIds[i].toString())\r\n    );\r\n  }\r\n  let symbols = await Promise.all(promises);\r\n  //let symbols = optionPool.activeSymbols\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n\r\n  const filters = { account: accountAddress };\r\n  let result = [];\r\n\r\n  if (DeriEnv.get() === 'testnet') {\r\n    let events = await getPastEvents(\r\n      chainId,\r\n      optionPool.contract,\r\n      'Trade',\r\n      filters,\r\n      fromBlock,\r\n      toBlock.number\r\n    );\r\n\r\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n    //console.log('online events length:', events.length);\r\n    for (let i = 0; i < events.length; i++) {\r\n      const item = events[i];\r\n      let res;\r\n      res = await optionPool.formatTradeEvent(item);\r\n      if (res) {\r\n        const symbolIndex = optionPool.activeSymbolIds.indexOf(res.symbolId);\r\n        result.unshift({\r\n          baseToken: bTokenSymbol,\r\n          direction: res.direction,\r\n          volume: bg(res.volume)\r\n            .times(optionPool.symbols[symbolIndex].multiplier)\r\n            .toString(),\r\n          price: res.price,\r\n          indexPrice: res.indexPrice,\r\n          notional: res.notional,\r\n          symbol: res.symbol,\r\n          symbolId: res.symbolId,\r\n          time: res.time,\r\n          contractValue: res.contractValue,\r\n          transactionFee: res.transactionFee,\r\n          transactionHash: res.transactionHash,\r\n        });\r\n      }\r\n    }\r\n  } else {\r\n    let events = await getPastEventsUseAbi(\r\n      chainId,\r\n      poolAddress,\r\n      everlastingOptionOldAbi,\r\n      'Trade',\r\n      filters,\r\n      fromBlock,\r\n      toBlock.number\r\n    );\r\n\r\n    // console.log('old online events length:', events.length, fromBlock, toBlock.number);\r\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n    for (let i = 0; i < events.length; i++) {\r\n      const item = events[i];\r\n      const res = await processTradeEvent(\r\n        chainId,\r\n        item.returnValues,\r\n        item.blockNumber,\r\n        item.transactionHash,\r\n        multiplier,\r\n        bTokenSymbol,\r\n        optionPool.activeSymbolIds,\r\n        symbols,\r\n        pricer\r\n      );\r\n      res && result.unshift(res);\r\n    }\r\n  }\r\n  result = result.filter((tr) => tr !== null);\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(async() => {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n    const [res] = await Promise.all([\r\n      fetchJson(\r\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n      ),\r\n      optionPool.init(),\r\n    ]);\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const symbols = optionPool.activeSymbols;\r\n    //console.log('history ', tradeHistory)\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId);\r\n          if (index > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              indexPrice: deriToNatural(i.indexPrice).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              contractValue: deriToNatural(i.contractValue).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(symbols[index].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else if (i.direction === 'LIQUIDATION') {\r\n            if (\r\n              i.volume !== '' &&\r\n              i.volume.indexOf(',') > -1 &&\r\n              !i.price.startsWith('NaN')\r\n            ) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc;\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\r\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\r\n              const res = ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id]\r\n                    .times(symbols[id].multiplier)\r\n                    .abs()\r\n                    .toString(),\r\n                  price: prices[id].toString(),\r\n                  indexPrice: '',\r\n                  notional: '',\r\n                  contractValue: volumes[id]\r\n                    .abs()\r\n                    .times(prices[id])\r\n                    .times(symbols[id].multiplier)\r\n                    .toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              });\r\n              return res;\r\n            } else {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                volume: '',\r\n                price: '',\r\n                indexPrice: '',\r\n                notional: '',\r\n                contractValue: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            }\r\n          } else {\r\n            // i.symbolId is not in activeSymbols\r\n            return null;\r\n          }\r\n        })\r\n        .flat();\r\n    }\r\n    tradeHistory = tradeHistory.filter((tr) => tr !== null);\r\n    // fetch tradeHistory on the block with fromBlock from rest api\r\n    //console.log('tradeFromBlock', tradeFromBlock)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      // const { initialBlock } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   undefined,\r\n      //   symbolId,\r\n      //   'option'\r\n      // );\r\n\r\n      // todo: will change latet\r\n      const initialBlock = 10000000\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  }, [], [])\r\n};\r\n","// v2 lite\r\nimport {\r\n  getLiquidityInfo\r\n} from './mining_query_api'\r\n\r\nimport {\r\n  addLiquidity,\r\n  removeLiquidity,\r\n} from './mining_transaction_api'\r\n\r\nimport {\r\n  getSpecification,\r\n  getPositionInfo,\r\n  isUnlocked,\r\n  getWalletBalance,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getFundingRateCache,\r\n  getPositionInfos,\r\n  getEstimatedTimePrice,\r\n  //getVolatility,\r\n} from './trade_query_api'\r\n\r\nimport {\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n} from './trade_transaction_api';\r\n\r\nimport { getTradeHistory } from './trade_history_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  //getPoolLiquidity,\r\n  //getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache,\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport {\r\n  DeriEnv\r\n} from '../shared/config';\r\nimport {\r\n  LITE_VERSIONS,\r\n  checkChainId,\r\n  checkAddress,\r\n  getLpConfigList,\r\n} from '../shared/config';\r\nimport {\r\n  catchApiError,\r\n  deriToNatural,\r\n  getNetworkName,\r\n  max,\r\n  bg,\r\n} from '../shared/utils';\r\nimport {\r\n  databaseFactory,\r\n} from '../shared/factory';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n} from '../v2_lite/api';\r\nimport { AppError } from '../shared/error/error';\r\nimport {\r\n  getPoolVersionId,\r\n} from '../shared/config/pool';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\nimport { api as apiOption } from '../option/api'\r\nimport { getPoolConfigList } from './config_api';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (versionId.failed) {\r\n    return { success: false, response: versionId.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'option') {\r\n    return apiOption.getLiquidityInfo(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityInfo(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityInfo(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n  //if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  // } else {\r\n  //   return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  // }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId);\r\n    poolAddress = checkAddress(poolAddress);\r\n    let result = await getPoolConfigList(DeriEnv.get())\r\n    let configs = []\r\n    if (result.success) {\r\n      configs = result.response.data\r\n    }\r\n    // add lp config\r\n    configs = configs.concat(await getLpConfigList(DeriEnv.get()));\r\n    const config = configs.find((v) => v.pool === poolAddress);\r\n    if (!config) {\r\n      throw new AppError('CONFIG_NOT_FOUND', {\r\n        name: 'getPoolConfig',\r\n        args: [DeriEnv.get(), poolAddress],\r\n      });\r\n    }\r\n    const db = databaseFactory();\r\n    let res;\r\n    if (config.bTokens.length > 1 && config.type !== 'lp') {\r\n      const bTokenIds = config.bTokens.map((b) => b.bTokenId);\r\n      const key = bTokenIds.reduce(\r\n        (acc, bTokenId) => [\r\n          ...acc,\r\n          `${chainId}.${poolAddress}.liquidity${bTokenId}`,\r\n        ],\r\n        [`${chainId}.${poolAddress}.liquidity`]\r\n      );\r\n      const result = await db.getValues(key);\r\n      const totalValue = deriToNatural(result[0]).toString();\r\n      const bTokens = bTokenIds.reduce((acc, bTokenId, index) => {\r\n        return [\r\n          ...acc,\r\n          {\r\n            bTokenId,\r\n            liquidity: deriToNatural(result[1 + index]).toString(),\r\n          },\r\n        ];\r\n      }, []);\r\n      res = {\r\n        totalValue,\r\n        bTokens,\r\n      };\r\n    } else {\r\n      const result = await db.getValues([\r\n        `${chainId}.${poolAddress}.liquidity`,\r\n      ]);\r\n      const liquidity = deriToNatural(result[0]).toString();\r\n      res = {\r\n        totalValue: liquidity,\r\n        bTokens: [{ liquidity }],\r\n      };\r\n    }\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  return catchApiError(async () => {\r\n    chainId = checkChainId(chainId);\r\n    poolAddress = checkAddress(poolAddress);\r\n    let result = await getPoolConfigList(DeriEnv.get());\r\n    let configs = [];\r\n    if (result.success) {\r\n      configs = result.response.data;\r\n    }\r\n    // add lp config\r\n    configs = configs.concat(await getLpConfigList(DeriEnv.get()));\r\n    const config = configs.find((v) => v.pool === poolAddress);\r\n    if (!config) {\r\n      throw new AppError('CONFIG_NOT_FOUND', {\r\n        name: 'getPoolConfig',\r\n        args: [DeriEnv.get(), poolAddress],\r\n      });\r\n    }\r\n    const db = databaseFactory(true);\r\n    let res;\r\n    if (config.bTokens.length > 1 && config.type !== 'lp') {\r\n      const bTokenIds = config.bTokens.map((b) => b.bTokenId);\r\n      const key = bTokenIds.reduce(\r\n        (acc, bTokenId) => [\r\n          ...acc,\r\n          ...[\r\n            `${getNetworkName(chainId)}.${poolAddress}.apy${bTokenId}`,\r\n            `${getNetworkName(chainId)}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n          ],\r\n        ],\r\n        []\r\n      );\r\n      const result = await db.getValues(key);\r\n      const apys = result.reduce(\r\n        (acc, a, index) => [\r\n          ...acc,\r\n          ...(index % 2 === 0 ? [deriToNatural(a)] : []),\r\n        ],\r\n        []\r\n      );\r\n      const maxApy = max(...apys).toString();\r\n      const bTokens = bTokenIds.reduce((acc, bTokenId, index) => {\r\n        return [\r\n          ...acc,\r\n          {\r\n            bTokenId,\r\n            apy: deriToNatural(result[index * 2]).toString(),\r\n            multiplier: deriToNatural(result[index * 2 + 1]).toString(),\r\n          },\r\n        ];\r\n      }, []);\r\n      res = {\r\n        maxApy,\r\n        bTokens,\r\n      };\r\n    } else if (config.type === 'lp') {\r\n      const result = await db.getValues([\r\n        `${getNetworkName(chainId)}.${poolAddress}.apy`,\r\n        `${getNetworkName(chainId)}.${poolAddress}.apy2`,\r\n      ]);\r\n      const [apy1, apy2] = [\r\n        deriToNatural(result[0]).toString(),\r\n        deriToNatural(result[1]).toString()\r\n      ]\r\n      res = {\r\n        maxApy: max(bg(apy1), bg(apy2)).toString(),\r\n        bTokens: [{ apy: apy1 }, { apy: apy2 }],\r\n      };\r\n    } else {\r\n      const result = await db.getValues([`${getNetworkName(chainId)}.${poolAddress}.apy`]);\r\n      const apy = deriToNatural(result[0]).toString();\r\n      res = {\r\n        maxApy: apy,\r\n        bTokens: [{ apy, multiplier: '1' }],\r\n      };\r\n    }\r\n    return res;\r\n  });\r\n};\r\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { LITE_VERSIONS } from '../shared/config';\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\n//import { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\r\nimport { getPoolVersionId } from '../shared/config/pool';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\nimport { api as apiOption } from '../option/api'\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (versionId.failed) {\r\n    return { success: false, response: versionId.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  } else if (versionId === 'option') {\r\n    return apiOption.addLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  // } else {\r\n  //   return addLiquidityV2(\r\n  //     chainId,\r\n  //     poolAddress,\r\n  //     accountAddress,\r\n  //     amount,\r\n  //     bTokenId\r\n  //   );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'option') {\r\n    return apiOption.removeLiquidity(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  // } else {\r\n  //   return removeLiquidityV2(\r\n  //     chainId,\r\n  //     poolAddress,\r\n  //     accountAddress,\r\n  //     amount,\r\n  //     bTokenId,\r\n  //     isMaximum,\r\n  //   );\r\n  }\r\n}\r\n","// import { bTokenFactory } from '../../shared/factory';\r\n// import {\r\n//   getPoolBTokenIdList,\r\n//   getPoolBTokenList,\r\n//   getPoolConfig2,\r\n//   getPoolSymbolIdList,\r\n//   getPoolSymbolList,\r\n// } from '../../shared/config';\r\nimport { bg, min, max, catchApiError, catchTxApiError } from '../../shared/utils'\r\n// import { getOraclePrice } from '../../shared/utils/oracle'\r\n// import { getIndexInfo } from '../../shared/config/token';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\n// import { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\n// export const getSpecification = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   symbolId,\r\n// ) => {\r\n//   return await catchApiError(async() => {\r\n//     const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n//     const bTokens = getPoolBTokenList(poolAddress)\r\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n//     const [symbolInfo, parameterInfo] = await Promise.all([\r\n//       perpetualPool.getSymbol(symbolId),\r\n//       perpetualPool.getParameters(),\r\n//     ])\r\n//     const bTokenDiscounts = (await Promise.all(\r\n//       bTokens.reduce(\r\n//         (acc, b, index) =>\r\n//           acc.concat([perpetualPool.getBToken(index.toString())]),\r\n//         []\r\n//       )\r\n//     )).map((b) => b.discount);\r\n//     const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n//     const {\r\n//       minPoolMarginRatio,\r\n//       minInitialMarginRatio,\r\n//       minMaintenanceMarginRatio,\r\n//       minLiquidationReward,\r\n//       maxLiquidationReward,\r\n//       liquidationCutRatio,\r\n//       protocolFeeCollectRatio,\r\n//     } = parameterInfo\r\n//     return {\r\n//       symbol: symbol,\r\n//       bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n//       bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n//       multiplier: multiplier.toString(),\r\n//       feeRatio: feeRatio.toString(),\r\n//       fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n//       minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n//       minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n//       minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n//       //minAddLiquidity: minAddLiquidity.toString(),\r\n//       //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n//       minLiquidationReward: minLiquidationReward.toString(),\r\n//       maxLiquidationReward: maxLiquidationReward.toString(),\r\n//       liquidationCutRatio: liquidationCutRatio.toString(),\r\n//       protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n//       indexConstituents: getIndexInfo(symbol)\r\n//     }\r\n\r\n//   })\r\n// };\r\n\r\n// export const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n//   return await catchApiError(async() => {\r\n//     const symbolConfigList = getPoolSymbolList(poolAddress)\r\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n//     const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n//     const symbolList = symbolConfigList.map((i) => i.symbol)\r\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\r\n//     const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n//       perpetualPool.getSymbol(symbolId),\r\n//       perpetualPool.getParameters(),\r\n//       perpetualPool.getLastUpdatedBlockNumber(),\r\n//       perpetualPool.getLatestBlockNumber(),\r\n//       pToken.getPosition(accountAddress, symbolId),\r\n//       pToken.getMargins(accountAddress),\r\n//       pToken.getPositions(accountAddress),\r\n//       getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n//     ])\r\n//     const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n//     const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n//     const {\r\n//       minInitialMarginRatio,\r\n//       minMaintenanceMarginRatio,\r\n//     } = parameterInfo\r\n//     let promises = []\r\n//     for (let i=0; i<bTokenIdList.length; i++) {\r\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n//     }\r\n//     const bTokens = await Promise.all(promises)\r\n//     const margin = bTokens.reduce((accum, a, index) => {\r\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n//     }, bg(0))\r\n\r\n//     promises = []\r\n//     for (let i=0; i<symbolIdList.length; i++) {\r\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n//     }\r\n//     const symbols = await Promise.all(promises)\r\n//     promises = []\r\n//     for (let i=0; i<symbolList.length; i++) {\r\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\r\n//     }\r\n//     const symbolPrices = await Promise.all(promises)\r\n//     const price = symbolPrices[symbolId]\r\n//     priceCache.set(poolAddress, symbolId, price)\r\n//     const marginHeld = symbols.reduce((accum, s, index) => {\r\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n//     }, bg(0))\r\n//     const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n//     //console.log('margin', margin.toString(), marginHeld.toString())\r\n//     //\r\n//     //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n//     const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n//     }, bg(0))\r\n//     const unrealizedPnlList = symbols.map((s, index) => {\r\n//       return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n//     })\r\n\r\n//     const totalCost = positions.reduce((accum, a) => {\r\n//       return accum.plus(bg(a.cost))\r\n//     }, bg(0))\r\n//     const dynamicCost = symbols.reduce((accum, s, index) => {\r\n//       if (index !== parseInt(symbolId)) {\r\n//         return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n//       } else {\r\n//         return accum\r\n//       }\r\n//     }, bg(0))\r\n//     //console.log('cost', costTotal.toString())\r\n//     const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n//     const fundingFee = calculateFundingFee(\r\n//       tradersNetVolume,\r\n//       latestPrice,\r\n//       multiplier,\r\n//       fundingRateCoefficient,\r\n//       liquidity,\r\n//       cumulativeFundingRate,\r\n//       lastCumulativeFundingRate,\r\n//       lastUpdatedBlockNumber,\r\n//       latestBlockNumber,\r\n//       volume,\r\n//     );\r\n\r\n//     // set liquidatePrice cache\r\n//     liquidatePriceCache.set(poolAddress, {\r\n//       volume,\r\n//       margin,\r\n//       totalCost,\r\n//       dynamicCost,\r\n//       price,\r\n//       multiplier,\r\n//       minMaintenanceMarginRatio,\r\n//     });\r\n//   return {\r\n//       price: price,\r\n//       volume: bg(volume).times(multiplier).toString(),\r\n//       averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n//       margin: margin.toString(),\r\n//       marginHeld: marginHeld.toString(),\r\n//       marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n//       unrealizedPnl: unrealizedPnl.toString(),\r\n//       unrealizedPnlList,\r\n//       liquidationPrice: calculateLiquidationPrice(\r\n//         volume,\r\n//         margin,\r\n//         totalCost,\r\n//         dynamicCost,\r\n//         multiplier,\r\n//         minMaintenanceMarginRatio\r\n//       ).toString(),\r\n//       fundingFee: fundingFee.toString()\r\n//     };\r\n//   })\r\n// }\r\n\r\n// export const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\r\n//   return await catchTxApiError(async() => {\r\n//     const symbolConfigList = getPoolSymbolList(poolAddress)\r\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n//     const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n//     const symbolList = symbolConfigList.map((i) => i.symbol)\r\n//     //console.log('bTokenList', bTokenList)\r\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\r\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\r\n//     const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\r\n//       //perpetualPool.getSymbol(symbolId),\r\n//       perpetualPool.getParameters(),\r\n//       perpetualPool.getLastUpdatedBlockNumber(),\r\n//       perpetualPool.getLatestBlockNumber(),\r\n//       //pToken.getPosition(accountAddress, symbolId),\r\n//       pToken.getMargins(accountAddress),\r\n//       pToken.getPositions(accountAddress),\r\n//       //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n//     ])\r\n//     const {\r\n//       minInitialMarginRatio,\r\n//       minMaintenanceMarginRatio,\r\n//     } = parameterInfo\r\n//     let promises = []\r\n//     for (let i=0; i<bTokenIdList.length; i++) {\r\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n//     }\r\n//     const bTokens = await Promise.all(promises)\r\n//     promises = []\r\n//     for (let i=0; i<symbolIdList.length; i++) {\r\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n//     }\r\n//     const symbols = await Promise.all(promises)\r\n//     promises = []\r\n//     for (let i=0; i<symbolList.length; i++) {\r\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\r\n//     }\r\n//     const symbolPrices = await Promise.all(promises)\r\n\r\n//     const margin = bTokens.reduce((accum, a, index) => {\r\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n//     }, bg(0))\r\n\r\n//     const marginHeld = symbols.reduce((accum, s, index) => {\r\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n//     }, bg(0))\r\n//     //\r\n//     // const unrealizedPnlList = symbols.map((s, index) => {\r\n//     //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n//     // })\r\n\r\n//     //console.log('cost', costTotal.toString())\r\n//     const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n\r\n//     return positions.map((p, index) => {\r\n//       const symbol = symbols[index]\r\n//       const symbolId = symbolIdList[index]\r\n//       const price = symbolPrices[index]\r\n//       priceCache.set(poolAddress, symbolId, price)\r\n//       const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\r\n//       const { volume, cost, lastCumulativeFundingRate } = p\r\n//       const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\r\n//       const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n//       const totalCost = positions.reduce((accum, a) => {\r\n//         return accum.plus(bg(a.cost))\r\n//       }, bg(0))\r\n//       const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n//         if (idx !== index) {\r\n//           return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\r\n//         } else {\r\n//           return accum\r\n//         }\r\n//       }, bg(0))\r\n//       const fundingFee = calculateFundingFee(\r\n//         tradersNetVolume,\r\n//         price,\r\n//         multiplier,\r\n//         fundingRateCoefficient,\r\n//         liquidity,\r\n//         cumulativeFundingRate,\r\n//         lastCumulativeFundingRate,\r\n//         lastUpdatedBlockNumber,\r\n//         latestBlockNumber,\r\n//         volume,\r\n//       );\r\n//       return {\r\n//         symbol: symbol.symbol,\r\n//         symbolId: index.toString(),\r\n//         price: symbolPrices[index],\r\n//         volume: bg(p.volume).times(multiplier).toString(),\r\n//         averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\r\n//         margin: margin.toString(),\r\n//         marginHeld: marginHeld.toString(),\r\n//         marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n//         //unrealizedPnlList,\r\n//         unrealizedPnl: unrealizedPnl.toString(),\r\n//         liquidationPrice: calculateLiquidationPrice(\r\n//           volume,\r\n//           margin,\r\n//           totalCost,\r\n//           dynamicCost,\r\n//           multiplier,\r\n//           minMaintenanceMarginRatio\r\n//         ).toString(),\r\n//         fundingFee: fundingFee.toString()\r\n//       };\r\n//     }).filter((p) => p.volume !== '0')\r\n//   }, [], [])\r\n// }\r\n\r\n// export const getWalletBalance = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress,\r\n//   bTokenId,\r\n// ) => {\r\n//   return await catchApiError(async() => {\r\n//     const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n//     const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n//     return balance.toString()\r\n//   }, [], '')\r\n// }\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(async () => {\r\n    let {\r\n      volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier,\r\n      minMaintenanceMarginRatio,\r\n    } = liquidatePriceCache.get(poolAddress);\r\n    totalCost = bg(totalCost).plus(\r\n      bg(newVolume).times(price).times(multiplier)\r\n    );\r\n    //console.log(totalCost.toString())\r\n    return calculateLiquidationPrice(\r\n      bg(volume).plus(newVolume),\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      multiplier,\r\n      minMaintenanceMarginRatio\r\n    ).toString();\r\n  }, [], '');\r\n};\r\n\r\n// export const isUnlocked = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress,\r\n//   bTokenId\r\n// ) => {\r\n//   return await catchApiError(async () => {\r\n//     const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n//     const bToken = bTokenFactory(chainId, bTokenAddress);\r\n//     return await bToken.isUnlocked(accountAddress, poolAddress);\r\n//   }, [], false);\r\n// };\r\n\r\n// export const getEstimatedFee = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   volume,\r\n//   symbolId\r\n// ) => {\r\n//   return await catchApiError(\r\n//     async () => {\r\n//       let price = priceCache.get(poolAddress, symbolId);\r\n//       const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\r\n//       if (!price) {\r\n//         //price = await getOraclePrice(poolAddress, symbolId)\r\n//         price = await getOraclePrice(chainId, symbol);\r\n//         priceCache.set(poolAddress, symbolId, price);\r\n//       }\r\n//       let cache = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n//       if (!cache || !cache.multiplier) {\r\n//         await _getFundingRate(chainId, poolAddress, symbolId);\r\n//         cache = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n//       }\r\n//       const { multiplier, feeRatio } = cache;\r\n//       //console.log(volume, price, multiplier, feeRatio)\r\n//       return bg(volume)\r\n//         .abs()\r\n//         .times(price)\r\n//         .times(multiplier)\r\n//         .times(feeRatio)\r\n//         .toString();\r\n//     },\r\n//     [],\r\n//     ''\r\n//   );\r\n// };\r\n\r\n// export const getEstimatedMargin = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress,\r\n//   volume,\r\n//   leverage,\r\n//   symbolId\r\n// ) => {\r\n//   return await catchApiError(async () => {\r\n//     const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\r\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n//     const [price, symbolInfo] = await Promise.all([\r\n//       //getOraclePrice(poolAddress, symbolId),\r\n//       getOraclePrice(chainId, symbol),\r\n//       perpetualPool.getSymbol(symbolId),\r\n//     ]);\r\n//     priceCache.set(poolAddress, symbolId, price);\r\n//     const { multiplier } = symbolInfo;\r\n//     //console.log('m',multiplier.toString())\r\n//     return bg(volume)\r\n//       .abs()\r\n//       .times(price)\r\n//       .times(multiplier)\r\n//       .div(bg(leverage))\r\n//       .toString();\r\n//   });\r\n// };\r\n\r\n// export const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n//   return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n// }\r\n\r\n// const _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n//   const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n//   let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n//   let promiseList = []\r\n//   for (let i=0; i<bTokenIdList.length; i++) {\r\n//     promiseList.push(perpetualPool.getBToken(i))\r\n//   }\r\n//   const bTokenInfoList = await Promise.all(promiseList)\r\n//   const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n//   //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n//   //console.log('pnl', pnl.toString())\r\n\r\n//   const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n//     //getOraclePrice(poolAddress, symbolId),\r\n//     getOraclePrice(chainId, symbol),\r\n//     perpetualPool.getSymbol(symbolId),\r\n//     perpetualPool.getParameters(),\r\n//   ])\r\n//   priceCache.set(poolAddress, symbolId, price)\r\n//   const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n//   const { minPoolMarginRatio } = parameterInfo;\r\n//   const fundingRateArgs = [\r\n//     tradersNetVolume,\r\n//     price,\r\n//     multiplier,\r\n//     liquidity,\r\n//     fundingRateCoefficient,\r\n//   ]\r\n//   const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n//   const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n//   // const liquidityUsedArgs = [\r\n//   //   tradersNetVolume,\r\n//   //   price,\r\n//   //   multiplier,\r\n//   //   liquidity,\r\n//   //   minPoolMarginRatio,\r\n//   // ]\r\n//   let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n//   let promises = []\r\n//   for (let i=0; i<symbolIdList.length; i++) {\r\n//     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n//   }\r\n//   const symbols = await Promise.all(promises)\r\n//   //console.log('margin', margin.toString(), marginHeld.toString())\r\n//   const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n//     return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n//   }, bg(0))\r\n\r\n//   //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n//   const res = {\r\n//     price,\r\n//     multiplier: multiplier.toString(),\r\n//     feeRatio: feeRatio.toString(),\r\n//     tradersNetVolume: tradersNetVolume.toString(),\r\n//     liquidity: liquidity.toString(),\r\n//     //pnl: pnl.toString(),\r\n//     fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n//     minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n//     fundingRatePerBlock: fundingRatePerBlock,\r\n//     fundingRate: fundingRate,\r\n//     liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n//   }\r\n//   fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n//   return res\r\n// }\r\n\r\n// export const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n//   return await catchApiError(async () => {\r\n//     const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n//     const {\r\n//       fundingRate,\r\n//       fundingRatePerBlock,\r\n//       liquidity,\r\n//       tradersNetVolume,\r\n//       multiplier,\r\n//     } = res;\r\n//     return {\r\n//       fundingRate0: fundingRate.times(100).toString(),\r\n//       fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n//       liquidity: liquidity.toString(),\r\n//       volume: '-',\r\n//       tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n//     };\r\n//   });\r\n// };\r\n\r\n// export const getEstimatedFundingRate = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   newNetVolume,\r\n//   symbolId\r\n// ) => {\r\n//   return await catchApiError(async () => {\r\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n//     if (!res) {\r\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n//     }\r\n//     const args = [\r\n//       bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n//       res.price,\r\n//       res.multiplier,\r\n//       res.liquidity,\r\n//       res.fundingRateCoefficient,\r\n//     ];\r\n//     let fundingRate1 = calculateFundingRate(...args);\r\n//     fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n//     return {\r\n//       fundingRate1: fundingRate1.times(100).toString(),\r\n//     };\r\n//   });\r\n// };\r\n\r\n// export const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n//   return await catchApiError(async () => {\r\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n//     if (!res) {\r\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n//     }\r\n//     return {\r\n//       liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n//     };\r\n//   });\r\n// };\r\n\r\n// export const getEstimatedLiquidityUsed = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   newNetVolume,\r\n//   symbolId\r\n// ) => {\r\n//   return await catchApiError(async () => {\r\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n//     if (!res) {\r\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n//     }\r\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n//     // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n//     // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n//     // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n//     let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n//     let promises = [];\r\n//     for (let i = 0; i < symbolIdList.length; i++) {\r\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n//     }\r\n//     const symbols = await Promise.all(promises);\r\n//     let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n//       if (index === parseInt(symbolId)) {\r\n//         return accum.plus(\r\n//           bg(a.price)\r\n//             .times(a.multiplier)\r\n//             .times(a.tradersNetVolume.plus(newNetVolume))\r\n//             .abs()\r\n//         );\r\n//       } else {\r\n//         return accum.plus(\r\n//           bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs()\r\n//         );\r\n//       }\r\n//     }, bg(0));\r\n//     //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n//     //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n//     const liquidityUsed1 = liquidityUsed0\r\n//       .times(res.minPoolMarginRatio)\r\n//       .div(res.liquidity);\r\n//     return {\r\n//       liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n//     };\r\n//   });\r\n// };\r\n\r\n\r\n// export const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n//   return await catchApiError(async() => {\r\n//     let bTokenList = getPoolBTokenList(poolAddress)\r\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\r\n//     // let bTokenList = bTokensConfigList.map((i) => {\r\n//     //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n//     // })\r\n//     let promiseList = []\r\n//     for (let i=0; i<bTokenList.length; i++) {\r\n//       promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n//     }\r\n//     const resultList = await Promise.all(promiseList)\r\n//     for (let i=0; i<bTokenList.length; i++) {\r\n//       bTokenList[i].walletBalance = resultList[i].toString()\r\n//     }\r\n\r\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n//     const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n//     const [margins, positions, parameterInfo] = await Promise.all([\r\n//       pToken.getMargins(accountAddress),\r\n//       pToken.getPositions(accountAddress),\r\n//       perpetualPool.getParameters(),\r\n//     ]);\r\n//     const { minInitialMarginRatio } = parameterInfo;\r\n\r\n//     let promises = []\r\n//     for (let i=0; i<bTokenIdList.length; i++) {\r\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n//     }\r\n//     const bTokens = await Promise.all(promises)\r\n//     const margin = bTokens.reduce((accum, a, index) => {\r\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n//     }, bg(0))\r\n//     //console.log('margin', margin.toString())\r\n\r\n//     promises = []\r\n//     for (let i=0; i<symbolIdList.length; i++) {\r\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n//     }\r\n//     const symbols = await Promise.all(promises)\r\n\r\n//     promises = []\r\n//     const symbolList = symbols.map((s) => s.symbol)\r\n//     for (let i=0; i< symbols.length; i++) {\r\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\r\n//     }\r\n//     const symbolPrices = await Promise.all(promises)\r\n//     //console.log(symbolPrices)\r\n\r\n//     const marginHeld = symbols.reduce((accum, a, index) => {\r\n//       return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n//     }, bg(0))\r\n//     //console.log('marginHeld', marginHeld.toString())\r\n\r\n//     const pnl = symbols.reduce((accum, a, index) => {\r\n//       return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n//     }, bg(0))\r\n//     //console.log('pnl', pnl.toString())\r\n\r\n//     bTokenList = bTokenList.map((i, index) => {\r\n//       if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n//         i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n//       } else {\r\n//         i.availableBalance = '-'\r\n//       }\r\n//       return i\r\n//     })\r\n//     return bTokenList\r\n//   }, [], [])\r\n// }\r\n\r\n// export const getFundingFee = async (\r\n//   chainId,\r\n//   poolAddress,\r\n//   accountAddress,\r\n//   symbolId\r\n// ) => {\r\n//   return await catchApiError(async () => {\r\n//     const symbolConfigList = getPoolSymbolList(poolAddress);\r\n//     const symbolList = symbolConfigList.map((i) => i.symbol);\r\n//     const { pToken: pTokenAddress } = getPoolConfig2(\r\n//       poolAddress,\r\n//       null,\r\n//       symbolId\r\n//     );\r\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\r\n//     const [\r\n//       symbolInfo,\r\n//       positionInfo,\r\n//       price,\r\n//       lastUpdatedBlockNumber,\r\n//       latestBlockNumber,\r\n//     ] = await Promise.all([\r\n//       perpetualPool.getSymbol(symbolId),\r\n//       pToken.getPosition(accountAddress, symbolId),\r\n//       getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n//       perpetualPool.getLastUpdatedBlockNumber(),\r\n//       perpetualPool.getLatestBlockNumber(),\r\n//     ]);\r\n//     const { volume, lastCumulativeFundingRate } = positionInfo;\r\n//     const {\r\n//       multiplier,\r\n//       fundingRateCoefficient,\r\n//       tradersNetVolume,\r\n//       cumulativeFundingRate,\r\n//     } = symbolInfo;\r\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n//     let promises = [];\r\n//     for (let i = 0; i < bTokenIdList.length; i++) {\r\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n//     }\r\n//     const bTokens = await Promise.all(promises);\r\n//     const liquidity = bTokens.reduce(\r\n//       (accum, i) =>\r\n//         accum.plus(\r\n//           bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)\r\n//         ),\r\n//       bg(0)\r\n//     );\r\n//     const fundingFee = calculateFundingFee(\r\n//       tradersNetVolume,\r\n//       price,\r\n//       multiplier,\r\n//       fundingRateCoefficient,\r\n//       liquidity,\r\n//       cumulativeFundingRate,\r\n//       lastCumulativeFundingRate,\r\n//       lastUpdatedBlockNumber,\r\n//       latestBlockNumber,\r\n//       volume\r\n//     );\r\n//     return fundingFee.toString();\r\n//   }, [], '');\r\n// };\r\n","import { isDeriUnlocked } from '../shared/api';\r\nimport { getPoolVersionId } from '../shared/config/pool';\r\nimport { LITE_VERSIONS } from '../shared/config';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport { getEstimatedLiquidatePriceV2 } from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  getPositionInfosV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\nimport { api as apiOption } from '../option/api'\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.getSpecification(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  // } else {\r\n  //   return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.getPositionInfo(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  // } else {\r\n  //   return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'option') {\r\n    return apiOption.getPositionInfos(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v1') {\r\n    return [\r\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\r\n    ].filter((p) => p.volume !== '0');\r\n  // } else if (version === 'v2') {\r\n  //   return getPositionInfosV2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    // return empty array for v1, v2, v2_lite\r\n    return []\r\n  }\r\n}\r\nexport const getBTokenBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return apiOption.getWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  // } else {\r\n  //   return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return apiOption.isUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  // } else {\r\n  //   return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  } else if (version === 'option') {\r\n    // place holder\r\n    return ''\r\n  }\r\n  if (symbolId === undefined) {\r\n    // place holder\r\n    return ''\r\n  } else {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  // } else {\r\n  //   return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return apiOption.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  // } else {\r\n  //   return getEstimatedMarginV2(\r\n  //     chainId,\r\n  //     poolAddress,\r\n  //     accountAddress,\r\n  //     volume,\r\n  //     leverage,\r\n  //     symbolId\r\n  //   );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.getFundingRate(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  // } else {\r\n  //   return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return apiOption.getEstimatedFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  // } else {\r\n  //   return getEstimatedFundingRateV2(\r\n  //     chainId,\r\n  //     poolAddress,\r\n  //     newNetVolume,\r\n  //     symbolId\r\n  //   );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.getLiquidityUsed(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  // } else {\r\n  //   return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return apiOption.getEstimatedLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  // } else {\r\n  //   return getEstimatedLiquidityUsedV2(\r\n  //     chainId,\r\n  //     poolAddress,\r\n  //     newNetVolume,\r\n  //     symbolId\r\n  //   );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.getFundingRateCache(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  // } else {\r\n  //   return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (chainId, poolAddress, accountAddress) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (versionId.failed) {\r\n    return { success: false, response: versionId.response }\r\n  }\r\n  if (['v2_dpmm'].includes(versionId)) {\r\n    // if (versionId === 'v2') {\r\n    //   return await getPoolBTokensBySymbolIdV2(\r\n    //     chainId,\r\n    //     poolAddress,\r\n    //     accountAddress\r\n    //   );\r\n    // } else {\r\n      return await apiV2Dpmm.getPoolBTokensBySymbolId(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n  ) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (version === 'option') {\r\n    return apiOption.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};","import {\r\n  closePositionOption,\r\n  depositMarginOption,\r\n  tradeWithMarginOption,\r\n  unlockOption,\r\n  withdrawMarginOption,\r\n} from '../option/api';\r\nimport { unlockDeri } from '../shared/api';\r\nimport { LITE_VERSIONS } from '../shared/config';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\n// import {\r\n//   unlockV2,\r\n//   tradeWithMarginV2,\r\n//   closePositionV2,\r\n//   depositMarginV2,\r\n//   withdrawMarginV2,\r\n// } from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\nimport { getPoolVersionId } from '../shared/config/pool';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api';\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api';\r\nimport { api as apiOption } from '../option/api'\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (version.failed) {\r\n    return { success: false, response: version.response };\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return apiOption.unlock(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n    // } else {\r\n    //   return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (version.failed) {\r\n    return { success: false, response: version.response };\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'option') {\r\n    return apiOption.depositMargin(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.depositMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.depositMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n    // } else {\r\n    //   return depositMarginV2(\r\n    //     chainId,\r\n    //     poolAddress,\r\n    //     accountAddress,\r\n    //     amount,\r\n    //     bTokenId\r\n    //   );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (version.failed) {\r\n    return { success: false, response: version.response };\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'option') {\r\n    return apiOption.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n    // } else {\r\n    //   return withdrawMarginV2(\r\n    //     chainId,\r\n    //     poolAddress,\r\n    //     accountAddress,\r\n    //     amount,\r\n    //     bTokenId,\r\n    //     isMaximum\r\n    //   );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (version.failed) {\r\n    return { success: false, response: version.response };\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return apiOption.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n    // } else {\r\n    //   return tradeWithMarginV2(\r\n    //     chainId,\r\n    //     poolAddress,\r\n    //     accountAddress,\r\n    //     newVolume,\r\n    //     symbolId\r\n    //   );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (version.failed) {\r\n    return { success: false, response: version.response };\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.closePosition(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.closePosition(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.closePosition(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n    // } else {\r\n    //   return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { LITE_VERSIONS } from '../shared/config';\r\nimport { getTradeHistoryOption } from '../option/api';\r\nimport { getTradeHistory2 } from '../v1/api';\r\n//import { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\nimport { getPoolVersionId } from '../shared/config/pool';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\nimport { api as apiOption } from '../option/api'\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version.failed) {\r\n    return { success: false, response: version.response }\r\n  }\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return apiOption.getTradeHistory(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  // } else {\r\n  //   return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","// v2 lite\r\nexport * from './perpetual_pool';\r\nexport * from './l_token';\r\nexport * from './p_token';\r\nexport * from './perpetual_pool_lite_viewer';\r\n","export default __webpack_public_path__ + \"static/media/arrow-down.19723889.svg\";","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { io } from \"socket.io-client\";\r\nimport {equalIgnoreCase } from \"../utils/utils\";\r\n\r\nclass WebSocket {\r\n  constructor(){\r\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\r\n      transports: ['websocket'],\r\n      withCredentials: true\r\n    })\r\n    this.events = [];\r\n    this.reconnectListeners = {}\r\n    this.reconnected = false\r\n    this.socket.on('connect', () => {\r\n      console.log('connect')\r\n      if(this.reconnected){\r\n        console.log('reconnect and emit reconnect event')\r\n        this.reconnected = false\r\n        Object.values(this.reconnectListeners).forEach(callback => callback())\r\n      }\r\n      this.events.forEach(event => {\r\n        this.socket.emit(event[0],event[1]);\r\n      })\r\n    })\r\n    this.socket.on('disconnect',event => {\r\n      this.reconnected = true\r\n      console.log('web socket disconnect,will reconnect auto')\r\n    })\r\n  }\r\n\r\n  addReconnectEvent(id,callback){\r\n    this.reconnectListeners[id] = callback\r\n  }\r\n\r\n  removeReconnectEvent(id){\r\n    delete this.reconnectListeners[id]\r\n  }\r\n\r\n\r\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\r\n    this.socket.on(listener,data => {\r\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\r\n        onMessage(data)\r\n      }\r\n    })\r\n    this.socket.emit(event, params)\r\n    if(this.findEvent(event,params) === -1){\r\n      this.events.push([event,params])\r\n    }\r\n  }\r\n\r\n  findEvent(event,params){\r\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\r\n  }\r\n\r\n  unsubscribe(event,params = {}){\r\n    this.socket.emit(event,params)\r\n    const pos = this.findEvent(event,params)\r\n    this.events.splice(pos,1)\r\n  }\r\n}\r\nexport default new WebSocket()","import './spinner.less'\r\nexport default function Spinner(){\r\n  \r\n  return (\r\n    <div className='spinner-border'/>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { PRIMARY, SECONDARY } from '../../utils/Constants';\r\nimport classNames from 'classnames';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nexport default function Button({label,fontColor = '#E0ECFF',type = PRIMARY,bgColor,defaultBorderColor = '#203B60',borderSize = 1, outline = false,isSelected = false,outlineColor = '#CD7A37',iconsrc ,onClick,width = 158,fontSize = 14,fontWeight = 'normal',height = 48,className,styles = {}}){\r\n  const [pending, setPending] = useState(false)\r\n  let backgroundColor ;\r\n  if(bgColor) {\r\n    backgroundColor = bgColor;\r\n  } else if(type === PRIMARY) {\r\n    backgroundColor = '#3756CD';\r\n  } else if(type === SECONDARY){\r\n    backgroundColor = '#203B60' \r\n  }\r\n  const borderColor = outline ? outlineColor : 'none';\r\n  const Wrapper = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n    background-color : ${backgroundColor};\r\n    font-size : ${fontSize}px;\r\n    font-weight : ${fontWeight};\r\n    color : ${fontColor};\r\n    width : ${width}px;\r\n    height : ${height}px;\r\n    justify-content: center;\r\n    border-radius: 4px;\r\n    border: ${borderSize}px solid ${defaultBorderColor};\r\n    &:hover {\r\n      border : 1px solid ${borderColor};\r\n      cursor: pointer;\r\n    }\r\n    &.selected {\r\n      border : 1px solid ${borderColor};\r\n    }\r\n  `  \r\n  const click = async () => {\r\n    if(onClick){\r\n      setPending(true);\r\n      const result = await onClick();\r\n      setPending(false)\r\n    }\r\n  }\r\n  const clazz = classNames(className,{\r\n    selected : isSelected\r\n  })\r\n  return (\r\n    <Wrapper className={clazz} style={{...styles}} onClick={click}>\r\n      {iconsrc && <img src={iconsrc} alt=''/>}{pending && <Spinner/>}{label}\r\n    </Wrapper>\r\n  )\r\n}","import Web3 from 'web3';\r\nimport { DeriEnv, Env } from './env';\r\nimport { getChainIds } from './chain';\r\nimport { AppError } from '../error/error';\r\nimport { VERSIONS_ALL, VERSION_IDS_ALL } from './version';\r\n\r\nconst toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const checkEnv = (env) => {\r\n  if (env == null) {\r\n    return DeriEnv.get()\r\n  } else if (Object.values(Env).includes(env)) {\r\n    return env\r\n  }\r\n  throw new AppError('INVALID_DERI_ENV', env)\r\n}\r\n\r\nexport const checkChainId = (chainId) => {\r\n  chainId = chainId != null ? chainId.toString() : chainId \r\n  if (getChainIds().includes(chainId)) {\r\n    return chainId;\r\n  }\r\n  throw new AppError('INVALID_CHAIN_ID', chainId);\r\n};\r\n\r\nexport const checkAddress = (address) => {\r\n  address = address != null ? address.toString() : address\r\n  try {\r\n    return toChecksumAddress(address)\r\n  } catch(err) {\r\n    // console.log('-- checkAddress(): ', err)\r\n    throw new AppError('INVALID_ADDRESS', address);\r\n  }\r\n}\r\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\r\n  return [\r\n    checkChainId(chainId),\r\n    checkAddress(poolAddress),\r\n    checkAddress(accountAddress),\r\n  ];\r\n};\r\n\r\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\r\n  return [checkChainId(chainId), checkAddress(poolAddress)];\r\n};\r\n\r\nexport const checkTokenId = (tokenId) => {\r\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\r\n  if (/^\\d+$/.test(tokenId)) {\r\n    return tokenId\r\n  }\r\n  throw new AppError('INVALID_TOKEN_ID', tokenId);\r\n}\r\n\r\nexport const checkTokenIdInRange = (tokenId, tokenIds, name='symbol id') => {\r\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\r\n  if (tokenId != null) {\r\n    const index = tokenIds.indexOf(tokenId.toString())\r\n    if (index > -1) {\r\n      return tokenId\r\n    }\r\n  }\r\n  throw new AppError('INVALID_TOKEN_ID_IN_RANGE', {tokenId, tokenIds, name});\r\n};\r\nexport const checkSymbolId = checkTokenIdInRange\r\n\r\nexport const checkAmount = (amount) => {\r\n  amount = amount != null ? amount.toString() : amount\r\n  if (/^-?[\\d\\.]+$/.test(amount)) {\r\n    return amount\r\n  }\r\n  throw new AppError('INVALID_AMOUNT',amount)\r\n}\r\n\r\nexport const checkVersion = (version) => {\r\n  if (version == null || !VERSIONS_ALL.includes(version)) {\r\n    throw new AppError('INVALID_VERSION', version);\r\n  }\r\n  return version;\r\n};\r\n\r\nexport const checkVersionId = (versionId) => {\r\n  if (versionId == null || !VERSION_IDS_ALL.includes(versionId)) {\r\n    throw new AppError('INVALID_VERSION_ID', versionId);\r\n  }\r\n  return versionId;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bsc-logo.d6f631be.svg\";","import { DeriEnv } from '../config/env';\r\nimport { DEBUG, REST_API_CALL_RETRY } from '../config/constant';\r\nimport { getRestServerConfig } from '../config/rest_server';\r\nimport { AppError } from '../error/error';\r\n\r\n// import fetch from 'node-fetch';\r\n\r\n// get REST HTTP Base url\r\nexport const getHttpBase = (env) => {\r\n  return getRestServerConfig(env || DeriEnv.get());\r\n};\r\n\r\nexport const fetchJson = async (url) => {\r\n  let retry = REST_API_CALL_RETRY\r\n  while (retry > 0) {\r\n    try {\r\n      const resp = await fetch(url);\r\n      return await resp.json();\r\n    } catch (err) {\r\n      DEBUG && console.log(err)\r\n      retry -= 1\r\n    }\r\n  }\r\n  if (retry === 0) {\r\n    throw new AppError('JSON_RPC_CALL_TIMEOUT', {\r\n      name: 'fetchJson',\r\n      args: [url],\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n// query api wrapper\r\nexport const catchSyncApiError = (func, args = [], defaultValue = {}) => {\r\n  let res;\r\n  try {\r\n    const result = func(...args);\r\n    res = { success: true, response: { data: result } };\r\n  } catch (err) {\r\n    DEBUG && console.log(err);\r\n    res = {\r\n      success: false,\r\n      response: {\r\n        data: defaultValue,\r\n        error: { code: err.code, message: err.message },\r\n      },\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const catchApiError = async (func, args = [], defaultValue = {}) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, response: { data: result } };\r\n  } catch (err) {\r\n    DEBUG && console.log(err);\r\n    let error\r\n    // error wrapper\r\n    if (err.message.startsWith('Invalid JSON RPC response:')) {\r\n      error = new AppError('INVALID_JSON_RPC_RESPONSE')\r\n    } else {\r\n      error = err\r\n    }\r\n    res = {\r\n      success: false,\r\n      response: {\r\n        data: defaultValue,\r\n        error: { code: error.code, message: error.message },\r\n      },\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n// tx api wrapper\r\nexport const catchTxApiError = async (func, args = []) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, response: { data: result } };\r\n  } catch (err) {\r\n    const message = err.errorMessage || err.message || 'Transaction failed';\r\n    res = { success: false, response: { error: message } };\r\n  }\r\n  return res;\r\n};\r\n","import { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray]);\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","export const ErrorCode = {\r\n  WEB3_WALLET_NOT_FOUND: 'WEB3_WALLET_NOT_FOUND',\r\n  BROWSER_NOT_SUPPORTED: 'BROWSER_NOT_SUPPORTED',\r\n  INVALID_DERI_ENV: 'INVALID_DERI_ENV',\r\n  INVALID_VERSION: 'INVALID_VERSION',\r\n  INVALID_VERSION_ID: 'INVALID_VERSION_ID',\r\n  INVALID_CHAIN_ID: 'INVALID_CHAIN_ID',\r\n  INVALID_ADDRESS: 'INVALID_ADDRESS',\r\n  INVALID_TOKEN_ID: 'INVALID_TOKEN_ID',\r\n  INVALID_TOKEN_ID_IN_RANGE: 'INVALID_TOKEN_ID_IN_RANGE',\r\n  INVALID_SYMBOl: 'INVALID_SYMBOl',\r\n  INVALID_BASE_TOKEN: 'INVALID_BASE_TOKEN',\r\n  INVALID_AMOUNT: 'INVALID_AMOUNT',\r\n  INVALID_TRADE_VOLUME: 'INVALID_TRADE_VOLUME',\r\n  INVALID_DATA: 'INVALID_DATA',\r\n  CONFIG_LIST_NOT_FOUND: 'CONFIG_LIST_NOT_FOUND',\r\n  CONFIG_NOT_FOUND: 'CONFIG_NOT_FOUND',\r\n  RPC_NODE_ALL_UNAVAILABLE: 'RPC_NODE_ALL_UNAVAILABLE',\r\n  INVALID_JSON_RPC_RESPONSE: 'INVALID_JSON_RPC_RESPONSE',\r\n  JSON_RPC_CALL_TIMEOUT: 'JSON_RPC_CALL_TIMEOUT',\r\n  REST_API_CALL_TIMEOUT: 'REST_API_CALL_TIMEOUT',\r\n  INSUFFICIEN_MARGIN: 'INSUFFICIEN_MARGIN',\r\n  INSUFFICIENT_BALANCE: 'INSUFFICIENT_BALANCE',\r\n  INSUFFICIEN_LIQUIDITY: 'INSUFFICIEN_LIQUIDITY',\r\n  PRICE_EXPIRED: 'PRICE_EXPIRED',\r\n  VOLATILITY_EXPIRED: 'VOLATILITY_EXPIRED',\r\n  DEADLINE_EXPIRED: 'DEADLINE_EXPIRED',\r\n  OUT_OF_GAS: 'OUT_OF_GAS',\r\n  TRANSACTION_REVERTED: 'TRANSACTION_REVERTED',\r\n  API_REQUEST_TIMEOUT: 'API_REQUEST_TIMEOUT',\r\n  UNKOWN_ERROR: 'UNKOWN_ERROR',\r\n};\r\nObject.freeze(ErrorCode);\r\n\r\nexport let ErrorMessage;\r\n(function (ErrorMessage) {\r\n  // client\r\n  ErrorMessage.WEB3_WALLET_NOT_FOUND = () => 'web3 wallet is not found';\r\n  ErrorMessage.BROWSER_NOT_SUPPORTED = () => 'browser is not supported';\r\n\r\n  // input error\r\n  ErrorMessage.INVALID_DERI_ENV = (env) => `invalid deri env '${env}'`;\r\n  ErrorMessage.INVALID_VERSION = (version) =>\r\n    `invalid pool version '${version}'`;\r\n  ErrorMessage.INVALID_VERSION_ID = (versionId) =>\r\n    `invalid pool version id '${versionId}'`;\r\n  ErrorMessage.INVALID_CHAIN_ID = (chainId) => `invalid chain id '${chainId}'`;\r\n  ErrorMessage.INVALID_ADDRESS = (address) =>\r\n    `invalid eth address '${address}'`;\r\n  ErrorMessage.INVALID_TOKEN_ID = (tokenId) => `invalid token id'${tokenId}'`;\r\n  ErrorMessage.INVALID_TOKEN_ID_IN_RANGE = ({ tokenId, tokenIds, name }) =>\r\n    `invalid ${name} '${tokenId}' for ${name}s(${tokenIds.join(',')})`;\r\n  ErrorMessage.INVALID_AMOUNT = (amount) => `invalid amount '${amount}'`;\r\n  ErrorMessage.INVALID_TRADE_VOLUME = (volume) =>\r\n    `invalid trade volume '${volume}''`;\r\n  ErrorMessage.INVALID_SYMBOL = (symbol) => `invalid symbol'${symbol}'`;\r\n  ErrorMessage.INVALID_BASE_TOKEN = (bToken) => `invalid base token'${bToken}'`;\r\n  ErrorMessage.INVALID_DATA = (data) =>\r\n    `invalid data '${JSON.stringify(data)}'`;\r\n  ErrorMessage.CONFIG_LIST_NOT_FOUND = ({ name, env }) =>\r\n    `the config list is not found with env ${env} by ${name}()`;\r\n  ErrorMessage.CONFIG_NOT_FOUND = ({ name, args = [] }) =>\r\n    `the config is not found by ${name}(${args.join(',')})`;\r\n\r\n  // network error\r\n  ErrorMessage.RPC_NODE_ALL_UNAVAILABLE = (chainId) =>\r\n    `all rpc nodes are not available for chain id '${chainId}'`;\r\n  ErrorMessage.INVALID_JSON_RPC_RESPONSE = () => 'invalid JSON RPC response';\r\n  ErrorMessage.REST_API_CALL_TIMEOUT = (url) =>\r\n    `REST API request is timeout: ${url}`;\r\n  ErrorMessage.JSON_RPC_CALL_TIMEOUT = ({ name, args = [] }) =>\r\n    `JSON RPC call timeout: ${name}(${args.join(',')})`;\r\n\r\n  // tansaction error\r\n  ErrorMessage.INSUFFICIEN_MARGIN = () => `insufficient margin`;\r\n  ErrorMessage.INSUFFICIENT_BALANCE = () => 'insufficient balance';\r\n  ErrorMessage.INSUFFICIEN_LIQUIDITY = () => 'insufficient pool liquidity';\r\n  ErrorMessage.PRICE_EXPIRED = () => 'price is expired';\r\n  ErrorMessage.VOLATILITY_EXPIRED = () => 'volatility is expired';\r\n  ErrorMessage.DEADLINE_EXPIRED = () => 'deadline is expired';\r\n  ErrorMessage.OUT_OF_GAS = () => 'transaction is out of gas';\r\n  ErrorMessage.TRANSACTION_REVERTED = () => 'transaction is reverted';\r\n\r\n  // api server error\r\n  ErrorMessage.API_REQUEST_TIMEOUT = (url) => `api request '${url}' is timeout`;\r\n\r\n  // common error\r\n  ErrorMessage.UNKOWN_ERROR = ({ err, name, args = [] }) =>\r\n    `unkown error: ${name}(${args.join(',')}) with ${err}`;\r\n})(ErrorMessage || (ErrorMessage = {}));\r\nObject.freeze(ErrorMessage);\r\n\r\nexport let ErrorName;\r\n(function (ErrorName) {\r\n  const errorCodes = Object.keys(ErrorMessage);\r\n  for (let v of errorCodes) {\r\n    if (['WEB3_WALLET_NOT_FOUND', 'BROWSER_NOT_SUPPORTED'].includes(v)) {\r\n      ErrorName[v] = 'ClientError';\r\n    } else if (\r\n      [\r\n        'INVALID_DERI_ENV',\r\n        'INVALID_VERSION',\r\n        'INVALID_VERSION_ID',\r\n        'INVALID_CHAIN_ID',\r\n        'INVALID_ADDRESS',\r\n        'INVALID_TOKEN_ID',\r\n        'INVALID_TOKEN_ID_IN_RANGE',\r\n        'INVALID_SYMBOl',\r\n        'INVALID_BASE_TOKEN',\r\n        'INVALID_AMOUNT',\r\n        'INVALID_TRADE_VOLUME',\r\n        'INVALID_DATA',\r\n        'CONFIG_LIST_NOT_FOUND',\r\n        'CONFIG_NOT_FOUND',\r\n      ].includes(v)\r\n    ) {\r\n      ErrorName[v] = 'InputError';\r\n    } else if (\r\n      [\r\n        'RPC_NODE_ALL_UNAVAILABLE',\r\n        'INVALID_JSON_RPC_RESPONSE',\r\n        'JSON_RPC_CALL_TIMEOUT',\r\n        'REST_API_CALL_TIMEOUT',\r\n      ].includes(v)\r\n    ) {\r\n      ErrorName[v] = 'NetworkError';\r\n    } else if (\r\n      [\r\n        'INSUFFICIEN_MARGIN',\r\n        'INSUFFICIENT_BALANCE',\r\n        'INSUFFICIEN_LIQUIDITY',\r\n        'PRICE_EXPIRED',\r\n        'VOLATILITY_EXPIRED',\r\n        'DEADLINE_EXPIRED',\r\n        'OUT_OF_GAS',\r\n        'TRANSACTION_REVERTED',\r\n      ].includes(v)\r\n    ) {\r\n      ErrorName[v] = 'TransactionError';\r\n    } else if (['API_REQUEST_TIMEOUT'].includes(v)) {\r\n      ErrorName[v] = 'ApiServerError';\r\n    } else {\r\n      ErrorName[v] = 'UnkownError';\r\n    }\r\n  }\r\n})(ErrorName || (ErrorName = {}));\r\n","import { ErrorCode, ErrorMessage, ErrorName } from './error_code';\r\n\r\nexport class AppError extends Error {\r\n  constructor(code, data = {}) {\r\n    if (Object.values(ErrorCode).includes(code)) {\r\n      const fullMessage = `${ErrorName[code]}: ${ErrorMessage[code](data)}`;\r\n      super(fullMessage);\r\n      this.code = code;\r\n      this.name = ErrorName[code];\r\n      this.message = fullMessage;\r\n      this.data = data;\r\n    } else {\r\n      throw new Error(`invalid error code '${code}'`);\r\n    }\r\n  }\r\n  toString() {\r\n    return this.message;\r\n  }\r\n}\r\n","import { AppError } from \"../error/error\";\r\n\r\n// export let Env;\r\n// (function (Env) {\r\n//   Env[\"PROD\"] = \"prod\";\r\n//   Env[\"DEV\"] = \"dev\";\r\n//   Env[\"TESTNET\"] = \"testnet\";\r\n// })(Env || (Env = {}));\r\n\r\nexport const Env = {\r\n  PROD: 'prod',\r\n  TESTNET: 'testnet',\r\n  DEV: 'dev',\r\n};\r\nObject.freeze(Env);\r\n\r\nexport const DeriEnv = (function(Env) {\r\n  let _env = Env.DEV\r\n  return {\r\n    get() {\r\n      return _env\r\n    },\r\n    set(env) {\r\n      if (Object.values(Env).includes(env)) {\r\n        _env = env\r\n      } else {\r\n        throw new AppError('INVALID_DERI_ENV', env)\r\n      }\r\n    }\r\n  }\r\n})(Env)\r\n","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nimport type from '../model/Type';\r\nimport config from '../config.json'\r\n\r\nimport {\r\n  DeriEnv,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  getUserInfoAll,\r\n  getLiquidityInfo\r\n} from '../lib/web3js/index'\r\nimport Type from '../model/Type';\r\nconst versionKey = 'deri-current-version'\r\n\r\n\r\nconst env = DeriEnv.get();\r\nconst { chainInfo } = config[env]\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\nexport function convertToInternationalCurrencySystem (labelValue) {\r\n  \r\n  // Nine Zeroes for Billions\r\n  return Number.isNaN(labelValue) ? ''\r\n  : Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\r\n  // Six Zeroes for Millions \r\n  : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\r\n  // Three Zeroes for Thousands\r\n  : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\r\n\r\n  : Math.abs(Number(labelValue).toFixed(2));\r\n\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  symbol = symbol.toUpperCase();\r\n  const curChain = restoreChain();\r\n  const chain = curChain && curChain.code ? curChain.code.toUpperCase() : 'BSC'\r\n  if(type.isOption){\r\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\r\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\r\n    }\r\n    return  `${symbol}_V2_${chain}`\r\n  } else {\r\n    if(version.isV1){\r\n      return symbol\r\n    } else {\r\n      if(symbol.indexOf('MARKPRICE') !== -1) {\r\n        return symbol;\r\n      } else {\r\n        return `${symbol}_V2_${chain}`\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function getDefaultNw(env){\r\n  return getNetworkList(env).find(network => network.isDefault) || {}\r\n}\r\n\r\nexport function getNetworkList(env){\r\n  const chainInfo = config[env]['chainInfo']\r\n  const ids = Object.keys(chainInfo);\r\n  return ids.map(id => Object.assign(chainInfo[id],{id}))\r\n}\r\n\r\n\r\n//\r\n// export function formatSymbolInputParam(symbol,spec){\r\n//   const curChain = restoreChain();\r\n//   const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\r\n//   const baseToken = Array.isArray(spec.bTokenSymbol) ? spec.bTokenSymbol[0] : spec.bTokenSymbol\r\n//   if(type.isFuture){\r\n//     return {\r\n//       indexPrice : version.isV1 ? symbol : `${symbol}_V2_${chain}`,\r\n//       markPrice : `MARKPRICE_${symbol}_${chain}_FUTURE_${version.zone}_${baseToken}`\r\n//     }\r\n//   } else {\r\n//     return {\r\n//       indexPrice : `${symbol}_V2_${chain}`,\r\n//       markPrice : `MARKPRICE_${symbol}_V2_${chain}`\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport function getMarkpriceSymbol(config){\r\n  const curChain = restoreChain();\r\n  const chain = curChain && curChain.code ? curChain.code.toUpperCase() : 'BSC'\r\n  const baseToken = Array.isArray(config.bTokenSymbol) ? config.bTokenSymbol[0] : config.bTokenSymbol\r\n  if(config.isOption) {\r\n    return `${config.symbol}-MARKPRICE`\r\n  }  else {\r\n    return `MARKPRICE_${config.symbol}_${chain}_${Type.current.toUpperCase()}_${version.zone}_${baseToken}`\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function equalIgnoreCase(str1,str2){\r\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\r\n}\r\n\r\nexport function stripSymbol(symbol){\r\n  if(!symbol){\r\n    return symbol;\r\n  }\r\n  if(/-/.test(symbol)){\r\n    symbol = symbol.split('-')[0]\r\n  }\r\n  return symbol\r\n}\r\n\r\n\r\nexport const  secondsInRange = {\r\n  '1' : 60,\r\n  '5' : 300,\r\n  '15' : 900,\r\n  '30' : 1800,\r\n  '60' : 3600,\r\n  '1D' : 3600 * 24,\r\n  '1W' : 3600 * 24 * 7\r\n}\r\nexport const intervalRange = {\r\n  '1' : 'min',\r\n  '5' : '5min',\r\n  '15' : '15min',\r\n  '30' : '30min',\r\n  '60' : 'hour',\r\n  '1D' : 'day',\r\n  '1W' : 'week'\r\n}\r\n\r\n \r\nexport function calcRange(interval){\r\n  const timestamp = new Date().getTime() /1000 ;\r\n  let from,to;\r\n  if(interval !== '1W') {\r\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\r\n    from  = to - secondsInRange[interval] * 200\r\n  } else {\r\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\r\n    from = to - secondsInRange[interval] * 200\r\n  }\r\n  return [from,to]\r\n \r\n}\r\n\r\nexport function groupByNetwork(pools){\r\n  const all = []\r\n  pools.reduce((total, pool) => {\r\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\r\n    if (find && find.list.length < 5) {\r\n      find['list'].push(pool)\r\n    } else {\r\n      const poolInfo = {\r\n        pool: {\r\n          network: pool.network,\r\n          symbol: pool.symbol,\r\n          address: pool.address,\r\n          formatAdd: pool.formatAdd,\r\n          version: pool.version,\r\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\r\n          chainId: pool.chainId,\r\n          airdrop: pool.airdrop,\r\n          type: pool.type,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          bTokenId: pool.bTokenId,\r\n          symbolId: pool.symbolId\r\n        },\r\n        list: [pool]\r\n      }\r\n      total.push(poolInfo)\r\n    }\r\n    return total;\r\n  }, all)\r\n  return all;\r\n}\r\n\r\nexport function combineSymbolfromPoolConfig(configs){\r\n  return configs.reduce((total,config) => {\r\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\r\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \r\n        && pos > -1) {\r\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\r\n        total[pos].symbol += `,${config.symbol}` \r\n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\r\n        total.push(config)\r\n      }\r\n    } else{\r\n      total.push(config)\r\n    }\r\n    return total;\r\n  },[]);\r\n}\r\n\r\nexport async function mapPoolInfo(config,wallet,chainInfo){\r\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\r\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\r\n  const pool = config.pool || ''\r\n  const item = { \r\n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\r\n    // liquidity : liqPool.liquidity,\r\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\r\n    formatAdd : formatAddress(pool),\r\n    address : pool,\r\n    type : 'perpetual',\r\n    buttonText : 'STAKING',\r\n    multiplier : 1\r\n  }\r\n  // if(wallet && wallet.isConnected()){\r\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\r\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\r\n  //   if(info){\r\n  //     item['pnl'] = info.pnl\r\n  //   }\r\n  //   if(claimInfo){\r\n  //     item['claimed'] = claimInfo.total;\r\n  //     item['unclaimed'] = claimInfo.amount\r\n  //   }\r\n  // }\r\n\r\n  return Object.assign(config,item)\r\n}\r\n\r\n\r\n\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import { ContractBase } from '../../shared/contract';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass Type {\r\n  current = 'future';\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current:observable,\r\n      setCurrent : action,\r\n      isOption : computed,\r\n      isFuture : computed\r\n    })\r\n  }\r\n\r\n  setCurrent(type){\r\n    this.current = type;\r\n  }\r\n\r\n  get isOption() {\r\n    return this.current === 'option'\r\n  }\r\n\r\n  get isFuture() {\r\n    return this.current === 'future'\r\n  }\r\n}\r\nexport default new Type()","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value) => bg(value, -18).toString()\r\n\r\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n\r\n// == array set\r\nexport const isEqualSet = (set1, set2) => {\r\n  if (set1.size !== set2.size) return false;\r\n  for (let item of set1) {\r\n    if (!set2.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n\r\n// == contract gen\r\n// export const deleteIndexedKey = (obj) => {\r\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\r\n//     const keys = Object.keys(obj);\r\n//     const intKeyCount = keys.reduce(\r\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\r\n//       0\r\n//     );\r\n//     if (intKeyCount * 2 === keys.length) {\r\n//       let newObj = {};\r\n//       Object.keys(obj).forEach((k) => {\r\n//         if (!intRegex.test(k)) {\r\n//           newObj[k] = obj[k];\r\n//         }\r\n//       });\r\n//       return newObj;\r\n//     }\r\n//     return obj;\r\n//   } else {\r\n//     return obj;\r\n//   }\r\n// };\r\n\r\nexport const fromWeiForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = fromWei(obj[i]);\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const toNumberForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = bg(obj[i]).toNumber();\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n\r\n// for frontend to display symbols\r\nexport const sortOptionSymbols = (symbolList) => {\r\n  const symbolArr = symbolList\r\n    .map((s) => s.symbol)\r\n    .map((s) => {\r\n      return s.split('-');\r\n    });\r\n  const unique = (value, index, self) => self.indexOf(value) === index\r\n  const to2 = (i) => i < 10 ? `0${i}` : i\r\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\r\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\r\n  const price = symbolArr\r\n    .map((s) => s[1])\r\n    .filter(unique)\r\n    .sort((a, b) => parseInt(b) - parseInt(a));\r\n  return symbolList.map((i, index) => {\r\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\r\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\r\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\r\n    i.index = parseInt(`${index1}${index2}${index3}`)\r\n    return i\r\n  }).sort((a, b) => a.index - b.index).map((i) => {\r\n    delete i.index\r\n    return i\r\n  })\r\n}\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\r\nimport { bg } from \"../../shared/utils/index.js\";\r\nimport { MAX_UINT256} from '../config'\r\nimport { PancakePair } from \"./gen/PancakePair.js\";\r\n\r\nconst isUnlocked = (klass) => {\r\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\r\n    const allowance = await this.allowance(accountAddress, poolAddress)\r\n    //console.log(accountAddress, poolAddress)\r\n    const res = bg(allowance).gt(0)\r\n    return res\r\n  };\r\n  return klass\r\n};\r\n\r\nconst unlock = (klass) => {\r\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst getPrice = (klass) => {\r\n  klass.prototype['getPrice'] = async function () {\r\n    if (this.contractAddress === '0xE1cC9FCF36f60479F21ACcB3E23Cb2B608679f4d') {\r\n      return '1';\r\n    }\r\n    const [\r\n      isQuoteToken0,\r\n      qDecimals,\r\n      bDecimals,\r\n      pair,\r\n      priceCumulativeLast1,\r\n      priceCumulativeLast2,\r\n      timestampLast1,\r\n      timestampLast2,\r\n    ] = await Promise.all([\r\n      this.isQuoteToken0(),\r\n      this.qDecimals(),\r\n      this.bDecimals(),\r\n      this.pair(),\r\n      this.priceCumulativeLast1(),\r\n      this.priceCumulativeLast2(),\r\n      this.timestampLast1(),\r\n      this.timestampLast2(),\r\n    ]);\r\n\r\n    const pancakePair = new PancakePair(this.chainId, pair);\r\n    let reserveQ, reserveB, timestamp;\r\n    if (isQuoteToken0) {\r\n      const res = await pancakePair.getReserves();\r\n      reserveQ = res._reserve0;\r\n      reserveB = res._reserve1;\r\n      timestamp = res._blockTimestampLast;\r\n    } else {\r\n      const res = await pancakePair.getReserves();\r\n      reserveB = res._reserve0;\r\n      reserveQ = res._reserve1;\r\n      timestamp = res._blockTimestampLast;\r\n    }\r\n    const [price0CumulativeLast, price1CumulativeLast] = await Promise.all([\r\n      pancakePair.price0CumulativeLast(),\r\n      pancakePair.price1CumulativeLast(),\r\n    ]);\r\n    let tmpPairState = {};\r\n\r\n    if (timestamp !== timestampLast2) {\r\n      tmpPairState.priceCumulativeLast1 = priceCumulativeLast2;\r\n      tmpPairState.timestampLast1 = timestampLast2;\r\n      tmpPairState.priceCumulativeLast2 = isQuoteToken0\r\n        ? price0CumulativeLast\r\n        : price1CumulativeLast;\r\n      tmpPairState.timestampLast2 = timestamp;\r\n    } else {\r\n      tmpPairState = {\r\n        priceCumulativeLast1,\r\n        priceCumulativeLast2,\r\n        timestampLast1,\r\n        timestampLast2,\r\n      };\r\n    }\r\n\r\n    let price;\r\n    const diff = bg(qDecimals).minus(bDecimals);\r\n    if (tmpPairState.timestampLast1 !== '0') {\r\n      //console.log('not equal')\r\n      price = bg(tmpPairState.priceCumulativeLast2)\r\n        .minus(tmpPairState.priceCumulativeLast1)\r\n        .div(bg(tmpPairState.timestampLast2).minus(tmpPairState.timestampLast1))\r\n        .times(bg(10).pow(diff))\r\n        .div(bg(2).pow(112));\r\n    } else {\r\n      //console.log('equal')\r\n      price = bg(reserveB).times(bg(10).pow(diff)).div(reserveQ).toString();\r\n    }\r\n    return price;\r\n  };\r\n  return klass\r\n}\r\n\r\nexport const ERC20Adapter = (klass) => {\r\n    klass = processMethod(klass, 'totalSupply');\r\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\r\n\r\n    klass = isUnlocked(klass);\r\n    klass = unlock(klass);\r\n    return klass\r\n}\r\n\r\nexport const chainlinkOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainVolatilityOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getVolatility');\r\n    klass = processMethod(klass, 'volatility');\r\n    return klass\r\n}\r\n\r\nexport const bTokenOracle1Adapter = (klass) => {\r\n  //klass = processMethod(klass, 'getPrice');\r\n  klass = getPrice(klass);\r\n  return klass;\r\n};\r\n\r\n// export const bTokenSwapper1Adapter = (klass) => {\r\n//   //klass = processMethod(klass, 'getPrice');\r\n//   return klass;\r\n// };\r\n\r\nexport const pancakePairAdapter = (klass) => {\r\n  //klass = processMethod(klass, 'getPrice');\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const pancakePairAbi = [\r\n  {\r\n    \"inputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"Burn\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Mint\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0In\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1In\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0Out\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1Out\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"Swap\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint112\",\r\n        \"name\": \"reserve0\",\r\n        \"type\": \"uint112\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint112\",\r\n        \"name\": \"reserve1\",\r\n        \"type\": \"uint112\"\r\n      }\r\n    ],\r\n    \"name\": \"Sync\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"DOMAIN_SEPARATOR\",\r\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"MINIMUM_LIQUIDITY\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"PERMIT_TYPEHASH\",\r\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"allowance\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"burn\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"decimals\",\r\n    \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"factory\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"getReserves\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" },\r\n      { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" },\r\n      {\r\n        \"internalType\": \"uint32\",\r\n        \"name\": \"_blockTimestampLast\",\r\n        \"type\": \"uint32\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"initialize\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"kLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"mint\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"name\": \"nonces\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" },\r\n      { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" },\r\n      { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }\r\n    ],\r\n    \"name\": \"permit\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"price0CumulativeLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"price1CumulativeLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"skim\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }\r\n    ],\r\n    \"name\": \"swap\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [],\r\n    \"name\": \"sync\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"token0\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"token1\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"totalSupply\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"transfer\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pancakePairAbi } from '../abi/pancakePairAbi.js'\r\n\r\nexport class PancakePair extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pancakePairAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async DOMAIN_SEPARATOR() {\r\n  //    const res = await this._call('DOMAIN_SEPARATOR', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async MINIMUM_LIQUIDITY() {\r\n  //    const res = await this._call('MINIMUM_LIQUIDITY', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async PERMIT_TYPEHASH() {\r\n  //    const res = await this._call('PERMIT_TYPEHASH', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async allowance(, ) {\r\n  //    const res = await this._call('allowance', [, ])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async balanceOf() {\r\n  //    const res = await this._call('balanceOf', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async factory() {\r\n  //    const res = await this._call('factory', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getReserves() {\r\n    const res = await this._call('getReserves', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async kLast() {\r\n  //    const res = await this._call('kLast', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async nonces() {\r\n  //    const res = await this._call('nonces', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async price0CumulativeLast() {\r\n    const res = await this._call('price0CumulativeLast', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async price1CumulativeLast() {\r\n    const res = await this._call('price1CumulativeLast', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async token0() {\r\n  //    const res = await this._call('token0', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async token1() {\r\n  //    const res = await this._call('token1', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, spender, value) {\r\n  //    return await this._transact('approve', [spender, value], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, to) {\r\n  //    return await this._transact('burn', [to], accountAddress)\r\n  //  }\r\n  //  async initialize(accountAddress, _token0, _token1) {\r\n  //    return await this._transact('initialize', [_token0, _token1], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, to) {\r\n  //    return await this._transact('mint', [to], accountAddress)\r\n  //  }\r\n  //  async permit(accountAddress, owner, spender, value, deadline, v, r, s) {\r\n  //    return await this._transact('permit', [owner, spender, value, deadline, v, r, s], accountAddress)\r\n  //  }\r\n  //  async skim(accountAddress, to) {\r\n  //    return await this._transact('skim', [to], accountAddress)\r\n  //  }\r\n  //  async swap(accountAddress, amount0Out, amount1Out, to, data) {\r\n  //    return await this._transact('swap', [amount0Out, amount1Out, to, data], accountAddress)\r\n  //  }\r\n  //  async sync(accountAddress) {\r\n  //    return await this._transact('sync', [], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, value) {\r\n  //    return await this._transact('transfer', [to, value], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, value) {\r\n  //    return await this._transact('transferFrom', [from, to, value], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const TERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress, account, amount) {\r\n    return await this._transact('mint', [account, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const ERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\r\n\r\nexport class ERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, ERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals).toString();\r\n  }\r\n\r\n   async decimals() {\r\n     const res = await this._call('decimals', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n   async name() {\r\n     const res = await this._call('name', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const chainlinkOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"feed_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feed\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feedDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\r\n\r\nexport class ChainlinkOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, chainlinkOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feed() {\r\n  //    const res = await this._call('feed', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feedDecimals() {\r\n  //    const res = await this._call('feedDecimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const offChainOracleAbi = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: 'symbol_',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'signer_',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'delayAllowance_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'delayAllowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getPrice',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'price',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'delayAllowance_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setDelayAllowance',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'signer_',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setSigner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'signer',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'timestamp',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'timestamp_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'price_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint8',\r\n        name: 'v_',\r\n        type: 'uint8',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'r_',\r\n        type: 'bytes32',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 's_',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'updatePrice',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  // for old offchain oracle\r\n  {\r\n    inputs: [],\r\n    name: 'signatory',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n];\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\r\n\r\nexport class OffChainOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async price() {\r\n  //    const res = await this._call('price', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async signer() {\r\n    await this._init()\r\n    //const res = await this._call('signer', [])\r\n    const res = await this.contract.methods.signer().call()\r\n    return deleteIndexedKey(res)\r\n  }\r\n  // for old offchain oracle\r\n  async signatory() {\r\n    await this._init()\r\n    //const res = await this._call('signatory',[])\r\n    const res = await this.contract.methods.signatory().call()\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\r\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const offChainVolatilityOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"delayAllowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getVolatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setDelayAllowance\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setSigner\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"signer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"volatility_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"v_\",\r\n                \"type\": \"uint8\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"r_\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"s_\",\r\n                \"type\": \"bytes32\"\r\n            }\r\n        ],\r\n        \"name\": \"updateVolatility\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"volatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\r\n\r\nexport class OffChainVolatilityOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getVolatility() {\r\n    const res = await this._call('getVolatility', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async signer() {\r\n    const res = await this._call('signer', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n   async volatility() {\r\n     const res = await this._call('volatility', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\r\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const TERC20MintLimitAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerBurn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerMint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintAmount\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mintTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintAmount\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\r\n\r\nexport class TERC20MintLimit extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20MintLimitAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf() {\r\n    return await this._call('balanceOf', [])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async mintAmount() {\r\n  //    const res = await this._call('mintAmount', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintPeriod() {\r\n  //    const res = await this._call('mintPeriod', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintTimestamp() {\r\n  //    const res = await this._call('mintTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress) {\r\n  //    return await this._transact('burn', [], accountAddress)\r\n  //  }\r\n  //  async controllerBurn(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async controllerMint(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async setMintAmount(accountAddress, amount) {\r\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\r\n  //  }\r\n  //  async setMintPeriod(accountAddress, period) {\r\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const bTokenOracle1Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pair_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"quote_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"base_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"isQuoteToken0_\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"bDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"base\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"isQuoteToken0\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pair\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"priceCumulativeLast1\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"priceCumulativeLast2\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"qDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"quote\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestampLast1\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestampLast2\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { bTokenOracle1Abi } from '../abi/bTokenOracle1Abi.js'\r\n\r\nexport class BTokenOracle1 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, bTokenOracle1Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async bDecimals() {\r\n    const res = await this._call('bDecimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async base() {\r\n  //    const res = await this._call('base', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isQuoteToken0() {\r\n    const res = await this._call('isQuoteToken0', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async pair() {\r\n    const res = await this._call('pair', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async priceCumulativeLast1() {\r\n    const res = await this._call('priceCumulativeLast1', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async priceCumulativeLast2() {\r\n    const res = await this._call('priceCumulativeLast2', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async qDecimals() {\r\n    const res = await this._call('qDecimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async quote() {\r\n  //    const res = await this._call('quote', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async timestampLast1() {\r\n    const res = await this._call('timestampLast1', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async timestampLast2() {\r\n    const res = await this._call('timestampLast2', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async getPrice(accountAddress) {\r\n  //    return await this._transact('getPrice', [], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\r\nimport {\r\n  ERC20Adapter,\r\n  chainlinkOracleAdapter,\r\n  offChainOracleAdapter,\r\n  offChainVolatilityOracleAdapter,\r\n  pancakePairAdapter,\r\n  bTokenOracle1Adapter,\r\n} from './adapter.js';\r\n\r\nimport { TERC20 } from './gen/TERC20.js';\r\nimport { ERC20 } from './gen/ERC20.js';\r\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\r\nimport { OffChainOracle} from './gen/OffChainOracle.js';\r\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\r\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\r\n//import { BTokenSwapper1 } from './gen/BTokenSwapper1.js';\r\nimport { PancakePair } from './gen/PancakePair.js';\r\nimport { BTokenOracle1 } from './gen/BTokenOracle1.js';\r\n\r\n// ERC20\r\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\r\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\r\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\r\nexport const bTokenFactory = ERC20Factory\r\n\r\n\r\n// oracle\r\n// export const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\r\n// export const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\r\n// export const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\r\nexport const chainlinkOracleFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\r\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\r\nexport const offChainVolatilityOracleFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\r\n\r\n// swapper\r\nexport const bTokenOracle1Factory = contractFactory(bTokenOracle1Adapter(BTokenOracle1))\r\n//export const bTokenSwapper1Factory = contractFactory(bTokenSwapper1Adapter(BTokenSwapper1))\r\nexport const pancakePairFactory = contractFactory(pancakePairAdapter(PancakePair))\r\n\r\n","import { DeriEnv, Env } from './env';\r\nimport { checkChainId, checkEnv } from './check';\r\nimport { AppError } from '../error/error';\r\n\r\nexport const getPoolV1ConfigList = (env) => {\r\n  env = checkEnv(env);\r\n  if (env === Env.PROD) {\r\n    return [\r\n      {\r\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        type: 'future',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        env: 'prod',\r\n        chain: 'bsc',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        type: 'future',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        env: 'prod',\r\n        chain: 'bsc',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        type: 'future',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        env: 'prod',\r\n        chain: 'bsc',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'future',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        env: 'prod',\r\n        chain: 'bsc',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'future',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        env: 'prod',\r\n        chain: 'bsc',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        type: 'future',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        env: 'prod',\r\n        chain: 'bsc',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else if (env === Env.DEV) {\r\n    return [\r\n      {\r\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n        initialBlock: '9378545',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '97',\r\n        type: 'future',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        env: 'dev',\r\n        chain: 'bsctestnet',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else if (env === Env.TESTNET) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getLpConfigList = async(env) => {\r\n  env = checkEnv(env);\r\n  if (env === Env.PROD) {\r\n    return [\r\n      {\r\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        bTokens: [{ bTokenSymbol: 'DERI' }, { bTokenSymbol: 'USDT' }],\r\n        symbol: '--',\r\n        type: 'lp',\r\n        version: 'slp',\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        bTokens: [{ bTokenSymbol: 'DERI' }, { bTokenSymbol: 'BUSD' }],\r\n        symbol: '--',\r\n        type: 'lp',\r\n        version: 'clp',\r\n        isLp: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  }\r\n  throw new AppError('CONFIG_NOT_FOUND', {\r\n    name: 'getMiningVaultRouterConfig',\r\n    args: [chainId],\r\n  });\r\n};\r\n\r\nexport const getDeriConfigList = async(env) => {\r\n  env = checkEnv(env)\r\n  if (env === Env.PROD) {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = async(env) => {\r\n  env = checkEnv(env)\r\n  if (env === Env.PROD) {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getLpConfig = async(chainId, poolAddress) => {\r\n  chainId = checkChainId(chainId);\r\n  const pools = (await getLpConfigList(DeriEnv.get())).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.find((p) => p.pool === poolAddress);\r\n  if (pool) {\r\n    return {\r\n      poolAddress: pool.pool,\r\n      bTokenAddress: pool.bToken,\r\n      lTokenAddress: pool.lToken,\r\n      type: pool.type,\r\n      version: pool.version,\r\n    };\r\n  }\r\n  throw new AppError('CONFIG_NOT_FOUND', {\r\n    name: 'getLpConfig',\r\n    args: [chainId, poolAddress],\r\n  });\r\n};\r\n\r\nexport const getDeriConfig = async(env, chainId) => {\r\n  env = checkEnv(env);\r\n  chainId = checkChainId(chainId);\r\n  const pool = (await getDeriConfigList(env)).filter((c) => c.chainId === chainId);\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  throw new AppError('CONFIG_NOT_FOUND', {\r\n    name: 'getDeriConfig',\r\n    args: [env, chainId],\r\n  });\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = checkChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n  throw new AppError('CONFIG_NOT_FOUND', {\r\n    name: 'getMiningVaultConfi',\r\n    args: [chainId],\r\n  });\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = checkChainId(chainId);\r\n  const env = DeriEnv.get();\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  }\r\n  throw new AppError('CONFIG_NOT_FOUND', {\r\n    name: 'getPoolV1Config',\r\n    args: [chainId, poolAddress],\r\n  });\r\n};\r\n","import * as api from \"../lib/web3js/index\";\r\n\r\nclass ApiProxy {\r\n  async request(method,params=[]){\r\n    const res = await api[method].call(this,...params)\r\n    if(res && res.response){\r\n      return res.response.data\r\n    } \r\n    return res\r\n  }\r\n}\r\nexport default new ApiProxy();","// for convert\r\nconst bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\n// for convert\r\nconst symbolPairs = {\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n};\r\n\r\n// todo: it's old, will clean later\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n  GHSTUSDT: 'GHSTUSDT',\r\n  AGLDUSDT: 'AGLDUSDT',\r\n  SHIBUSDT: 'SHIBUSDT',\r\n};\r\n\r\nconst symbolDecimalPairs = {\r\n  'BTCUSD-40000-P': '5',\r\n  SHIBUSDT: '6',\r\n};\r\n\r\nexport const getSymbolDecimals = (symbol) => {\r\n  if (Object.keys(symbolDecimalPairs).includes(symbol)) {\r\n    return symbolDecimalPairs[symbol];\r\n  }\r\n  // default symbol decimals\r\n  return '2'\r\n};\r\n\r\nexport const normalizeOptionSymbol = (optionSymbol) => {\r\n  const res = optionSymbol.split('-')\r\n  if (res.length >= 2) {\r\n    return res[0]\r\n  } else {\r\n    throw new Error(`invalid option symbol:${optionSymbol}`)\r\n  }\r\n};\r\n\r\nexport const getNormalizedOptionSymbols = (symbols) => {\r\n  let res = []\r\n  symbols.forEach((s) => {\r\n    const volSymbol = normalizeOptionSymbol(s)\r\n    if (!res.includes(volSymbol)) {\r\n      res.push(volSymbol)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getVolatilitySymbols = (symbols) => {\r\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\r\n}\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(symbolPairs).includes(symbol)) {\r\n    return symbolPairs[symbol];\r\n  }\r\n  return symbol;\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(symbolPairs).indexOf(symbol)\r\n  if (index > -1) {\r\n    return Object.keys(symbolPairs)[index];\r\n  }\r\n  return symbol;\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken];\r\n  }\r\n  return bToken;\r\n};\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken);\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index];\r\n  }\r\n  return bToken;\r\n};\r\n\r\nexport const normalizeSymbolUnit = (symbol) => {\r\n  const prefix = ['USD', 'USDT'];\r\n  const re = new RegExp(`(${prefix.join('|')})$`);\r\n  if (typeof symbol === 'string') {\r\n    return mapToSymbol(symbol).replace(re, '');\r\n  }\r\n};\r\n\r\nexport const getIndexInfo = (symbol) => {\r\n  const internalSymbol = mapToSymbolInternal(symbol);\r\n  const customIndexs = {\r\n    IGAME: {\r\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\r\n      url: 'https://docs.deri.finance/products/index/game-index',\r\n    },\r\n    IBSCDEFI: {\r\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\r\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\r\n    },\r\n    IMEME: {\r\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\r\n      url: 'https://docs.deri.finance/products/index/meme-index',\r\n    },\r\n  };\r\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\r\n    return customIndexs[internalSymbol];\r\n  } else {\r\n    return { tokens: [], url: '' };\r\n  }\r\n};","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = 'v2';\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed,\r\n      zone : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.current === 'v2_lite_open'\r\n  }\r\n\r\n  get zone(){\r\n    if(this.isV2){\r\n      return 'Main'\r\n    } else if(this.isV2Lite) {\r\n      return 'Inno'\r\n    } else {\r\n      return 'Open'\r\n    }\r\n  }\r\n}\r\nexport default new Version()","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","// utils for derijsnext, combine in one file\r\nimport { fromWei, toWei } from './convert';\r\n\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address, initialBlock='') => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address, initialBlock);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// contract\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = fromWei(val[prop]);\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const processResult = (val, propList = []) => {\r\n  if (Array.isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (typeof val === 'object' && val !== null) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return fromWei(val);\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n// api for v2_lite and option\r\nexport const getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getPoolLiquidity'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.liquidity = fromWei(res[0]);\r\n    return this.stateValues.liquidity\r\n  };\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getLastTimestamp'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.lastTimestamp = res[1];\r\n    return this.stateValues.lastTimestamp\r\n  };\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\r\n    return this.stateValues.protocolFeeAccrued;\r\n  };\r\n  return klass;\r\n}","//for color\r\nexport const PRIMARY = 'primary';\r\nexport const SECONDARY = 'secondary'\r\n\r\n//\r\nexport const DEPOSIT = 'deposit'\r\nexport const WITHDRAW = 'withdraw'\r\n\r\n//\r\nexport const BUY = 'buy'\r\nexport const SELL = 'sell'\r\n\r\n\r\nexport const BSC_CHAINID = 56\r\nexport const BSC_CHAINNAME= 'BSC'\r\n\r\n\r\nexport const ARROW_UP = 'up'\r\nexport const ARROW_DOWN = 'down'\r\n\r\nexport const FUTURE = 'future'\r\nexport const OPTION = 'option'\r\n\r\nexport const VERSION_V2 = 'v2'\r\nexport const VERSION_V2_LITE = 'v2_lite'\r\nexport const VERSION_V2_OPEN = 'v2_lite_open'","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","var map = {\n\t\"./de/Signin.json\": 629,\n\t\"./de/bridge.json\": 630,\n\t\"./de/broker.json\": 631,\n\t\"./de/dip-history-two.json\": 632,\n\t\"./de/dip-history.json\": 633,\n\t\"./de/dip-two.json\": 634,\n\t\"./de/faucet.json\": 635,\n\t\"./de/footer.json\": 636,\n\t\"./de/governance.json\": 637,\n\t\"./de/header.json\": 638,\n\t\"./de/home.json\": 639,\n\t\"./de/lite.json\": 640,\n\t\"./de/mining.json\": 641,\n\t\"./de/mobile-lite.json\": 642,\n\t\"./de/nuls.json\": 643,\n\t\"./de/permission.json\": 644,\n\t\"./de/pool.json\": 645,\n\t\"./de/pro.json\": 646,\n\t\"./de/team.json\": 647,\n\t\"./de/trading-mining.json\": 648,\n\t\"./en/header.json\": 649,\n\t\"./en/pool.json\": 650,\n\t\"./en/trade.json\": 651,\n\t\"./fr/Signin.json\": 652,\n\t\"./fr/bridge.json\": 653,\n\t\"./fr/broker.json\": 654,\n\t\"./fr/dip-history-two.json\": 655,\n\t\"./fr/dip-history.json\": 656,\n\t\"./fr/dip-two.json\": 657,\n\t\"./fr/faucet.json\": 658,\n\t\"./fr/footer.json\": 659,\n\t\"./fr/governance.json\": 660,\n\t\"./fr/header.json\": 661,\n\t\"./fr/home.json\": 662,\n\t\"./fr/lite.json\": 663,\n\t\"./fr/mining.json\": 664,\n\t\"./fr/mobile-lite.json\": 665,\n\t\"./fr/nuls.json\": 666,\n\t\"./fr/permission.json\": 667,\n\t\"./fr/pool.json\": 668,\n\t\"./fr/pro.json\": 669,\n\t\"./fr/team.json\": 670,\n\t\"./fr/trading-mining.json\": 671,\n\t\"./zh/pool.json\": 672,\n\t\"./zh/trade.json\": 673\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 628;","export default __webpack_public_path__ + \"static/media/logo.8407346c.svg\";","import styled from \"styled-components\"\r\n\r\nexport default function Label({text,height ,borderColor ,color,bgColor,borderRadius = '50%',fontSize,icon,className}) {\r\n  const Wrapper = styled.div`\r\n    padding : 0 8px;\r\n    height : ${height}px;\r\n    color : ${color};\r\n    border-color : ${borderColor};\r\n    background-color : ${bgColor};\r\n    border-radius : ${borderRadius};\r\n    font-size : ${fontSize}px;\r\n    text-align : center;\r\n    .main {\r\n      display : flex;\r\n      align-items : center;\r\n      justify-content : center;\r\n    }\r\n    img {\r\n      margin-right :8px;\r\n    }\r\n  `\r\n  return (\r\n    <Wrapper className={className}>\r\n      <span className='main'>\r\n        {icon && <img src={icon} alt='' />}\r\n        {text}\r\n      </span>\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components'\r\nimport { Link,useLocation } from 'react-router-dom'\r\nimport classNames from 'classnames';\r\nimport Label from '../Label/Label';\r\n\r\nexport default function Menu({lang}){\r\n  const location = useLocation();\r\n\r\n  const menus = [\r\n    {text : lang['pools'],link : '/pool'},\r\n    {text : lang['Futures'],link : '/trade/futures'},\r\n    {text : lang['options'],link : '/trade/options',icon : <Label text={lang['beta']} height='16' borderRadius = '10px' bgColor='#CD7A37' color='#FFFFFF' fontSize='11' className='beta-icon'/>},\r\n    {text : lang['token'],link : '/token'},\r\n    {text : lang['bridge'],link : '/bridge'},\r\n    {text : lang['docs'],subMenu : []},\r\n    {text : lang['more'],subMenu : []},\r\n    {text : lang['trade-to-earn'],icon : '',link : '/trade-to-earn'}\r\n  ]\r\n  const Wrapper = styled.div`\r\n    width: 795px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin-left: 14px;\r\n    .menu-item {\r\n      position : relative;\r\n      .beta-icon {\r\n        position : absolute;\r\n        top: -14px;\r\n        left: 6px;\r\n      }\r\n      a {\r\n        color : #93A1B8;\r\n        text-decoration: none;\r\n      }\r\n    }\r\n    .menu-item.selected a{\r\n      color : #E0ECFF;\r\n    }\r\n  `\r\n\r\n  return (\r\n    <Wrapper>\r\n      {menus.map((menu,index) => {\r\n        const clazz = classNames('menu-item',{selected : location.pathname === menu.link})\r\n        return(\r\n          <span className={clazz} key={index}>\r\n            {menu.icon}\r\n            <Link to={menu.link}>{menu.text}</Link>\r\n          </span>\r\n        )\r\n      })}\r\n    </Wrapper>\r\n  ) \r\n}","export default __webpack_public_path__ + \"static/media/lang-icon.f9d54bfd.svg\";","import styled from 'styled-components'\r\nimport langIcon from '../../assets/img/lang-icon.svg'\r\n\r\nconst Wrapper = styled.div`\r\n  display : flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Panel = styled.div`\r\n  display : none;\r\n`\r\n\r\nexport default function LangSelector(){\r\n  return (\r\n    <Wrapper>\r\n      <img src={langIcon} alt='lang Selector'/>\r\n      <Panel>\r\n        <div>En</div>\r\n      </Panel>\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components';\r\nimport bscLogoIcon from '../../assets/img/bsc-logo.svg'\r\nimport arrowDownIcon from '../../assets/img/arrow-down.svg'\r\n\r\nexport default function NetworkSelector(){\r\n  const Wrapper = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n    color : #E0ECFF;\r\n    width : 108px;\r\n    margin-left : 16px;\r\n    .name {\r\n      margin-left : 4px\r\n    }\r\n  `  \r\n  return (\r\n    <Wrapper>\r\n      <img src={bscLogoIcon} alt='bsc'/>\r\n      <div className='name'>BSC</div>\r\n      <img src={arrowDownIcon} alt='select' />\r\n    </Wrapper>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/matemask-logo.354e0086.svg\";","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport matemaskIcon from '../../assets/img/matemask-logo.svg'\r\nimport arrowDownIcon from '../../assets/img/arrow-down.svg'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { useRouteMatch } from 'react-router';\r\nimport useConfig from '../../hooks/useConfig';\r\nimport { formatAddress } from '../../utils/utils';\r\nimport Button from '../Button/Button';\r\n\r\nconst Wrapper = styled.div`\r\n  display : flex;\r\n  align-items : center;\r\n  margin-right : 24px;\r\n  color : #E0ECFF;\r\n  cursor: pointer;\r\n  img {\r\n    margin-right : 8px;\r\n  }\r\n  `\r\n\r\n\r\nfunction WalletSelector({wallet,lang}){\r\n  const [btnText,setBtnText] = useState(lang['connect-wallet'])\r\n  const isIndex = useRouteMatch('/index')\r\n  const isRoot = useRouteMatch({path: '/',exact : true})\r\n  const isMining = useRouteMatch({path: '/mining',exact : true});\r\n  const isTeam = useRouteMatch('/team')\r\n  const isRetired = useRouteMatch('/retired')\r\n  const isOptionsLite = useRouteMatch('/options/lite')\r\n  const isOptionsPro = useRouteMatch('/options/pro') \r\n  const isDownload = useRouteMatch('/logo')\r\n  const isInfo = useRouteMatch('/info')\r\n\r\n  const isOptions = isOptionsLite || isOptionsPro\r\n  const notConnectWalletPage  = isIndex || isMining || isTeam || isRoot || isRetired || isDownload || isInfo\r\n  \r\n\r\n\r\n  const setAccountText = (detail) => {\r\n    //如果用户选择的网络正确\r\n    if(wallet.isConnected()){\r\n      if(wallet.isSupportChain(isOptions)) {\r\n        setBtnText(<span className='address'>{formatAddress(detail.account)}</span>)\r\n      } else {\r\n        setBtnText(<span className='no-supported'>{lang['unsupported-chain-id']}{detail.chainId}!</span>)\r\n      }\r\n    } else {\r\n      setBtnText(lang['connect-wallet'])\r\n    } \r\n  }\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const detail = await wallet.connect()\r\n      if(detail){\r\n        setAccountText(detail)\r\n      }\r\n    }\r\n    if(!notConnectWalletPage){\r\n      init();\r\n    }\r\n    return () => {}\r\n  }, [window.location.href])\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const detail = await wallet.connect()\r\n      if(detail){\r\n        setAccountText(detail)\r\n      }\r\n    }\r\n    if(!notConnectWalletPage){\r\n      init();\r\n    }\r\n    return () => {}\r\n  }, [window.location.href])\r\n\r\n  useEffect(() => {\r\n    setAccountText(wallet.detail)\r\n    return () => {\r\n    };\r\n  }, [wallet.detail.account,wallet.detail.formatBalance,lang]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {wallet.isConnected() ? \r\n        <>\r\n          <img src={matemaskIcon} alt='matemask'/>\r\n          <div onClick={wallet.connect}>{btnText}</div>\r\n          {/* <img src={arrowDownIcon} alt='select'/> */}\r\n        </>\r\n      :\r\n        <Button label={btnText} onClick={wallet.connect} width={176} height={32} fontWeight ={700} fontColor='#FFF' fontSize='18'/>\r\n      }\r\n      \r\n    </Wrapper>\r\n  )\r\n}\r\nexport default inject('wallet')(observer(WalletSelector))","import './header.less'\r\nimport logo from '../../assets/img/logo.svg'\r\nimport Menu from './Menu'\r\nimport LangSelector from './LangSelector'\r\nimport NetworkSelector from './NetworkSelector'\r\nimport WalletSelector from './WalletSelector'\r\nimport { inject, observer } from 'mobx-react'\r\nimport useLang from '../../hooks/useLang'\r\n\r\n\r\nfunction Header({intl}){\r\n  const lang = useLang(intl.dict,'header');\r\n  return (\r\n    <div className='header'>\r\n      <div className='left'>\r\n        <div className='logo'>\r\n          <img src ={logo} alt='logo'/>\r\n          <span className='name'>DERI</span>\r\n        </div>\r\n        <Menu lang={lang}/>\r\n      </div>\r\n      <div className='right'>\r\n        <LangSelector/>\r\n        <NetworkSelector/>\r\n        <WalletSelector lang={lang}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default inject('intl')(observer(Header))","\r\n\r\nexport default function useLang(dict,page){\r\n  if(dict){\r\n    return dict[page]\r\n  }\r\n  return {}\r\n}","export default function Footer(){\r\n  return (\r\n    <div></div>\r\n  )\r\n}","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","import React from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst withLanguage =  Component => {\r\n  class WithLanguage extends React.Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        this.onRouteChanged(this.props.location);\r\n      }\r\n    }\r\n  \r\n    onRouteChanged(location) {\r\n    }\r\n    \r\n    render(){\r\n      const {intl,...props} = this.props\r\n      const {dict} = intl\r\n      //如果当前终端为移动端，判断是否存在移动端特殊语言包，如果有覆盖默认的语言包\r\n      if(isMobile){\r\n        for(let item in dict){\r\n          if(dict[item].mobile){\r\n            Object.assign(dict[item],dict[item].mobile)\r\n          }\r\n        }\r\n      }\r\n      return (\r\n      <Component {...props} dict={dict}/>\r\n      )\r\n    }\r\n  }\r\n  return inject('intl')(observer(WithLanguage)) ;\r\n}\r\n\r\nexport default withLanguage\r\n","import { Redirect } from \"react-router-dom\";\r\n\r\nexport default function IndexRoute(){\r\n  const url = window.location.href;\r\n  if(/^https?:\\/\\/(app|alphatest|testnet)/.test(url)) {\r\n    return  <Redirect to='/futures/pro'/> \r\n  } else if(/^https?:\\/\\/governance/.test(url)) {\r\n    return  <Redirect to='/governance'/> \r\n  } else if(/^https?:\\/\\/bridge/.test(url)) {\r\n    return  <Redirect to='/bridge'/> \r\n  } else if(/^https?:\\/\\/info/.test(url)) {\r\n    return <Redirect to='/info'/>\r\n  }\r\n  return <Redirect to='/index'/>\r\n}","import React from 'react';\r\nimport {Switch,Route,withRouter} from 'react-router-dom'\r\nimport LoadableComponent from '../utils/LoadableComponent';\r\nimport withLanguage from '../hoc/withLanguage';\r\nimport IndexRoute from '../components/IndexRoute/IndexRoute';\r\nimport Type from '../model/Type';\r\nimport { FUTURE, OPTION } from '../utils/Constants';\r\n\r\n\r\nconst Home = LoadableComponent(() => import('./Home/Home')) \r\nconst Pool = LoadableComponent(() => import('./Pool/Index')) \r\nconst PoolDetail = LoadableComponent(() => import('./Pool/Detail')) \r\nconst Trade = LoadableComponent(() => import('./Trade/Trade'))\r\nconst Bridge = LoadableComponent(() => import('./Bridge/Bridge'))\r\nconst Governance = LoadableComponent(() => import('./Governance/Governance'))\r\nconst Token = LoadableComponent(() => import('./Token/Token'))\r\nconst Info = LoadableComponent(() => import('./Info/Index'))\r\nconst InfoDetail = LoadableComponent(() => import('./Info/Detail'))\r\n\r\n\r\n@withRouter\r\n@withLanguage\r\nclass PageRouter extends React.Component{\r\n\r\n  render(){\r\n    const {dict} = this.props  \r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/index' component={() => <Home lang={dict['index']} />}></Route>\r\n        <Route exact path='/pool' component={() => <Pool lang={dict['pool']} />}></Route>\r\n        <Route exact path='/pool/:version/:chainId/:type/:address' component={() => <PoolDetail lang={dict['pool']}/>}/>\r\n        <Route exact path='/trade/futures' render={(props) => {\r\n          Type.setCurrent(FUTURE)\r\n          return <Trade lang={dict['trade']} />\r\n        }}/>\r\n        <Route exact path='/trade/options' render={props => {\r\n          Type.setCurrent(OPTION)\r\n          return <Trade lang={dict['trade']} />\r\n        }}/>\r\n        <Route exact path='/bridge' component={() => <Bridge lang={dict['bridge']} />}></Route>\r\n        <Route exact path='/governance' component={() => <Governance lang={dict['governance']} />}></Route>\r\n        <Route exact path='/token' component={() => <Token lang={dict['token']} />}></Route>\r\n        <Route exact path='/info' component={() => <Info lang={dict['token']} />}></Route>\r\n        <Route exact path='/info/:add/:catalog/:bToken/:network' component={() => <InfoDetail/>}/>\r\n        <Route exact path='/' render={() => <IndexRoute/>}/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\nexport default PageRouter","import Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport PageRouter from './pages/PageRouter';\r\nimport './app.less';\r\nimport './assets/css/fonts.less'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"deri-root\">\r\n      <Header></Header>\r\n      <PageRouter></PageRouter>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = 'en' //language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/index\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\nimport version from './Version'\r\nimport apiProxy from './ApiProxy'\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  defaultNw = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      defaultNw : observable,\r\n      setDefaultNw : action,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed,\r\n      supportOpen : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      if(version.isOpen){\r\n        await openConfigListCache.update()\r\n      }\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const data = await apiProxy.request('connectWallet')\r\n    return new Promise(async (resolve,reject) => {\r\n      if(data){\r\n        const {chainId,account} = data\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    if(version.isOpen){\r\n      await openConfigListCache.update()\r\n    }\r\n    const balance = await apiProxy.request('getUserWalletBalance',[chainId,account]).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  setDefaultNw(network){\r\n    this.defaultNw = network\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  isSupportChain(isOptions){\r\n    const chainId = this.detail.chainId\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    if(isOptions){\r\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\r\n    } else {\r\n      return this.supportChain\r\n    }\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation || !this.isConnected()\r\n  }\r\n\r\n  get supportOpen(){\r\n    return this.detail.supportOpen || !this.isConnected()\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport { equalIgnoreCase } from \"../utils/utils\";\r\nimport webSocket from \"./WebSocket\";\r\n\r\nclass Oracle {\r\n  symbol = null\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n  load(symbol,timeType = 'min'){    \r\n    if(this.symbol === null || (this.symbol !== symbol && this.timeType !== timeType)) {\r\n      webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\r\n        if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\r\n          this.setIndex(data.close)\r\n          for(const key of Object.keys(this.listeners)){\r\n            if(typeof this.listeners[key] === 'function'){\r\n              this.listeners[key](data)\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n  unsubscribeBars(symbol){\r\n    symbol && webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\r\n  }\r\n\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  clean(){\r\n    this.unsubscribeBars(this.symbol);\r\n    this.symbol = null\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos, DeriEnv} from \"../lib/web3js/index\"\r\nimport { eqInNumber, getDefaultNw } from '../utils/utils';\r\nimport type from \"./Type\";\r\nimport ApiProxy from \"./ApiProxy\";\r\n\r\nexport default class Position {\r\n\r\n   callback = () => {}\r\n   callbackALL = ()=>{}\r\n   wallet = null;\r\n   spec = null\r\n   counter = 0\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n    premiumFundingAccrued:'',\r\n    deltaFundingAccrued:'',\r\n    strikePrice:0,\r\n    timePrice:0,\r\n    volatility:0,\r\n    isCall:false,\r\n   }\r\n\r\n   async load(wallet,pool,callback){\r\n     this.wallet= wallet; \r\n     this.pool = pool\r\n     if(callback){\r\n      this.callback = callback\r\n     }\r\n     if(pool && pool.address){\r\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\r\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\r\n      const position = await ApiProxy.request('getPositionInfo',[chainId,pool.address,account,pool.selectedSymbol.symbolId])\r\n      if(position){\r\n        if(this.callback){\r\n          this.callback(position)\r\n        }\r\n      }\r\n      return position;\r\n     }\r\n   }\r\n\r\n   async loadAll(wallet,spec,callback){\r\n    this.wallet= wallet; \r\n    this.spec = spec\r\n    if(callback){\r\n      this.callbackALL = callback\r\n    }\r\n    if(spec && spec.pool){\r\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\r\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\r\n      let res  = await getPositionInfos(chainId,spec.pool,account,spec.symbolId)\r\n      let positions = [] \r\n      if(res.length) {\r\n        positions = res.map(item => {\r\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\r\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\r\n          return item\r\n        })\r\n      }\r\n      if(positions){\r\n        if(this.callbackALL){\r\n          this.callbackALL(positions)\r\n        }\r\n      }\r\n      return positions;\r\n    }\r\n   } \r\n\r\n   startAll(){\r\n    this.paused = false;\r\n    if(!this.started){\r\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\r\n    }\r\n    this.started = true\r\n  }\r\n\r\n   start(){   \r\n    this.paused = false;\r\n    if(!this.startedAll){\r\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\r\n    }\r\n    this.startedAll = true\r\n   }\r\n\r\n   runInAction(action){\r\n    this.timer = window.setTimeout(async () => {\r\n      if(!this.paused){\r\n        const position = await action();\r\n        if(position) {\r\n          this.runInAction(action);\r\n        }\r\n      }\r\n    },3000)\r\n   }\r\n\r\n   pause(){\r\n    this.paused = true\r\n   }\r\n\r\n   resume(){\r\n    this.clean();\r\n    this.start(this.callback)\r\n   }\r\n\r\n   clean(){\r\n     this.started = false;\r\n     this.startedAll = false;\r\n     this.paused = false;\r\n     this.timer = null;\r\n   }\r\n \r\n}","import { getSpecification, DeriEnv } from \"../lib/web3js/index\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\nimport type from \"./Type\";\r\nimport { getDefaultNw } from \"../utils/utils\";\r\nimport ApiProxy from \"./ApiProxy\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:[\"BUSD\"],\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    deltaFundingCoefficient:'0.2',\r\n    minInitialMarginRatio:0.1,\r\n    initialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    maintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    underlier :'',\r\n    strike:0,\r\n    optionType:'C',\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,pool){\r\n    if(pool){\r\n      const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\r\n      const spec = await ApiProxy.request('getSpecification',[chainId,pool.address,pool.symbolId]);\r\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\r\n      // if(type.isOption){\r\n      //   spec.underlier = this.getUnderlierStrike(spec).underlier\r\n      //   spec.strike = this.getUnderlierStrike(spec).strike\r\n      //   spec.optionType = this.getUnderlierStrike(spec).optionType\r\n      // }\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  getUnderlierStrike(spec){\r\n    let underlier = spec.symbol.split('-')[0]\r\n    let strike = spec.symbol.split('-')[1]\r\n    let optionType = spec.symbol.split('-')[2]\r\n    return {\r\n      underlier:underlier,\r\n      strike:strike,\r\n      optionType:optionType\r\n    }\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen || (version.isV2 && !Array.isArray(spec.bTokenSymbol))){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    return spec.bTokenSymbol;\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/index\";\r\nimport ApiProxy from \"./ApiProxy\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,pool,isOptions){\r\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && pool && pool.address){\r\n         const all = await ApiProxy.request('getTradeHistory',[wallet.detail.chainId,pool.pool,wallet.detail.account,pool.symbolId]); \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport { BSC_CHAINID, BSC_CHAINNAME, FUTURE, OPTION, VERSION_V2_OPEN, VERSION_V2, VERSION_V2_LITE } from '../utils/Constants'\r\nimport apiProxy from './ApiProxy'\r\nimport { isCakeLP, isSushiLP } from '../utils/utils'\r\nimport {bg} from '../lib/web3js/index'\r\nimport { FUTURE_INNO, FUTURE_OPEN } from \"../lib/web3js/shared\";\r\nconst columnMap = {\r\n  pool: 'address'\r\n}\r\nexport default class Pool {\r\n  chainId = ''\r\n  chain = ''\r\n  zone = ''\r\n  address = ''\r\n  version = ''\r\n  type = ''\r\n  isLp = ''\r\n  bTokenSymbol = ''\r\n  symbols = []\r\n  bTokens = []\r\n  decimals = 2\r\n  markpriceSymbolFormat = ''\r\n  currentSymbol  = null\r\n\r\n  constructor(data) {\r\n    makeObservable(this, {\r\n      chainId: observable,\r\n      chain: observable,\r\n      zone: observable,\r\n      address: observable,\r\n      symbols: observable,\r\n      bTokens: observable,\r\n      bTokenSymbol:observable,\r\n      isLp: observable,\r\n      decimals : observable,\r\n      markpriceSymbolFormat : observable,\r\n      currentSymbol : observable,\r\n      setCurrentSymbol : action,\r\n      setMarkpriceSymbolFormat : action,\r\n      selectedSymbol : computed,\r\n      isFuture : computed,\r\n      isOption : computed,\r\n      isInno : computed,\r\n      isOpen : computed\r\n    })\r\n    this.init(data)\r\n  }\r\n\r\n  init(data = {}) {\r\n    const keys = Object.keys(data);\r\n    for (const k in keys) {\r\n      const name = columnMap[keys[k]] ? columnMap[keys[k]] : keys[k];\r\n      if (this.hasOwnProperty(name) && data[keys[k]]) {\r\n        // const attr = name.replace(/^\\S/, s => s.toUpperCase())\r\n        // const method = `set${attr}`        \r\n        // this[method](data[name])\r\n        this[name] = data[keys[k]]\r\n      }\r\n    }\r\n  }\r\n\r\n  async getPoolInfo(wallet, pool) {\r\n    let params = [pool.chainId, pool.address]\r\n    let apyInfo = await apiProxy.request('getPoolInfoApy', params);\r\n    let liq = await apiProxy.request('getPoolLiquidity', params);\r\n    const detail = {\r\n      liquidity: liq.totalValue || liq.totalLiquidity,\r\n      apy: ((+apyInfo.maxApy) * 100).toFixed(2),\r\n      bTokensApy: apyInfo.bTokens,\r\n      bTokensLiq:liq.bTokens,\r\n      staked: false,\r\n    }\r\n    if (pool.isLp) {\r\n      let lpApy = await apiProxy.request('getLpPoolInfoApy', params)\r\n      const apy = ((+lpApy.apy2) * 100).toFixed(2);\r\n      detail['lpApy'] = apy\r\n      detail['isCakeLP'] = isCakeLP(pool.address)\r\n      detail['isSushiLP'] = isSushiLP(pool.address)\r\n    }\r\n    return detail\r\n  }\r\n\r\n  async getLiquidityInfo(wallet, address, version, isLp, bTokenId) {\r\n    let params = [wallet.detail.chainId, address, wallet.detail.account, bTokenId]\r\n    let info = null;\r\n    let res;\r\n    if (isLp) {\r\n      res = await apiProxy.request('getLpLiquidityInfo', params)\r\n    } else {\r\n      res = await apiProxy.request('getLiquidityInfo', params)\r\n    }\r\n    const shares = res.shares ? bg(res.shares) : bg(0)\r\n    if (['clp','slp','v1','v2_lite','v2_lite_open','option'].includes(version)) {\r\n      const total = shares.isNaN() ? bg(0) : shares.multipliedBy(res.shareValue) \r\n      info = {\r\n        total: res.poolLiquidity,\r\n        shareValue: res.shareValue,\r\n        percent: res.poolLiquidity > 0 ? total.dividedBy(res.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\r\n        shares: shares.toFixed(2),\r\n        formatShares: shares.toFixed(2),\r\n        totalShares: bg(shares).toString(),\r\n        values: total.toFixed(4),\r\n      }\r\n    } else {\r\n      info = {\r\n        total: res.poolLiquidity,\r\n        pnl: (+res.pnl).toFixed(2),\r\n        swappedPnl: (+res.swappedPnl).toFixed(2),\r\n        percent: res.poolLiquidity > 0 ? shares.dividedBy(res.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\r\n        shares: shares.toFixed(2),\r\n        formatShares: shares.toFixed(2),\r\n        totalShares: bg(shares).toString(),\r\n      }\r\n    }\r\n    return info\r\n  }\r\n\r\n  setChainId(chainId) {\r\n    this.chainId = chainId;\r\n  }\r\n\r\n  setChain(chain) {\r\n    this.chain = chain\r\n  }\r\n\r\n  setZone(zone) {\r\n    this.zone = zone;\r\n  }\r\n\r\n  setAdress(address) {\r\n    this.address = address;\r\n  }\r\n\r\n  setType(type) {\r\n    this.type = type\r\n  }\r\n\r\n  setSymbols(symbols) {\r\n    this.symbols = symbols\r\n  }\r\n\r\n  setBaseToken(baseToken) {\r\n    this.baseToken = baseToken\r\n  }\r\n\r\n  setCurrentSymbol(symbol){\r\n    this.currentSymbol = symbol\r\n  }\r\n\r\n\r\n  setMarkpriceSymbolFormat(markpriceSymbolFormat){\r\n    this.markpriceSymbolFormat = markpriceSymbolFormat\r\n  }\r\n\r\n  setDecimals(decimals){\r\n    this.decimals = decimals\r\n  }\r\n\r\n  get selectedSymbol(){\r\n    if(this.currentSymbol){\r\n      return this.currentSymbol\r\n    } else {\r\n      return this.symbols.length > 0 ? this.symbols[0] : {}\r\n    }\r\n  }\r\n\r\n  get isFuture(){\r\n    return this.type === VERSION_V2;\r\n  }\r\n\r\n  get isOption(){\r\n    return this.type === OPTION;\r\n  }\r\n\r\n  get isInno(){\r\n    return this.version === VERSION_V2_LITE\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.version === VERSION_V2_OPEN\r\n  }\r\n\r\n  \r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Pool from './Pool'\r\nimport apiProxy from './ApiProxy'\r\nimport { FUTURE, FUTURE_INNO, OPTION,FUTURE_OPEN } from \"../lib/web3js/shared\";\r\nexport default class PoolManager {\r\n  pools = []\r\n  lpPools = []\r\n  constructor(){\r\n    makeObservable(this,{\r\n      pools : observable,\r\n      setPools : action,\r\n      setLpPools : action,\r\n      v2Pools : computed,\r\n      innoPools : computed,\r\n      openPools : computed,\r\n      optionsPools : computed,\r\n      ammPools : computed,\r\n      futurePools : computed\r\n    })      \r\n  }\r\n\r\n  async load(){\r\n    const pools = await apiProxy.request('getPoolConfigList');\r\n    this.loadDoubleMingingPool()\r\n    const mapPools = pools.map(pool => new Pool(pool))\r\n    this.setPools(mapPools)\r\n    return mapPools;\r\n  }\r\n\r\n  async loadByType(type){\r\n    const pools = await apiProxy.request('getPoolConfigList');\r\n    return pools.filter(p => p.type === type).map(pool => new Pool(pool))\r\n  }\r\n\r\n  async loadDoubleMingingPool(){\r\n    const pools = await apiProxy.request('getLpConfigList');\r\n    const mapPools = pools.map(pool => new Pool(pool))\r\n    this.setLpPools(mapPools)\r\n    return mapPools;\r\n  }\r\n\r\n  setPools(pools){\r\n    this.pools = pools;\r\n  }\r\n  setLpPools(pools){\r\n    this.lpPools = pools\r\n  } \r\n\r\n  get ammPools(){\r\n    return this.pools.filter(p => p.type === 'option' || p.type === 'future')\r\n  }\r\n\r\n  get v2Pools(){\r\n    return this.pools.filter(p => p.version === FUTURE)\r\n  }\r\n\r\n  get innoPools(){\r\n    return this.pools.filter(p => p.version === FUTURE_INNO)\r\n  }\r\n\r\n  get optionsPools(){\r\n    return this.pools.filter(p => p.version === OPTION)\r\n  }\r\n  \r\n  get openPools(){\r\n    return this.pools.filter(p => p.version === FUTURE_OPEN)\r\n  }\r\n\r\n  get futurePools(){\r\n    return this.pools.filter(p => p.type === 'future')\r\n  }\r\n\r\n  \r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol, getMarkpriceSymbol, getDefaultNw } from \"../utils/utils\";\r\nimport { getFundingRate, priceCache, DeriEnv, getVolatility, sortOptionSymbols } from \"../lib/web3js/index\";\r\nimport { bg } from \"../lib/web3js/index\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\nimport type from './Type'\r\nimport Type from \"./Type\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport ApiProxy from \"./ApiProxy\";\r\nimport Pool from \"./Pool\";\r\nimport { OPTION, FUTURE } from \"../utils/Constants\";\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  type = null;\r\n  index = ''\r\n  markPrice = ''\r\n  volume = ''\r\n  priceDecimals = 2\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  positions = []\r\n  contract = {}\r\n  fundingRate = {}\r\n  volatility = ''\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n  optionsConfigs = {}\r\n  pools = []\r\n  pool = {}\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      index: observable,\r\n      markPrice: observable,\r\n      volume: observable,\r\n      slideIncrementMargin: observable,\r\n      fundingRate: observable,\r\n      volatility: observable,\r\n      position: observable,\r\n      positions: observable,\r\n      history: observable,\r\n      contract: observable,\r\n      priceDecimals: observable,\r\n      userSelectedDirection: observable,\r\n      supportChain: observable,\r\n      pools : observable,\r\n      pool : observable,\r\n      setWallet: action,\r\n      // setOptionConfigs: action,\r\n      setPriceDecimals: action,\r\n      setIndex: action,\r\n      setMarkPrice: action,\r\n      setContract: action,\r\n      setPosition: action,\r\n      setPositions: action,\r\n      setVolume: action,\r\n      setUserSelectedDirection: action,\r\n      setFundingRate: action,\r\n      setVolatility: action,\r\n      setHistory: action,\r\n      setSlideMargin: action,\r\n      amount: computed,\r\n      fundingRateTip: computed,\r\n      optionFundingRateTip: computed,\r\n      initialMarginRatioTip: computed,\r\n      maintenanceMarginRatioTip: computed,\r\n      TransactionFeeTip: computed,\r\n      dpmmFundingRateTip: computed,\r\n      fundingCoefficientTip: computed,\r\n      rateTip: computed,\r\n      multiplierTip: computed,\r\n      TotalNetPositionTip: computed,\r\n      direction: computed,\r\n      volumeDisplay: computed,\r\n      isNegative: computed,\r\n      isPositive: computed,\r\n      symbols : computed\r\n    })\r\n    this.indexOracle = new Oracle();\r\n    this.markOracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History();\r\n    this.poolManager = new PoolManager();\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet, finishedCallback) {\r\n    const isOption = Type.isOption\r\n    const type = isOption ? OPTION : FUTURE\r\n    const pools = await this.poolManager.loadByType(type);\r\n    if (wallet.isConnected()) {\r\n      this.setWallet(wallet);\r\n      this.setPools(pools.filter(p => eqInNumber(wallet.detail.chainId,p.chainId)))\r\n      const defaultPool = this.pools.length > 0 ? this.pools[0] : new Pool()\r\n      this.setPool(defaultPool);\r\n    } else if (!wallet.isConnected() || !wallet.supportWeb3()) {\r\n      this.setPools(pools.filter(p => eqInNumber(getDefaultNw(DeriEnv.get()).id,p.chainId)))\r\n      const defaultPool = this.pools.length > 0 ? this.pools[0] : new Pool()\r\n      this.setPool(defaultPool)\r\n    }\r\n    this.loadByPool(this.wallet, this.pool, true, finishedCallback, isOption)\r\n  }\r\n\r\n  async onSymbolChange(spec, finishedCallback, isOption) {\r\n    const pool = this.pools.find(pool => pool.address === spec.pool && pool.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.address !== this.pool.address : spec.symbolId !== this.pool.symbolId\r\n    this.onChange(pool, changed, finishedCallback, isOption)\r\n  }\r\n\r\n  async onChange(pool, changed, finishedCallback, isOption) {\r\n    if (pool) {\r\n      this.clean();\r\n      this.setPool(pool)\r\n      this.loadByPool(this.wallet, pool, changed, finishedCallback, isOption);\r\n      if (changed) {\r\n        this.store(pool)\r\n      }\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  async loadByPool(wallet, pool, symbolChanged, finishedCallback, isOption) {\r\n    //切换指数\r\n    if (symbolChanged && pool) {\r\n      this.indexOracle.addListener('indexPrice', data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      this.markOracle.addListener('markPrice',data => {\r\n        this.setMarkPrice(data.close)\r\n      })\r\n    }\r\n    if (pool) {\r\n      Promise.all([\r\n        this.positionInfo.load(wallet, pool, position => {\r\n          this.setPosition(position)\r\n          this.syncFundingRate(wallet, pool, isOption)\r\n          type.isOption && this.syncVolatility(wallet, pool);\r\n        }),\r\n        this.contractInfo.load(wallet, pool, isOption),\r\n        this.loadFundingRate(wallet, pool, isOption),\r\n        this.positionInfo.loadAll(wallet, pool, positions => this.setPositions(positions)),\r\n      ]).then(results => {\r\n        if (results.length === 4) {\r\n          if(results[0]) {\r\n            this.setIndex(results[0].price)\r\n            this.setMarkPrice(results[0].markPrice);\r\n            this.setPosition(results[0]);\r\n          }\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setPositions(results[3]);\r\n        }\r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n        // this.indexOracle.load(getFormatSymbol(pool.symbol.split('-')[0]))\r\n        // this.markOracle.load(getFormatSymbol(pool.markpriceSymbolFormat || `${pool.symbol}-MARKPRICE`))\r\n        this.positionInfo.start()\r\n        this.positionInfo.startAll();\r\n        this.resume();\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n    const histories = await this.historyInfo.load(wallet, pool, isOption)\r\n    this.setHistory(histories);\r\n  }\r\n\r\n  refreshCache() {\r\n    const pool  = this.pool;\r\n    const symbol = type.isOption ? pool.symbol.split('-')[0] : pool.symbol\r\n    priceCache.clear();\r\n    priceCache.update(pool, symbol)\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [], wallet) {\r\n    let defaultConfig = null;\r\n    if (configs.length > 0) {\r\n      const fromStore = this.getFromStore();\r\n      if (fromStore && eqInNumber(wallet.detail.chainId, fromStore.chainId)) {\r\n        defaultConfig = fromStore;\r\n      }\r\n      if (defaultConfig) {\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if (pos === -1) {\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }\r\n    }\r\n    return defaultConfig;\r\n  }\r\n\r\n  //存起来\r\n  store(config) {\r\n    storeConfig(version.current, config)\r\n  }\r\n\r\n  getFromStore() {\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate() {\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet, this.pool)\r\n    if (fundingRate) {\r\n      this.setFundingRate(fundingRate)\r\n    }\r\n  }\r\n\r\n  async syncVolatility(wallet, pool) {\r\n    const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\r\n    if (pool) {\r\n      const volatility = await ApiProxy.request('getVolatility',[chainId, pool.address, pool.symbolId]);\r\n      this.setVolatility(volatility)\r\n    }\r\n  }\r\n\r\n  async refresh() {\r\n    this.pause()\r\n    this.positionInfo.load(this.wallet, this.pool, position => {\r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n      type.isOption && this.syncVolatility(this.wallet, this.pool);\r\n    });\r\n    this.positionInfo.loadAll(this.wallet, this.pool, positions => this.setPositions(positions))\r\n    this.syncFundingRate();\r\n    type.isOption && this.syncVolatility(this.wallet, this.pool);\r\n    this.wallet && this.wallet.isConnected() && this.wallet.loadWalletBalance(this.wallet.detail.chainId, this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet, this.pool)\r\n    if (history) {\r\n      this.setHistory(history)\r\n    }\r\n    this.positionInfo.start();\r\n    this.positionInfo.startAll();\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause() {\r\n    this.setPaused(true)\r\n    this.indexOracle.pause();\r\n    this.markOracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume() {\r\n    this.setPaused(false)\r\n    this.indexOracle.resume();\r\n    this.markOracle.resume();\r\n    this.positionInfo.resume();\r\n  }\r\n\r\n  setWallet(wallet) {\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setPools(pools){\r\n    // if (type.isOption) {\r\n    //   this.setOptionConfigs(pools)\r\n    // }\r\n    this.pools = pools;\r\n  }\r\n\r\n  // setOptionConfigs(configs) {\r\n  //   this.optionsConfigs = this.groupConfigBySymbol(configs)\r\n  // }\r\n\r\n  groupConfigBySymbol(symbols = []) {\r\n    return symbols.reduce((total, config) => {\r\n      const symbol = config.symbol.split('-')[0]\r\n      if (!total[symbol]) {\r\n        total[symbol] = []\r\n      }\r\n      total[symbol].push(config)\r\n      return total;\r\n    }, [])\r\n  }\r\n\r\n  setPool(pool){\r\n    if (type.isFuture && (version.isV2 || version.isV2Lite)) {\r\n      pool.setMarkpriceSymbolFormat(getMarkpriceSymbol(pool))\r\n    } else if(type.isOption){\r\n      pool.setMarkpriceSymbolFormat(getMarkpriceSymbol(pool))\r\n    }\r\n    this.setPriceDecimals(pool)\r\n    this.pool = pool\r\n  }\r\n\r\n  setPriceDecimals(pool) {\r\n    if (pool && pool.decimals) {\r\n      this.priceDecimals = pool.decimals\r\n    } else {\r\n      this.priceDecimals = 2\r\n    }\r\n  }\r\n\r\n  setIndex(index) {\r\n    this.index = index;\r\n  }\r\n\r\n  setMarkPrice(markPrice) {\r\n    this.markPrice = markPrice;\r\n  }\r\n\r\n  setPosition(position) {\r\n    if (position) {\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setPositions(positions) {\r\n    if (positions) {\r\n      this.positions = positions\r\n    }\r\n  }\r\n\r\n  setContract(contract) {\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history) {\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate) {\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolatility(volatility) {\r\n    this.volatility = volatility\r\n  }\r\n\r\n  setVolume(volume) {\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused) {\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction) {\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin) {\r\n    if (slideIncrementMargin !== '') {\r\n      this.slideIncrementMargin = slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\r\n      let volume = bg(increment).div(bg(bg(price).times(bg(this.contract.multiplier).times(bg(MarginRatio))))).toString()\r\n      volume = +volume * +this.contract.multiplier\r\n      let multiplier = this.contract.multiplier\r\n      if (multiplier <= 1) {\r\n        let index = this.contract.multiplier.indexOf('.')\r\n        let num = this.contract.multiplier.slice(index);\r\n        let length = num.length\r\n        let value = volume.toString()\r\n        if (value.indexOf(\".\") !== -1) {\r\n          value = value.substring(0, value.indexOf(\".\") + length)\r\n        }\r\n        this.setVolume(value)\r\n      } else {\r\n        let length = multiplier.length - 1\r\n        let value = parseInt(volume).toString()\r\n        let num = value.slice(-length);\r\n        value = value.slice(0, -length)\r\n        num = num.replace(/\\d/gi, '0')\r\n        value = value + num\r\n        this.setVolume(value)\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  clean() {\r\n    this.pause();\r\n    this.indexOracle.clean();\r\n    this.markOracle.clean();\r\n    this.positionInfo.clean();\r\n    this.version = null;\r\n    this.pool = null;\r\n    this.markPrice = ''\r\n    this.index = ''\r\n    this.volume = ''\r\n    this.fundingRate = {}\r\n    this.volatility = ''\r\n    this.position = {}\r\n    this.positions = []\r\n    this.contract = {}\r\n    this.history = []\r\n    this.userSelectedDirection = 'long'\r\n  }\r\n\r\n  get volumeDisplay() {\r\n    if ((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume)) || this.volume === '' || this.volume === '-' || this.volume === 'e') {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n\r\n\r\n  get amount() {\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\r\n    let optionVolume = (+initVolume / +this.contract.multiplier);\r\n    const volume = optionVolume\r\n    let { margin, marginHeldBySymbol: currentSymbolMarginHeld, marginHeld, unrealizedPnl } = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld = type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld);\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if ((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')) {\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if (totalMarginHeld.lt(otherMarginHeld)) {\r\n        totalMarginHeld = otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())\r\n      }\r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if (currentSymbolMarginHeld) {\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);\r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if (currentSymbolMarginHeld) {\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) + (+position.volume))\r\n    const totalContractValue = (+totalVolume) * price\r\n    const curContractValue = (+this.volumeDisplay) * price\r\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\r\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume: this.volume,\r\n      dynBalance: dynBalance,\r\n      margin: totalMarginHeld,\r\n      available: available,\r\n      exchanged: exchanged,\r\n      currentSymbolMarginHeld: currentSymbolMarginHeld,\r\n      leverage: leverage,\r\n      afterLeverage: afterLeverage\r\n    }\r\n  }\r\n\r\n  get direction() {\r\n    // 正仓\r\n    if (this.margin !== '') {\r\n      if ((+this.position.volume) > 0) {\r\n        if (Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if ((+this.position.volume) < 0) {\r\n        //负仓\r\n        if ((+this.volume) > Math.abs(+this.position.volume)) {\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive() {\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative() {\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet, pool, isOption) {\r\n    if (pool) {\r\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\r\n      if (pool) {\r\n        const res = await ApiProxy.request('getFundingRate',[chainId, pool.address, pool.symbolId]).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip() {\r\n    if (version && version.isV2) {\r\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.pool) {\r\n        if (Intl.locale === 'zh') {\r\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n            `\\n ${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.pool.bTokenSymbol}`\r\n        } else {\r\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-block')}`\r\n        }\r\n\r\n      }\r\n    } else {\r\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.pool) {\r\n        if (Intl.locale === 'zh') {\r\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n            `\\n${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.pool.bTokenSymbol} `\r\n        } else {\r\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-block')})`\r\n        }\r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get optionFundingRateTip() {\r\n    if (this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.pool) {\r\n      if (Intl.locale === 'zh') {\r\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.pool.bTokenSymbol} `\r\n      } else {\r\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\r\n      }\r\n    }\r\n    return ''\r\n  }\r\n  get dpmmFundingRateTip() {\r\n    if (this.fundingRate && this.fundingRate.fundingPerSecond && this.pool) {\r\n      if (Intl.locale === 'zh') {\r\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.pool.bTokenSymbol} `\r\n      } else {\r\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get rateTip() {\r\n    if (this.fundingRate && this.fundingRate.funding0 && this.markPrice) {\r\n      return `${Intl.get('lite', 'rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.markPrice)).times(bg(100)).toString()}% ${Intl.get('lite', 'rate-hover-two')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get fundingCoefficientTip() {\r\n    if (this.contract && this.contract.fundingRateCoefficient && this.pool.unit) {\r\n      if (Intl.locale === 'zh') {\r\n        return `1${this.pool.unit} ${Intl.get('lite', 'funding-coefficient-hove-one')} ${Intl.get('lite', 'funding-coefficient-hove-two')}${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\r\n      `\r\n      } else {\r\n        return `${Intl.get('lite', 'funding-coefficient-hove-one')} ${this.pool.unit} ${Intl.get('lite', 'funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\r\n      `\r\n      }\r\n\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get initialMarginRatioTip() {\r\n    if (this.contract && this.contract.initialMarginRatioOrigin) {\r\n      return `${Intl.get('lite', 'in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\r\n        `\\n${Intl.get('lite', 'out-of-money-initial')} = ${Intl.get('lite', 'in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\r\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n  get maintenanceMarginRatioTip() {\r\n    if (this.contract && this.contract.maintenanceMarginRatioOrigin) {\r\n      return `${Intl.get('lite', 'in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\r\n        `\\n${Intl.get('lite', 'out-of-money-maintenance')} = ${Intl.get('lite', 'in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\r\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get multiplierTip() {\r\n    if (this.contract && this.pool) {\r\n      return `${Intl.get('lite', 'the-notional-value-of')} ${this.contract.multiplier}${this.pool.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get TransactionFeeTip() {\r\n    if (this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)) {\r\n      return `${Intl.get('lite', 'transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite', 'price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\r\n        `\\n ${Intl.get('lite', 'transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\r\n    }\r\n    return ''\r\n  }\r\n  get TotalNetPositionTip() {\r\n    if (this.contract && this.fundingRate.tradersNetVolume && this.pool) {\r\n      return `${Intl.get('lite', 'notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.pool.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get symbols(){\r\n    const s = this.pools.reduce((total,pool) => {\r\n      const target = pool.symbols.map(s => {\r\n        s.version = pool.version\r\n        const tokenInfo = pool.bTokens.length > 0 ? pool.bTokens[0] : {}\r\n        s.symbolDisplay = pool.isOpen || pool.isInno ? `${s.symbol}/${tokenInfo.bTokenSymbol}` : s.symbol\r\n        return s;\r\n      })\r\n      return total.concat(target)\r\n    },[])\r\n    if(Type.isOption){\r\n      const optionSymbols = sortOptionSymbols(s);\r\n      return this.groupConfigBySymbol(optionSymbols);\r\n    }\r\n    return s;\r\n  }\r\n\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'mobx-react';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { DeriEnv } from './lib/web3js/index';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport PoolManager from './model/PoolManager';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\nimport type from './model/Type';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading();\r\nconst poolManager = new PoolManager();\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('testnet')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet} poolManager={poolManager} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bi  t.ly/CRA-vitals\r\nreportWebVitals();\r\n","// version definination\r\nexport const FUTURE ='v2'\r\nexport const FUTURE_INNO ='v2_lite'\r\nexport const FUTURE_OPEN ='v2_lite_open'\r\nexport const OPTION = 'option'\r\n\r\n// pool type\r\nexport const PoolType = {\r\n  FUTURE: 'future',\r\n  OPTION: 'option',\r\n  LP: 'lp', // for external pool, such as clp of pancake\r\n};\r\nObject.freeze(PoolType);\r\n\r\n// todo: lite version, will remove later\r\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\r\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\r\n\r\n// version\r\nexport const VERSIONS_RETIRED = ['v1'];\r\nexport const VERSIONS = [FUTURE, FUTURE_INNO, FUTURE_OPEN, OPTION];\r\nexport const VERSION_IDS = [...VERSIONS, 'v2_dpmm', 'v2_lite_dpmm'];\r\nexport const VERSIONS_ALL = [...VERSIONS_RETIRED, ...VERSIONS];\r\nexport const VERSION_IDS_ALL = [...VERSIONS_RETIRED, ...VERSION_IDS];\r\n\r\n// for oracle use\r\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\r\n\r\nconst VERSIONS_TYPE_HASH = {\r\n  v1: 'future',\r\n  v2: 'future',\r\n  v2_lite: 'future',\r\n  v2_lite_open: 'future',\r\n  option: 'option',\r\n};\r\n\r\nexport const getConfigType = (version) => {\r\n  if (Object.keys(VERSIONS_TYPE_HASH).includes(version)) {\r\n    return VERSIONS_TYPE_HASH[version];\r\n  }\r\n  throw new Error(`invalid pool version'${version}'`);\r\n};\r\n\r\nexport const getConfigZone = (version) => {\r\n  if (['v2'].includes(version)) {\r\n    return 'main';\r\n  } else if (['v2_lite'].includes(version)) {\r\n    return 'inno';\r\n  } else if (['v2_lite_open'].includes(version)) {\r\n    return 'open';\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n","import { AppError } from \"../error/error\";\r\n\r\n// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const chainIdNamePairs = {\r\n  // 1: 'ethereum',\r\n  // 3: 'ropsten',\r\n  // //'42': 'kovan',\r\n  // 56: 'bsc',\r\n  // 97: 'bsctestnet',\r\n  // 128: 'heco',\r\n  // 137: 'matic',\r\n  // 256: 'hecotestnet',\r\n  // 80001: 'mumbai',\r\n  'ethereum': '1',\r\n  'ropsten': '3',\r\n  //'42': 'kovan',\r\n  'bsc': '56',\r\n  'bsctestnet': '97',\r\n  'heco': '128',\r\n  'hecotestnet': '256',\r\n  'matic': '137',\r\n  'mumbai': '80001',\r\n};\r\n\r\nexport const getChainIds = () => {\r\n  return Object.values(chainIdNamePairs);\r\n  //return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nconst infuraAccount = \"ec73e2f0c79a42c0997ee535364de584\"\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        `https://mainnet.infura.io/v3/${infuraAccount}`,\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://polygon-rpc.com',\r\n        // 'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        // 'https://rpc-mainnet.matic.quiknode.pro',\r\n        // 'https://matic-mainnet.chainstacklabs.com',\r\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        `https://ropsten.infura.io/v3/${infuraAccount}`,\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        `https://kovan.infura.io/v3/${infuraAccount}`,\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.find((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res) {\r\n    return res.provider_urls\r\n  }\r\n  throw new AppError('CONFIG_NOT_FOUND', {\r\n    name: 'getChainProviderUrls',\r\n    args: [chainId],\r\n  });\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  let pending = {}\r\n  let walletChainId = null\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        //console.log('hit web3 cache')\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // for mining page should not depends wallet network\r\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\r\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\r\n      }\r\n      // using metaMask ethereum object\r\n      if (\r\n        isBrowser() &&\r\n        !isJsDom() &&\r\n        typeof window.ethereum === 'object' &&\r\n        walletChainId &&\r\n        chainId === walletChainId.toString()\r\n      ) {\r\n        //console.log('new ethereum web3 cache')\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else {\r\n        if (pending[chainId]) {\r\n          // wait for init\r\n          let retry = 8\r\n          while (retry > 0) {\r\n            await delay(500)\r\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n              // console.log('hit web3 cache')\r\n              return web3InstanceMap[chainId];\r\n            } else {\r\n              retry -= 1\r\n            }\r\n          }\r\n          // timeout\r\n          const providerUrl = await getChainProviderUrl(chainId);\r\n          //console.log('new web3 cache')\r\n          web3InstanceMap[chainId] = new Web3(\r\n            new Web3.providers.HttpProvider(providerUrl)\r\n          );\r\n          return web3InstanceMap[chainId];\r\n        } else {\r\n          // first init\r\n          pending[chainId] = true\r\n          try {\r\n            const providerUrl = await getChainProviderUrl(chainId);\r\n            //console.log('new web3 cache')\r\n            web3InstanceMap[chainId] = new Web3(\r\n              new Web3.providers.HttpProvider(providerUrl)\r\n            );\r\n          } catch(err) {\r\n            console.log(err.toString())\r\n          } finally {\r\n            delete pending[chainId]\r\n          }\r\n          return web3InstanceMap[chainId];\r\n        }\r\n      }\r\n    },\r\n  };\r\n})();","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24\r\n\r\n// debug, for logger print\r\nexport const DEBUG = false\r\n\r\n// for cache\r\nexport const OPEN_POOL_EXPIRE_TIME = 30\r\nexport const JSON_RPC_CALL_RETRY = 3\r\nexport const REST_API_CALL_RETRY = 2","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */"],"sourceRoot":""}