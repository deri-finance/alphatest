{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/factory/pool.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/WebSocket.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","model/Intl.js","model/Type.js","model/Version.js","utils/utils.js","model/Config.js","lib/web3js/shared/utils/convert.js","../lang).)*/.json$","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","DeriEnv","_deriEnv","get","set","value","Error","VERSIONS","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","PRESERVED_SYMBOLS","getChainProviderUrls","chainId","res","provider_urls","filter","i","length","MAX_UINT256","MAX_INT256","getDBAddress","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getJsonConfig","version","configs","jsonConfig","JSON","parse","includes","normalizeChainId","chainIds","toString","normalizeAddress","address","startsWith","Web3","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","keys","Object","forEach","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","retired","getLpConfigList","type","getMiningVaultRouterConfig","filteredConfig","MiningVaultRouter","getPreminingConfigList","staking","url","isInTvlRace","premining","getLpConfig","poolAddress","c","p","bTokenAddress","lTokenAddress","console","log","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getMiningVaultConfig","pools","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","key","deepClone","obj","clone","assign","from","shuffleArray","urls","newUrls","index","Math","floor","random","splice","getBlockNumber","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","slice","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","getChainProviderUrl","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","delay","ms","resolve","setTimeout","web3Factory","web3InstanceMap","pending","window","ethereum","request","method","walletChainId","isBrowser","isJsDom","retry","providerUrl","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","events","amount","toBlock","es","e","getHttpBase","fetchJson","fetch","resp","json","fetchRestApi","path","opts","catchApiError","func","methodName","defaultValue","catchTxApiError","result","success","transaction","error","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","normalizeOptionSymbol","optionSymbol","split","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","map","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","indexOf","normalizeSymbolUnit","re","RegExp","join","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","symbolId","v2_lite_open","config","option","poolValidator","getOracleConfigList","oracle","MAX_GAS_AMOUNT","RE_ERROR_MSG","ContractBase","contractAddress","contractAbi","this","Contract","_init","methods","call","accountAddress","gas","estimateGas","match","trim","tx","self","_transactionReceipt","reject","getTransactionReceipt","receipt","status","errorMessage","_estimatedGas","txRaw","numberToHex","data","encodeABI","params","_getTransactionReceipt","CONTRACT_ABI","DatabaseContract","keyArray","_call","DatabaseWormholeContract","DatabaseAirdropContract","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","BToken","_balanceOf","decimals","bg","deriToNatural","allowance","gt","_transact","WrappedOracle","constructor","decimal","super","BrokerManager","brokerAddress","PTokenAirdrop","getPriceInfoForV1","async","baseUrl","addSymbolParam","priceInfo","mode","cache","ok","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","price","volatility","mapToBTokenInternal","getOraclePriceFromCache","timestamp","getOraclePrice","getPriceInfos","headers","body","symbolList","filteredByChainId","getOracleConfig","oracleFactory","getPrice","getOraclePricesForOption","oracleSymbols","oracleSymbolPrices","acc","toWei","getOracleVolatilityForOption","volSymbols","volatilities","getOracleVolatilitiesForOption","oracleSymbolVolatilities","instanceMap","RestOracle","wrappedOracleFactory","databaseFactory","databaseInstanceMap","database","databaseWormholeFactory","databaseAirdropFactory","bTokenFactory","DeriContract","MiningVaultPool","WormholeContract","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","v","r","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","hexToNumber","getUserWalletBalance","walletAddress","getBalance","balance","fromWei","getUserInfo","userAddress","db","getValues","catch","err","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","processAsset","pnl","lastCumulativePnl","processPosition","volume","cost","lastCumulativeFundingRate","perpetualPoolFactory","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenId","swapperAddress","oracleAddress","discount","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","getStorageAt","_calculateFee","abs","times","perpetualPoolRouterFactory","isMaximum","priceInfos","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getBrokerConfig","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","getSlpLiquidityInfo","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","message","POOL_ABI","PerpetualPool","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","fundingRatePerBlock","liquidityUsed","stateValues","getStateValues","parameters","args1","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getClpLiquidityInfo","totalSupply","maxRemovableShares","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","getPoolV2LiteManagerConfig","prod","dev","find","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","owner","operator","perpetualPoolLiteFactory","updateAddresses","symbolIds","getActiveSymbolIds","getSymbol","block_number","extraInfo","getBTokenSymbol","getSymbols","getPoolExtraInfo","perpetualPoolLiteViewerFactory","perpetualPoolLiteManagerFactory","poolId","pairedTokenAddress","getPoolOpenConfigList","openPoolChainIds","poolManagerAddress","poolManager","poolNums","getNumPools","numsArray","addresses","id","getConfig","getPoolOpenOracleList","o","isPoolController","controller","perpetualPoolLite","poolController","getPoolAllSymbolNames","viewerAddress","getPoolViewerConfig","poolViewer","getOffChainOracleSymbols","openConfigListCache","oldData","updatedAt","getPoolConfigList","bTokens","router","isOption","flat","expandPoolConfigV2","offchainSymbolIds","offchainSymbols","expandPoolConfigV2Lite","isOpen","expandPoolConfigV2LiteOpen","volatilitySymbols","expandPoolConfigOption","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","_getPoolConfig","defaultBToken","defaultSymbol","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","viewers","getBrokerConfigList","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","liquidateHistoryOnline","getSpecification","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","perpetualPoolRouter","validation","_prices","symbolInfo","bTokenDiscounts","bTokenMultiplier","indexConstituents","symbolConfigList","positionInfo","margins","positions","latestPrice","getLastUpdatedBlockNumber","getPosition","getMargins","getPositions","symbolPrices","marginHeldBySymbol","unrealizedPnlList","fundingFee","_getFundingRate","promiseList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","getTradeHistory","lTokenLiteAbi","PerpetualPoolLiteViewer","PerpetualPoolLite","viewer","activeSymbolIds","isEqualSet","Set","activeSymbols","prices","_updateOffchainSymbols","_getSymbolPrices","LTokenLite","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","getLastUpdateBlock","getMargin","priceIndex","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","newTimeValue","newDelta","premiumFundingPeriod","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","deleteIndexedKey","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","lastCumulativePremiumFundingRate","volatilitiesCache","everlastingOptionFactory","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","symbolIndex","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","symbolStr","volPrice","getTraderStates","timePrice","markPrice","dpmmPrice","oS","premiumFundingAccrued","fundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicPrice","premiumFunding0","getEstimatedTimePrice","intrinsicValue","toNumber","tradeCost","tr","createPool","newParameters","addSymbol","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosPosition","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","WebSocket","socket","io","transports","withCredentials","event","emit","onMessage","listener","time_type","equalIgnoreCase","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","locale","onClose","inject","observer","data-title","require","lang","page","toLowerCase","test","pageName","Intl","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","current","makeAutoObservable","setCurrent","isFuture","Version","isV1","isV2","isV2Lite","base","BigNumber","repeat","formatAddress","formatBalance","toFixed","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","hasParam","param","urlString","href","URL","searchParams","has","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","Config","setAll","isOptions","sortOptionSymbols","cur","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","value1","value2","hexToString","hexToUtf8","hexToNumberString","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","newObj","k","symbolArr","unique","to2","index1","index2","index3","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","DesktopApp","MobileApp","Mask","setIsOpen","useState","useEffect","isShowMask","LoadingMask","MaskWrapper","isOptionsLite","useRouteMatch","isOptionsPro","categry","isMobile","Wallet","detail","supportWeb3","isConnected","approve","connect","loadWalletBalance","switchNetwork","network","metamask","addError","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","refresh","isSupportChain","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","wallet","spec","mockPositionInfo","deltaFundingAccrued","balanceContract","startAll","intervalAll","loadAll","load","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","Trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","Type","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","clean","initVolume","currentSymbolMarginHeld","otherMarginHeld","contractValue","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a15bc78b.chunk.js","sourcesContent":["import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'production') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","// versions\r\nexport const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open', 'option']\r\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\r\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open']\r\nexport const LITE_AND_OPTION_VERSIONS = ['v2_lite', 'v2_lite_open', 'option']\r\n\r\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://polygon-rpc.com',\r\n        //'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        //'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import { DeriEnv } from './env';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { VERSIONS } from './version';\r\n\r\nexport const getJsonConfig = (version, env) => {\r\n  env = env || DeriEnv.get();\r\n  // for browser and nodejs\r\n  let configs =\r\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && VERSIONS.includes(version)) {\r\n    configs = configs[version];\r\n    if (['prod', 'dev'].includes(env)) {\r\n      if (configs && configs[env]) {\r\n        return configs[env];\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n    );\r\n  }\r\n};\r\n","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import { DeriEnv } from '../config'\r\nimport { normalizeChainId } from '../utils/validate'\r\n\r\nexport const getPoolV1ConfigList = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  }\r\n  // develop environment\r\n  return [\r\n    {\r\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n      initialBlock: '9378545',\r\n      bTokenSymbol: 'BUSD',\r\n      symbol: 'BTCUSD',\r\n      unit: 'BTC',\r\n      chainId: '97',\r\n      version: 'v1',\r\n    },\r\n  ];\r\n};\r\n\r\n// export const getSlpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n//         chainId: '1',\r\n//         bTokenSymbol: 'DERI-USDT SLP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   }\r\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n//   return [];\r\n// };\r\n\r\n// export const getClpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '6894880',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP',\r\n//         symbol: '--',\r\n//         retired: true,\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '699498',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP SYRUP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nexport const getLpConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDeriConfigList= (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\n\r\n// export const getSlpConfig = (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClp2Config= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClpConfig= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\nexport const getLpConfig = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriConfig= (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriConfig(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const env = DeriEnv.get()\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n    );\r\n  }\r\n}\r\n","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\nexport const shuffleArray = (urls) => {\r\n  const newUrls = deepClone(urls)\r\n  const length = urls.length\r\n  let res = []\r\n  for (let i = 0; i < length; i++) {\r\n    const index = Math.floor(Math.random() * urls.length)\r\n    res = res.concat(newUrls.splice(index,1))\r\n  }\r\n  return res\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  // pick 2 random urls\r\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  let pending = {}\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // for mining page should not depends wallet network\r\n      let walletChainId\r\n      if (typeof window === 'object' && window.ethereum) {\r\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\r\n      } else {\r\n        // MetaMask plugin is not installed in the browser\r\n        console.log('Please install MetaMask first');\r\n      }\r\n      // using metaMask ethereum object\r\n      if (\r\n        isBrowser() &&\r\n        !isJsDom() &&\r\n        typeof window.ethereum === 'object' &&\r\n        walletChainId &&\r\n        chainId === walletChainId.toString()\r\n      ) {\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else {\r\n        if (pending[chainId]) {\r\n          let retry = 10\r\n          while (retry > 0) {\r\n            await delay(300)\r\n            if (pending[chainId]) {\r\n              retry -= 1\r\n            } else {\r\n              if (web3InstanceMap[chainId]) {\r\n                return web3InstanceMap[chainId];\r\n              } else {\r\n                const providerUrl = await getChainProviderUrl(chainId);\r\n                web3InstanceMap[chainId] = new Web3(\r\n                  new Web3.providers.HttpProvider(providerUrl)\r\n                );\r\n                return web3InstanceMap[chainId];\r\n              }\r\n            }\r\n          }\r\n          const providerUrl = await getChainProviderUrl(chainId);\r\n          web3InstanceMap[chainId] = new Web3(\r\n            new Web3.providers.HttpProvider(providerUrl)\r\n          );\r\n          return web3InstanceMap[chainId];\r\n        } else {\r\n          pending[chainId] = true\r\n          try {\r\n            const providerUrl = await getChainProviderUrl(chainId);\r\n            web3InstanceMap[chainId] = new Web3(\r\n              new Web3.providers.HttpProvider(providerUrl)\r\n            );\r\n            delete pending[chainId]\r\n          } catch(err) {\r\n            console.log(err.toString())\r\n            delete pending[chainId]\r\n          }\r\n          return web3InstanceMap[chainId];\r\n        }\r\n      }\r\n    },\r\n  };\r\n})();","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","import {\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../config'\r\n\r\n// get REST HTTP Base url\r\nexport const getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nexport const fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n// query api wrapper\r\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    console.log(`${methodName}: `, err)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// tx api wrapper\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n","const bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n  GHSTUSDT: 'GHSTUSDT',\r\n  AGLDUSDT: 'AGLDUSDT',\r\n};\r\n\r\nexport const normalizeOptionSymbol = (optionSymbol) => {\r\n  const res = optionSymbol.split('-')\r\n  if (res.length >= 2) {\r\n    return res[0]\r\n  } else {\r\n    throw new Error(`invalid option symbol:${optionSymbol}`)\r\n  }\r\n};\r\n\r\nexport const getNormalizedOptionSymbols = (symbols) => {\r\n  let res = []\r\n  symbols.forEach((s) => {\r\n    const volSymbol = normalizeOptionSymbol(s)\r\n    if (!res.includes(volSymbol)) {\r\n      res.push(volSymbol)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getVolatilitySymbols = (symbols) => {\r\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\r\n}\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\r\n    return offchainSymbolPairs[symbol]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\r\n  if (index > -1) {\r\n    return Object.keys(offchainSymbolPairs)[index]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken)\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const normalizeSymbolUnit = (symbol) => {\r\n  const prefix = ['USD', 'USDT'];\r\n  const re = new RegExp(`(${prefix.join('|')})$`);\r\n  if (typeof symbol === 'string') {\r\n    return mapToSymbol(symbol).replace(re, '');\r\n  }\r\n  console.log(`symbol(${symbol}) is not a string type`);\r\n  return symbol;\r\n};\r\n\r\nexport const getIndexInfo = (symbol) => {\r\n  const internalSymbol = mapToSymbolInternal(symbol);\r\n  const customIndexs = {\r\n    IGAME: {\r\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\r\n      url: 'https://docs.deri.finance/products/index/game-index',\r\n    },\r\n    IBSCDEFI: {\r\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\r\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\r\n    },\r\n    IMEME: {\r\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\r\n      url: 'https://docs.deri.finance/products/index/meme-index',\r\n    },\r\n  };\r\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\r\n    return customIndexs[internalSymbol];\r\n  } else {\r\n    return { tokens: [], url: '' };\r\n  }\r\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\r\nimport {\r\n  isUsedRestOracle,\r\n  mapToBToken,\r\n  mapToSymbol,\r\n  getVolatilitySymbols,\r\n} from './token';\r\n\r\nconst validatePoolV2 = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n      'symbolCount',\r\n      'bTokenCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['bTokens'], 'bTokens');\r\n  pool['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processPoolV2 = (pool) => {\r\n  // process pool \r\n  pool['bTokenCount'] = pool['bTokens'].length;\r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\r\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n};\r\n\r\nconst validatePoolV2Lite = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n};\r\n\r\nconst processPoolV2Lite = (pool) => {\r\n  // process pool\r\n  if (!pool['symbolCount']) {\r\n    pool['symbolCount'] = pool['symbols'].length;\r\n  }\r\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\r\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validateConfigV2LiteOpen = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2LiteOpen = (config) => {\r\n  // process config\r\n  if (!config['symbolCount']) {\r\n    config['symbolCount'] = config['symbols'].length;\r\n  }\r\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\r\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validatePoolOption = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      // 'offchainSymbolIds',\r\n      // 'offchainSymbols',\r\n      'symbolCount',\r\n      'volatilitySymbols',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\r\n};\r\n\r\nconst processPoolOption = (pool) => {\r\n  // process pool \r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  if (!pool['volatilitySymbols']) {\r\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['volatilitySymbols'] = getVolatilitySymbols(\r\n      pool['symbols'].map((s) => s.symbol)\r\n    ); \r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nexport const poolProcessor = {\r\n  v2: processPoolV2,\r\n  v2_lite: processPoolV2Lite,\r\n  v2_lite_open: processConfigV2LiteOpen,\r\n  option: processPoolOption,\r\n};\r\n\r\nexport const poolValidator = {\r\n  v2: validatePoolV2,\r\n  v2_lite: validatePoolV2Lite,\r\n  v2_lite_open: validateConfigV2LiteOpen,\r\n  option: validatePoolOption,\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { mapToSymbolInternal } from './token';\r\n\r\nexport const getOracleConfigList = (version='v2', env) => {\r\n  const config = getJsonConfig(version, env || DeriEnv.get())\r\n  return config.oracle\r\n};\r\n\r\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const oracles = getOracleConfigList(version)\r\n  const filteredByChainId = oracles.filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\r\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\r\n        if (Array.isArray(res) && res.length >= 2) {\r\n          throw new Error(res[1].trim())\r\n        }\r\n      }\r\n    }\r\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","import { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray]);\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","import { getOracleConfig } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory } from '../factory/oracle';\r\nimport { deriToNatural, toWei } from './convert';\r\nimport {\r\n  getVolatilitySymbols,\r\n  mapToSymbolInternal,\r\n  mapToBTokenInternal,\r\n  normalizeOptionSymbol,\r\n} from '../config/token';\r\nimport { PRESERVED_SYMBOLS } from '../config/version';\r\n\r\nexport const getPriceInfoForV1 = async(symbol) => {\r\n  const env = DeriEnv.get();\r\n  let method = 'get_signed_price'\r\n  let url\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n  if (symbol) {\r\n    url = addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    url = baseUrl;\r\n  }\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n        //return deriToNatural(priceInfo.data.price).toString()\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n}\r\n\r\n\r\nexport const getOracleUrl = (symbol, type='futures') => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = 'get_signed_price'\r\n  if (type === 'option') {\r\n    method = 'get_signed_volatility'\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = 'get_price'\r\n    symbol = `${symbol}_v2_bsc`\r\n  }\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol, type='futures') => {\r\n  const res = await getPriceInfo(symbol, type)\r\n  if (type === 'futures' && res.price) {\r\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\r\n  } else if (type === 'option' && res.volatility) {\r\n    return deriToNatural(res.volatility).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol, type='futures') => {\r\n  symbol = mapToBTokenInternal(symbol)\r\n  let url = getOracleUrl(symbol, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\n// cache\r\nexport const getOraclePriceFromCache = (function () {\r\n  let cache = {};\r\n  return {\r\n    async get(chainId, symbol = '_', version = 'v2') {\r\n      const key = `${chainId}_${symbol}_${version}`\r\n      if (\r\n        Object.keys(cache).includes(key) &&\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n      ) {\r\n        return cache[key].data;\r\n      } else {\r\n        const data = await getOraclePrice(chainId, symbol, version);\r\n        cache[key] = {\r\n          data,\r\n          timestamp: Math.floor(Date.now() / 1000),\r\n        };\r\n        return cache[key].data;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(version, chainId, symbol);\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\nexport const getOraclePriceForOption = async (chainId, symbol) => {\r\n  return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\r\n};\r\n\r\n// for viewer use\r\nexport const getOraclePricesForOption = async (chainId, symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const oracleSymbolPrices = await Promise.all(\r\n    oracleSymbols.reduce(\r\n      (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\r\n      []\r\n    )\r\n  );\r\n  return symbols.map((s) => {\r\n    return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\r\n  });\r\n};\r\n\r\n// for tx use\r\nexport const getOracleVolatilityForOption = async (symbols) => {\r\n  const volSymbols = getVolatilitySymbols(symbols)\r\n  //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\r\n\r\n  const volatilities = await Promise.all(\r\n    volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\r\n  );\r\n  //return volatilities;\r\n  return symbols.map((s) => {\r\n    return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\r\n  });\r\n};\r\n\r\n// for viewer use\r\nexport const getOracleVolatilitiesForOption = async (symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const oracleSymbolVolatilities = await Promise.all(\r\n    oracleSymbols.reduce(\r\n      (acc, i) => acc.concat([getPriceInfo(`VOL-${i}`, 'option')]),\r\n      []\r\n    )\r\n  );\r\n  return symbols.map((s) => {\r\n    return oracleSymbolVolatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))].volatility;\r\n  });\r\n};","import { isUsedRestOracle } from '../config/token';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\nimport { factory } from '../utils/factory';\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const wrappedOracleFactory = factory(WrappedOracle);\r\n","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\n\r\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { hexToNumber, fromWei } from '../utils';\r\nimport { web3Factory } from '../factory';\r\nimport { normalizeAddress } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  walletAddress = normalizeAddress(walletAddress)\r\n  const web3 = await web3Factory.get(chainId);\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  return fromWei(balance);\r\n};\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport { getPoolV1Config } from '../config/pool_v1'\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const userInfo = await getUserInfo(userAddress);\r\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\r\n  const userInfoTotal = await getUserInfoTotal(userAddress);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","import { getDeriConfig } from '../config';\r\nimport {\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  return (await deri.balanceOf(accountAddress)).toString();\r\n};","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n} from '../config';\r\nimport { naturalToDeri } from '../../shared/utils';\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultConfig(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriConfig(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriConfig(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { lTokenAbi } from './abis';\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\r\nimport { perpetualPoolAbi } from './abis';\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { naturalToDeri } from '../../shared/utils'\r\nimport { MAX_INT256 } from '../../shared/config';\r\nimport { perpetualPoolRouterAbi} from './abis';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\r\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\r\nimport { pTokenFactory } from \"../../v2/factory\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","import { getLpConfig } from '../config';\r\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\r\n  const removable = bg(liquidity)\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return bg(volume).times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = bg(volume)\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = bg(liquidity)\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (bg(margin).plus(amount).gte(minMargin)) {\r\n    if (\r\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const MAX_GAS_AMOUNT = 582731\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfoForV1(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n} from '../factory/contract';\r\nimport { lTokenFactory } from '../../v1/factory';\r\nimport { bg } from '../utils';\r\nimport { getLpConfig } from '../config';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { getLpConfig } from '../config';\r\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\r\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\r\nimport {\r\n  unlockClp2,\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2_pool_api';\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { DeriEnv } from \"../shared/config/env\";\r\nimport { normalizeChainId } from \"../shared/utils/validate\";\r\n\r\nexport const openPoolChainIds = () => {\r\n  const configs = {\r\n    prod: ['56'],\r\n    dev: ['97'],\r\n  }\r\n  const env = DeriEnv.get()\r\n  if (Array.isArray(configs[env])) {\r\n    return configs[env]\r\n  } else {\r\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\r\n  }\r\n};\r\n\r\nexport const getPoolV2LiteManagerConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\r\n        initialBlock: \"10133599\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\n\r\nexport const expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { factory } from '../shared/utils/factory'\r\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\r\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\r\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\r\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\r\n","import {\r\n  bTokenFactory,\r\n  deriToNatural,\r\n  fetchJson,\r\n  getHttpBase,\r\n} from '../../shared';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { normalizeSymbolUnit } from '../../shared/config/token';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { PTokenLite } from './p_token';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async updateAddresses() {\r\n    if (!this.bTokenAddress) {\r\n     const res = await this._call('getAddresses');\r\n    // update this state\r\n     this.bTokenAddress = res.bTokenAddress;\r\n     this.lTokenAddress= res.lTokenAddress;\r\n     this.pTokenAddress= res.pTokenAddress;\r\n    }\r\n  }\r\n  async controller() {\r\n    const res = await this._call('controller');\r\n    return res\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return {\r\n      symbol: res.symbol,\r\n      oracleAddress: res.oracleAddress,\r\n      multiplier: deriToNatural(res.multiplier),\r\n      feeRatio: deriToNatural(res.feeRatio),\r\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n      price: deriToNatural(res.price),\r\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n      tradersNetCost: deriToNatural(res.tradersNetCost),\r\n    };\r\n  }\r\n  async getSymbols() {\r\n    await this.updateAddresses()\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    // update this state\r\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\r\n    this.symbols = await Promise.all(\r\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n    );\r\n    return this.symbols\r\n  }\r\n  async getBTokenSymbol() {\r\n    await this.updateAddresses()\r\n    if (!this.bToken) {\r\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\r\n    }\r\n    // update this state\r\n    this.bTokenSymbol = await this.bToken.symbol()\r\n    return this.bTokenSymbol\r\n  }\r\n  async getPoolExtraInfo() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\r\n    const res = await fetchJson(url)\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data\r\n    } else {\r\n\r\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\r\n      return  {\r\n        block_number: '1000000000',\r\n        version: '',\r\n      }\r\n    }\r\n  }\r\n  async getConfig() {\r\n    const [bToken, symbols, extraInfo] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      this.getPoolExtraInfo(),\r\n    ])\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock:extraInfo.block_number,\r\n      version:extraInfo.version,\r\n      chainId: this.chainId,\r\n    }\r\n  }\r\n\r\n  // tx\r\n  async addSymbol(accountAddress, parameters) {\r\n    return await this._transact('addSymbol', parameters, accountAddress)\r\n  }\r\n\r\n  async removeSymbol(accountAddress, symbolId) {\r\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\r\n\r\nexport class PerpetualPoolLiteManager extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\r\n  }\r\n\r\n  // query\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return res\r\n  }\r\n  async poolTemplate() {\r\n    const res = await this._call('poolTemplate', [])\r\n    return res\r\n  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return res\r\n  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return res\r\n  }\r\n  async protocolFeeCutRatio() {\r\n    const res = await this._call('protocolFeeCutRatio', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n\r\n}","import { catchApiError } from \"../../shared/utils/api\"\r\nimport { DeriEnv } from \"../../shared/config/env\"\r\nimport { getOracleConfigList } from \"../../shared/config/oracle\"\r\nimport { getJsonConfig } from \"../../shared/config/config\"\r\nimport { isBrowser, normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\r\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\r\nimport { getPoolViewerConfig } from \"../../shared\"\r\nimport { expandPoolConfigV2LiteOpen, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\r\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\r\n\r\nexport const getPoolOpenConfigList = async (...args) => {\r\n  return catchApiError(\r\n    async () => {\r\n      let configs = [];\r\n      const chainIds = openPoolChainIds()\r\n      configs = chainIds.reduce(async (acc, chainId) => {\r\n        //console.log('chainId', chainId)\r\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\r\n          chainId\r\n        );\r\n        const poolManager = perpetualPoolLiteManagerFactory(\r\n          chainId,\r\n          poolManagerAddress\r\n        );\r\n        // get pool numbers\r\n        const poolNums = parseInt(await poolManager.getNumPools());\r\n        const numsArray = [...Array(poolNums).keys()];\r\n        // get pool addresses\r\n        const addresses = await Promise.all(\r\n          numsArray.reduce(\r\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\r\n            []\r\n          )\r\n        );\r\n        // get pools config\r\n        const res = await Promise.all(\r\n          addresses.reduce(\r\n            (acc, address) =>\r\n              acc.concat([\r\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n        return acc.concat(res);\r\n      }, []);\r\n      return configs;\r\n    },\r\n    args,\r\n    'getPoolOpenConfigList',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolOpenOracleList = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  return catchApiError(\r\n    async () => {\r\n      return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\r\n    },\r\n    [],\r\n    'getPoolOpenOracleInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolController = async(chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  return await perpetualPoolLite.controller()\r\n}\r\nexport const isPoolController = async(chainId, poolAddress, controller) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const poolController = await perpetualPoolLite.controller()\r\n  return toChecksumAddress(controller) === toChecksumAddress(poolController)\r\n}\r\n\r\nexport const getExpandedPoolOpenConfigList = async () => {\r\n  const env = DeriEnv.get()\r\n  const version = 'v2_lite_open'\r\n  let config = getJsonConfig(version, env);\r\n\r\n  config.pools =  await getPoolOpenConfigList()\r\n  const pools = config.pools\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  return expandPoolConfigV2LiteOpen(config);\r\n}\r\n\r\nexport const getPoolAllSymbolNames = async(chainId, poolAddress) => {\r\n  const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite')\r\n  const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress)\r\n  return await poolViewer.getOffChainOracleSymbols(poolAddress)\r\n}\r\n\r\n\r\n// v2lite open config list cache\r\nexport const openConfigListCache = (() => {\r\n  let cache = {\r\n    data: [],\r\n    timestamp: 0,\r\n  };\r\n  return {\r\n    async update() {\r\n      let res\r\n      const oldData = cache.data\r\n      try {\r\n        if (Date.now()/1000 - cache.timestamp >= 10) {\r\n        //if (Date.now()/1000 - cache.timestamp > 60) {\r\n          cache.data = await getPoolOpenConfigList()\r\n          cache.timestamp = Date.now()/1000\r\n          //res = 'v2 lite open config list is updated'\r\n        }\r\n      } catch(err) {\r\n        console.log(err)\r\n        cache.data = oldData\r\n        //res = `v2 lite open config list updating with error: ${err}`\r\n      }\r\n      // res && console.log(res)\r\n      return cache.data\r\n    },\r\n    updatedAt() {\r\n      return cache.timestamp\r\n    },\r\n    get() {\r\n      return cache.data\r\n    }\r\n  }\r\n})()\r\n\r\n// // init\r\n// const initCache = () => {\r\n//   if (isBrowser()) {\r\n//     if(window.ethereum) {\r\n//       window.ethereum.request({ method: 'net_version' }).then((chainId) => {\r\n//         if (['1', '56', '137', '128'].includes(chainId)) {\r\n//           DeriEnv.set('prod')\r\n//           openConfigListCache.update().then((res) => console.log(res))\r\n//         } else {\r\n//           openConfigListCache.update().then((res) => console.log(res))\r\n//         }\r\n//       })\r\n//     }\r\n//   }\r\n// };\r\n// initCache()","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { getPoolV1ConfigList } from './pool_v1';\r\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\r\nimport { validateObjectKeyExist } from '../utils';\r\nimport { poolProcessor, poolValidator } from './config_processor';\r\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\r\n\r\nconst expandPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            version: 'v2',\r\n            isOption: false,\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite',\r\n          isOption: false,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigOption = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          volatilitySymbols: pool.volatilitySymbols,\r\n          unit: symbol.unit,\r\n          version: 'option',\r\n          isOption: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      if (pool.symbols.length > 0) {\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: pool.bToken,\r\n            bTokenSymbol: pool.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            offchainSymbolIds: pool.offchainSymbolIds,\r\n            offchainSymbols: pool.offchainSymbols,\r\n            unit: symbol.unit,\r\n            version: 'v2_lite_open',\r\n            isOpen: true,\r\n          });\r\n        }\r\n      } else {\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: '--',\r\n          symbolId: '',\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: '',\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getConfig = (version='v2', env='dev') => {\r\n  let config = getJsonConfig(version, env);\r\n\r\n  if (version === 'v2_lite_open') {\r\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\r\n      //console.log('hit openConfigListCache')\r\n    config.pools = openConfigListCache.get()\r\n    //}\r\n  }\r\n\r\n  //console.log('>',config)\r\n  const pools = config.pools;\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n  return config;\r\n};\r\n\r\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\r\n  const config = getConfig(version, env)\r\n  if (version === 'v2') {\r\n    return expandPoolConfigV2(config)\r\n  } else if (version === 'v2_lite') {\r\n    return expandPoolConfigV2Lite(config)\r\n  } else if (version === 'v2_lite_open') {\r\n    return expandPoolConfigV2LiteOpen(config)\r\n  } else if (version === 'option') {\r\n    return expandPoolConfigOption(config)\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  // check the bToken in v2_lite\r\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\nexport const getFilteredPoolConfig  = getPoolConfig\r\n\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  //console.log('pools index', index)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  const config = getConfig(version, DeriEnv.get());\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool;\r\n  } else {\r\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\r\n  }\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (bTokenId !== undefined || bTokenId !== null) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\r\n  }\r\n  if (symbolId !== undefined || symbolId !== null) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n\r\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const env = DeriEnv.get()\r\n  const config = getJsonConfig(version, env)\r\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\r\n  }\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getJsonConfig(version, DeriEnv.get())\r\n  if (config.brokerManager) {\r\n    return config.brokerManager\r\n  } else {\r\n    // default value\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getBrokerConfig = (version='v2', chainId) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import {\r\n  bTokenFactory,\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  getPoolV1Config,\r\n  deriToNatural,\r\n} from '../../shared';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = formatBN(bg(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getPoolV1Config } from '../../shared/config';\r\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getLiquidateHistoryOnline,\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: i.baseToken.trim(),\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  bTokenFactory,\r\n} from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol()\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pPool.symbol(),\r\n  ]);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol();\r\n  const price = await getPriceFromRest(symbol);\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbol = await pPool.symbol();\r\n    await priceCache._update(poolAddress, symbol);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bToken.liquidity.minus(\r\n          minPoolMarginRatio\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        userLiquidity\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolBTokenIdList,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\r\nimport { calculateMaxRemovableLiquidity } from '../calculation';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  try {\r\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ]);\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    let promises = [];\r\n    for (let i = 0; i < bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n    }\r\n    const bTokens = await Promise.all(promises);\r\n\r\n    promises = [];\r\n    for (let i = 0; i < symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      );\r\n    }, bg(0));\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume)\r\n          .times(s.price)\r\n          .times(s.multiplier)\r\n          .minus(s.tradersNetCost)\r\n      );\r\n    }, bg(0));\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenId],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    );\r\n    const approximatePnl = pnl.plus(\r\n      bg(bTokens[bTokenId].cumulativePnl)\r\n        .minus(lastCumulativePnl)\r\n        .times(liquidity)\r\n    );\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString(),\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol: '',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol: '',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n","import { getPriceInfo } from '../../shared/utils/oracle';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  perpetualPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory';\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.removeLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();","import { bTokenFactory } from '../../shared/factory';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolBTokenList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolSymbolList,\r\n} from '../../shared/config';\r\nimport { bg, min, max } from '../../shared/utils'\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol)\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  };\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return {\r\n      price: price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolBTokenIdList,\r\n} from '../../shared/config';\r\nimport { bg } from '../../shared/utils';\r\nimport { getPriceInfo } from '../../shared/utils/oracle';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { isOrderValid } from '../calculation';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.addMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.removeMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .plus(newVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  //console.log('liquidity', liquidity.toString())\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume.plus(newVolume))\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  // console.log('pnl', pnl.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePositionWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            //baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            symbol: i.symbol,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import {\r\n  getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n} from '../../shared';\r\nimport { getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\n//import { MAX_INT256} from '../../shared/config'\r\nimport { PTokenLite } from './p_token';\r\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'v2_lite'\r\n    );\r\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    this.offchainSymbols = this.config.offchainSymbols;\r\n    this.bTokenAddress = this.config.bToken\r\n    this.lTokenAddress = this.config.lToken\r\n    this.pTokenAddress = this.config.pToken\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'v2_lite')\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([this.getAddresses()]);\r\n  }\r\n\r\n  async _updateOffchainSymbols() {\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = new PerpetualPoolLiteViewer(\r\n          this.chainId,\r\n          this.viewerAddress\r\n      )\r\n    }\r\n    //await this.getAddresses()\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\r\n    if (!this.activeSymbolIds || !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))) {\r\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(this.contractAddress)\r\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\r\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\r\n        return activeSymbols[index] == '' ? acc : acc.concat([i]);\r\n      }, []);\r\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\r\n      this.activeSymbolIds = activeSymbolIds;\r\n    }\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    this.bTokenAddress = res.bTokenAddress;\r\n    this.lTokenAddress = res.lTokenAddress;\r\n    this.pTokenAddress = res.pTokenAddress;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res)\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = []\r\n    await this._updateOffchainSymbols()\r\n    if (this.offchainSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offchainSymbolIds[\r\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import {\r\n  PerpetualPoolLite,\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\r\n    perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import {\r\n  calculateEntryPrice ,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\nimport { getPoolConfig } from \"../../shared/config\"\r\nimport { bTokenFactory } from \"../../shared/factory\"\r\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLatestBlockNumber,\r\n} from '../../shared/utils';\r\nimport { getOraclePriceFromCache } from '../../shared/utils/oracle'\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getActiveSymbolIds(),\r\n      perpetualPool.getLastUpdateBlock(),\r\n      getLatestBlockNumber(chainId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargin(accountAddress),\r\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n    ])\r\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\r\n\r\n    let promises = []\r\n    for (let i = 0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n\r\n    promises = []\r\n    for (let i=0; i< symbolIds.length; i++) {\r\n      promises.push(getOraclePriceFromCache.get(chainId, symbolList[i], 'v2_lite'))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const priceIndex = symbolIds.indexOf(symbolId)\r\n    let price\r\n    if (priceIndex === '-1') {\r\n      price = '0'\r\n    } else {\r\n      price = symbolPrices[priceIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\r\n\r\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    }, bg(0))\r\n\r\n    const totalCost = positions.reduce((accum, p) => {\r\n      return accum.plus(bg(p.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee: fundingFee.toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      ).toString(),\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\r\n    perpetualPool.getLiquidity(),\r\n    getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\r\n  const { minPoolMarginRatio } = parameterInfo\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n\r\n  let promises = []\r\n  for (let i = 0; i< symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    if (!price) {\r\n      price = await getOraclePriceFromCache.get(chainId, symbol, 'v2_lite')\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [price, symbolInfo] = await Promise.all([\r\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const { multiplier } = symbolInfo\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      null,\r\n      'v2_lite'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n        perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            symbol: i.symbol,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","\r\n\r\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\r\n    let u = Math.sqrt(8 / V / V / T + 1)\r\n    let timeValue, delta\r\n    if (S > K) {\r\n        timeValue = K * Math.pow(S/K, (1 - u) / 2) / u\r\n        delta = (1 - u) * timeValue / S / 2\r\n    } else if (S === K) {\r\n        timeValue = K / u\r\n        delta = 0\r\n    } else {\r\n        timeValue = K * Math.pow(S/K, (1 + u) / 2) / u\r\n        delta = (1 + u) * timeValue / S / 2\r\n    }\r\n    return [timeValue, delta]\r\n}\r\n\r\nfunction getDynamicInitialMarginRatio(spot, strike, isCall, initialMarginRatio, minInitialMarginRatio) {\r\n    if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\r\n        return initialMarginRatio\r\n    } else {\r\n        let otmRatio = (isCall ? strike - spot : spot - strike) / strike\r\n        return Math.max((1 - otmRatio * 3) * initialMarginRatio, minInitialMarginRatio)\r\n    }\r\n}\r\n\r\n// multiple position for same underlier, e.x. BTCUSD\r\nfunction canLiquidateWithPrice(pool, trader, symbols, positions, newUnderlierPrice) {\r\n    let newDynamicMargin = trader.dynamicMargin\r\n    let newInitialMargin = trader.initialMargin\r\n\r\n    for (let i = 0; i < symbols.length; i++) {\r\n        let symbol = symbols[i]\r\n        let position = positions[i]\r\n\r\n        let newIntrinsicValue = symbol.isCall ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\r\n                                              : Math.max(symbol.strikePrice - newUnderlierPrice, 0)\r\n        let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\r\n            newUnderlierPrice, symbol.strikePrice, symbol.volatility, pool.premiumFundingPeriod\r\n        )\r\n        if (newIntrinsicValue > 0) {\r\n            newDelta += symbol.isCall ? 1 : -1\r\n        }\r\n        let newPnl = position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier - position.cost\r\n        let newDynamicMarginRatio = getDynamicInitialMarginRatio(newUnderlierPrice, symbol.strikePrice, symbol.isCall, pool.initialMarginRatio, 0.01)\r\n\r\n        newDynamicMargin = newDynamicMargin - position.pnl + newPnl\r\n        newInitialMargin = newInitialMargin - Math.abs(position.volume * symbol.spotPrice * symbol.multiplier * symbol.dynamicMarginRatio)\r\n                                            + Math.abs(position.volume * newUnderlierPrice * symbol.multiplier * newDynamicMarginRatio)\r\n    }\r\n\r\n    let newMaintenanceMargin = newInitialMargin * pool.maintenanceMarginRatio / pool.initialMarginRatio\r\n\r\n    return newMaintenanceMargin > newDynamicMargin\r\n}\r\n\r\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\r\n    if (symbols.length != positions.length) {\r\n        throw 'canLiquidateWithPrice: symbols and positions length not match'\r\n    }\r\n    if (symbols.length === 0) {\r\n        return {\r\n            numPositions: positions.length,\r\n            price1: null,\r\n            price2: null,\r\n        }\r\n    }\r\n    let head = symbols[0].symbol.slice(0, 6)\r\n    for (let i = 0; i < symbols.length; i++) {\r\n        if (!symbols[i].symbol.startsWith(head)) {\r\n            throw 'canLiquidateWithPrice: symbols not in same underlier'\r\n        }\r\n    }\r\n\r\n    if (trader.maintenanceMargin > trader.dynamicMargin) {\r\n        return {\r\n          numPositions: positions.length,\r\n          price1: symbols[0].spotPrice,\r\n          price2: symbols[0].spotPrice\r\n        }\r\n    }\r\n\r\n    let final1, final2\r\n    let price1, price2\r\n    let l1, l2\r\n\r\n\r\n    price1 = symbols[0].spotPrice / 10\r\n    price2 = symbols[0].spotPrice\r\n    l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1)\r\n    l2 = false\r\n    while (true) {\r\n        if (l1 && l2) {\r\n            final1 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        if (!l1 && !l2) {\r\n            final1 = null\r\n            break\r\n        }\r\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n            final1 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        let price = (price1 + price2) / 2\r\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\r\n        if (l === l1) price1 = price\r\n        else price2 = price\r\n    }\r\n\r\n    price1 = symbols[0].spotPrice\r\n    price2 = symbols[0].spotPrice * 10\r\n    l1 = false\r\n    l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2)\r\n    while (true) {\r\n        if (l1 && l2) {\r\n            final2 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        if (!l1 && !l2) {\r\n            final2 = null\r\n            break\r\n        }\r\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n            final2 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        let price = (price1 + price2) / 2\r\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\r\n        if (l === l1) price1 = price\r\n        else price2 = price\r\n    }\r\n\r\n    return {\r\n        numPositions: positions.length,\r\n        price1: final1,\r\n        price2: final2\r\n    }\r\n}\r\n\r\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\r\nimport { findLiquidationPrice } from './findLiquidationPrice2';\r\n\r\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\r\n  }\r\n}\r\n\r\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  // for pool\r\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\r\n  }\r\n}\r\n\r\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(delta)\r\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\r\n        .times(price)\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.deltaFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(symbol.timeValue)\r\n        .times(symbol.multiplier)\r\n        .times(premiumFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\n\r\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\r\n  return isCall\r\n    ? max(bg(price).minus(strikePrice), bg(0))\r\n    : max(bg(strikePrice).minus(price), bg(0));\r\n};\r\n\r\n\r\nexport const getMarginHeldBySymbol = (\r\n  volume,\r\n  price,\r\n  symbol,\r\n  initialMarginRatio\r\n) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(\r\n      dynamicInitialMarginRatio(\r\n        price,\r\n        symbol.strikePrice,\r\n        symbol.isCall,\r\n        initialMarginRatio\r\n      )\r\n    );\r\n};\r\n\r\nexport const getAverageEntryPrice = (position, symbol) => {\r\n  return bg(position.volume).eq(0)\r\n    ? '0'\r\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\r\n};\r\n\r\nexport const getLiquidationPrice = (state, symbolId)  => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\r\n  let res = findLiquidationPrice(\r\n    toNumberForObject(poolState, [\r\n      'initialMarginRatio',\r\n      'maintenanceMarginRatio',\r\n      'premiumFundingPeriod',\r\n      'premiumFundingCoefficient',\r\n      'liquidity',\r\n      'totalDynamicEquity',\r\n      'totalInitialMargin',\r\n    ]),\r\n    toNumberForObject(traderState, [\r\n      'margin',\r\n      'totalPnl',\r\n      'totalFundingAccrued',\r\n      'dynamicMargin',\r\n      'initialMargin',\r\n      'maintenanceMargin',\r\n    ]),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n        ])\r\n      ),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(positionState[s.symbolId], [\r\n          'volume',\r\n          'cost',\r\n          'lastCumulativePremiumFundingRate',\r\n          'pnl',\r\n          'premiumFundingAccrued',\r\n        ])\r\n      )\r\n  );\r\n  res.underlier = normalizedSymbol\r\n  return res\r\n}\r\n\r\nexport const getLiquidationPrices = (state) => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\r\n    let res = findLiquidationPrice(\r\n      toNumberForObject(poolState, [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      toNumberForObject(traderState, [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n          ])\r\n        ),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(positionState[s.symbolId], [\r\n            'volume',\r\n            'cost',\r\n            'lastCumulativeDeltaFundingRate',\r\n            'lastCumulativePremiumFundingRate',\r\n            'pnl',\r\n            'deltaFundingAccrued',\r\n            'premiumFundingAccrued',\r\n          ])\r\n        )\r\n    );\r\n    return res;\r\n  });\r\n  return oracleSymbols.map((i, index) => { \r\n    liquidationPrices[index].underlier = i\r\n    return liquidationPrices[index]\r\n  })\r\n};","/* eslint-disable */\r\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption1.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\r\nimport { everlastingOptionViewerAbi } from './abis';\r\n\r\nexport class EverlastingOptionViewer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\r\n  }\r\n\r\n  // query\r\n  async _getTraderPortfolio(state, account) {\r\n    const res = await this._call('_getTraderPortfolio', [state, account]);\r\n    return res;\r\n  }\r\n  async _initState(poolAddress, oraclePrices) {\r\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\r\n    return res;\r\n  }\r\n  async _updateSymbolPrices(state) {\r\n    const res = await this._call('_updateSymbolPrices', [state]);\r\n    return res;\r\n  }\r\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        //'cumulativeDeltaFundingRate',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      symbolState,\r\n    };\r\n  }\r\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getTraderStates', [\r\n      poolAddress,\r\n      account,\r\n      oraclePrices,\r\n      oracleVolatilities,\r\n    ]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    const positionState = res[3].reduce((acc, i) => {\r\n      const position = fromWeiForObject(deleteIndexedKey(i), [\r\n        'volume',\r\n        'cost',\r\n        'pnl',\r\n        //'lastCumulativeDeltaFundingRate',\r\n        'lastCumulativeFundingRate',\r\n        //'deltaFundingAccrued',\r\n        'fundingAccrued',\r\n      ])\r\n      return acc.concat([position])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState: symbolState,\r\n      positionState: positionState,\r\n    };\r\n  }\r\n  async getVolatilityOracles(poolAddress) {\r\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n  async getPriceOracles(poolAddress) {\r\n    const res = await this._call('getPriceOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n\r\n  // tx\r\n}\r\n","import { factory } from '../../shared';\r\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\r\nimport { LTokenOption } from '../contract/l_token_option';\r\nimport { PTokenOption } from '../contract/p_token_option';\r\n\r\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\r\nexport const lTokenOptionFactory = factory(LTokenOption);\r\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, fromWei } from '../../shared'\r\nimport { lTokenOptionAbi } from './abis.js'\r\n\r\nexport class LTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  // async allowance(owner, spender) {\r\n  //   const res = await this._call('allowance', [owner, spender])\r\n  //   return res\r\n  // }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return fromWei(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return fromWei(res)\r\n  }\r\n\r\n  // tx\r\n  // async approve(accountAddress, spender, amount) {\r\n  //   return await this._transact('approve', [spender, amount], accountAddress)\r\n  // }\r\n  // async transfer(accountAddress, to, amount) {\r\n  //   return await this._transact('transfer', [to, amount], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, amount) {\r\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  // }\r\n\r\n}","import { ContractBase, fromWei } from '../../shared'\r\nimport { pTokenOptionAbi } from './abis.js'\r\n\r\nexport class PTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return res\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return res\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return res\r\n  }\r\n  async getApproved(tokenId) {\r\n    const res = await this._call('getApproved', [tokenId])\r\n    return res\r\n  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return fromWei(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return res\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return {\r\n      volume: fromWei(res[0]),\r\n      cost: fromWei(res[1]),\r\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\r\n    };\r\n }\r\n  async getTokenId(owner) {\r\n    const res = await this._call('getTokenId', [owner])\r\n    return res\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return res\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    const res = await this._call('isApprovedForAll', [owner, operator])\r\n    return res\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async ownerOf(tokenId) {\r\n    const res = await this._call('ownerOf', [tokenId])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async addMargin(accountAddress, owner, delta) {\r\n    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  }\r\n  async updateMargin(accountAddress, owner, margin) {\r\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  }\r\n  async updatePosition(accountAddress, owner, symbolId, position) {\r\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  }\r\n\r\n  // async approve(accountAddress, operator, tokenId) {\r\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  // }\r\n  // async setApprovalForAll(accountAddress, operator, approved) {\r\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  // }\r\n  // async toggleCloseOnly(accountAddress, symbolId) {\r\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\r\n\r\nexport const volatilitiesCache = (function() {\r\n  const cache = {}\r\n  return {\r\n    async get(poolAddress, symbols){\r\n      const key = poolAddress\r\n      if (!Object.keys(cache).includes(key) || Math.floor(Date.now()/1000) - cache[key].timestamp > 5) {\r\n        const timestamp = Math.floor(Date.now()/1000)\r\n        const data = await getOracleVolatilitiesForOption(symbols)\r\n        cache[key] = {\r\n          data,\r\n          timestamp,\r\n        }\r\n        return cache[key].data\r\n      } else {\r\n        return cache[key].data\r\n      }\r\n    }\r\n  }\r\n})()\r\n","import { factory } from '../../shared';\r\nimport { EverlastingOption } from '../contract/everlasting_option';\r\n\r\nexport const everlastingOptionFactory = factory(EverlastingOption);","import {\r\n  ContractBase,\r\n  deleteIndexedKey,\r\n  fromWeiForObject,\r\n  fromWei,\r\n  naturalToDeri,\r\n  getPoolConfig,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n} from '../../shared';\r\nimport { getVolatilitySymbols } from '../../shared/config/token';\r\nimport {\r\n  getOracleVolatilityForOption,\r\n} from '../../shared/utils/oracle';\r\nimport {\r\n  everlastingOptionViewerFactory,\r\n  pTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { everlastingOptionAbi } from './abis.js';\r\n\r\nexport class EverlastingOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'option'\r\n    );\r\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    // this.offchainSymbols = this.config.offchainSymbols;\r\n    this.volatilitySymbols = this.config.volatilitySymbols;\r\n    this.bTokenAddress = this.config.bToken;\r\n    this.lTokenAddress = this.config.lToken;\r\n    this.pTokenAddress = this.config.pToken;\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\r\n  }\r\n  async _updateConfig() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = everlastingOptionViewerFactory(\r\n        this.chainId,\r\n        this.viewerAddress\r\n      );\r\n    }\r\n\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\r\n    ) {\r\n      // symbol is updated\r\n      const activeSymbols = await Promise.all(\r\n      activeSymbolIds.reduce(\r\n          (acc, i) => acc.concat([this.getSymbol(i)]),\r\n          []\r\n        )\r\n      );\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        this.contractAddress,\r\n        activeSymbols.map((s) => s.symbol)\r\n      );\r\n      //console.log(symbolVolatilities)\r\n      const state = await this.viewer.getPoolStates(\r\n        this.contractAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      // update state\r\n      this.activeSymbolIds = activeSymbolIds;\r\n      this.activeSymbols = symbolState.filter((s) =>\r\n        this.activeSymbolIds.includes(s.symbolId)\r\n      );\r\n      // for tx use\r\n      this.volatilitySymbols = getVolatilitySymbols(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n    }\r\n  }\r\n\r\n  // query\r\n  // async OptionPricer() {\r\n  //   const res = await this._call('OptionPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async PmmPricer() {\r\n  //   const res = await this._call('PmmPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async _T() {\r\n  //   const res = await this._call('_T', []);\r\n  //   return fromWei(res);\r\n  // }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getLastTimestamp() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1]\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return fromWei(res[0])\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'initialMarginRatio',\r\n      'liquidationCutRatio',\r\n      'maintenanceMarginRatio',\r\n      'maxLiquidationReward',\r\n      'minLiquidationReward',\r\n      'minPoolMarginRatio',\r\n      'protocolFeeCollectRatio',\r\n    ]);\r\n  }\r\n  // async getProtocolFeeAccrued() {\r\n  //   const res = await this._call('getPoolStateValues', []);\r\n  //   return fromWei(res[2])\r\n  // }\r\n\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'strikePrice',\r\n      'multiplier',\r\n      'feeRatio',\r\n      'alpha',\r\n      'tradersNetVolume',\r\n      'tradersNetCost',\r\n      'cumulativeFundingRate',\r\n    ]);\r\n    // return {\r\n    //   symbolId: res[0],\r\n    //   symbol: res[1],\r\n    //   oracleAddress: res[2],\r\n    //   volatilityAddress: res[3],\r\n    //   isCall: res[4],\r\n    //   strikePrice: fromWei(res[5]),\r\n    //   multiplier: fromWei(res[6]),\r\n    //   feeRatio: fromWei(res[7]),\r\n    //   alpha: fromWei(res[8]),\r\n    //   tradersNetVolume: fromWei(res[9]),\r\n    //   tradersNetCost: fromWei(res[10]),\r\n    //   cumulativeFundingRate: fromWei(res[11]),\r\n    // };\r\n  }\r\n\r\n  // tx\r\n  async _getVolSymbolPrices() {\r\n    await this._updateConfig();\r\n    let volatilities = [];\r\n    if (this.volatilitySymbols.length > 0) {\r\n      const volatilityInfos = await getOracleVolatilityForOption(this.activeSymbols.map((s) => s.symbol))\r\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.activeSymbolIds[index],\r\n          p.timestamp,\r\n          p.volatility,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return volatilities;\r\n  }\r\n\r\n  async addLiquidity(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, lShares) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(lShares), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(bAmount)],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(tradeVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg } from '../../shared/utils';\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateShareValue,\r\n} from '../../v1/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport {\r\n  lTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\n\r\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { lToken: lTokenAddress } = getPoolConfig(\r\n    poolAddress,\r\n    '0',\r\n    '0',\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\r\n  const [\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n  ] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n\r\n  const symbols = optionPool.activeSymbols\r\n  const symbolVolatilities = await volatilitiesCache.get(poolAddress, symbols.map((s) => s.symbol))\r\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities)\r\n  const { poolState } = state;\r\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\r\n  const value = symbols.reduce(\r\n    (acc, s) =>\r\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\r\n    bg(0)\r\n  );\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      totalDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      bg(initialMarginRatio).times(10)\r\n    ).toString(),\r\n  };\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","/*\r\n    1. Calculate the cost for user input volume\r\n    2. Calculate the final price if user input volume is traded\r\n*/\r\n\r\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\r\n    return theoreticalPrice * (1 + K * tradersNetVolume)\r\n}\r\n\r\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\r\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\r\n}\r\n","import {\r\n  bg,\r\n  bTokenFactory,\r\n  catchApiError,\r\n  deriToNatural,\r\n  getPoolConfig,\r\n} from '../../shared';\r\nimport { fundingRateCache } from '../../shared/api/api_globals';\r\nimport { normalizeOptionSymbol } from '../../shared/config/token';\r\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\r\nimport {\r\n  getOraclePricesForOption,\r\n  getPriceFromRest,\r\n  getOracleVolatilitiesForOption,\r\n} from '../../shared/utils/oracle';\r\nimport { queryTradePMM } from '../calculation/PMM2';\r\nimport {\r\n  dynamicInitialMarginRatio,\r\n  dynamicInitialPoolMarginRatio,\r\n  getAverageEntryPrice,\r\n  //getDeltaFundingPerSecond,\r\n  getIntrinsicPrice,\r\n  getLiquidationPrice,\r\n  getLiquidationPrices,\r\n  getMarginHeldBySymbol,\r\n} from '../calculation/trade';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\n//\r\nconst SECONDS_IN_A_DAY = 86400;\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const [symbolInfo2, poolInfo2] = await Promise.all([\r\n        optionPool.getSymbol(symbolId),\r\n        optionPool.getParameters(),\r\n      ]);\r\n\r\n      const symbols = optionPool.activeSymbols;\r\n      const [symbolPrices, symbolVolatilities] = await Promise.all([\r\n        getOraclePricesForOption(\r\n          chainId,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        volatilitiesCache.get(\r\n          poolAddress,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n      ]);\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbolInfo = symbolState[symbolIndex];\r\n      const { dynamicMarginRatio, isCall } =\r\n        symbolInfo;\r\n      const { symbol, multiplier, feeRatio } = symbolInfo2;\r\n      const {\r\n        initialMarginRatio,\r\n        maintenanceMarginRatio,\r\n        minLiquidationReward,\r\n        maxLiquidationReward,\r\n        liquidationCutRatio,\r\n        protocolFeeCollectRatio,\r\n      } = poolInfo2;\r\n\r\n      return {\r\n        symbol,\r\n        bTokenSymbol,\r\n        multiplier: multiplier.toString(),\r\n        feeRatio: feeRatio.toString(),\r\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\r\n        initialMarginRatio: dynamicMarginRatio.toString(),\r\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\r\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\r\n          .times(maintenanceMarginRatio)\r\n          .div(initialMarginRatio)\r\n          .toString(),\r\n        minLiquidationReward: minLiquidationReward.toString(),\r\n        maxLiquidationReward: maxLiquidationReward.toString(),\r\n        liquidationCutRatio: liquidationCutRatio.toString(),\r\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n        isCall: isCall,\r\n        indexConstituents: getIndexInfo(symbol),\r\n      };\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      //minPoolMarginRatio: '',\r\n      initialMarginRatio: '',\r\n      maintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { url: '', tokens: [] },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { symbol: symbolStr } = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols;\r\n      let symbolPrices = [],\r\n        symbolVolatilities = [],\r\n        volPrice;\r\n      if (symbols && symbols.length > 0) {\r\n        [symbolPrices, symbolVolatilities, volPrice] = await Promise.all([\r\n          getOraclePricesForOption(\r\n            chainId,\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          volatilitiesCache.get(\r\n            poolAddress,\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          getPriceFromRest(`VOL-${normalizeOptionSymbol(symbolStr)}`, 'option'),\r\n        ]);\r\n      }\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, symbolState, traderState, positionState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, totalPnl, initialMargin } = traderState;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbol = symbolState[symbolIndex];\r\n      const position = positionState[symbolIndex];\r\n      const price = await wrappedOracleFactory(\r\n        chainId,\r\n        symbol.oracleAddress\r\n      ).getPrice();\r\n      return {\r\n        symbolId,\r\n        symbol: symbolStr,\r\n        price,\r\n        strikePrice: symbol.strikePrice.toString(),\r\n        timePrice: symbol.timeValue.toString(),\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\r\n        margin: margin.toString(),\r\n        marginHeld: initialMargin.toString(),\r\n        marginHeldBySymbol: getMarginHeldBySymbol(\r\n          position.volume,\r\n          price,\r\n          symbol,\r\n          initialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: totalPnl,\r\n        unrealizedPnlList: symbolState\r\n          .filter((s, index) => positionState[index].pnl !== '0')\r\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\r\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\r\n        isCall: symbol.isCall,\r\n        volatility: bg(volPrice).times(100).toString(),\r\n        liquidationPrice: getLiquidationPrice(state, symbolId),\r\n      };\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      strikePrice: '',\r\n      timePrice: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      premiumFundingAccrued: '',\r\n      liquidationPrice: '',\r\n      volatility: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols;\r\n      const [symbolPrices, symbolVolatilities, volPrices] = await Promise.all([\r\n        getOraclePricesForOption(\r\n          chainId,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        volatilitiesCache.get(\r\n          poolAddress,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        getOracleVolatilitiesForOption(symbols.map((s) => s.symbol)),\r\n      ]);\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, traderState, positionState, symbolState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, initialMargin } = traderState;\r\n      const prices = await Promise.all(\r\n        symbols.reduce(\r\n          (acc, s) =>\r\n            acc.concat([\r\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\r\n            ]),\r\n          []\r\n        )\r\n      );\r\n\r\n      const liquidationPrices = getLiquidationPrices(state);\r\n      return symbols\r\n        .filter((s) => positionState[s.symbolId].volume !== '0')\r\n        .map((s) => {\r\n          const vIndex = symbolState.findIndex(\r\n            (oS) => oS.symbolId === s.symbolId\r\n          );\r\n          return {\r\n            symbolId: s.symbolId,\r\n            symbol: s.symbol,\r\n            price: prices[vIndex],\r\n            // strikePrice: s.strikePrice.toString(),\r\n            // timePrice: s.timeValue.toString(),\r\n            volume: bg(positionState[vIndex].volume)\r\n              .times(symbolState[vIndex].multiplier)\r\n              .toString(),\r\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\r\n            margin: margin.toString(),\r\n            marginHeld: initialMargin.toString(),\r\n            marginHeldBySymbol: getMarginHeldBySymbol(\r\n              positionState[vIndex].volume,\r\n              prices[vIndex],\r\n              s,\r\n              initialMarginRatio\r\n            ).toString(),\r\n            unrealizedPnl: positionState[vIndex].pnl,\r\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\r\n            isCall: s.isCall,\r\n            volatility: deriToNatural(volPrices[vIndex]).times(100).toString(),\r\n            liquidationPrice: liquidationPrices,\r\n          };\r\n        });\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\r\n        accountAddress\r\n      );\r\n      return balance.toString();\r\n    },\r\n    args,\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const bToken = bTokenFactory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig();\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n  const symbols = optionPool.activeSymbols;\r\n  const [symbolPrices, symbolVolatilities] = await Promise.all([\r\n    getOraclePricesForOption(\r\n      chainId,\r\n      symbols.map((s) => s.symbol)\r\n    ),\r\n    volatilitiesCache.get(\r\n      poolAddress,\r\n      symbols.map((s) => s.symbol)\r\n    ),\r\n  ]);\r\n  const state = await optionPool.viewer.getPoolStates(\r\n    poolAddress,\r\n    symbolPrices,\r\n    symbolVolatilities\r\n  );\r\n  const { poolState, symbolState } = state;\r\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\r\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\r\n  if (curSymbolIndex < 0) {\r\n    throw new Error(\r\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n    );\r\n  }\r\n  const symbolInfo = symbolState[curSymbolIndex];\r\n\r\n  const prices = await Promise.all(\r\n    symbolState.reduce(\r\n      (acc, s) =>\r\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\r\n      []\r\n    )\r\n  );\r\n\r\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\r\n    return acc.plus(\r\n      bg(s.tradersNetVolume)\r\n        .times(prices[index])\r\n        .times(s.multiplier)\r\n        .abs()\r\n        .times(\r\n          dynamicInitialPoolMarginRatio(\r\n            prices[index],\r\n            s.strikePrice,\r\n            s.isCall,\r\n            initialMarginRatio\r\n          )\r\n        )\r\n    );\r\n  }, bg(0));\r\n\r\n  const res = {\r\n    initialMarginRatio,\r\n    symbolIds: optionPool.activeSymbolIds,\r\n    symbols: symbolState,\r\n    liquidity,\r\n    totalDynamicEquity,\r\n    prices,\r\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\r\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\r\n      .div(symbolInfo.multiplier)\r\n      .times(SECONDS_IN_A_DAY)\r\n      .toString(),\r\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\r\n      symbolInfo.multiplier\r\n    ),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const symbolInfo = await optionPool.getSymbol(symbolId);\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { symbolIds, prices, symbols } = res;\r\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      const symbol = symbols[curSymbolIndex];\r\n      const intrinsicPrice = getIntrinsicPrice(\r\n        prices[curSymbolIndex],\r\n        symbol.strikePrice,\r\n        symbol.isCall\r\n      );\r\n      //console.log(volume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\r\n      return bg(volume)\r\n        .abs()\r\n        .times(intrinsicPrice.plus(symbol.timeValue))\r\n        .times(symbol.multiplier)\r\n        .times(symbolInfo.feeRatio)\r\n        .toString();\r\n    },\r\n    args,\r\n    'getFundingFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  const [parameterInfo, symbol] = await Promise.all([\r\n    optionPool.getParameters(),\r\n    optionPool.getSymbol(symbolId),\r\n  ]);\r\n  const price = await wrappedOracleFactory(\r\n    chainId,\r\n    symbol.oracleAddress\r\n  ).getPrice();\r\n  const { initialMarginRatio } = parameterInfo;\r\n  const marginRatio = dynamicInitialMarginRatio(\r\n    price,\r\n    symbol.strikePrice,\r\n    symbol.isCall,\r\n    initialMarginRatio\r\n  );\r\n  //console.log(marginRatio, symbol.multiplier, price, volume)\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(marginRatio);\r\n};\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      return {\r\n        premiumFunding0: bg(res.premiumFunding).toString(),\r\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\r\n        liquidity: res.liquidity.toString(),\r\n        volume: '-',\r\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\r\n      };\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    {\r\n      premiumFunding0: '',\r\n      premiumFundingPerSecond: '',\r\n      liquidity: '',\r\n      volume: '-',\r\n      tradersNetVolume: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async () => {\r\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      // if (!res) {\r\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      // }\r\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\r\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      // if (curSymbolIndex < 0) {\r\n      //   throw new Error(\r\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n      //   );\r\n      // }\r\n      // let symbol = symbols[curSymbolIndex];\r\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\r\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\r\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\r\n      // const deltaFunding1 = getdeltaFundingPerSecond(\r\n      //   symbol,\r\n      //   symbol.delta,\r\n      //   prices[curSymbolIndex],\r\n      //   totalDynamicEquity,\r\n      //   newNetVolume\r\n      // );\r\n\r\n      return {\r\n        // deltaFunding1: bg(deltaFunding1)\r\n        //   .div(symbol.multiplier)\r\n        //   .times(SECONDS_IN_A_DAY)\r\n        //   .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    {\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    {\r\n      liquidityUsed0: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\r\n\r\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\r\n        if (symbolIds[index] == symbolId) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        }\r\n      }, bg(0));\r\n      return {\r\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\r\n          .div(liquidity)\r\n          .times(100)\r\n          .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    {\r\n      liquidityUsed1: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        poolAddress,\r\n        optionPool.activeSymbols.map((s) => s.symbol)\r\n      );\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      //const { liquidity } = poolState;\r\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      if (index > -1) {\r\n        const {\r\n          tradersNetVolume,\r\n          multiplier,\r\n          intrinsicValue,\r\n          timeValue,\r\n          K,\r\n        } = symbolState[index];\r\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\r\n        const args = [\r\n          bg(tradersNetVolume).times(multiplier).toNumber(),\r\n          bg(intrinsicValue).plus(timeValue).toNumber(),\r\n          bg(K).toNumber(),\r\n          bg(newNetVolume).times(multiplier).toNumber(),\r\n        ]\r\n\r\n        const res = queryTradePMM(...args);\r\n        //console.log('res', res)\r\n        return bg(res).div(newNetVolume).div(multiplier).toString();\r\n      } else {\r\n        console.log(\r\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\r\n        );\r\n        return '';\r\n      }\r\n    },\r\n    args,\r\n    'getEstimatedMarkPrice',\r\n    ''\r\n  );\r\n};\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\n//import { isOrderValid } from '../../v2/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\nimport { pTokenOptionFactory} from '../factory/tokens';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      '0',\r\n      'option'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n      //   optionPool.getParameters(),\r\n      //   optionPool.getLiquidity(),\r\n      //   pToken.getMargin(accountAddress),\r\n      //   pToken.getActiveSymbolIds(),\r\n      // ]);\r\n      // no minInitialMarginRatio in option\r\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      // let promises = [];\r\n\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      // const symbols = await Promise.all(promises);\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      // }\r\n      // const positions = await Promise.all(promises);\r\n\r\n      // let marginHeld = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .times(bg(positions[index]).volume.plus(newVolume))\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // marginHeld = marginHeld.times(initialMarginRatio);\r\n\r\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume)\r\n      //         .plus(newVolume)\r\n      //         .times(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      // const orderValidation = isOrderValid(\r\n      //   margin,\r\n      //   marginHeld,\r\n      //   liquidity,\r\n      //   liquidityUsed\r\n      // );\r\n      // if (orderValidation.success) {\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      // } else {\r\n      //   throw new Error(orderValidation.error);\r\n      // }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n  symbolIdList,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const tradeCost = deriToNatural(info.tradeCost);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const volume = tradeVolume.abs();\r\n  const symbolId = info.symbolId\r\n  const index = symbolIdList.indexOf(symbolId)\r\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\r\n\r\n  if (index > -1) {\r\n    return {\r\n      direction,\r\n      baseToken: bTokenSymbol,\r\n      symbolId,\r\n      symbol: symbols[index].symbol,\r\n      price: price.toString(),\r\n      volume: volume.times(symbols[index].multiplier).toString(),\r\n      transactionHash: txHash.toString(),\r\n      notional: tradeVolume.abs().times(price).times(multiplier[index]).toString(),\r\n      transactionFee: calculateTxFee( tradeVolume, price, multiplier[index], feeRatio[index]).toString(),\r\n      time,\r\n    };\r\n  } else {\r\n    return null\r\n  }\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const [toBlock] = await Promise.all([\r\n    getBlockInfo(chainId, 'latest'),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\r\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i]));\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, optionPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  let result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n      optionPool.activeSymbolIds,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  result = result.filter((tr) => tr !== null)\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    const [res] = await Promise.all([\r\n      fetchJson(\r\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n      ),\r\n      optionPool._updateConfig()\r\n    ]);\r\n    if (res && res.success) {\r\n      //console.log('his res', res.data)\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const symbols = optionPool.activeSymbols\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        //.filter((i) => i)\r\n        .map((i) => {\r\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\r\n          if (index > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            // i.symbolId is not in activeSymbols\r\n            return null\r\n          }\r\n        });\r\n    }\r\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\r\n    // fetch tradeHistory on the block with fromBlock from rest api\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { catchTxApiError, naturalToDeri } from \"../../shared\"\r\nimport { normalizeChainId } from \"../../shared/utils/validate\";\r\nimport { getPoolV2LiteManagerConfig } from \"../config\";\r\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const createPool = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\r\n      const poolManager = perpetualPoolLiteManagerFactory(\r\n        chainId,\r\n        poolManagerAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\r\n      // send tx\r\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\r\n  }, args)\r\n}\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const addSymbol = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      // process parameters\r\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\r\n      // send tx\r\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\r\n  }, args)\r\n}\r\n","import {\r\n  DeriEnv,\r\n  getPoolConfigList as getPoolV2ConfigList,\r\n  getPoolV1ConfigList,\r\n  VERSIONS,\r\n} from '../shared/config';\r\n\r\nexport const getContractAddressConfig = (env, version) => {\r\n  env = env || DeriEnv.get()\r\n  if (version === 'v1') {\r\n    return getPoolV1ConfigList(env);\r\n  } else if (VERSIONS.includes(version)) {\r\n    return getPoolV2ConfigList(version, env);\r\n  } else {\r\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n  }\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport { getPoolVersion, LITE_VERSIONS, LITE_AND_OPTION_VERSIONS } from '../shared/config';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getPoolLiquidity as getPoolLiquidity2,\r\n  getPoolInfoApy as getPoolInfoApy2,\r\n} from '../shared/api/database_api';\r\nimport {\r\n  getLiquidityInfoV2,\r\n  getPoolLiquidityV2,\r\n  getPoolInfoApyV2,\r\n} from '../v2/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n  getPoolLiquidityV2l,\r\n  getPoolInfoApyV2l,\r\n} from '../v2_lite/api';\r\nimport {\r\n  getLiquidityInfoOption,\r\n} from '../option/api';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'option') {\r\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\r\n    return getPoolLiquidityV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolLiquidity2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\r\n    return getPoolInfoApyV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolInfoApy2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { getPoolVersion, LITE_VERSIONS } from '../shared'\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  } else if (version === 'option') {\r\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'option') {\r\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getEstimatedFundingRateOption,\r\n  getFundingRateCacheOption,\r\n  getFundingRateOption,\r\n  getLiquidityUsedOption,\r\n  getPositionInfoOption,\r\n  getSpecificationOption,\r\n  getWalletBalanceOption,\r\n  getEstimatedFeeOption,\r\n  getEstimatedMarginOption,\r\n  getEstimatedLiquidityUsedOption,\r\n  isUnlockedOption,\r\n  getPositionInfosPosition,\r\n} from '../option/api';\r\nimport { getPoolVersion, isDeriUnlocked, LITE_VERSIONS } from '../shared';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport {\r\n  getPositionInfoV2,\r\n  isUnlockedV2,\r\n  getEstimatedMarginV2,\r\n  getEstimatedFeeV2,\r\n  getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsedV2,\r\n  getSpecificationV2,\r\n  getWalletBalanceV2,\r\n  getFundingRateV2,\r\n  getLiquidityUsedV2,\r\n  getFundingRateCacheV2,\r\n} from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getSpecificationOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getPositionInfoOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  if (version === 'option') {\r\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    // return empty array for v1, v2, v2_lite\r\n    return []\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'option') {\r\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  } else {\r\n    return getEstimatedMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedFundingRateOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedFundingRateV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedLiquidityUsedOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\r\nimport { getPoolVersion, LITE_VERSIONS, unlockDeri } from '../shared';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\nimport {\r\n  unlockV2,\r\n  tradeWithMarginV2,\r\n  closePositionV2,\r\n  depositMarginV2,\r\n  withdrawMarginV2,\r\n} from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return unlockOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'option') {\r\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'option') {\r\n    return withdrawMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return tradeWithMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersion, LITE_VERSIONS } from '../shared';\r\nimport { getTradeHistoryOption } from '../option/api';\r\nimport { getTradeHistory2 } from '../v1/api';\r\nimport { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { io } from \"socket.io-client\";\r\nimport {equalIgnoreCase } from \"../utils/utils\";\r\n\r\nclass WebSocket {\r\n  constructor(){\r\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\r\n      transports: ['websocket'],\r\n      withCredentials: true\r\n    })\r\n    this.events = [];\r\n    this.socket.on('connect', () => {\r\n      console.log('connect')\r\n      this.events.forEach(event => {\r\n        this.socket.emit(event[0],event[1]);\r\n      })\r\n    })\r\n    this.socket.on('disconnect',event => {\r\n      console.log('web socket disconnect,will reconnect auto')\r\n    })\r\n  }\r\n\r\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\r\n    this.socket.on(listener,data => {\r\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\r\n        onMessage(data)\r\n      }\r\n    })\r\n    this.socket.emit(event, params)\r\n    if(this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type) === -1){\r\n      this.events.push([event,params])\r\n    }\r\n  }\r\n\r\n  unsubscribe(event,params = {}){\r\n    this.socket.emit(event,params)\r\n  }\r\n}\r\nexport default new WebSocket()","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 10,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass Type {\r\n  current = null;\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current:observable,\r\n      setCurrent : action,\r\n      isOption : computed,\r\n      isFuture : computed\r\n    })\r\n  }\r\n\r\n  setCurrent(type){\r\n    this.current = type;\r\n  }\r\n\r\n  get isOption() {\r\n    return this.current === 'option'\r\n  }\r\n\r\n  get isFuture() {\r\n    return this.current === 'future'\r\n  }\r\n}\r\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = null;\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.current === 'v2_lite_open'\r\n  }\r\n}\r\nexport default new Version()","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nimport type from '../model/Type';\r\nconst versionKey = 'deri-current-version'\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base == 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  if(type.isOption){\r\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\r\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\r\n    } else {\r\n      symbol = symbol.split('-')[0]\r\n    }\r\n  }\r\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\nexport function equalIgnoreCase(str1,str2){\r\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\r\n}\r\n\r\nexport function stripSymbol(symbol){\r\n  if(!symbol){\r\n    return symbol;\r\n  }\r\n  if(/-/.test(symbol)){\r\n    symbol = symbol.split('-')[0]\r\n  }\r\n  return symbol\r\n}\r\n\r\n\r\nexport const  secondsInRange = {\r\n  '1' : 60,\r\n  '5' : 300,\r\n  '15' : 900,\r\n  '30' : 1800,\r\n  '60' : 3600,\r\n  '1D' : 3600 * 24,\r\n  '1W' : 3600 * 24 * 7\r\n}\r\nexport const intervalRange = {\r\n  '1' : 'min',\r\n  '5' : '5min',\r\n  '15' : '15min',\r\n  '30' : '30min',\r\n  '60' : 'hour',\r\n  '1D' : 'day',\r\n  '1W' : 'week'\r\n}\r\n\r\n \r\nexport function calcRange(interval){\r\n  const timestamp = new Date().getTime() /1000 ;\r\n  let from,to;\r\n  if(interval !== '1W') {\r\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\r\n    from  = to - secondsInRange[interval] * 1440\r\n  } else {\r\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\r\n    from = to - secondsInRange[interval] * 1440\r\n  }\r\n  return [from,to]\r\n \r\n}\r\n\r\n\r\n\r\n","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  async load(version,isOptions){\r\n    let current = version && version.current;\r\n    if(isOptions){\r\n      current = 'option'\r\n    }\r\n    if(current === 'v2_lite_open'){\r\n       await openConfigListCache.update()\r\n    }\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(isOptions){\r\n      configs = sortOptionSymbols(configs)\r\n    }\r\n    if(!isOptions && version){\r\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\r\n\r\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n\r\n// == array set\r\nexport const isEqualSet = (set1, set2) => {\r\n  if (set1.size !== set2.size) return false;\r\n  for (let item of set1) {\r\n    if (!set2.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// == contract gen\r\nexport const deleteIndexedKey = (obj) => {\r\n  if (isObject(obj)) {\r\n    let newObj = {}\r\n    Object.keys(obj).forEach((k) => {\r\n      if (!(/^\\d/.test(k))) {\r\n        newObj[k] = obj[k];\r\n      }\r\n    });\r\n    return newObj;\r\n  } else {\r\n    return obj\r\n  }\r\n};\r\n\r\nexport const fromWeiForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = fromWei(obj[i]);\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const toNumberForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = bg(obj[i]).toNumber();\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n\r\n// for frontend to display symbols\r\nexport const sortOptionSymbols = (symbolList) => {\r\n  const symbolArr = symbolList\r\n    .map((s) => s.symbol)\r\n    .map((s) => {\r\n      return s.split('-');\r\n    });\r\n  const unique = (value, index, self) => self.indexOf(value) === index\r\n  const to2 = (i) => i < 10 ? `0${i}` : i\r\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\r\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\r\n  const price = symbolArr\r\n    .map((s) => s[1])\r\n    .filter(unique)\r\n    .sort((a, b) => parseInt(b) - parseInt(a));\r\n  return symbolList.map((i, index) => {\r\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\r\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\r\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\r\n    i.index = parseInt(`${index1}${index2}${index3}`)\r\n    return i\r\n  }).sort((a, b) => a.index - b.index).map((i) => {\r\n    delete i.index\r\n    return i\r\n  })\r\n}\r\n\r\n","var map = {\n\t\"./de/Signin.json\": 568,\n\t\"./de/bridge.json\": 569,\n\t\"./de/broker.json\": 570,\n\t\"./de/dip-history.json\": 571,\n\t\"./de/footer.json\": 572,\n\t\"./de/governance.json\": 573,\n\t\"./de/header.json\": 574,\n\t\"./de/home.json\": 575,\n\t\"./de/lite.json\": 576,\n\t\"./de/mining.json\": 577,\n\t\"./de/mobile-lite.json\": 578,\n\t\"./de/permission.json\": 579,\n\t\"./de/pro.json\": 580,\n\t\"./de/team.json\": 581,\n\t\"./en/Signin.json\": 582,\n\t\"./en/bridge.json\": 583,\n\t\"./en/broker.json\": 584,\n\t\"./en/dip-history.json\": 585,\n\t\"./en/footer.json\": 586,\n\t\"./en/governance.json\": 587,\n\t\"./en/header.json\": 588,\n\t\"./en/home.json\": 589,\n\t\"./en/lite.json\": 590,\n\t\"./en/mining.json\": 591,\n\t\"./en/mobile-lite.json\": 592,\n\t\"./en/permission.json\": 593,\n\t\"./en/pro.json\": 594,\n\t\"./en/team.json\": 595,\n\t\"./zh/Signin.json\": 596,\n\t\"./zh/bridge.json\": 597,\n\t\"./zh/broker.json\": 598,\n\t\"./zh/dip-history.json\": 599,\n\t\"./zh/footer.json\": 600,\n\t\"./zh/governance.json\": 601,\n\t\"./zh/header.json\": 602,\n\t\"./zh/home.json\": 603,\n\t\"./zh/lite.json\": 604,\n\t\"./zh/mining.json\": 605,\n\t\"./zh/mobile-lite.json\": 606,\n\t\"./zh/permission.json\": 607,\n\t\"./zh/pro.json\": 608,\n\t\"./zh/team.json\": 609\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 567;","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport type from './model/Type'\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\n\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\r\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\r\n  const isOption = isOptionsLite || isOptionsPro\r\n  const categry = isOption ? 'option' : 'future'\r\n  type.setCurrent(categry)\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  }\r\n  if(isMobile){\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\nimport version from './Version'\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed,\r\n      supportOpen : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      if(version.isOpen){\r\n        await openConfigListCache.update()\r\n      }\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    if(version.isOpen){\r\n      await openConfigListCache.update()\r\n    }\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  isSupportChain(isOptions){\r\n    const chainId = this.detail.chainId\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    if(isOptions){\r\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\r\n    } else {\r\n      return this.supportChain\r\n    }\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n  get supportOpen(){\r\n    return this.detail.supportOpen\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport { equalIgnoreCase } from \"../utils/utils\";\r\nimport webSocket from \"./WebSocket\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n  load(symbol,timeType = 'min'){\r\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\r\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\r\n        this.setIndex(data.close)\r\n        for(const key of Object.keys(this.listeners)){\r\n          if(typeof this.listeners[key] === 'function'){\r\n            this.listeners[key](data)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol)\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n  unsubscribeBars(symbol){\r\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\r\n  }\r\n\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  clean(){\r\n    this.unsubscribeBars(this.symbol);\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\r\nimport { eqInNumber } from '../utils/utils';\r\nimport type from \"./Type\";\r\n\r\nexport default class Position {\r\n\r\n   callback = () => {}\r\n   callbackALL = ()=>{}\r\n   wallet = null;\r\n   spec = null\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n    premiumFundingAccrued:'',\r\n    deltaFundingAccrued:'',\r\n    strikePrice:0,\r\n    timePrice:0,\r\n    volatility:0,\r\n    isCall:false,\r\n   }\r\n\r\n   async load(wallet,spec,callback,isOption){\r\n     this.isOption = isOption\r\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      if(position){\r\n        if(callback){\r\n          callback(position)\r\n        }\r\n      }\r\n      this.start(wallet,spec,callback)\r\n      return position;\r\n     }\r\n   }\r\n\r\n   async loadAll(wallet,spec,callback){\r\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      let positions = [] \r\n      if(res.length){\r\n        positions = res.map(item=>{\r\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\r\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\r\n          return item\r\n        })\r\n      }\r\n      if(positions){\r\n        if(callback){\r\n          callback(positions)\r\n        }\r\n      }\r\n      this.startAll(wallet,spec,callback)\r\n      return positions;\r\n    }\r\n   }\r\n\r\n   startAll(wallet,spec,callback){\r\n    if(this.intervalAll !== null){\r\n      clearInterval(this.intervalAll);\r\n    }\r\n   this.intervalAll = window.setInterval(() => this.loadAll(wallet,spec,callback),3000)      \r\n   if(wallet){\r\n     this.wallet= wallet; \r\n   }\r\n   if(spec){\r\n     this.spec = spec\r\n   }\r\n   if(callback){\r\n     this.callbackALL = callback;\r\n   }\r\n  }\r\n\r\n   start(wallet,spec,callback){\r\n     if(this.interval !== null){\r\n       clearInterval(this.interval);\r\n     }\r\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback,this.isOption),3000)      \r\n    if(wallet){\r\n      this.wallet= wallet; \r\n    }\r\n    if(spec){\r\n      this.spec = spec\r\n    }\r\n    if(callback){\r\n      this.callback = callback;\r\n    }\r\n   }\r\n\r\n   \r\n\r\n   pause(){\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n   }\r\n\r\n   resume(wallet,spec,callback){\r\n     this.start(wallet,spec,callback || this.callback)\r\n   }\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\nimport type from \"./Type\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:[\"BUSD\"],\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    deltaFundingCoefficient:'0.2',\r\n    minInitialMarginRatio:0.1,\r\n    initialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    maintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    underlier :'',\r\n    strike:0,\r\n    optionType:'C',\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\r\n      if(type.isOption){\r\n        spec.underlier = this.getUnderlierStrike(spec).underlier\r\n        spec.strike = this.getUnderlierStrike(spec).strike\r\n        spec.optionType = this.getUnderlierStrike(spec).optionType\r\n      }\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  getUnderlierStrike(spec){\r\n    let underlier = spec.symbol.split('-')[0]\r\n    let strike = spec.symbol.split('-')[1]\r\n    let optionType = spec.symbol.split('-')[2]\r\n    return {\r\n      underlier:underlier,\r\n      strike:strike,\r\n      optionType:optionType\r\n    }\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    return spec.bTokenSymbol;\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config,isOptions){\r\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\nimport type from './Type'\r\nimport Type from \"./Type\";\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  type = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  positions = []\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n  optionsConfigs = {}\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      positions : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setOptionConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setPositions : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      optionFundingRateTip : computed,\r\n      initialMarginRatioTip : computed,\r\n      maintenanceMarginRatioTip : computed,\r\n      TransactionFeeTip : computed,\r\n      multiplierTip : computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,finishedCallback){  \r\n    const isOption = Type.isOption\r\n    const all = await this.configInfo.load(version,isOption);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version,isOption);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback,isOption){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback,isOption)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback,isOption){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    } else{\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      this.oracle.load(getFormatSymbol(config.symbol))\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,(position) => {\r\n          this.setPosition(position)\r\n          this.syncFundingRate(wallet,config,isOption)\r\n        },isOption),\r\n        this.contractInfo.load(wallet,config,isOption),\r\n        this.loadFundingRate(wallet,config,isOption),\r\n        this.historyInfo.load(wallet,config,isOption),\r\n        isOption && this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions),isOption),\r\n      ]).then(results => {\r\n        if(results.length === 5){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n          results[4] && this.setPositions(results[4]);\r\n          // this.refreshCache();\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  refreshCache(){\r\n    const {pool} = this.config;\r\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\r\n    priceCache.clear();\r\n    priceCache.update(pool,symbol)\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n\r\n \r\n\r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    if(position){\r\n      this.setPosition(position)\r\n    }\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume(this.wallet,this.config);\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    if(type.isOption){\r\n      this.setOptionConfigs(configs)\r\n    } \r\n    this.configs = configs\r\n  }\r\n\r\n  setOptionConfigs(configs){\r\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\r\n  }\r\n\r\n  groupConfigBySymbol(configs = []){\r\n    return configs.reduce((total,config) => {\r\n      const symbol = config.symbol.split('-')[0]\r\n      if(!total[symbol]){\r\n        total[symbol] = []\r\n      }\r\n      total[symbol].push(config)\r\n      return total;\r\n    },[])\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setPositions(positions){\r\n    if(positions){\r\n      this.positions = positions\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\r\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\r\n      if(type.isOption){\r\n        volume = +volume * +this.contract.multiplier\r\n        let index = this.contract.multiplier.indexOf('.')\r\n        let num = this.contract.multiplier.slice(index);\r\n        let length = num.length \r\n        let value = volume.toString()\r\n        if(value.indexOf(\".\") !== '-1'){\r\n          value = value.substring(0,value.indexOf(\".\") + length)\r\n        }\r\n        this.setVolume(value)\r\n      }else{\r\n        this.setVolume(volume.toFixed(0))\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  clean(){\r\n    this.oracle.clean();\r\n    this.positionInfo.pause();\r\n    this.version = null;\r\n    this.configs = [] \r\n    this.config = null;\r\n    this.index = ''\r\n    this.volume = ''\r\n    this.fundingRate = {}\r\n    this.position = {}\r\n    this.positions = []\r\n    this.contract = {}\r\n    this.history = []\r\n    this.userSelectedDirection = 'long'\r\n    this.optionsConfigs = {}\r\n  }\r\n\r\n\r\n  get volumeDisplay(){\r\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n\r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\r\n    const volume = optionVolume\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = totalVolume * price * contract.multiplier\r\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config,isOption){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get optionFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get initialMarginRatioTip(){\r\n    if(this.contract && this.contract.initialMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n  get maintenanceMarginRatioTip(){\r\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get multiplierTip(){\r\n    if(this.contract && this.config){\r\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get TransactionFeeTip(){\r\n    if(this.contract && this.config){\r\n        return `${Intl.get('lite','transaction-fee-tip')}${this.config.unit} = ${Intl.get('lite','transaction-fee-tip1')} ${this.contract.feeRatio * 100}%`\r\n    }\r\n    return ''\r\n  }\r\n\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\nimport type from './model/Type';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}