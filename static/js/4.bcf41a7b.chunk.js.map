{"version":3,"sources":["components/Button/Button.js","utils/DeriNumberFormat.js","components/hoc/withModal.js","components/Mining/Liquidity/Liquidity.js","components/Mining/Liquidity/Dialog/AddLiquidity.js","hooks/useSpecification.js","components/Mining/Liquidity/Dialog/RemoveLiquidity.js","components/Mining/Liquidity/LiquidityMining.js","components/Claim/Claim.js","hooks/useClaimInfo.js","hooks/useConfig.js","components/Mining/Trade/Liquidity.js","components/Mining/Trade/TradeMining.js","../node_modules/react-modal/lib/index.js"],"names":["Button","btnText","className","disabled","click","afterClick","useState","status","setStatus","pending","setPending","loadRef","useRef","onClick","a","current","style","display","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","useEffect","allowZero","others","value","Math","abs","displayType","withModal","Component","appElement","document","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","overflow","state","modalIsOpen","this","isOpen","onClose","React","AddDialog","wallet","address","baseToken","afterAdd","balance","isLpPool","amount","setAmount","decimal","setDecimal","addValue","setAddValue","spec","setSpec","loadSpec","isConnected","getSpecification","detail","chainId","account","useSpecification","addLiq","max","bg","gt","alert","minAddLiquidity","isNaN","res","addLpLiquidity","addLiquidity","success","toFixed","substring","indexOf","length","thousandSeparator","decimalScale","type","placeholder","onChange","e","target","RemoveDialog","liqInfo","afterRemove","setBalance","remove","shares","cur","removeLpLiquidity","removeLiquidity","data-dismiss","Operator","loadLiquidity","loadLiqidityInfo","isApproved","setIsApproved","btnType","setBtnType","setIsOpen","buttonElment","setButtonElment","loadBalance","eqInNumber","total","getLpWalletBalance","getWalletBalance","isApprove","isLpUnlocked","result","isUnlocked","approve","unlockLp","unlock","error","message","connect","el","inject","observer","liquidity","setLiquidity","loadLiquidityInfo","getPoolInfoApy","apyPool","getPoolLiquidity","pooLiquidity","info","getLpLiquidityInfo","getLiquidityInfo","isSushi","sushiApy","shareValue","poolLiquidity","apy","percent","values","suffix","title","LiquidityMining","Claim","miningClaim","tradingClaim","setBtnText","claimed","setClaimed","claimInfo","setClaimInfo","interval","loadClaimInfo","getUserInfoAll","unclaimed","valid","harvestDeriLp","lp","harvestDeriTrade","trade","window","setInterval","clearInterval","useClaimInfo","claimInfoInterval","remainingTime","setRemainingTime","config","DeriEnv","get","useConfig","claim","text","parseInt","Date","now","mintDToken","period","dis","h","m","s","trading","symbol","userInfoInPool","setUserInfoInPool","tradeSummary","setTradeSummary","history","useHistory","loadUserInfoInPool","userInfo","getUserInfoInPool","userInfoPool","myTradingVolumeCurrent","volume1h","getTradeInfo","poolInfo","totalTradingVolumeCurrent","switch","pool","push","TradeMining","Object","defineProperty","exports","obj","_Modal","require","_Modal2","__esModule","default","module"],"mappings":"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","file":"static/js/4.bcf41a7b.chunk.js","sourcesContent":["import {useState,useRef} from 'react';\r\nexport default function Button({btnText,className,disabled,click,afterClick}){\r\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\r\n  const [pending, setPending] = useState(false);\r\n  const loadRef = useRef(null)\r\n\r\n  const onClick = async () => {\r\n    if(status !== 'enabled') {\r\n      return ;\r\n    }\r\n    setStatus('disabled')\r\n    setPending(true);\r\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\r\n    const result = await click();    \r\n    if(result){\r\n      afterClick && afterClick()\r\n    } \r\n    loadRef.current && (loadRef.current.style.display = 'none')\r\n    setStatus('enabled')\r\n    setPending(false);\r\n  }\r\n\r\n  return(\r\n    <button className={className} onClick={onClick} >\r\n        <span className='btn-loading-wrap'>\r\n          <span ref={loadRef}\r\n            className='spinner spinner-border spinner-border-sm'\r\n            style={{display : 'none' ,marginRight : '2'}}>\r\n          </span>\r\n        </span>\r\n          {pending ? 'PENDING' : btnText  }\r\n        </button>\r\n  )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nexport default function DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState('--');\r\n\r\n  useEffect(() => {\r\n    const {allowZero,...others} = props \r\n    if((props.value || ((Math.abs(props.value)) === 0 && allowZero === true))) {\r\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\r\n    } \r\n    return () => {};\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 2,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className} = this.props\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={customizeStyle} appElement={appElement}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return WithModal;\r\n}\r\nexport default withModal;","import React, { useState, useEffect} from 'react'\r\nimport {\r\n\tgetLiquidityInfo,getPoolInfoApy,isUnlocked,unlock,getPoolLiquidity, getWalletBalance, unlockLp, isLpUnlocked, getLpWalletBalance, getLpLiquidityInfo\r\n} from '../../../lib/web3js/indexV2'\r\nimport AddLiquidity from './Dialog/AddLiquidity';\r\nimport RemoveLiquidity from './Dialog/RemoveLiquidity';\r\nimport Button from '../../Button/Button';\r\nimport { inject, observer } from 'mobx-react';\r\nimport withModal from '../../hoc/withModal';\r\nimport { eqInNumber, isSushi } from '../../../utils/utils';\r\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat';\r\n\r\nfunction Liquidity({wallet,chainId,baseToken,address,type}) {\r\n  const [liquidity,setLiquidity] = useState({})\r\n\r\n\tconst isLpPool = (type === 'lp')\r\n\t\r\n\r\n\tconst loadLiquidityInfo = async () => {\r\n\t\tconst apyPool = await getPoolInfoApy(chainId,address)\r\n\t\tconst pooLiquidity = await getPoolLiquidity(chainId,address);\r\n\r\n\t\tif(wallet.isConnected() && eqInNumber(chainId , wallet.detail.chainId)){\r\n\t\t\tlet info = null;\r\n\t\t\tif(isLpPool){\r\n\t\t\t\tinfo = await getLpLiquidityInfo(chainId,address,wallet.detail.account)\r\n\t\t\t} else {\r\n\t\t\t\tinfo = await getLiquidityInfo(chainId,address,wallet.detail.account);\r\n\t\t\t}\r\n\r\n\t\t\tlet sushiApy ;\r\n\t\t\tif(isSushi(address)){\r\n\t\t\t\tsushiApy =  0.22008070161007/(+pooLiquidity.liquidity) * 100;           \r\n\t\t\t}\r\n\t\t\tif(info){\r\n\t\t\t\tif(!info.shareValue){\r\n\t\t\t\t\tinfo.shareValue = 1;\r\n\t\t\t\t}\r\n\t\t\t\tsetLiquidity({\r\n\t\t\t\t\ttotal :  (+info.poolLiquidity),\r\n\t\t\t\t\tapy : (+apyPool.apy) * 100,\r\n\t\t\t\t\tshareValue : info.shareValue,\r\n\t\t\t\t\tpercent : ((info.shares * info.shareValue) / info.poolLiquidity) * 100 ,\r\n\t\t\t\t\tshares : info.shares,\r\n\t\t\t\t\tvalues : info.shares * info.shareValue,\r\n\t\t\t\t\tsushiApy\r\n\t\t\t\t})\t\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tlet sushiApy ;\r\n\t\t\tif(isSushi(address)){\r\n\t\t\t\tsushiApy =  0.22008070161007/pooLiquidity.liquidity * 100;           \r\n\t\t\t}\r\n\t\t\tif(pooLiquidity){\r\n\t\t\t\tsetLiquidity({\r\n\t\t\t\t\ttotal : pooLiquidity.liquidity,\r\n\t\t\t\t\tapy : (+apyPool.apy) * 100,\r\n\t\t\t\t\tsushiApy\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tloadLiquidityInfo();\r\n\t\treturn () => {}\r\n\t}, [wallet.detail.account])\r\n\r\n\r\n  return (\r\n    <div className=\"liquidity-box\">\r\n      <div className=\"odd title\">Provide { baseToken } Earn DERI</div>\r\n\t\t\t\t<div className=\"odd text\">\r\n\t\t\t\t\t\t<div className=\"text-title\">Pool Total Liquidity</div>\r\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.total} suffix={` ${baseToken}`  } thousandSeparator={true}/></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"odd text\">\r\n\t\t\t\t\t\t<div className=\"text-title\">APY</div>\r\n\t\t\t\t\t\t<div className='text-num' >\r\n\t\t\t\t\t\t\t<span title={isSushi(address) && 'DERI-APY'} className={`${isSushi(address) && 'sushi-apy-underline'}`}><DeriNumberFormat value={ liquidity.apy } decimalScale={2} suffix='%'/></span>\r\n\t\t\t\t\t\t\t{isSushi(address) && <><span> +</span> <span className=\"sushi-apy-underline text-num\" title='SUSHI-APY'> \r\n\t\t\t\t\t\t\t<DeriNumberFormat value={ liquidity.sushiApy } allowZero={true}  decimalScale={2} suffix='%'/></span></>}\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"odd text\">\r\n\t\t\t\t\t\t<div className=\"text-title\">Liquidity Share Value</div>\r\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat  allowZero={true} decimalScale={6} value={ liquidity.shareValue} suffix={ ' '+ baseToken } thousandSeparator={true}/></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"odd text\">\r\n\t\t\t\t\t\t<div className=\"text-title\">My Liquidity Pencentage</div>\r\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.percent } decimalScale={2} suffix={'%'}/></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"odd text\">\r\n\t\t\t\t\t\t<div className=\"text-title\">Staked Balance </div>\r\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true}  value={ liquidity.shares  } decimalScale={2} /> <span>Shares</span> </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"odd claim-network\">\r\n\t\t\t\t\t<div className=\"text-title money\"><DeriNumberFormat allowZero={true}   value={liquidity.values} suffix ={' '+ baseToken } decimalScale={2}/></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"title-check\">\r\n\t\t\t\t</div>\r\n\t\t\t\t <Operator wallet={wallet} chainId={chainId} address={address} liqInfo={liquidity} baseToken={baseToken} loadLiquidity={loadLiquidityInfo} isLpPool={isLpPool} loadLiqidityInfo={loadLiquidityInfo}/>\r\n\t</div>\r\n  )\r\n}\r\n\r\n\r\nconst AddDialog = withModal(AddLiquidity)\r\nconst RemoveDialog = withModal(RemoveLiquidity)\r\n\r\n//操作区\r\nconst Operator = ({wallet,chainId,address,baseToken,loadLiquidity,isLpPool,liqInfo,loadLiqidityInfo})=> {\r\n\tconst [isApproved,setIsApproved] = useState(false)\r\n\tconst [btnType, setBtnType] = useState('add')\r\n\tconst [isOpen, setIsOpen] = useState(false)\r\n\tconst [balance, setBalance] = useState('');\r\n\tconst [buttonElment, setButtonElment] = useState(null);\r\n\t\r\n\r\n  const loadBalance = async () => {\r\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\r\n\t\t\tlet total = null;\r\n\t\t\tif(isLpPool){\r\n\t\t\t\ttotal = await getLpWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\r\n\t\t\t} else {\r\n\t\t\t\ttotal = await getWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\r\n\t\t\t}\r\n\t\t\tif(typeof total !== 'object'){\r\n\t\t\t\tsetBalance(total)\t\t\t\t\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\t\tloadBalance();\r\n\t\tloadLiqidityInfo();\r\n    return () => {}\r\n  }, [wallet.detail.account])\r\n\r\n\r\n\tconst isApprove = async () => {\r\n\t\tif(isLpPool){\r\n\t\t\tconst result = await isLpUnlocked(chainId,address,wallet.detail.account) \t\t\t \r\n\t\t\tsetIsApproved(result);\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\tconst result = await isUnlocked(chainId,address,wallet.detail.account) \t\t\t \r\n\t\t\tsetIsApproved(result);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\r\n\tconst approve = async () => {\r\n\t\tlet res = null;\r\n\t\tif(isLpPool){\r\n\t\t\tres = await unlockLp(chainId,address,wallet.detail.account);\r\n\t\t} else {\r\n\t\t\tres = await unlock(chainId,address,wallet.detail.account);\r\n\t\t}\t\t\r\n\t\tif(res && res.success){\r\n\t\t\tsetIsApproved(true)\r\n\t\t} else {\r\n\t\t\talert(res.error ?  res.error.message || 'Approve failed' : 'Approve failed')\r\n\t\t}\r\n  }\r\n\r\n\r\n\tconst connect =  async () => {\r\n\t\tawait wallet.connect();\r\n\t}\r\n\t\r\n\tconst addLiquidity = () => {\r\n\t\tsetIsOpen(true);\r\n\t\tsetBtnType('add')\r\n\t}\r\n\r\n\tconst afterClick = () => {\r\n\t\tsetIsOpen(false);\r\n\t\tloadLiquidity()\r\n\t\tloadBalance();\r\n\t\tloadLiqidityInfo();\r\n\t}\r\n\r\n\tconst removeLiquidity = () => {\r\n\t\tsetIsOpen(true);\r\n\t\tsetBtnType('remove')\r\n\t}\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n\t\t//todo 判断网络\r\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId, chainId)){\r\n\t\t\tisApprove()\r\n    }\r\n\t\treturn () => {}\r\n\t}, [wallet.detail.account])\r\n\r\n\tuseEffect(() => {\t\t\r\n\t\tif(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId) && isApproved){\r\n\t\t\tsetButtonElment((<div className=\"add-remove-liquidity\">\r\n\t\t\t<button \r\n\t\t\t\t\tclassName=\"add-liquidity\"\r\n\t\t\t\t\tonClick={addLiquidity}>\r\n\t\t\t\t\tADD LIQUIDITY\r\n\t\t\t</button>\r\n\t\t\t<button className=\"remove-liquidity\" onClick={removeLiquidity}>\r\n\t\t\t\t\tREMOVE LIQUIDITY\r\n\t\t\t</button>\r\n\t\t</div>))\r\n\t\t} else {\r\n\t\t\tlet el = null\r\n\t\t\tif(!wallet.isConnected()){\r\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={connect} btnText='Connect Wallet'></Button></div>\r\n\t\t\t} else if(!eqInNumber(wallet.detail.chainId,chainId)) {\r\n\t\t\t\tel = <div className=\"approve\" ><Button className='approve-btn wrong-network' btnText='Wrong Network'></Button></div>\t\t\t\t\r\n\t\t\t} else if(!isApproved) {\r\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={approve} btnText='APPROVE'></Button></div>\r\n\t\t\t} \r\n\t\t\tsetButtonElment(el)\r\n\t\t}\r\n\t\t\t\r\n\t\treturn () => {};\r\n\t}, [wallet.detail.account,isApproved]);\r\n\r\n  return (\r\n    <div className=\"liquidity-btn\">\r\n\t\t\t{\r\n\t\t\t\tbtnType === 'add' \r\n\t\t\t\t? <AddDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} balance={balance} address={address} wallet={wallet} baseToken={baseToken} afterAdd={afterClick}/> \r\n\t\t\t\t: <RemoveDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} liqInfo={liqInfo} address={address} wallet={wallet} baseToken={baseToken} afterRemove={afterClick}/>\r\n\t\t\t}\t\t\t\r\n\t\t\t{buttonElment}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default inject('wallet')(observer(Liquidity))","import React, { useState ,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\nimport Button from '../../../Button/Button';\r\nimport Modal from 'react-modal'\r\nimport { addLiquidity, getWalletBalance, bg, addLpLiquidity } from '../../../../lib/web3js/indexV2';\r\nimport useSpecification from '../../../../hooks/useSpecification';\r\n\r\n\r\n\r\nexport default function AddLiquidity({wallet,address,baseToken,onClose,afterAdd,balance,isLpPool}){\r\n  const [amount, setAmount] = useState('0');\r\n  const [decimal, setDecimal] = useState('00');\r\n  const [addValue, setAddValue] = useState('')\r\n  const spec = useSpecification({wallet,address});\r\n\r\n\r\n  const input = (e) => {\r\n    const {value} =e.target\r\n    setAddValue(value)\r\n  }\r\n\r\n  const addAll = () => {\r\n    setAddValue(balance);\r\n  }\r\n\r\n  const addLiq = async () => {\r\n    const max = bg(balance)\r\n    const cur = bg(addValue);\r\n    if(cur.gt(max)) {\r\n      alert(\"not sufficient funds\");\r\n      return false;\r\n    }\r\n    if(spec && (+addValue) < (+spec.minAddLiquidity)) {\r\n      alert(`The input liquidity shall not be less than ${spec.minAddLiquidity}`);\r\n      return false;\r\n    }\r\n    if(addValue <=0 || isNaN(addValue)){\r\n      alert(\"It has to be greater than zero\");\r\n      return false;\r\n    }\r\n    let res =  null;\r\n    if(isLpPool){\r\n      res = await addLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue);\r\n    } else{\r\n      res = await addLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue)\r\n    }\r\n    \r\n    if (!res ||  !res.success) {\r\n      alert(\"failure of transaction\");\r\n    }\r\n    return true;\r\n  }\r\n\r\n  useEffect(() => {    \r\n    const amount = (+balance).toFixed(2)\r\n    const decimal = amount.substring(amount.indexOf('.') + 1,amount.length)\r\n    setAmount(amount);\r\n    setDecimal(decimal)\r\n    return () => {};\r\n  }, [balance]);\r\n\r\n\r\n  return(\r\n    <div className='modal-dialog'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <div className='title'>ADD LIQUIDITY</div>\r\n            <div className='close' onClick={onClose}>\r\n              <span>&times;</span>\r\n            </div>\r\n          </div>\r\n          <div className='modal-body'>\r\n            <div className='margin-box-info'>\r\n              <div>Wallet Balance</div>\r\n              <div className='money'>\r\n                <span> \r\n                  <span className='bt-balance'>\r\n                    <NumberFormat displayType='text' value ={amount } thousandSeparator={true} allowZero={true} decimalScale={0}/>.\r\n                    <span className='float'><NumberFormat displayType='text' value ={decimal} thousandSeparator={true} decimalScale={2} allowZero={true}/></span>\r\n                  </span> \r\n                    <div className='base-token'>{ baseToken }</div> \r\n                  </span>\r\n                <span className='add'></span>\r\n              </div>\r\n              <div className='enter-margin'>\r\n                <div className='input-margin'>\r\n                  <div className='box'>\r\n                    <div className='amount' style={{display : addValue ? 'block' : 'none'}}>LIQUIDITY</div>\r\n                    <input\r\n                      type='number'\r\n                      className='margin-value'\r\n                      placeholder='LIQUIDITY'\r\n                      value={addValue}\r\n                      onChange={input}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>{ baseToken }</div>\r\n              </div>\r\n              <div className='max'>\r\n                MAX: <span className='max-num'>{balance }</span>\r\n                <span className='max-btn-left' onClick={addAll}>ADD ALL</span>\r\n              </div>\r\n              <div className='add-margin-btn'>\r\n                <Button className='margin-btn' click={addLiq} btnText='ADD' afterClick={afterAdd}/>\r\n              </div>\r\n            </div>\r\n          </div>    \r\n        </div>\r\n      </div>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport { getSpecification } from \"../lib/web3js/indexV2\";\r\n\r\nexport default function useSpecification({wallet,address}){\r\n  const [spec, setSpec] = useState({});\r\n\r\n  const loadSpec = async () => {\r\n    if(wallet.isConnected() && address){\r\n      const spec =  await getSpecification(wallet.detail.chainId,address,wallet.detail.account);\r\n      setSpec(spec);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadSpec();\r\n    return () => {      \r\n    }\r\n  }, wallet.detail.account,address);\r\n\r\n  return spec;\r\n}","import React, { useState ,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\nimport { removeLiquidity, bg, removeLpLiquidity } from '../../../../lib/web3js/indexV2';\r\nimport Button from '../../../Button/Button';\r\n\r\nexport default function RemoveLiquidity({wallet,address,liqInfo,onClose,afterRemove,isLpPool}){  \r\n  const [amount, setAmount] = useState('');\r\n  const [balance, setBalance] = useState('0');\r\n  const [decimal, setDecimal] = useState('00');\r\n\r\n\r\n  const addAll = () => {\r\n    setAmount(liqInfo.shares)\r\n  }\r\n\r\n  const onChange = e => {\r\n    const {value} = e.target;\r\n    setAmount(value)\r\n  }\r\n\r\n  const remove = async () => {\r\n    const max = bg(liqInfo.shares);\r\n    const cur = bg(amount);\r\n    if(!isLpPool){\r\n      const balance = (+liqInfo.shares) - (+amount)\r\n      if (balance < 1 && balance !== 0) {\r\n        alert('Leaving staking balance of smaller than 1 is not allowed. Please click \"MAX\" to remove all if you are to withdraw all of your liquidity.');\r\n        return false;\r\n      }\r\n    }\r\n    if (cur.gt(max)) {\r\n      alert(`Your current max removable shares are  ${liqInfo.shares}`);\r\n      return false;\r\n    }\r\n    if (+amount <= 0 || isNaN(amount)) {\r\n      alert(\"Invalid Liquidity!\");\r\n      return false;\r\n    }\r\n    let res = null;\r\n    if(isLpPool){\r\n      res = await removeLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount);\r\n    } else {\r\n      res = await removeLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount);\r\n    }\r\n    \r\n    if(!res || !res.success){\r\n      alert(\"failure of transaction\");\r\n      return false; \r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  useEffect(() => {    \r\n    if(liqInfo && liqInfo.shares){\r\n      const balance = (+liqInfo.shares).toFixed(2)\r\n      const decimal = balance.substring(balance.indexOf('.') +1 ,balance.length)\r\n      setBalance(balance);\r\n      setDecimal(decimal)\r\n    }\r\n    return () => {};\r\n  }, [liqInfo.shares]);\r\n\r\n  \r\n  \r\n  return(\r\n    <div className='modal-dialog'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <div className='title'>REMOVE LIQUIDITY</div>\r\n            <div className='close' data-dismiss='modal' onClick={onClose}>\r\n              <span>&times;</span>\r\n            </div>\r\n          </div>\r\n          <div className='modal-body'>          \r\n            <div className='margin-box-info'>\r\n              <div>Shares Available</div>\r\n              <div className='money'>\r\n                <span>\r\n                  <span className='bt-balance'>\r\n                    <NumberFormat displayType='text' value ={balance} decimalScale={0} thousandSeparator={true}/>.\r\n                    <span className='float'>{decimal}</span>\r\n                  </span>\r\n                    </span>\r\n                <span className='remove'></span>\r\n              </div>\r\n              <div className='enter-margin'>\r\n                <div className='input-margin'>\r\n                  <div className='box'>\r\n                    <div className='amount' style={{display : amount ? 'block' : 'none'}}>\r\n                      LIQUIDITY SHARES\r\n                    </div>\r\n                    <input\r\n                      type='number'\r\n                      className='margin-value'\r\n                      placeholder='LIQUIDITY SHARES'\r\n                      value={amount}\r\n                      onChange={onChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>Shares</div>\r\n              </div>\r\n              <div className='max'>\r\n                <span>MAX REMOVEABLE:</span>\r\n                <span className='max-num'>{liqInfo.shares}</span>\r\n                <span className='max-btn-left' onClick={addAll}>REMOVE ALL</span>\r\n              </div>\r\n              <div className='add-margin-btn'>\r\n                <Button click={remove} className='margin-btn' btnText='REMOVE' afterClick={afterRemove}/>\r\n              </div>\r\n            </div>\r\n          </div>    \r\n        </div>\r\n      </div>\r\n      )\r\n}","import Claim from '../../Claim/Claim';\r\nimport Liquidity from './Liquidity';\r\n\r\n\r\nfunction LiquidityMining(props){\r\n  return (\r\n    <div className=\"liquidity-info\">\r\n      <Claim {...props} miningClaim={true}/>\r\n      <Liquidity {...props}/>\r\n  </div>)\r\n}\r\n\r\nexport default LiquidityMining","import { useState, useEffect} from 'react'\r\n\r\nimport useClaimInfo from \"../../hooks/useClaimInfo\";\r\nimport useConfig from \"../../hooks/useConfig\";\r\nimport { mintDToken } from \"../../lib/web3js/indexV2\";\r\nimport Button from '../Button/Button';\r\nimport { eqInNumber } from '../../utils/utils';\r\n\r\nexport default function Claim({wallet,miningClaim,tradingClaim}){\r\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\r\n\tconst [claimed, setClaimed] = useState(false);\r\n\tconst [claimInfo,claimInfoInterval] = useClaimInfo(wallet);\r\n\tconst [remainingTime, setRemainingTime] = useState('')\r\n\tconst config = useConfig(claimInfo.chainId) \r\n\r\n  //claim deri\r\n\tconst claim = async () => {\r\n\t\tif(!eqInNumber(wallet.detail.chainId,claimInfo.chainId)) {\r\n\t\t\talert(`Your DERI is on ${ config.text } . Connect to ${ config.text } to claim.`)\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif (claimInfo.unclaimed === 0) {\r\n\t\t\talert('Sorry,no DERI to claim yet');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\r\n\t\tif (now < 1800) {\r\n\t\t\talert('Claiming DERI is disabled during first 30 minutes of each epoch');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst res = await mintDToken(wallet.detail.chainId,wallet.detail.account)\r\n\t\tif(res.success){\r\n\t\t\tclearInterval(claimInfoInterval);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\talert('Claim failed')\r\n\t\t\treturn false;\r\n\t\t}\r\n  }\r\n\r\n\tconst click = async () => {\r\n\t\tif(wallet.isConnected()){\r\n\t\t\tconst res = await claim();\r\n\t\t\tif(res){\r\n\t\t\t\tsetClaimed(true)\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\r\n\r\n\t\r\n\t//初始化按钮文案和事件\r\n\tconst initButton = () => {\r\n\t\tif(wallet.isConnected()){\r\n\t\t\tsetBtnText('CLAIM')\r\n\t\t} else {\r\n\t\t\tsetBtnText('Collect Wallet')\r\n\t\t}\r\n\t}\r\n  \r\n  useEffect(() => {\r\n\t\tlet interval = null;\r\n\t\tif(miningClaim){\r\n\t\t\t//计数器\r\n\t\t\tinterval = window.setInterval(() => {\r\n\t\t\t\tlet period = 3600 * 8;\r\n\t\t\t\tlet current = parseInt(Date.now()/1000);\r\n\t\t\t\tlet epochBegin = parseInt(current / period)*period;\r\n\t\t\t\tlet dis = (epochBegin + period - current);\r\n\t\t\t\tlet h = parseInt(dis / 3600);\r\n\t\t\t\tlet m = parseInt((dis % 3600)/60)\r\n\t\t\t\tlet s = parseInt(dis % 60) \r\n\t\t\t\tsetRemainingTime(`${h} h ${m} m ${s} s`);\r\n\t\t\t},1000);\r\n\t\t}    \r\n\r\n\t\tinitButton();\t\t\r\n    return () => {\r\n      interval && clearInterval(interval);\r\n\t\t};\r\n\t\t\r\n  }, [wallet.detail.account]);\r\n\r\n\r\n  return (\r\n    <div className='claim-box'>\r\n\t\t\t\t<div className='odd title'>{miningClaim ?  'My Liquidity-Providing Harvest in Current Epoch' : 'My Trading Harvest in Current Epoch'}</div>\r\n\t\t\t\t{miningClaim && <div className='odd text'>\r\n\t\t\t\t\t\t<div className='text-title'>Current Epoch Remaining Time</div>\r\n\t\t\t\t\t\t<div className='text-num'>{ remainingTime }</div>\r\n\t\t\t\t</div>}\t\t\t\t\r\n\t\t\t\t<div className='odd text'>\r\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>My Harvest in Current Epoch (estimated)</div>}\r\n\t\t\t\t\t\t{tradingClaim && <div className='text-title'> My Trading Harvest in Current Epoch (Est)</div>}\r\n\t\t\t\t\t\t<div className='text-num'>{ miningClaim ? claimInfo.harvestDeriLp : claimInfo.harvestDeriTrade} DERI</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='odd text'>\r\n\t\t\t\t\t\t<div className='text-title'>Claimed DERI</div>\r\n\t\t\t\t\t\t<div className='text-num'>{claimed ? ((+claimInfo.claimed) + (+claimInfo.unclaimed)).toFixed(2) : claimInfo.claimed }</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='odd text'>\r\n\t\t\t\t\t\t<div className='text-title'></div>\r\n\t\t\t\t\t\t<div className='text-num'></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='odd text'>\r\n\t\t\t\t\t\t<div className='text-title'>Unclaimed DERI</div>\r\n\t\t\t\t\t\t<div className='text-num'>{ claimed ? 0 : claimInfo.unclaimed }</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{tradingClaim && \r\n\t\t\t\t<div className='odd text'>\r\n\t\t\t\t\t\t<div className='text-title'></div>\r\n\t\t\t\t\t\t<div className='text-num'></div>\r\n\t\t\t\t</div>}\r\n\t\t\t\t<div className='odd claim-network'>\r\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>Your DERI is on { config.text } . Connect to { config.text } to claim.</div>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='claim-btn'>\r\n\t\t\t\t\t<Button btnText={btnText} click={click} className='claim'/>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n      </div>\r\n  ) \r\n}","import { useState, useEffect } from 'react'\r\nimport { getUserInfoAll ,deriToNatural} from '../lib/web3js/indexV2';\r\n\r\n\r\nexport default function useClaimInfo(wallet){\r\n  const [claimInfo, setClaimInfo] = useState({});\r\n  let interval = null;\r\n\r\n  const loadClaimInfo =  async () => {\r\n    if(wallet.isConnected()){\r\n      const claimInfo  = await getUserInfoAll(wallet.detail.account);\r\n      const claimed = (+claimInfo.total).toFixed(2);\r\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\r\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\r\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\r\n      const chainId = claimInfo.chainId\r\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade,chainId})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\r\n      loadClaimInfo();\r\n    return () => clearInterval(interval);\r\n  }, [wallet.detail.account])\r\n  return [claimInfo,interval];\r\n}","import config from '../config.json'\r\nimport {DeriEnv} from '../lib/web3js/indexV2'\r\nexport default function useConfig(chainId,type = 'chainInfo'){\r\n  return config[DeriEnv.get()][type][chainId] || {};\r\n}","import { useState, useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { getUserInfoAll,getUserInfoInPool ,getPoolInfoApy} from '../../../lib/web3js/indexV2';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n\r\n\r\nfunction Liquidity({wallet = {},trading,chainId,address,symbol}) {\r\n  const [userInfoInPool,setUserInfoInPool] = useState({})\r\n  const [tradeSummary, setTradeSummary] = useState({});\r\n  const history = useHistory();\r\n\r\n\tconst loadUserInfoInPool = async () => {\r\n\t\tconst userInfo = await getUserInfoAll(wallet.account);\r\n\t\tconst userInfoPool = await getUserInfoInPool(chainId,address,wallet.account);\r\n\t\tconst harvestDeriTrade = (+userInfo.trade).toFixed(2);\r\n\t\tconst myTradingVolumeCurrent = userInfoPool.volume1h\r\n\t\tsetUserInfoInPool({harvestDeriTrade,myTradingVolumeCurrent})\r\n\t}\r\n\r\n\tconst getTradeInfo = async () => {\r\n\t\tconst poolInfo = await getPoolInfoApy(chainId,address);\r\n\t\tconst totalTradingVolumeCurrent = poolInfo.volume1h\r\n\t\tsetTradeSummary({totalTradingVolumeCurrent})\r\n  }\r\n  \r\n  const toTrade = () => {\r\n    trading.switch({chainId : chainId,pool : address,symbol : symbol})\r\n    // sessionStorage.setItem('current-trading-pool',JSON.stringify())\r\n    history.push('/lite')\r\n  }\r\n\r\n\tuseEffect(() => {\r\n\t\tif(wallet && wallet.account){\r\n\t\t\tloadUserInfoInPool();\r\n\t\t\tgetTradeInfo();\r\n\t\t}\r\n\t\treturn () => {};\r\n\t}, []);\r\n\r\n  return(\r\n    <div className=\"liquidity-box\">\r\n      <div className=\"odd title\">Trade to Earn DERI</div>\r\n        <div className=\"odd text\">\r\n            <div className=\"text-title\">Total Trading Volume in Current Hour</div>\r\n            <div className=\"text-num\">{ tradeSummary.totalTradingVolumeCurrent || 0}</div>\r\n        </div>\r\n        <div className=\"odd text\">\r\n            <div className=\"text-title\">My Trading Volume in Current Hour</div>\r\n            <div className=\"text-num\">{ userInfoInPool.myTradingVolumeCurrent || 0 }</div>\r\n        </div>\r\n        <div className=\"odd text\">\r\n            <div className=\"text-title\"></div>\r\n            <div className=\"text-num\"></div>\r\n        </div>\r\n        <div className=\"odd text\">\r\n            <div className=\"text-title\"></div>\r\n            <div className=\"text-num\"></div>\r\n        </div>\r\n        <div className=\"odd text\">\r\n            <div className=\"text-title\"></div>\r\n            <div className=\"text-num\"></div>\r\n        </div>\r\n        <div className=\"odd claim-network\">\r\n              \r\n        </div>\r\n        <div className=\"claim-btn\">\r\n            <button className=\"claim\" onClick={toTrade}>\r\n              TRADE\r\n            </button>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\nexport default inject('trading')(observer(Liquidity))","import Claim from '../../Claim/Claim';\r\nimport Liquidity from './Liquidity';\r\n\r\nexport default function TradeMining({wallet,...props}){\r\n  return(\r\n    <div className=\"trade-info\">\r\n      <Claim wallet={wallet} tradingClaim={true}/>\r\n\t\t\t<Liquidity {...props}/>\r\n  </div>\r\n  )\r\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];"],"sourceRoot":""}