{"version":3,"sources":["lib/web3js/v2/contract/v2_lite/perpetual_pool.js","lib/web3js/v2/contract/v2_lite/l_token.js","lib/web3js/v2/contract/v2_lite/p_token.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database_base.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/factory/web3.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/factory/v2/index.js","lib/web3js/v2/factory/v2_lite/index.js","lib/web3js/v2/api/v2/mining_query_api.js","lib/web3js/v2/api/v2/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/v2/trade_query_api.js","lib/web3js/v2/api/v2/trade_transaction_api.js","lib/web3js/v2/api/v2_lite/mining_query_api.js","lib/web3js/v2/api/v2_lite/mining_transaction_api.js","lib/web3js/v2/api/v2_lite/trade_query_api.js","lib/web3js/v2/api/v2_lite/trade_transaction_api.js","lib/web3js/v2/api/v2/trade_history_api.js","lib/web3js/v2/api/v2_lite/trade_history_api.js","lib/web3js/v2/api/broker_api.js","lib/web3js/v2/api/activity_api.js","lib/web3js/config/database.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/chain.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","lib/web3js/config/rest_server.js","lib/web3js/v2/utils/oracle.js","lib/web3js/v2/utils/api.js","lib/web3js/indexV2.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/utils.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","model/Intl.js","model/Version.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","utils/utils.js","lib/web3js/api/contractQueryApi.js","../lang).)*/.json$","lib/web3js/v2/factory/shared.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","index.js","lib/web3js/v2/config/chain.js","lib/web3js/v2/utils/convert.js","lib/web3js/v2/config/pool.js","lib/web3js/v2/config/broker.js","lib/web3js/v2/factory/web3.js","lib/web3js/v2/config/config.js","lib/web3js/v2/contract/oracle/woo_oracle.js","lib/web3js/v2/contract/oracle/wrapped_oracle.js","lib/web3js/v2/contract/oracle/chainlink_oracle.js","lib/web3js/v2/contract/broker_manager.js","lib/web3js/v2/contract/oracle/offchain_oracle.js","lib/web3js/v2/contract/ptoken_airdrop.js","lib/web3js/v2/contract/b_token.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/v2/config/oracle.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/contract/v2/perpetual_pool.js","lib/web3js/v2/contract/v2/perpetual_pool_router.js","lib/web3js/v2/contract/v2/l_token.js","lib/web3js/v2/contract/v2/p_token.js","lib/web3js/config/env.js"],"names":["PerpetualPoolLite","chainId","contractAddress","perpetualPoolLiteAbi","config","getPoolConfig","undefined","offchainSymbolIds","bTokenAddress","lTokenAddress","pouterAddress","liquidatorQualifierAddress","protocolFeeCollector","a","Promise","all","this","getAddresses","getParameters","_call","res","pTokenAddress","minPoolMarginRatio","deriToNatural","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","symbolId","symbol","oracleAddress","multiplier","feeRatio","fundingRateCoefficient","price","cumulativeFundingRate","tradersNetVolume","tradersNetCost","Error","prices","length","reduce","acc","i","concat","getSymbol","symbolNames","map","s","getPriceInfo","priceInfos","p","index","push","timestamp","parseInt","v","toString","r","accountAddress","amount","_getSymbolPrices","_transact","naturalToDeri","newVolume","ContractBase","LTokenLite","lTokenLiteAbi","processPosition","volume","cost","lastCumulativeFundingRate","PTokenLite","pTokenLiteAbi","tokenId","Array","isArray","owner","operator","MAX_GAS_AMOUNT","Contract","contractAbi","isProvider","web3","web3Factory","metaMaskWeb3","contract","eth","poolAddress","method","args","retry","_init","methods","call","includes","console","log","gas","estimateGas","from","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","to","Web3","utils","numberToHex","value","data","encodeABI","window","ethereum","request","params","_getTransactionReceipt","POOL_ABI","PerpetualPool","defaultValue","bg","result","cumuFundingRate","cumuFundingRateBlock","liquidity","minAddLiquidity","redemptionFeeRatio","priceDelayAllowance","getOracleInfo","oracle","signed","getBTCUSDPrice","getStateValues","args1","hasInvalidArgsValue","fundingRate","fundingRatePerBlock","calculateFundingRate","processFundingRate","args2","liquidityUsed","calculateLiquidityUsed","poolMarginRatio","_transactPool","success","transaction","blockNumber","getBlock","eventName","filter","fromBlock","events","getPastEvents","toBlock","es","e","abs","times","CONTRACT_ABI","BTokenContract","allowance","gt","MAX_VALUE","address","_balance","decimals","PTokenContract","lastCumuFundingRate","margin","lastUpdateTimestamp","LTokenContract","DatabaseBaseContract","providers","HttpProvider","providerUrl","getLatestRPCServer","getDBProviderUrlsConfig","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","MiningVaultRouter","SlpPool","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","getDeriContractAddress","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddressConfig","DeriEnv","get","key","Object","keys","database","databaseWormholeFactory","getDBWormholeAddressConfig","databaseAirdropFactory","getDBAirdropAddressConfig","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","bTokenFactory","bTokenInstanceMap","bToken","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","miningVaultPoolFactory","mVaultInstanceMap","mVault","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","web3Instance","web3InstanceMap","getChainProviderUrl","calculateEntryPrice","eq","div","calculateLiquidationPrice","dynamicCost","tmp","minus","plus","max","isOrderValid","marginHeld","minMargin","gte","calculateTxFee","validateArgs","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","bTokens","accum","b","discount","pnl","isBToken0RatioValid","bTokenId","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","symbols","totalCost","calculateMaxRemovableLiquidity","restLiquidity","min","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","factory","klass","instances","perpetualPoolRouterFactory","PerpetualPoolRouter","LToken","PToken","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","getLiquidityInfo","getPoolConfig2","bTokenIdList","getPoolBTokenIdList","symbolIdList","getPoolSymbolIdList","getBToken","getAsset","parameterInfo","bTokenInfo","lTokenAsset","promises","totalPnl","poolLiquidity","lastCumulativePnl","maxRemovableShares","approximatePnl","cumulativePnl","shares","getPoolLiquidity","db","getValues","catch","err","getPoolInfoApy","poolNetwork","getNetworkName","apy","volume1h","volume24h","addLiquidity","routerAddress","router","perpetualPoolRouter","minBToken0Ratio","validation","removeLiquidity","isMaximum","priceCache","_prices","split","set","val","isNaN","parseFloat","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getPoolBTokenList","symbolInfo","bTokenDiscounts","bTokenSymbol","bTokenMultiplier","getPositionInfo","symbolConfigList","getPoolSymbolList","symbolList","getLastUpdatedBlockNumber","getLatestBlockNumber","getPosition","getMargins","getPositions","getOraclePrice","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getWalletBalance","balanceOf","balance","isUnlocked","getEstimatedFee","cache","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","promiseList","bTokenInfoList","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","orderValidation","trade","closePosition","negated","_getLiquidityInfo","getLiquidity","totalSupply","getActiveSymbolIds","symbolIds","poolDynamicEquity","catchApiError","catchTxApiError","getMargin","priceIndex","indexOf","fetchJson","url","fetch","resp","json","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","returnValues","item","unshift","getTradeHistory","tradeHistory","getRestServerConfig","tradeFromBlock","tradeHistoryBlock","trim","tradeHistoryOnline","sort","initialBlock","getBlockInfo","baseToken","account","setBroker","brokerAddress","normalizeChainId","normalizeAddress","getBrokerConfig","brokerManagerAddress","brokerManager","brokerManagerFactory","getAirdropPTokenAddress","airdropPToken","pTokenAirdropFactory","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","env","shuffleArray","array","j","Math","floor","random","temp","getBlockNumber","duration","Number","MAX_SAFE_INTEGER","startTime","urls","blockNumbers","findIndex","startsWith","getChainProviderUrls","getDailyBlockNumberConfig","position","getStorageAt","hexToNumber","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getChainIds","getChainProviderUrlsConfig","provider_urls","getContractAddressConfig","pool","dToken","MiningVault","unit","version","retired","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","getDeriContractAddressConfig","Deri","Wormhole","getPreminingContractConfig","staking","isInTvlRace","premining","chainBlockNumberList","process","getOracleUrl","addSymbolParam","toLowerCase","mode","ok","priceInfo","JSON","stringify","RestOracle","getPrice","getOracleConfig","decimal","oracleFactory","func","methodName","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","wooOracleAbi","chainlinkOracleAbi","wrappedOracleAbi","offchainOracleAbi","brokerManagerAbi","bTokenLiteAbi","pTokenAirdropAbi","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","getUserWalletBalance","walletAddress","getBalance","fromWei","getLpLiquidityInfo","getLpContractAddress","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","c","isV2","total","cur","getPoolConfigListV2","getContractAddressConfig2","getPoolVersion","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfo2","getPositionInfoV2","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistory2","getTradeHistoryV2","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","lte","toChecksumAddress","hexToString","hexToUtf8","hexToNumberString","toFixed","naturalWithPercentage","sd","deriToString","deriToBool","toNumber","some","getPoolContractAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","deriAddress","responseJson","format","bigNumber","toFormat","replaceAll","chainIds","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","message","require","forEach","path","lang","page","test","pageName","Intl","locale","setLocale","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","Version","makeAutoObservable","setCurrent","isV1","isV2Lite","pPool","maxWithdrawMargin","mintDToken","getUserInfoAll","userInfo","deadline","nonce","valid","miningVaultAddress","miningVault","freeze","mintDeri","databaseWormhole","signature","mintAirdrop","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","miningVaultRouter","mint","getUserInfo","userAddress","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","userInfoHarvest","userInfoTotal","assign","getLpPoolInfoApy","apy2","getUserInfoInPool","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","opts","fetchRestApi","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","wsOnPromise","ws","event","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","getOrSet","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","id","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","parameters","getUserWormholeSignature","getDeriBalance","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","instanceMap","isUsedRestOracle","WrappedOracle","WooOracle","BToken","BrokerManager","PTokenAirdrop","DesktopApp","MobileApp","inject","observer","intl","isBrowser","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","obj","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setSupportChain","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","defaultConfig","getDefaultConfig","find","loadByConfig","changed","pause","store","resume","symbolChanged","addListener","loadFundingRate","fromStore","getFromStore","pos","syncFundingRate","setPaused","support","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","trading","ReactDOM","render","StrictMode","document","getElementById","MAX_UINT256","MAX_INT256","isJsDom","userAgent","expendPoolConfigV2","flat","expendPoolConfigV2Lite","getPoolConfigList","getConfig","getFilteredPoolConfigList","poolConfigList","check","_getPoolConfig","bTokenCount","symbolCount","filteredByChainId","getBrokerConfigList","processConfigV2","validateConfigV2Lite","validateObjectKeyExist","validateIsArray","prop","processConfigV2Lite","getJsonConfig","jsonConfig","_balanceOf","bTokenBalance","getOracleConfigList","every","keyList","valName","protocolFeeAccrued","getLengths","decimals0","swapperAddress","processAsset","_deriEnv"],"mappings":"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","file":"static/js/main.6e1b52df.chunk.js","sourcesContent":["import { ContractBase } from '../contract_base'\r\nimport { offchainOracleAbi, perpetualPoolLiteAbi } from '../abis';\r\nimport { deriToNatural, naturalToDeri, getPriceInfo } from '../../utils'\r\n//import { MAX_INT256} from '../../config'\r\nimport { getPoolConfig } from '../../config';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'v2_lite'\r\n    );\r\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    this.bTokenAddress = '';\r\n    this.lTokenAddress = '';\r\n    this.pouterAddress = '';\r\n    this.liquidatorQualifierAddress = '';\r\n    this.protocolFeeCollector = '';\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([this.getAddresses(), this.getParameters()]);\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    this.bTokenAddress = res.bTokenAddress;\r\n    this.lTokenAddress = res.lTokenAddress;\r\n    this.pTokenAddress = res.pTokenAddress;\r\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\r\n    this.protocolFeeCollector = res.protocolFeeCollector;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n  async _getSymbolPrices() {\r\n    let prices = []\r\n    if (this.offchainSymbolIds.length > 0) {\r\n      const symbolNames = (\r\n        await Promise.all(\r\n          this.offchainSymbolIds.reduce(\r\n            (acc, i) => acc.concat([this.getSymbol(i)]),\r\n            []\r\n          )\r\n        )\r\n      ).map((s) => s.symbol);\r\n      const priceInfos = await Promise.all(\r\n        symbolNames.reduce((acc, s) => acc.concat([getPriceInfo(s)]), [])\r\n      );\r\n      prices = priceInfos.reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offchainSymbolIds[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices()\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase } from '../contract_base'\r\nimport { lTokenLiteAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import { ContractBase } from '../contract_base'\r\nimport { pTokenLiteAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils'\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import Web3 from 'web3';\r\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\r\n\r\nconst MAX_GAS_AMOUNT = 532731;\r\n\r\nexport class Contract {\r\n  constructor(chainId, contractAddress, contractAbi, isProvider) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n    this.isProvider = isProvider;\r\n  }\r\n  async _init() {\r\n    if (!this.web3) {\r\n      if (this.isProvider) {\r\n        this.web3 = await web3Factory(this.chainId);\r\n      } else {\r\n        this.web3 = metaMaskWeb3();\r\n      }\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  setAccount(accountAddress) {\r\n    this.accountAddress = accountAddress;\r\n    return this;\r\n  }\r\n  setPool(poolAddress) {\r\n    this.poolAddress = poolAddress;\r\n    return this;\r\n  }\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while(retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args, accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n      //this.web3.eth.getGasPrice(),\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\nimport {\r\n  hasInvalidArgsValue,\r\n  getBTCUSDPrice,\r\n  getOracleInfo,\r\n  deriToNatural,\r\n  bg,\r\n} from '../utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    let gas = 0;\r\n    for (let i = 0; i < 20; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = 532731;\r\n    if (gas > 532731) gas = 532731;\r\n    return gas;\r\n  }\r\n\r\n  async _transactPool(method, args = [], accountAddress) {\r\n    await this._init()\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\r\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\r\n\r\n    // const [gas, gasPrice] = await Promise.all([\r\n    //   this._estimatedGas(method, [...args, ...signed], accountAddress),\r\n    //   this.web3.eth.getGasPrice(),\r\n    // ]);\r\n    //console.log(`gasPrice ${gasPrice / 1000000000} GW`);\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\r\n    try {\r\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = await this.getParameters();\r\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (hasInvalidArgsValue(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (hasInvalidArgsValue(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    //await this.web3.eth.getAccounts(console.log)\r\n    //console.log('depositMargin');\r\n    let res;\r\n    try {\r\n      let tx = await this._transactPool(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { Contract } from './contract';\r\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\r\n/* eslint-enable */\r\n\r\nexport class BTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async isUnlocked(accountAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      this.poolAddress,\r\n    ]);\r\n    allowance = deriToNatural(allowance);\r\n    return allowance.gt(0);\r\n  }\r\n\r\n  async unlock(accountAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [this.poolAddress, MAX_VALUE],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balance(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balance(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balance(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { deriToNatural, bg } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { deriToNatural } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { getDBProviderUrlsConfig } from '../config/database';\r\nimport { getLatestRPCServer } from '../utils';\r\n\r\nexport class DatabaseBaseContract {\r\n  constructor(contractAddress, contractAbi) {\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n  _init() {\r\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\r\n    this.contract = new this.web3.eth.Contract(\r\n      this.contractAbi,\r\n      this.contractAddress\r\n    );\r\n  }\r\n\r\n  async updateProviderUrl() {\r\n    if (!this.providerUrl) {\r\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrlsConfig());\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  async _call(method, args) {\r\n    let res\r\n    let retry = 3\r\n    while(retry > 0) {\r\n      try {\r\n        await this.updateProviderUrl();\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch (err) {\r\n        this.providerUrl = null\r\n        console.log(err.toString())\r\n      }\r\n      retry -= 1\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\r\n    }\r\n    return res\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base';\r\n\r\n/* eslint-disable */\r\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, DB_CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b0509b1116100975780639a8a0592116100665780639a8a0592146101c85780639d76ea58146101d0578063b06faf62146101d8578063f77c4791146101e0576100f5565b80636b0509b114610185578063701422691461018d57806379a87b19146101a057806392eefe9b146101b5576100f5565b806351dfdb48116100d357806351dfdb4814610137578063560ebbd11461014a57806358c700a31461016a578063677528cb14610172576100f5565b806306fdde03146100fa57806320606b7014610118578063325564ec1461012d575b600080fd5b6101026101e8565b60405161010f9190610dbf565b60405180910390f35b610120610209565b60405161010f9190610d48565b61013561022d565b005b610135610145366004610bab565b6103a1565b61015d610158366004610ca1565b61066f565b60405161010f9190610d3d565b610120610684565b610135610180366004610bea565b61068a565b6101206107b1565b61013561019b366004610c15565b6107d5565b6101a8610acc565b60405161010f9190610cec565b6101356101c3366004610bab565b610adb565b610120610b77565b6101a8610b7d565b61015d610b8c565b6101a8610b9c565b6040518060400160405280600581526020016415985d5b1d60da1b81525081565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000546001600160a01b031633146102605760405162461bcd60e51b815260040161025790610f7f565b60405180910390fd5b600254600160a01b900460ff161561028a5760405162461bcd60e51b81526004016102579061106a565b6001541580159061029d57506001544210155b6102b95760405162461bcd60e51b815260040161025790610e12565b60035460025460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926102f19291169060001990600401610d24565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610c81565b506002805460ff60a01b1916600160a01b17908190556001546040517fce3275b30d22151f82ee29ce7ea685563b66ff98e56afc576a94d8a88c676ec092610397929130916001600160a01b031690611153565b60405180910390a1565b6000546001600160a01b031633146103cb5760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156103f55760405162461bcd60e51b81526004016102579061106a565b6000816001600160a01b03166358c700a36040518163ffffffff1660e01b815260040160206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190610cb9565b90506000826001600160a01b03166379a87b196040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610bce565b905081158015906104ee5750814210155b61050a5760405162461bcd60e51b815260040161025790610ec5565b6001600160a01b03811630146105325760405162461bcd60e51b815260040161025790610fd5565b6003546040516370a0823160e01b81526001600160a01b03909116906323b872dd908590309084906370a082319061056e908590600401610cec565b60206040518083038186803b15801561058657600080fd5b505afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610cb9565b6040518463ffffffff1660e01b81526004016105dc93929190610d00565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610c81565b507f18ce2512842fddee8c808fb717780a66007d1da9a942dd32625813c82d53c34282843060405161066293929190611153565b60405180910390a1505050565b60056020526000908152604090205460ff1681565b60015481565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156106de5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b0382166107045760405162461bcd60e51b8152600401610257906110d3565b60038110158015610717575061016d8111155b6107335760405162461bcd60e51b815260040161025790610e68565b61074081620151806111a0565b61074a9042611188565b6001819055600280546001600160a01b0319166001600160a01b0385811691909117918290556040517fe2a3b7ba8269be3ca7ba4627f844bb9abd978e9b05d290dc89d4b107f9e3dda7936107a59390923092911690611153565b60405180910390a15050565b7f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb1281565b600254600160a01b900460ff16156107ff5760405162461bcd60e51b81526004016102579061106a565b8442111561081f5760405162461bcd60e51b815260040161025790610f1b565b604080518082018252600581526415985d5b1d60da1b6020918201526004549151600092610894927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866927f8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c79291309101610d7d565b60405160208183030381529060405280519060200120905060007f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb12898989896040516020016108e7959493929190610d51565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff161561092f5760405162461bcd60e51b815260040161025790610f52565b6000818152600560209081526040808320805460ff191660011790555161095a918591859101610cd1565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516109979493929190610da1565b6020604051602081039080840390855afa1580156109b9573d6000803e3d6000fd5b5050604051601f1901516000549092506001600160a01b0380841691161490506109f55760405162461bcd60e51b81526004016102579061111c565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610a27908e908e90600401610d24565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610c81565b508a6001600160a01b03167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef18b8b8b604051610ab793929190611172565b60405180910390a25050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b03163314610b055760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff1615610b2f5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b038116610b555760405162461bcd60e51b815260040161025790611024565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b6003546001600160a01b031681565b600254600160a01b900460ff1681565b6000546001600160a01b031681565b600060208284031215610bbc578081fd5b8135610bc7816111d5565b9392505050565b600060208284031215610bdf578081fd5b8151610bc7816111d5565b60008060408385031215610bfc578081fd5b8235610c07816111d5565b946020939093013593505050565b600080600080600080600060e0888a031215610c2f578283fd5b8735610c3a816111d5565b9650602088013595506040880135945060608801359350608088013560ff81168114610c64578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215610c92578081fd5b81518015158114610bc7578182fd5b600060208284031215610cb2578081fd5b5035919050565b600060208284031215610cca578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610deb57858101830151858201604001528201610dcf565b81811115610dfc5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526036908201527f5661756c742e617070726f76654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b60208082526039908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a2067726160408201527f636544617973206d75737420626520332d333635206461797300000000000000606082015260800190565b60208082526036908201527f5661756c742e657865637574654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b6020808252601e908201527f5661756c742e636c61696d3a207369676e617475726520657870697265640000604082015260600190565b6020808252601390820152725661756c742e636c61696d3a207265706c617960681b604082015260600190565b60208082526036908201527f4d696772617461626c652e5f636f6e74726f6c6c65725f3a2063616e206f6e6c6040820152753c9031b0b63632b210313c9031b7b73a3937b63632b960511b606082015260800190565b6020808252602f908201527f5661756c742e657865637574654d6967726174696f6e3a206e6f74206465737460408201526e696e6174696f6e206164647265737360881b606082015260800190565b60208082526026908201527f4d696772617461626c652e736574436f6e74726f6c6c65723a20746f2030206160408201526564647265737360d01b606082015260800190565b60208082526043908201527f4d696772617461626c652e5f76616c69645f3a2063616e6e6f742070726f636560408201527f65642c207468697320636f6e747261637420686173206265656e206d696772616060820152621d195960ea1b608082015260a00190565b60208082526029908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a20746f2060408201526830206164647265737360b81b606082015260800190565b60208082526019908201527f5661756c742e636c61696d3a20756e617574686f72697a656400000000000000604082015260600190565b9283526001600160a01b03918216602084015216604082015260600190565b9283526020830191909152604082015260600190565b6000821982111561119b5761119b6111bf565b500190565b60008160001904831182151516156111ba576111ba6111bf565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111ea57600080fd5b5056fea2646970667358221220309376e66ca21a54581da8ded1f86303ca0c78bd47254d1bdb5fb101169baa2364736f6c63430008010033\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi'], isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI['abi'],\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: Web3.utils.numberToHex(gas),\r\n        value: Web3.utils.numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends Contract {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends Contract {\r\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\r\n    this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async isUnlocked(accountAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      this.poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [this.poolAddress, MAX_VALUE],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balance(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balance(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balance(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\r\nimport { Contract } from './contract';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends Contract {\r\n  constructor(chainId, contractAddress, useProvider) {\r\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { PerpetualPool } from '../contract/perpetual_pool';\r\nimport { BTokenContract } from '../contract/bToken';\r\nimport { PTokenContract } from '../contract/pToken';\r\nimport { LTokenContract } from '../contract/lToken';\r\nimport { DatabaseContract } from '../contract/database';\r\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\r\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\r\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\r\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\r\n\r\nimport { DeriEnv } from '../config/env';\r\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\r\nimport { SlpPool } from '../contract/slp_pool';\r\nimport { ClpPool } from '../contract/clp_pool';\r\nimport { Clp2Pool } from '../contract/clp2_pool';\r\nimport { DeriContract } from '../contract/deri';\r\nimport { WormholeContract } from '../contract/wormhole';\r\n//import { getLpContractAddress } from '../utils';\r\n// import { getPoolBaseSymbolList } from '../utils'\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const bTokenFactory = (function () {\r\n  const bTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\r\n      return bTokenInstanceMap[key];\r\n    }\r\n    const bToken = new BTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new BTokenContract\")\r\n    bTokenInstanceMap[key] = bToken;\r\n    return bToken;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\r\n    }\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    // console.log(\"new LTokenContract\")\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\nexport const miningVaultPoolFactory = (function () {\r\n  const mVaultInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\r\n      return mVaultInstanceMap[key];\r\n    }\r\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\r\n    // console.log(\"new MiningValutPool\")\r\n    mVaultInstanceMap[key] = mVault;\r\n    return mVault;\r\n  };\r\n})();\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();\r\n\r\nexport const deriFactory = (function () {\r\n  const deriInstanceMap = {};\r\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(deriInstanceMap).includes(key)) {\r\n      return deriInstanceMap[key];\r\n    }\r\n    const deri = new DeriContract(\r\n      chainId,\r\n      contractAddress,\r\n      poolAddress,\r\n      isProvider\r\n    );\r\n    deriInstanceMap[key] = deri;\r\n    return deri;\r\n  };\r\n})();\r\n\r\nexport const wormholeFactory = (function () {\r\n  const wormholeInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\r\n      return wormholeInstanceMap[key];\r\n    }\r\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\r\n    wormholeInstanceMap[key] = wormhole;\r\n    return wormhole;\r\n  };\r\n})();\r\n\r\nexport const miningVaultRouterFactory = (function () {\r\n  const mVaultInstanceMap = {};\r\n  return (chainId, contractAddress, isProvider = false) => {\r\n    let key;\r\n    if (isProvider) {\r\n      key = `${chainId}.${contractAddress}.isProvider`;\r\n    } else {\r\n      key = `${chainId}.${contractAddress}`;\r\n    }\r\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\r\n      return mVaultInstanceMap[key];\r\n    }\r\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\r\n    mVaultInstanceMap[key] = mVault;\r\n    return mVault;\r\n  };\r\n})();\r\n","import Web3 from 'web3';\r\nimport { getChainProviderUrl } from '../utils';\r\n\r\nexport const metaMaskWeb3 = (function () {\r\n  let web3Instance = null;\r\n  return () => {\r\n    if (web3Instance !== null) {\r\n      return web3Instance;\r\n    }\r\n    let web3;\r\n    if (typeof window.ethereum !== undefined) {\r\n      web3 = new Web3(window.ethereum);\r\n    } else {\r\n      // console.log(\"Please install MetaMask first\")\r\n      throw new Error('Please install MetaMask first');\r\n    }\r\n    web3Instance = web3;\r\n    return web3;\r\n  };\r\n})();\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return async(chainId) => {\r\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n      return web3InstanceMap[chainId];\r\n    }\r\n    if (['1', '3', '42'].includes(chainId)) {\r\n      console.log(\r\n        `==== web3Factory(${chainId}), please caution the access limits ===`\r\n      );\r\n    }\r\n    const providerUrl = await getChainProviderUrl(chainId);\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\r\n    web3InstanceMap[chainId] = web3;\r\n    return web3;\r\n  };\r\n})();\r\n","import { bg, max } from '../utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bToken.liquidity.minus(\r\n          minPoolMarginRatio\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        userLiquidity\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from '../../contract/v2';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","import {\r\n  PerpetualPoolLite,\r\n  LTokenLite,\r\n  PTokenLite,\r\n} from '../../contract/v2_lite';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)","import { databaseFactory } from '../../../factory/contracts';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../../factory'\r\nimport { getPoolConfig2, getPoolBTokenIdList, getPoolSymbolIdList} from '../../config'\r\nimport { bg, deriToNatural, getNetworkName } from '../../utils'\r\nimport { calculateMaxRemovableLiquidity } from '../../calculation'\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const {lToken:lTokenAddress} = getPoolConfig2(poolAddress, bTokenId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset ] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ])\r\n    const { minPoolMarginRatio } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\r\n    }, bg(0))\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n    }, bg(0))\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl)\r\n      } else {\r\n        return accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n      }\r\n    }, bg(0))\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(bTokens[bTokenId], liquidity, cost, totalPnl, restLiquidity, minPoolMarginRatio)\r\n    const approximatePnl = pnl.plus(bg(bTokens[bTokenId].cumulativePnl).minus(lastCumulativePnl).times(liquidity))\r\n    //console.log(\"approximatePnl\", approximatePnl.toString())\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString()\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};","import { getPoolBTokenIdList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList } from '../../config'\r\nimport { perpetualPoolRouterFactory, perpetualPoolFactory, lTokenFactory } from '../../factory'\r\nimport { RestOracle } from '../../utils'\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../../calculation'\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\r\n   let res\r\n   if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err};\r\n    }\r\n   } else {\r\n      res = { success: false, error: validation.error};\r\n   }\r\n   return res\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum=false,\r\n) => {\r\n   const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n     poolAddress,\r\n   );\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n   const lToken = lTokenFactory(chainId, lTokenAddress);\r\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\r\n   const { liquidity:userLiquidity } = lTokenAsset\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   promises = []\r\n   for (let i=0; i<symbolIdList.length; i++) {\r\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n   }\r\n   const symbols = await Promise.all(promises)\r\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\r\n   let res\r\n   if (validation.success) {\r\n     try {\r\n       const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount, isMaximum);\r\n       res = { success: true, transaction: tx };\r\n     } catch (err) {\r\n       res = { success: false, error: err};\r\n     }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\r\n   let res\r\n   if (validation.success) {\r\n    try {\r\n      const promises = symbolList.map(async(s) => {\r\n        return await RestOracle(s).getPrice()\r\n      })\r\n      const prices = await Promise.all(promises)\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n      })\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err};\r\n    }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const {router:routerAddress, lToken:lTokenAddress} = getPoolConfig2(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n\r\n   const lToken = lTokenFactory(chainId, lTokenAddress);\r\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\r\n   const { liquidity:userLiquidity } = lTokenAsset\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   let promises = []\r\n   for (let i=0; i<bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n   }\r\n   const bTokens = await Promise.all(promises)\r\n   promises = []\r\n\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   for (let i=0; i<symbolIdList.length; i++) {\r\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n   }\r\n   const symbols = await Promise.all(promises)\r\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\r\n   let res\r\n   if (validation.success) {\r\n     try {\r\n       promises = symbolList.map(async(s) => {\r\n         return await RestOracle(s).getPrice()\r\n       })\r\n       const prices = await Promise.all(promises)\r\n       const priceInfos = prices.map((p, index) => {\r\n         return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n       })\r\n       const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\r\n       res = { success: true, transaction: tx };\r\n     } catch (err) {\r\n       res = { success: false, error: err};\r\n     }\r\n   } else {\r\n    res = { success: false, error: validation.error };\r\n   }\r\n   return res\r\n}\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../../factory';\r\nimport { getPoolBTokenIdList, getPoolBTokenList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList} from '../../config'\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../../calculation';\r\nimport { getOraclePrice, bg, min, max } from '../../utils'\r\nimport { fundingRateCache, priceCache } from '../api_globals';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return {\r\n      price: price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import { isOrderValid } from '../../calculation';\r\nimport { getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList, getPoolBTokenIdList } from '../../config'\r\nimport {\r\n  bTokenFactory,\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../../factory';\r\nimport { RestOracle, bg } from '../../utils';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n   const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount, isMaximum);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const pToken = pTokenFactory(chainId, pTokenAddress);\r\n   const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n     perpetualPool.getParameters(),\r\n     pToken.getPositions(accountAddress),\r\n     //pToken.getMargin(accountAddress, symbolId),\r\n   ]);\r\n\r\n   //const { multiplier } = symbolInfo;\r\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\r\n\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const margins = await pToken.getMargins(accountAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, i, index) => {\r\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let marginHeld = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.tradersNetVolume).plus(newVolume).times(a.price).times(a.multiplier).abs())\r\n      } else {\r\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n    //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n   const orderValidation = isOrderValid(\r\n     //price,\r\n     margin,\r\n     marginHeld,\r\n     liquidity,\r\n     liquidityUsed,\r\n     //multiplier,\r\n     //minPoolMarginRatio,\r\n     //bg(newVolume),\r\n   )\r\n   let res;\r\n   if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n   } else {\r\n     res = { success: false, error: orderValidation.error};\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const pToken = pTokenFactory(chainId, pTokenAddress)\r\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\r\n   const newVolume = volume.negated()\r\n   let res;\r\n   if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false,\r\n) => {\r\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   let res;\r\n   try {\r\n     const promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\r\n     res = { success: true, transaction: tx };\r\n   } catch (err) {\r\n     res = { success: false, error: err };\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\r\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n   const pToken = pTokenFactory(chainId, pTokenAddress);\r\n   //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n   const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n     perpetualPool.getParameters(),\r\n     pToken.getPositions(accountAddress),\r\n     //pToken.getMargin(accountAddress, symbolId),\r\n   ]);\r\n\r\n   //const { multiplier } = symbolInfo;\r\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\r\n\r\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n   const margins = await pToken.getMargins(accountAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, i, index) => {\r\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    //console.log('liquidity', liquidity.toString())\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let marginHeld = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\r\n      } else {\r\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n    //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n    // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n    // console.log('pnl', pnl.toString())\r\n\r\n   const orderValidation = isOrderValid(\r\n     //price,\r\n     margin,\r\n     marginHeld,\r\n     liquidity,\r\n     liquidityUsed,\r\n     //multiplier,\r\n     //minPoolMarginRatio,\r\n     //bg(newVolume),\r\n   )\r\n   let res;\r\n   if (orderValidation.success) {\r\n    try {\r\n     promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n   } else {\r\n     res = { success: false, error: orderValidation.error};\r\n   }\r\n   return res;\r\n}\r\n\r\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\r\n   const symbolList = getPoolSymbolList(poolAddress)\r\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\r\n   const pToken = pTokenFactory(chainId, pTokenAddress)\r\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\r\n   const newVolume = volume.negated()\r\n   let res;\r\n   if (!volume.eq(0)) {\r\n    try {\r\n     const promises = symbolList.map(async(s) => {\r\n       return await RestOracle(s).getPrice()\r\n     })\r\n     const prices = await Promise.all(promises)\r\n     const priceInfos = prices.map((p, index) => {\r\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\r\n     })\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res\r\n}\r\n","import { databaseFactory } from '../../../factory/contracts';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../calculation';\r\nimport { getPoolConfig } from '../../config';\r\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../../factory/v2_lite';\r\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../utils';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\r\n    perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { perpetualPoolLiteFactory } from '../../factory/v2_lite';\r\nimport { catchTxApiError } from '../../utils';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import { calculateEntryPrice } from \"../../../calculation\"\r\nimport { calculateFundingRate, calculateLiquidationPrice, processFundingRate, calculateFundingFee } from \"../../calculation\"\r\nimport { getPoolConfig } from \"../../config\"\r\nimport { bTokenFactory } from \"../../factory/shared\"\r\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../../factory/v2_lite\"\r\nimport { bg, catchApiError, getLastUpdatedBlockNumber, getLatestBlockNumber, getOraclePrice } from \"../../utils\"\r\nimport { fundingRateCache, priceCache } from \"../api_globals\"\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getActiveSymbolIds(),\r\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\r\n      getLatestBlockNumber(chainId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargin(accountAddress),\r\n      getOraclePrice(chainId, symbol, 'v2_lite'),\r\n    ])\r\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n    //console.log(latestBlockNumber)\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\r\n\r\n    let promises = []\r\n    for (let i = 0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n\r\n    promises = []\r\n    for (let i=0; i< symbolIds.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const priceIndex = symbolIds.indexOf(symbolId)\r\n    let price\r\n    if (priceIndex === '-1') {\r\n      price = '0'\r\n    } else {\r\n      price = symbolPrices[priceIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\r\n\r\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    }, bg(0))\r\n\r\n    const totalCost = positions.reduce((accum, p) => {\r\n      return accum.plus(bg(p.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee: fundingFee.toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      ).toString(),\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\r\n    perpetualPool.getLiquidity(),\r\n    getOraclePrice(chainId, symbol, 'v2_lite'),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\r\n  const { minPoolMarginRatio } = parameterInfo\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n\r\n  let promises = []\r\n  for (let i = 0; i< symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    if (!price) {\r\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [price, symbolInfo] = await Promise.all([\r\n      getOraclePrice(chainId, symbol, 'v2_lite'),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const { multiplier } = symbolInfo\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { isOrderValid } from '../../calculation';\r\nimport { getPoolConfig } from '../../config';\r\nimport { bTokenFactory } from '../../factory/shared';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../../factory/v2_lite';\r\nimport { catchTxApiError, bg } from '../../utils';\r\n\r\nexport const unlock = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.unlock(accountAddress, poolAddress)\r\n  }, args)\r\n}\r\n\r\nexport const depositMargin = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addMargin(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const withdrawMargin = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeMargin(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n\r\nexport const tradeWithMargin = async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId]\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n    const { pToken:pTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [parameterInfo, liquidity, margin, symbolIds ] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getMargin(accountAddress),\r\n      pToken.getActiveSymbolIds(),\r\n    ])\r\n    const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n    let promises = []\r\n\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    let marginHeld = symbols.reduce((acc, s, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume.plus(newVolume)).abs())\r\n      } else {\r\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume).abs())\r\n      }\r\n    }, bg(0))\r\n    marginHeld = marginHeld.times(minInitialMarginRatio)\r\n\r\n    let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return acc.plus(bg(s.tradersNetVolume).plus(newVolume).times(s.price).times(s.multiplier).abs())\r\n      } else {\r\n        return acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\r\n      }\r\n    }, bg(0))\r\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\r\n\r\n    const orderValidation = isOrderValid(\r\n      margin,\r\n      marginHeld,\r\n      liquidity,\r\n      liquidityUsed,\r\n    )\r\n    if (orderValidation.success) {\r\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\r\n    } else {\r\n      throw new Error(orderValidation.error)\r\n    }\r\n  }, args)\r\n}\r\n\r\nexport const closePosition = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\r\n\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n    if (!volume.eq(0)) {\r\n      const newVolume = volume.negated()\r\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\r\n    } else {\r\n      throw new Error('no position to close')\r\n    }\r\n  }, args)\r\n}\r\n","import { deriToNatural } from '../../utils';\r\nimport { perpetualPoolFactory } from '../../factory';\r\nimport { getPoolConfig2, getPoolSymbolIdList } from '../../config'\r\n\r\nimport { getRestServerConfig, DeriEnv } from '../../../config';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { owner: accountAddress }\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            //baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../utils';\r\nimport { perpetualPoolLiteFactory } from '../../factory';\r\nimport { getPoolConfig, getPoolConfig2, getPoolSymbolIdList} from '../../config'\r\n\r\nimport { getRestServerConfig, DeriEnv } from '../../../config';\r\nimport { calculateTxFee } from '../../calculation/position';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { brokerManagerFactory } from \"../factory\"\r\nimport { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { getBrokerConfig } from \"../config\"\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig(chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}","import { pTokenAirdropFactory, pTokenFactory } from \"../factory\"\r\nimport { getPoolConfig2 } from '../config'\r\nimport { DeriEnv } from \"../../config\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","export const getDBProviderUrlsConfig = () => [\r\n  //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\r\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const fetchWithTimeout = (url, options = {}) => {\r\n  const { timeout = 1200, ...fetchOptions } = options\r\n\r\n  return Promise.race([\r\n    fetch(url, fetchOptions),\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // reject(\r\n        //   new Error(\r\n        //     `Request for ${url} timed out after ${timeout} ms`,\r\n        //   ),\r\n        // )\r\n        resolve({timeout:true})\r\n      }, timeout)\r\n    }),\r\n  ])\r\n}\r\n\r\nexport const checkHttpServerIsAlive = async (url) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    if (!err.toString().includes('FetchError')) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getAliveHttpServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i];\r\n    //console.log(url)\r\n    if (await checkHttpServerIsAlive(url)) {\r\n      return url;\r\n    }\r\n  }\r\n  throw new Error(`getAliveHttpServer(): No alive http server in ${urls}`);\r\n};\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\nimport { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    //console.log(chainId, contractAddress, position)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', res)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","export const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\nexport const ChainProviderUrls = [\r\n  {\r\n    provider_urls: [\r\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '1',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://bsc-dataseed.binance.org',\r\n      'https://bsc-dataseed1.defibit.io/',\r\n      'https://bsc-dataseed1.ninicoin.io/',\r\n    ],\r\n    chainId: '56',\r\n  },\r\n  {\r\n    provider_urls: ['https://http-mainnet.hecochain.com'],\r\n    chainId: '128',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '3',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n    ],\r\n    chainId: '42',\r\n  },\r\n  {\r\n    provider_urls: [\r\n      //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n    ],\r\n    chainId: '97',\r\n  },\r\n  {\r\n    provider_urls: ['https://http-testnet.hecochain.com'],\r\n    chainId: '256',\r\n  },\r\n];\r\n\r\nexport const getChainProviderUrlsConfig = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n  ];\r\n  \r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n","import { getChainIds } from './chain';\r\n\r\n/** @module config */\r\n\r\n/**\r\n * Get the contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].pToken - position token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].symbol - symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getContractAddressConfig = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    // console.log('!!! production !!!')\r\n    return [\r\n      {\r\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        version: 'v1',\r\n      },\r\n      {\r\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  }\r\n  // develop environment\r\n  return [\r\n    {\r\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n      initialBlock: '9378545',\r\n      bTokenSymbol: 'BUSD',\r\n      symbol: 'BTCUSD',\r\n      unit: 'BTC',\r\n      chainId: '97',\r\n      version: 'v1',\r\n    },\r\n  ];\r\n};\r\n\r\n/**\r\n * Get the Slp contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].pToken - position token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].symbol - symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getSlpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n      },\r\n    ];\r\n  }\r\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n  return [];\r\n};\r\n\r\n/**\r\n * Get the Clp contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].pool - pool address\r\n * @returns {string} response[].bToken - base token address\r\n * @returns {string} response[].lToken - liquidity token address\r\n * @returns {string} response[].initialBlock - initial block of the pool\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getClpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getLpContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterContractAddress = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Get the Deri contract address list based on the deri environment variable\r\n * @method\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {Object[]} response\r\n * @returns {string} response[].Deri - deri address\r\n * @returns {string} response[].Wormhole - wormhole token address\r\n * @returns {string} response[].bTokenSymbol - base token symbol\r\n * @returns {string} response[].chainId - Id of the chain\r\n */\r\nexport const getDeriContractAddressConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingContractConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  const chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return 'https://testnetapi.deri.finance';\r\n    //return 'http://localhost:8082';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","import { getOracleConfig } from '../config/oracle';\r\nimport { oracleFactory } from '../factory/shared';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../../config';\r\nimport { deriToNatural } from './convert';\r\n\r\nexport const getOracleUrl = (symbol) => {\r\n  const env = DeriEnv.get();\r\n  //const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\r\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol.toLowerCase()}`;\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle4.deri.finance/get_signed_price', symbol);\r\n    }\r\n    return 'https://oracle4.deri.finance/get_signed_price';\r\n  } else {\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle2.deri.finance/get_signed_price', symbol);\r\n    }\r\n    // for test\r\n    return 'https://oracle2.deri.finance/get_signed_price';\r\n  }\r\n};\r\n\r\nexport const getPriceInfo = async (symbol) => {\r\n  let url = getOracleUrl(symbol);\r\n  //console.log('oracle url', url);\r\n  let retry = 2;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200') {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info error: exceed max retry(2): ${JSON.stringify(priceInfo)}`, );\r\n  }\r\n};\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      const priceInfo = await getPriceInfo(symbol)\r\n      return deriToNatural(priceInfo.price).toString()\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  const config = getOracleConfig(chainId, symbol, version);\r\n  // console.log('oracle config',config)\r\n  if (config && config.address) {\r\n    if (!config.decimal) {\r\n      throw new Error('getOraclePrice: decimal is empty', config.decimal);\r\n    }\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  }\r\n};\r\n","export const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    //console.log('args', args, methodName, defaultValue)\r\n    // console.log(await func(...args))\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    console.log(`${methodName}:`, err)\r\n    //console.log(`${methodName}: ${err}`)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n","export {\r\n  DeriEnv,\r\n  //getContractAddressConfig,\r\n  getLpContractAddressConfig,\r\n  getSlpContractAddressConfig,\r\n  getPreminingContractConfig,\r\n} from './config';\r\nexport * from './utils';\r\nexport * from './calculation';\r\n\r\nexport * from './api/apiGlobals';\r\nexport * from './api/factoryApi';\r\nexport * from './api/walletApi';\r\nexport {\r\n  // isUnlocked,\r\n  // getEstimatedMargin,\r\n  // getEstimatedFee,\r\n  // getEstimatedFundingRate,\r\n  // getEstimatedLiquidityUsed,\r\n  isDeriUnlocked,\r\n  getUserWormholeSignature,\r\n  // getFundingRate,\r\n  //getPositionInfo,\r\n  getDeriBalance,\r\n} from './api/contractQueryApi';\r\nexport {\r\n  //unlock,\r\n  //depositMargin,\r\n  //withdrawMargin,\r\n  //addLiquidity,\r\n  //removeLiquidity,\r\n  //tradeWithMargin,\r\n  //closePosition,\r\n  mint,\r\n  mintDToken,\r\n  freeze,\r\n  mintDeri,\r\n  unlockDeri,\r\n  mintAirdrop,\r\n} from './api/contractTransactionApi';\r\nexport {\r\n  getUserInfo,\r\n  getUserInfoHarvest,\r\n  getUserInfoTotal,\r\n  getUserInfoAll,\r\n  //getPoolInfoApy,\r\n  getLpPoolInfoApy,\r\n  getUserInfoInPool,\r\n  getUserInfoAllForAirDrop,\r\n} from './api/databaseApi';\r\n\r\n// export * from './api/slpPoolApi';\r\n// export * from './api/clpPoolApi';\r\n\r\n// export * from './api/tradeHistoryApi';\r\nexport {\r\n//getSpecification2 as getSpecification,\r\n// getPositionInfo2 as getPositionInfo,\r\n//getLiquidityInfo2 as getLiquidityInfo,\r\n//getWalletBalance2 as getWalletBalance,\r\n//getFundingRate2 as getFundingRate,\r\n//getLiquidityUsed2 as getLiquidityUsed,\r\ngetFundingRateCache2 as getFundingRateCache,\r\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\r\ngetSlpWalletBalance2 as getSlpWalletBalance,\r\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\r\ngetClpWalletBalance2 as getClpWalletBalance,\r\n//getDeriBalance2 as getDeriBalance,\r\n//getTradeHistory2 as getTradeHistory,\r\nfetchRestApi,\r\n} from './api/restApi';\r\n\r\n// export {\r\n  //tradeWithMargin2 as tradeWithMargin,\r\n  //closePosition2 as closePosition,\r\n  //depositMargin2 as depositMargin,\r\n  //withdrawMargin2 as withdrawMargin,\r\n  //addLiquidity2 as addLiquidity,\r\n  //removeLiquidity2 as removeLiquidity,\r\n// } from './api/contractTransactionApiV2'\r\n\r\nexport * from './api/lpPoolApi';\r\n\r\nexport * from './api_wrapper';\r\n\r\nexport {\r\n  getPoolConfigList,\r\n  getFilteredPoolConfigList,\r\n  getPoolBTokensBySymbolId,\r\n  setBroker,\r\n  airdropPToken,\r\n  isUserPTokenExist,\r\n  getAirdropPTokenWhitelistCount,\r\n} from './v2';\r\n","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      // if (isBrowser() && !isJsDom()) {\r\n      //   this.web3 = metaMaskWeb3();\r\n      // } else {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      // }\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        // ignore the metamask error\r\n      }\r\n    }\r\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args, accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const offchainOracleAbi= [{\"inputs\": [{\"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\"}, {\"internalType\": \"address\", \"name\": \"signatory_\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"delayAllowance_\", \"type\": \"uint256\"}], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\"inputs\": [], \"name\": \"delayAllowance\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"getPrice\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"price\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"signatory\", \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"timestamp\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"uint256\", \"name\": \"timestamp_\", \"type\": \"uint256\"}, {\"internalType\": \"uint256\", \"name\": \"price_\", \"type\": \"uint256\"}, {\"internalType\": \"uint8\", \"name\": \"v_\", \"type\": \"uint8\"}, {\"internalType\": \"bytes32\", \"name\": \"r_\", \"type\": \"bytes32\"}, {\"internalType\": \"bytes32\", \"name\": \"s_\", \"type\": \"bytes32\"}], \"name\": \"updatePrice\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]\r\n\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\n\r\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import Web3 from 'web3';\r\nimport { metaMaskWeb3 } from '../factory/web3';\r\nimport { hexToNumber } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window.ethereum !== undefined) {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\n/**\r\n * Get balance of the connected account\r\n * @async\r\n * @method\r\n * @param {string} chainId - Id of the chain\r\n * @param {string} accountAddress - Address of the connected account\r\n * @returns {string} Account balance\r\n */\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  const web3 = metaMaskWeb3();\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  const res = Web3.utils.fromWei(balance);\r\n  return res;\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n  unlockSlp,\r\n  // addSlpLiquidity,\r\n  // removeSlpLiquidity,\r\n} from './slpPoolApi';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n  unlockClp2,\r\n  // addSlpLiquidity,\r\n  // removeSlpLiquidity,\r\n} from './clp2PoolApi';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n  unlockClp,\r\n  // addClpLiquidity,\r\n  // removeClpLiquidity,\r\n} from './clpPoolApi';\r\n\r\nimport {\r\n  addSlpLiquidity2 as addSlpLiquidity,\r\n  removeSlpLiquidity2 as removeSlpLiquidity,\r\n  addClpLiquidity2 as addClpLiquidity,\r\n  removeClpLiquidity2 as removeClpLiquidity,\r\n  addClp2Liquidity2 as addClp2Liquidity,\r\n  removeClp2Liquidity2 as removeClp2Liquidity,\r\n} from './contractTransactionApiV2'\r\nimport { getLpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpContractAddress(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  load(version){\r\n    const current = version && version.current;\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(version){\r\n      configs = configs.filter(c => c.version === version.current)\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","import { getContractAddressConfig as getContractAddressConfig2 } from \"../config\";\r\nimport { getPoolConfigList as getPoolConfigListV2} from \"../v2/config\"\r\n//import { getPoolVersion } from '../v2';\r\n\r\nexport const getContractAddressConfig = (env = 'dev', version) => {\r\n  if (!version || version === '1' || version === 'v1') {\r\n    return getContractAddressConfig2(env)\r\n  } else if (version === 'v2' || version === 'v2_lite') {\r\n    return getPoolConfigListV2(version)\r\n  } else {\r\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\r\n  }\r\n}","import { getLiquidityInfo2 } from '../api/restApi';\r\nimport { getPoolLiquidity as getPoolLiquidity2, getPoolInfoApy as getPoolInfoApy2 } from '../api/databaseApi';\r\nimport { \r\n  getLiquidityInfo as getLiquidityInfoV2,\r\n  getPoolLiquidity as getPoolLiquidityV2,\r\n  getPoolInfoApy as getPoolInfoApyV2,\r\n  getLiquidityInfoV2l,\r\n  getPoolLiquidityV2l,\r\n  getPoolInfoApyV2l,\r\n  getPoolVersion,\r\n } from '../v2';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPoolLiquidityV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolLiquidity2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPoolInfoApyV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolInfoApy2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\r\nimport {\r\n  addLiquidity as addLiquidityV2,\r\n  removeLiquidity as removeLiquidityV2,\r\n  // addLiquidityWithPrices as addLiquidityV2,\r\n  // removeLiquidityWithPrices as removeLiquidityV2,\r\n  addLiquidityV2l,\r\n  removeLiquidityV2l,\r\n  getPoolVersion,\r\n} from '../v2';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getPositionInfo as getPositionInfo2,\r\n  isUnlocked as isUnlocked2,\r\n  isDeriUnlocked,\r\n  getEstimatedMargin as getEstimatedMargin2,\r\n  getEstimatedFee as getEstimatedFee2,\r\n  getEstimatedFundingRate as getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\r\n  getWalletBalance as getWalletBalance2,\r\n} from '../api/contractQueryApi'\r\n\r\nimport {\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../api/restApi'\r\n//import { bTokenFactory } from '../factory/contracts'\r\n\r\nimport {\r\n  getPositionInfo as getPositionInfoV2,\r\n  isUnlocked as isUnlockedV2,\r\n  getEstimatedMargin as getEstimatedMarginV2,\r\n  getEstimatedFee as getEstimatedFeeV2,\r\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\r\n  getSpecification as getSpecificationV2,\r\n  getWalletBalance as getWalletBalanceV2,\r\n  getFundingRate as getFundingRateV2,\r\n  getLiquidityUsed as getLiquidityUsedV2,\r\n  getFundingRateCache as getFundingRateCacheV2,\r\n\r\n  getPositionInfoV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n\r\n  getPoolVersion,\r\n} from '../v2'\r\n\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress)\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress)\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume)\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedMarginV2l(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\r\n  } else {\r\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\r\n  }\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress)\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedFundingRateV2l(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\r\n  } else {\r\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress)\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getEstimatedLiquidityUsedV2l(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\r\n  }\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress)\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\r\n  }\r\n}\r\n","import { unlock as unlock2, unlockDeri } from '../api/contractTransactionApi';\r\nimport {\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../api/contractTransactionApiV2';\r\nimport {\r\n  unlock as unlockV2,\r\n  tradeWithMargin as tradeWithMarginV2,\r\n  closePosition as closePositionV2,\r\n  depositMargin as depositMarginV2,\r\n  withdrawMargin as withdrawMarginV2,\r\n  // tradeWithMarginWithPrices as tradeWithMarginV2,\r\n  // depositMarginWithPrices as depositMarginV2,\r\n  // withdrawMarginWithPrices as withdrawMarginV2,\r\n  // closePositionWithPrices as closePositionV2,\r\n\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n\r\n  getPoolVersion,\r\n} from '../v2';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return unlockV2l(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return withdrawMarginV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return tradeWithMarginV2l(chainId, poolAddress, accountAddress, newVolume, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","\r\nimport {getTradeHistory2} from '../api/restApi';\r\nimport { \r\n  getPoolVersion,\r\n  getTradeHistoryV2,\r\n  getTradeHistoryV2l,\r\n } from '../v2';\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n) => {\r\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\r\n    return getTradeHistoryV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n}","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\nimport {\r\n  DeriEnv,\r\n  getChainProviderUrlsConfig,\r\n  getContractAddressConfig,\r\n  getSlpContractAddressConfig,\r\n  getClpContractAddressConfig,\r\n  getClp2ContractAddressConfig,\r\n  getLpContractAddressConfig,\r\n  getDailyBlockNumberConfig,\r\n  getDeriContractAddressConfig,\r\n  getChainIds,\r\n} from './config';\r\n\r\n/** @module utils */\r\n\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport { BigNumber };\r\n\r\n/**\r\n * Change the value to BigNumber type\r\n * @func\r\n * @param {string|number} value - the number that need to changed to BigNumber type\r\n * @param {string} base - base of the number\r\n * @returns {BigNumber}\r\n */\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\n/**\r\n * Get the max value\r\n * @func\r\n * @param {BigNumber} value1\r\n * @param {BigNumber} value2\r\n * @returns {BigNumber}\r\n */\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\n/**\r\n * Get the min value\r\n * @func\r\n * @param {BigNumber} value1\r\n * @param {BigNumber} value2\r\n * @returns {BigNumber}\r\n */\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\n/**\r\n * Convert the number to a fixed precision\r\n * @func\r\n * @param {string} value - the number that need to convert\r\n * @param {number} num - the number for method toFixed()\r\n * @returns {string}\r\n */\r\nexport const toNatural = (value, num = 0) =>\r\n  BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\nexport const hexToNaturalWithPercentage = (value) =>\r\n  `${bg(hexToNumberString(value), -18)\r\n    .sd(4)\r\n    .times(100)\r\n    .toFixed(4)\r\n    .toString()}%`;\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const deriToNaturalWithPercentage = (value) =>\r\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const hasInvalidArgsValue = (...args) =>\r\n  args.some(\r\n    (i) =>\r\n      // console.log(bg(i))\r\n      isNaN(i.toString()) || i.toString() === '0'\r\n  );\r\n\r\n// language\r\nexport const isObject = (obj) => typeof obj === 'object';\r\n\r\n//const np = () => {}\r\n//const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// http\r\nexport const checkHttpServerIsAlive = async (url) => {\r\n  try {\r\n    //const response = await fetch(url);\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n    //console.log(err);\r\n  }\r\n  return false;\r\n};\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getAliveHttpServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i];\r\n    if (await checkHttpServerIsAlive(url)) {\r\n      //console.log(url)\r\n      return url;\r\n    }\r\n  }\r\n  throw new Error('No alive http server in urls', urls);\r\n};\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  //console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index].url\r\n  //console.log(res)\r\n  if (res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): cannot find alive RPC server in ${urls}`)\r\n  }\r\n};\r\n\r\n// ethereum chain\r\nexport const MAX_VALUE =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};\r\n\r\nexport const getWalletBalanceUnit = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let index;\r\n  const unitNetworkIdsMap = {\r\n    ETH: ['1', '3', '42'],\r\n    BNB: ['56', '97'],\r\n    HT: ['128', '256'],\r\n  };\r\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\r\n  for (let i = 0; i < networkIdsArray.length; i++) {\r\n    if (networkIdsArray[i].includes(chainId)) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  if (index !== undefined) {\r\n    return Object.keys(unitNetworkIdsMap)[index];\r\n  }\r\n  if (chainId === '') {\r\n    return '';\r\n  }\r\n  throw new Error('Invalid Network:', chainId);\r\n};\r\n\r\nexport const getPoolBaseSymbolList = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let result = [];\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  for (let i = 0; i < pools.length; i++) {\r\n    const { bTokenSymbol, symbol } = pools[i];\r\n    if (bTokenSymbol && symbol) {\r\n      result.push(`${symbol}/${bTokenSymbol}`);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getPoolBaseTokenAddressObject = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let result = {};\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  for (let i = 0; i < pools.length; i++) {\r\n    const { bTokenSymbol, symbol, pool } = pools[i];\r\n    const key = `${symbol}/${bTokenSymbol}`;\r\n    if (bTokenSymbol && symbol) {\r\n      result[key] = pool;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\r\n//   if (pool.length > 0) {\r\n//     return [\r\n//       pool[0].pool,\r\n//       pool[0].bToken,\r\n//       pool[0].pToken,\r\n//       pool[0].lToken,\r\n//       pool[0].dToken,\r\n//       pool[0].MiningVault,\r\n//       pool[0].initialBlock,\r\n//     ];\r\n//   }\r\n//   console.log(\r\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\r\n//   );\r\n//   return [];\r\n// };\r\n\r\n// get config by poolAddress\r\nexport const getPoolContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  }\r\n  // console.log(\r\n  //   `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  // );\r\n  return [];\r\n};\r\n\r\nexport const getMiningVaultContractAddress = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\n// export const getMiningVaultRouterContractAddress = (chainId) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   if (pools.length > 0) {\r\n//     if (pools[0].MiningVaultRouter) {\r\n//       return pools[0].MiningVaultRouter;\r\n//     }\r\n//   }\r\n// };\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  }\r\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\r\n};\r\n\r\nexport const getSlpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n    };\r\n  }\r\n  console.log(\r\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n    };\r\n  }\r\n  console.log(\r\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getClpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n    };\r\n  }\r\n  console.log(\r\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getLpContractAddress = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriContractAddress = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getOracleUrl = (chainId, poolAddress) => {\r\n  const env = DeriEnv.get()\r\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\r\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\r\n  if (env === 'prod' || env === 'production') {\r\n    // for production\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\r\n    }\r\n    return 'https://oracle4.deri.finance/price';\r\n  } else {\r\n    if (symbol) {\r\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\r\n    }\r\n    // for test\r\n    return 'https://oracle2.deri.finance/price';\r\n  }\r\n};\r\n\r\nexport const getOracleInfo = async (chainId, poolAddress) => {\r\n  let url = getOracleUrl(chainId, poolAddress);\r\n  //console.log('oracle url', url);\r\n  let retry = 2;\r\n  //let timeout = 1000;\r\n  let res;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    //if (res && !res.timeout) {\r\n    if (res.ok) {\r\n      break;\r\n    }\r\n    //console.log('get oracle info timeout')\r\n    retry -= 1;\r\n    //timeout += 800;\r\n  }\r\n  if (retry === 0 && !res) {\r\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\r\n  const responseJson = await getOracleInfo(chainId, poolAddress);\r\n  let price = responseJson.price;\r\n  if (!price) {\r\n    price = '0';\r\n  }\r\n  return deriToNatural(responseJson.price).toString();\r\n};\r\nexport const getOraclePrice = getBTCUSDPrice;\r\n\r\nexport const getChainProviderUrl = async(chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrlsConfig(chainId)\r\n  if (urls.length > 0) {\r\n    return await getLatestRPCServer(urls)\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const format = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`)\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`)\r\n  }\r\n};","import { bg, getDailyBlockNumber } from '../utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = tradersNetVolume.times(price).times(multiplier);\r\n  const removable = liquidity\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = volume\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = liquidity\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (margin.plus(amount).gte(minMargin)) {\r\n    if (\r\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = null;\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n}\r\nexport default new Version()","import {\r\n  bTokenFactory,\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory/contracts';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\r\nimport {\r\n  getPoolContractAddress,\r\n  getMiningVaultContractAddress,\r\n  getBTCUSDPrice,\r\n  bg,\r\n  naturalToDeri,\r\n  BigNumber,\r\n  format,\r\n  getDeriContractAddress,\r\n} from '../utils';\r\nimport {\r\n  getMiningVaultRouterContractAddress\r\n} from '../config'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transactPool(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transactPool(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriContractAddress(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  getPoolContractAddress,\r\n} from '../utils';\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const userInfo = await getUserInfo(userAddress);\r\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\r\n  const userInfoTotal = await getUserInfoTotal(userAddress);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","import {\r\n  getPoolContractAddress,\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n} from '../utils';\r\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getRestServerConfig, DeriEnv } from '../config';\r\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\r\nimport {\r\n  getLiquidateHistoryOnline,\r\n  getTradeHistoryOnline,\r\n} from './tradeHistoryApi';\r\n\r\nconst getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nconst fetchJson = async (url, opts) => {\r\n  const resp = await fetch(url, opts);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: i.baseToken.trim(),\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n} from './contractTransactionApi';\r\nimport {\r\n  addSlpLiquidity,\r\n  removeSlpLiquidity,\r\n} from './slpPoolApi'\r\nimport {\r\n  addClpLiquidity,\r\n  removeClpLiquidity,\r\n} from './clpPoolApi'\r\nimport {\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2PoolApi'\r\nimport { wsInstance } from './apiGlobals'\r\nimport { getRestServerConfig, DeriEnv } from '../config'\r\n\r\nconst wsOnPromise = (ws, event) => {\r\n  return new Promise((resolve) => {\r\n    ws.on(event, function(data){\r\n      resolve(JSON.parse(data))\r\n    })\r\n  })\r\n}\r\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\r\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\r\n  await ws.send(methodCall)\r\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\r\n  //console.log('res', res)\r\n  return res\r\n}\r\n\r\nexport const tradeWithMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const closePosition2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const depositMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const withdrawMargin2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeSlpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\nexport const addClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClpLiquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const addClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount = '0'\r\n) => {\r\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};\r\n\r\nexport const removeClp2Liquidity2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares = '0'\r\n) => {\r\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\r\n  if (res.success) {\r\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\r\n    return {...res2, ...res}\r\n  } else {\r\n    return res\r\n  }\r\n};","import { perpetualPoolFactory } from '../factory/contracts';\r\nimport { getBTCUSDPrice } from '../utils';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(chainId, poolAddress) {\r\n      try {\r\n        const res = await getBTCUSDPrice(chainId, poolAddress);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(chainId, poolAddress) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(chainId, poolAddress);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nconst versionKey = 'deri-current-version'\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base == 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\n","import {\r\n  bTokenFactory,\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory/contracts';\r\nimport { getPoolInfoApy } from './databaseApi';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './apiGlobals';\r\nimport {\r\n  hasInvalidArgsValue,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  getPoolContractAddress,\r\n  getBTCUSDPrice,\r\n  bg,\r\n  BigNumber,\r\n  getDeriContractAddress,\r\n} from '../utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  let price = ''\r\n  try {\r\n    price = await getBTCUSDPrice(chainId, poolAddress);\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, isProvider) => {\r\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress, isProvider);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    await priceCache.update(chainId, poolAddress);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (hasInvalidArgsValue(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (hasInvalidArgsValue(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\r\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\r\n  return (await deri.balance(accountAddress)).toString();\r\n};\r\n","var map = {\n\t\"./de/Signin.json\": 585,\n\t\"./de/bridge.json\": 586,\n\t\"./de/broker.json\": 587,\n\t\"./de/dip-history.json\": 588,\n\t\"./de/footer.json\": 589,\n\t\"./de/governance.json\": 590,\n\t\"./de/header.json\": 591,\n\t\"./de/home.json\": 592,\n\t\"./de/lite.json\": 593,\n\t\"./de/mining.json\": 594,\n\t\"./de/mobile-lite.json\": 595,\n\t\"./de/pro.json\": 596,\n\t\"./de/team.json\": 597,\n\t\"./en/Signin.json\": 598,\n\t\"./en/bridge.json\": 599,\n\t\"./en/broker.json\": 600,\n\t\"./en/dip-history.json\": 601,\n\t\"./en/footer.json\": 602,\n\t\"./en/governance.json\": 603,\n\t\"./en/header.json\": 604,\n\t\"./en/home.json\": 605,\n\t\"./en/lite.json\": 606,\n\t\"./en/mining.json\": 607,\n\t\"./en/mobile-lite.json\": 608,\n\t\"./en/pro.json\": 609,\n\t\"./en/team.json\": 610,\n\t\"./zh/Signin.json\": 611,\n\t\"./zh/bridge.json\": 612,\n\t\"./zh/broker.json\": 613,\n\t\"./zh/dip-history.json\": 614,\n\t\"./zh/footer.json\": 615,\n\t\"./zh/governance.json\": 616,\n\t\"./zh/header.json\": 617,\n\t\"./zh/home.json\": 618,\n\t\"./zh/lite.json\": 619,\n\t\"./zh/mining.json\": 620,\n\t\"./zh/mobile-lite.json\": 621,\n\t\"./zh/pro.json\": 622,\n\t\"./zh/team.json\": 623\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 584;","import { isUsedRestOracle } from '../config/oracle';\r\nimport {\r\n  WooOracle,\r\n  WrappedOracle,\r\n  // OffchainOracle,\r\n  BrokerManager,\r\n  PTokenAirdrop,\r\n  BToken,\r\n} from '../contract';\r\nimport { RestOracle } from '../utils'\r\n\r\nexport const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal) => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      // if (['80001'].includes(chainId)) {\r\n      //   instanceMap[key] = new ChainlinkOracle(\r\n      //     chainId,\r\n      //     address,\r\n      //     symbol,\r\n      //     decimal\r\n      //   );\r\n      // } else if (['137', '97'].includes(chainId)) {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (['56', '137', '97','80001'].includes(chainId)) {\r\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\r\n      } else {\r\n        instanceMap[key] = new WooOracle(chainId, address, symbol, decimal);\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\n\r\nexport const bTokenFactory = factory(BToken);\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\n\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop)\r\n","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\n\r\nfunction App({intl}) {\r\n  if(isBrowser){\r\n    return <DesktopApp locale={intl.locale}/>\r\n  }\r\n  if(isMobile){\r\n    return <MobileApp locale={intl.locale}/>\r\n  }\r\n}\r\n\r\nexport default inject('intl')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\n\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error(addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    const balance = await getUserWalletBalance(chainId,account)\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport WebSocket from \"socket.io-client\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n\r\n  initWebSocket(){\r\n    if(this.ws === null) {\r\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \r\n        transports: ['websocket'],\r\n        withCredentials: true\r\n      })\r\n      this.ws.on('connect',() => {\r\n        if(this.already){\r\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n          console.log('ws is reconnected already')\r\n        }\r\n        console.log('ws is already connected');\r\n      });\r\n    }    \r\n  }\r\n\r\n\r\n  load(symbol,timeType = 'min'){\r\n    // symbol = symbol+'_V2'\r\n    this.initWebSocket()\r\n    this.ws.on('kline_update',data => {\r\n      const obj = {}\r\n      let time = data.time\r\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\r\n        obj.time = time \r\n        obj.low = Number(data.low)\r\n        obj.high = Number(data.high)\r\n        obj.open = Number(data.open)\r\n        obj.close = Number(data.close)\r\n        obj.volume = Number(data.volume)\r\n        obj.time_type = data.time_type\r\n        obj.symbol = data.symbol\r\n        if(!this.paused) {\r\n          this.setIndex(obj.close)\r\n          for(const key of Object.keys(this.listeners)){\r\n            if(typeof this.listeners[key] === 'function'){\r\n              this.listeners[key](obj)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol);\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n\r\n\r\n  unsubscribeBars(symbol){\r\n    if(this.ws){\r\n      this.ws.emit('un_get_kline_update', {\r\n        symbol : symbol, 'time_type' : 'min'\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //暂不用\r\n  loadHistory(symbol,timeType,callback){\r\n    this.ws.on('kline_history', data => {\r\n      const history = data.map(el => {\r\n        return {\r\n          time: el.time,\r\n          low: Number(el.low),\r\n          high: Number(el.high),\r\n          open: Number(el.open),\r\n          close: Number(el.close),\r\n          volume: Number(el.volume)\r\n        }\r\n      })\r\n      if(callback){\r\n        console.log('history ->',history[history.length-1].time)\r\n        callback(history)\r\n      }\r\n    })\r\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\r\n  }\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\r\n\r\nexport default class Position {\r\n\r\n  callback = () => {}\r\n   wallet = null;\r\n   spec = null\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n   }\r\n\r\n   async load(wallet,spec,callback){\r\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      // const fundingFee = await getFun\r\n      if(position){\r\n        if(callback){\r\n          callback(position)\r\n        }\r\n      }\r\n      this.start(wallet,spec,callback)\r\n      return position;\r\n     }\r\n   }\r\n\r\n   start(wallet,spec,callback){\r\n     if(this.interval !== null){\r\n       clearInterval(this.interval);\r\n     }\r\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \r\n    if(wallet){\r\n      this.wallet= wallet; \r\n    }\r\n    if(spec){\r\n      this.spec = spec\r\n    }\r\n    if(callback){\r\n      this.callback = callback;\r\n    }\r\n   }\r\n\r\n   pause(){\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n   }\r\n\r\n   resume(wallet,spec,callback){\r\n     this.start(wallet,spec,callback || this.callback)\r\n   }\r\n\r\n   \r\n\r\n\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:'BUSD',\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    minInitialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\r\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config){\r\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   */\r\n  async init(wallet){    \r\n    const all = await this.configInfo.load(version);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        //没有默认的配置，\r\n        this.setSupportChain(false);\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n    } \r\n    //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    if(!wallet.isConnected() && !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async switch(spec){\r\n    const cur = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    let changed = false\r\n    if(version){\r\n      changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    }\r\n    if(cur){\r\n      this.pause();\r\n      this.setConfig(cur)\r\n      this.loadByConfig(this.wallet,cur,changed);  \r\n      if(changed){\r\n        this.store(cur)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged){\r\n     //position\r\n     const position = await this.positionInfo.load(wallet,config,position => {       \r\n        this.setPosition(position);\r\n     })\r\n\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      const symbol = getFormatSymbol(config.symbol)\r\n      this.oracle.unsubscribeBars(symbol);\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      \r\n      if(position){\r\n        this.setIndex(position.price);\r\n      }\r\n      this.oracle.load(symbol)\r\n    }\r\n     //contract\r\n     const contract = await this.contractInfo.load(wallet,config)    \r\n\r\n     //funding rate\r\n     const fundingRate = await this.loadFundingRate(wallet,config)\r\n     \r\n     //history\r\n     const history = await this.historyInfo.load(wallet,config);\r\n\r\n     if(contract){\r\n      this.setContract(contract)\r\n     }\r\n\r\n     if(fundingRate){\r\n      this.setFundingRate(fundingRate)\r\n     }\r\n\r\n     if(history){\r\n      this.setHistory(history);\r\n     }\r\n  }\r\n\r\n\r\n    //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n    getDefaultConfig(configs = [],wallet){\r\n      let defaultConfig = null;\r\n      if(configs.length > 0){    \r\n        const fromStore = this.getFromStore();\r\n        if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n          defaultConfig = fromStore;\r\n        }\r\n        if(defaultConfig){\r\n          //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n          const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n          if(pos === -1){\r\n            defaultConfig = configs[0];\r\n          }\r\n        } else {\r\n          defaultConfig = configs[0]\r\n        }   \r\n      }\r\n      return defaultConfig;    \r\n    }\r\n\r\n \r\n\r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    if(position){\r\n      this.setPosition(position)\r\n    }\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume(this.wallet,this.config);\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    this.configs = configs\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setSupportChain(support){\r\n    this.supportChain = support;\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\r\n      this.setVolume(volume.toFixed(0))\r\n    }\r\n  }\r\n\r\n\r\n  get volumeDisplay(){\r\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n\r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = totalVolume * price * contract.multiplier\r\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage\r\n    }\r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    \r\n    return ''\r\n  }\r\n\r\n\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n// const version = new Version();\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        //'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\r\n\r\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n","import { DeriEnv } from '../../config';\r\nimport { getConfig } from './config';\r\n\r\nconst expendPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            version: 'v2',\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expendPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          router: pool.router,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite',\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getPoolConfigList = (version='v2') => {\r\n  const config = getConfig(version)\r\n  if (version === 'v2') {\r\n    return expendPoolConfigV2(config)\r\n  } else if (version === 'v2_lite') {\r\n    return expendPoolConfigV2Lite(config)\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version)\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  // check the bToken in v2_lite\r\n  if (version === 'v2_lite') {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\r\n    return acc.concat(getConfig(version)['pools'])\r\n  }, [])\r\n  //console.log('pools', pools)\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  const config = getConfig(version)\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool\r\n  }\r\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (bTokenId !== undefined || bTokenId !== null) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\r\n  }\r\n  if (symbolId !== undefined || symbolId !== null) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n","import { getConfig } from './config';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getConfig(version)\r\n  return config.brokerManager\r\n};\r\n\r\nexport const getBrokerConfig = (chainId, version) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nexport const metaMaskWeb3 = (function () {\r\n  let web3Instance = null;\r\n  return () => {\r\n    if (web3Instance !== null) {\r\n      return web3Instance;\r\n    }\r\n    if (typeof window.ethereum !== undefined) {\r\n      web3Instance = new Web3(window.ethereum);\r\n      return web3Instance;\r\n    } else {\r\n      // console.log(\"Please install MetaMask first\")\r\n      throw new Error('Please install MetaMask first');\r\n    }\r\n  };\r\n})();\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      console.log(`--- web3factory init (${chainId}) ---`)\r\n      // using metaMask ethereum object\r\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else if (isBrowser() && !isJsDom()) {\r\n        // MetaMask plugin is not installed in the browser\r\n        throw new Error('Please install MetaMask first');\r\n      } else {\r\n        const providerUrl = await getChainProviderUrl(chainId);\r\n        web3InstanceMap[chainId] = new Web3(\r\n          new Web3.providers.HttpProvider(providerUrl)\r\n        );\r\n        return web3InstanceMap[chainId];\r\n      }\r\n    },\r\n  };\r\n})();","import { DeriEnv } from '../../config';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\r\n\r\nconst validateConfigV2 = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['bTokens'], 'bTokens');\r\n  config['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processConfigV2 = (config) => {\r\n  // process config\r\n  config['bTokenCount'] = config['bTokens'].length;\r\n  config['symbolCount'] = config['symbols'].length;\r\n};\r\n\r\nconst validateConfigV2Lite = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2Lite = (config) => {\r\n  // process config\r\n  config['symbolCount'] = config['symbols'].length;\r\n};\r\n\r\nconst getJsonConfig = (version) => {\r\n  const env = DeriEnv.get();\r\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\r\n    configs = configs[version]\r\n  }\r\n  if (['prod', 'dev'].includes(env)){\r\n    //console.log(env)\r\n    if (configs && configs[env]) {\r\n      //console.log(configs[env])\r\n      const pools = configs[env].pools;\r\n      if (pools && Array.isArray(pools)) {\r\n        if (version === 'v2') {\r\n          for (let i = 0; i < pools.length; i++) {\r\n            validateConfigV2(pools[i]);\r\n            processConfigV2(pools[i]);\r\n          }\r\n        } else if (version === 'v2_lite') {\r\n          for (let i = 0; i < pools.length; i++) {\r\n            validateConfigV2Lite(pools[i]);\r\n            processConfigV2Lite(pools[i]);\r\n          }\r\n        }\r\n      }\r\n      //console.log(configs[env])\r\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\r\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n      return configs[env];\r\n    }\r\n  }\r\n  throw new Error(\r\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n  );\r\n};\r\n\r\nexport const getConfig = (version='v2') => {\r\n  return getJsonConfig(version);\r\n};\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { wooOracleAbi } from '../abis';\r\nimport { bg } from '../../utils';\r\n\r\nexport class WooOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wooOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    const res = await this._call('_I_')\r\n    return bg(res, `-${this.decimal}`).toString();\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { chainlinkOracleAbi } from '../abis';\r\nimport { bg } from \"../../utils\";\r\n\r\nexport class ChainlinkOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, chainlinkOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('latestRoundData');\r\n    if (res && res.answer) {\r\n      return bg(res.answer, `-${this.decimal}`).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from \"./contract_base\";\r\nimport { brokerManagerAbi } from './abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { offchainOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class OffchainOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, offchainOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}","import { ContractBase } from './contract_base'\r\nimport { pTokenAirdropAbi } from './abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","import { ContractBase } from './contract_base'\r\nimport { bTokenLiteAbi } from './abis';\r\nimport { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenLiteAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async transfer() {\r\n  // call transfer\r\n  // }\r\n}","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\r\nimport { getSlpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balance(poolAddress),\r\n      bToken.balance(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\r\nimport { getClp2ContractAddress } from '../utils';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balance(poolAddress),\r\n      bToken.balance(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory/contracts';\r\nimport { bg, getClpContractAddress } from '../utils';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balance(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { getConfig } from './config';\r\n\r\nexport const getOracleConfigList = (version) => {\r\n  const config = getConfig(version)\r\n  return config.oracle\r\n};\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return ['AXSUSDT', 'MANAUSDT'].includes(symbol);\r\n};\r\n\r\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\r\n  const filteredByChainId = getOracleConfigList(version).filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  throw new Error(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import { ContractBase } from '../contract_base'\r\nimport { perpetualPoolAbi } from '../abis';\r\nimport { deriToNatural, hexToNumber, bg } from '../../utils'\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { perpetualPoolRouterAbi} from '../abis';\r\nimport { naturalToDeri } from '../../utils'\r\nimport { MAX_INT256 } from '../../config';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { ContractBase } from '../contract_base'\r\nimport { lTokenAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils'\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils'\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'production') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n"],"sourceRoot":""}