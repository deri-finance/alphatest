{"version":3,"sources":["utils/DeriNumberFormat.js","pages/Token/img/pancake.svg","pages/Token/img/sushiswap-sushi-logo.svg","pages/Token/img/gateio.svg","pages/Token/img/mxc.svg","pages/Token/Token.js"],"names":["DeriNumberFormat","props","useState","className","renderablity","setRenderablity","isValidate","allowZero","value","undefined","isNaN","Math","abs","useEffect","wallet","defaultValue","others","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","isConnected","clearTimeout","inject","observer","lang","deriTokenAddress","setDeriTokenAddress","deriInfo","setDeriInfo","config","useConfig","addToken","a","ethereum","request","method","params","type","options","address","symbol","decimals","console","log","getDeriInfo","fetch","resp","json","res","obj","price","data","market_cap","circulating_supply","parseInt","total_supply","sushiBuy","switchNetwork","open","pancakeBuy","detail","chainId","interval","setInterval","clearInterval","alt","src","deriLogo","href","Button","onClick","PRIMARY","width","label","decimalScale","target","pancake","sushi","rel","gate","mexc"],"mappings":"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","file":"static/js/10.8269fd64.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\n\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') \n          || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true )\n  }\n\n  useEffect(() => {\n    const {allowZero,wallet,defaultValue = '--',...others} = props \n    if(isValidate()) {\n      setRenderablity(<NumberFormat {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n    } else {\n      setRenderablity(<span className='loading-line'></span>)\n    } \n    const timeout = window.setTimeout(() => {\n      if(!isValidate() && wallet && !wallet.isConnected()){\n        setRenderablity(defaultValue)\n      }\n    },30000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value]);\n\n  return renderablity;\n}\n\nexport default DeriNumberFormat","export default __webpack_public_path__ + \"static/media/pancake.2c13a9f3.svg\";","export default __webpack_public_path__ + \"static/media/sushiswap-sushi-logo.f8ccc300.svg\";","export default __webpack_public_path__ + \"static/media/gateio.1570dd44.svg\";","export default __webpack_public_path__ + \"static/media/mxc.b59b5e73.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { useState, useEffect } from \"react\"\nimport { inject, observer } from 'mobx-react';\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\nimport Button from \"../../components/Button/Button\"\nimport useConfig from \"../../hooks/useConfig\"\nimport { PRIMARY } from '../../utils/Constants';\nimport deriLogo from \"../../assets/img/logo.svg\"\nimport pancake from \"./img/pancake.svg\"\nimport sushi from \"./img/sushiswap-sushi-logo.svg\"\nimport gate from \"./img/gateio.svg\"\nimport mexc from \"./img/mxc.svg\"\nimport './token.less'\nfunction Token({ wallet = {}, lang }) {\n  const [deriTokenAddress, setDeriTokenAddress] = useState()\n  const [deriInfo, setDeriInfo] = useState()\n  const config = useConfig();\n  const addToken = async () => {\n    if (deriTokenAddress) {\n      const tokenSymbol = 'DERI';\n      const tokenDecimals = 18;\n      try {\n        const wasAdded = await window.ethereum.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20', // Initially only supports ERC20, but eventually more!\n            options: {\n              address: deriTokenAddress, // The address that the token is at.\n              symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n              decimals: tokenDecimals, // The number of decimals in the token\n            },\n          },\n        });\n\n        if (wasAdded) {\n          console.log('Thanks for your interest!');\n        } else {\n          console.log('Your loss!');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  const getDeriInfo = async () => {\n    let path = 'https://infoapi.deri.finance/stats_for_token'\n    let resp = await fetch(path);\n    let res = await resp.json();\n    if (res) {\n      let obj = {}\n      obj.price = res.data.price\n      obj.market_cap = res.data.market_cap\n      obj.circulating_supply = parseInt(res.data.circulating_supply)\n      obj.total_supply = parseInt(res.data.total_supply)\n      setDeriInfo(obj)\n    }\n\n  }\n\n  const sushiBuy = async () => {\n    if (wallet.isConnected()) {\n      await wallet.switchNetwork(config[1])\n      window.open(\"https://app.sushi.com/swap?inputCurrency=&outputCurrency=0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9\")\n    } else {\n      window.open(\"https://app.sushi.com/swap?inputCurrency=&outputCurrency=0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9\")\n    }\n  }\n\n  const pancakeBuy = async () => {\n    if (wallet.isConnected()) {\n      await wallet.switchNetwork(config[56])\n      window.open(\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=0xe60eaf5a997dfae83739e035b005a33afdcc6df5\")\n    } else {\n      window.open(\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=0xe60eaf5a997dfae83739e035b005a33afdcc6df5\")\n    }\n  }\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      let address;\n      if (+wallet.detail.chainId === 56) {\n        address = '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5'\n      } else if (+wallet.detail.chainId === 1) {\n        address = '0xa487bf43cf3b10dffc97a9a744cbb7036965d3b9'\n      } else if (+wallet.detail.chainId === 128) {\n        address = '0x2bdA3e331Cf735D9420e41567ab843441980C4B8'\n      } else if (+wallet.detail.chainId === 137) {\n        address = '0x3d1d2afd191b165d140e3e8329e634665ffb0e5e'\n      }\n      setDeriTokenAddress(address)\n    }\n\n  }, [wallet.detail])\n  useEffect(() => {\n    let interval = null;\n    //计数器\n    interval = window.setInterval(() => {\n      getDeriInfo()\n    }, 300000);\n    getDeriInfo()\n    return () => {\n      interval && clearInterval(interval);\n    };\n  }, [])\n  return (\n    <div className='token-box'>\n      <div className='token-info'>\n        <div className='token-header'>\n          <div className='token-header-left'>\n            <div className='logo-title'>\n              <img alt='' src={deriLogo} />\n              <span className='title-text'>{lang['title']}</span>\n            </div>\n            <div className='token-header-des'>\n              {lang['deri-is-the-protocol-token']}\n              <a href='#' className='learn-more'> {lang['learn-more']} </a>\n            </div>\n          </div>\n          <div className='token-header-right'>\n            <Button onClick={() => { addToken() }} type={PRIMARY} width=\"242\" label={lang[\"add-deri-to-metamask\"]} />\n          </div>\n        </div>\n        <div className='token-info-content'>\n          <div className='top-info-box'>\n            <div className='info-box'>\n              <div className='num'>\n                $ {deriInfo ? <DeriNumberFormat value={deriInfo.price} displayType='text' thousandSeparator={true} decimalScale={4} /> : '--'}\n              </div>\n              <div className='text'>\n                {lang['price']}\n              </div>\n            </div>\n            <div className='info-box min-box'>\n              <div className='num'>\n                $ {deriInfo ? <DeriNumberFormat value={deriInfo.market_cap} displayType='text' thousandSeparator={true} decimalScale={0} /> : '--'}\n              </div>\n              <div className='text'>\n                {lang['market-cap']}\n              </div>\n            </div>\n          </div>\n          <div className='buttom-info-box'>\n            <div className='info-box'>\n              <div className='num'>\n                {deriInfo ? <DeriNumberFormat value={deriInfo.circulating_supply} displayType='text' thousandSeparator={true} decimalScale={0} /> : '--'}\n              </div>\n              <div className='text'>\n                {lang['circulating-supply']}\n              </div>\n            </div>\n            <div className='info-box min-box'>\n              <div className='num'>\n                {deriInfo ? <DeriNumberFormat value={deriInfo.total_supply} displayType='text' thousandSeparator={true} decimalScale={0} /> : '--'}\n              </div>\n              <div className='text'>\n                {lang['total-supply']}\n              </div>\n            </div>\n          </div>\n\n        </div>\n        <div className='buy-deri-token'>\n          {lang[\"buy-deri-token\"]}\n        </div>\n        <div className='buy-deri-token-swap'>\n          <a target='_blank' onClick={pancakeBuy}>\n            <div className='swap-box'>\n              <div className='swap-logo'>\n                <img alt='' src={pancake} />\n              </div>\n              <div className='swap-name'>\n                {lang['pancake-swap']}\n              </div>\n            </div>\n          </a>\n          <a target='_blank' onClick={sushiBuy}>\n            <div className='swap-box'>\n              <div className='swap-logo'>\n                <img alt='' src={sushi} />\n              </div>\n              <div className='swap-name'>\n                {lang['sushi-swap']}\n              </div>\n            </div>\n          </a>\n          <a target='_blank' rel='noreferrer' href='https://www.gate.io/tradepro/DERI_USDT'>\n            <div className='swap-box'>\n              <div className='swap-logo'>\n                <img alt='' src={gate} />\n              </div>\n              <div className='swap-name'>\n                {lang['gate']}\n              </div>\n            </div>\n          </a>\n          <a target='_blank' rel='noreferrer' href='https://www.mexc.com/exchange/DERI_USDT'>\n            <div className='swap-box'>\n              <div className='swap-logo'>\n                <img alt='' src={mexc} />\n              </div>\n              <div className='swap-name'>\n                {lang['mexc']}\n              </div>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default inject('wallet')(observer(Token))    "],"sourceRoot":""}