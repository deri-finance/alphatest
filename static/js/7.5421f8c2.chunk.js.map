{"version":3,"sources":["utils/DeriNumberFormat.js","components/Tab/Tab.js","components/Input/Input.js","components/ButtonGroup/ButtonGroup.js","pages/Pool/Claim.js","pages/Pool/img/staked.svg","pages/Pool/OperateLiquidity.js","pages/Pool/img/back.svg","pages/Pool/Detail.js"],"names":["DeriNumberFormat","props","useState","className","renderablity","setRenderablity","isValidate","allowZero","value","undefined","isNaN","Math","abs","useEffect","wallet","defaultValue","others","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","isConnected","clearTimeout","Tab","tabSet","inactiveBgColor","activeBgColor","icon","width","height","size","borderTop","borderBottom","divider","arr","Object","keys","selected","setSelected","styles","style","borderT","borderColor","borderB","borderL","borderR","Wrapper","styled","div","fontColor","map","item","direction","onClick","select","content","inputWidth","unitPadding","Input","unit","step","onChange","focus","inputValue","setInputValue","inputRef","useRef","current","type","ref","onBlur","e","target","ButtonGroup","groups","defaultBorderColor","outline","outlineColor","bgColor","setValue","text","index","label","isSelected","Claim","lang","poolShow","remainingTime","setRemainingTime","interval","setInterval","period","parseInt","Date","now","dis","h","m","s","clearInterval","OperateLiquidity","isLp","bTokenId","version","baseToken","address","walletBalance","poolInfo","afterTransaction","addRemoveValue","setAddRemoveValue","addLiquidity","a","max","bg","gt","alert","param","detail","chainId","account","apiProxy","request","removeLiquidity","totalShares","cur","eq","decimalScale","balance","percentage","times","toString","Button","PRIMARY","chainInfo","config","DeriEnv","get","inject","observer","poolManager","useParams","symbol","nowToken","setNowToken","nowTokenId","setNowTokenId","poolConfig","setPoolConfig","bTokenList","setBTokenList","isShowInfo","setIsShowInfo","setPoolInfo","symbols","setSymbols","setWalletBalance","networkText","name","getWalletBalance","params","push","getLiquidityInfo","background","load","pool","pools","loadDoubleMingingPool","lpPools","filter","p","bToken0","bTokens","bTokenSymbol","isCakeLP","isSushiLP","join","getPoolInfo","res","apy","bTokensApy","i","info","liquidity","bTokensLiq","total","checkoutBaseToken","b","to","alt","src","backIcon","id","BSC","POLYGON","ETH","networkLogo","suffix","length","stakedLogo","downIcon","percent","shareValue","formatShares","prefix","swappedPnl","formatAddress"],"mappings":"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","file":"static/js/7.5421f8c2.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\n\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') \n          || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true )\n  }\n\n  useEffect(() => {\n    const {allowZero,wallet,defaultValue = '--',...others} = props \n    if(isValidate()) {\n      setRenderablity(<NumberFormat {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n    } else {\n      setRenderablity(<span className='loading-line'></span>)\n    } \n    const timeout = window.setTimeout(() => {\n      if(!isValidate() && wallet && !wallet.isConnected()){\n        setRenderablity(defaultValue)\n      }\n    },30000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value]);\n\n  return renderablity;\n}\n\nexport default DeriNumberFormat","import styled from 'styled-components'\nimport React, { useState } from 'react';\n\nexport default function Tab({ tabSet, inactiveBgColor,activeBgColor,icon, className, width = 238, height = 47, size = 16,borderTop = false,borderBottom = false, divider = false }) {\n  const arr = Object.keys(tabSet)\n  const [selected, setSelected] = useState(arr[0])\n  const styles = tabSet[selected].style\n  let borderT = borderTop ? `border-top:1px solid ${tabSet[selected].borderColor}`:\"border-top:0\"\n  let borderB = borderBottom ? `border-bottom:1px solid ${tabSet[selected].borderColor}`:\"border-bottom:0\"\n  let borderL = divider ? `border-left:1px solid ${tabSet[selected].borderColor}`:\"border-left:0\"\n  let borderR = divider ? `border-right:1px solid ${tabSet[selected].borderColor}`:\"border-right:0\"\n  const Wrapper = styled.div`\n    cursor: pointer;\n    width:${width}px;\n    height:${height}px;\n    display:flex;\n    .tab-left.inactive{\n      border-radius:0px 0px 4px 0px;\n    }\n    .tab-right.inactive{\n      border-radius:0px 0px 0px 4px;\n    }\n    .tab-left.active{\n      border-radius:0px 4px 0px 0px;\n      ${borderR};\n      height:14px;\n    }\n    .tab-right.active{\n      border-radius:4px 0px 0px 0px;\n      ${borderL};\n      height:14px;\n    }\n    .inactive,.active{\n      width:50%;\n      box-sizing: content-box;\n      padding: 15px 24px;\n      font-size:${size}px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .inactive{\n      background:${inactiveBgColor};\n      ${borderB}\n    }\n    .active {\n      color: ${tabSet[selected].fontColor ? tabSet[selected].fontColor : '#FFFFFF'};\n      background : ${activeBgColor};\n      ${borderT};\n    }\n  `\n  function select(item) {\n    setSelected(item)\n  }\n\n  return (\n    <div style={styles} className={className}>\n      <Wrapper className='width'>\n        {arr.map(item => (\n          <div\n            key={item}\n            className={item === selected ? `${tabSet[item].direction} active` : `${tabSet[item].direction} inactive`}\n            onClick={() => select(item)}>\n            {item}\n          </div>\n        ))}\n      </Wrapper>\n      {tabSet[selected].content}\n    </div>\n  )\n}","import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\ndisplay : flex;\nfont-size : 14px;\nalign-items : center;\nbackground: rgba(85, 119, 253, 0.1);\nborder-radius: 4px;\njustify-content: space-between;\ninput {\n  background: transparent;\n  border-radius: 4px;\n  // min-width: 240px;\n  border: 0;\n  width : ${props => props.inputWidth};\n  height: 56px;\n  color : #E0ECFF;\n  font-size : 18px;\n  padding-left: 16px;\n}\ninput:focus {\n  outline: none;\n}\n.unit {\n  margin-right: ${props => props.unitPadding};\n}\n`\nexport default function Input({value,unit,step,onChange,styles = {},focus,unitPadding = '24px',inputWidth = '50%',className}){\n  const [inputValue,setInputValue] = useState(value)\n  const inputRef = useRef(null);\n  const change = e => {\n    const {value} = e.target\n    setInputValue(value)\n  }\n  const onBlur = (e)=>{\n    onChange && onChange(inputValue)\n  }\n  \n  useEffect(()=>{\n    if(inputRef.current && focus){\n      inputRef.current.focus();\n    }\n  },[focus])\n\n  useEffect(() => {\n    setInputValue(value)\n  }, [value])\n\n\n  return (\n    <Wrapper unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\n      <input type='number' value={inputValue} step = {step} ref={inputRef} onBlur={onBlur} onChange={change}/>\n      <div className='unit'>{unit}</div>\n    </Wrapper>    \n  )\n}","import React, { useState ,useEffect} from 'react';\nimport Button from \"../Button/Button\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display : flex;\n    width: 100%;\n    justify-content: space-between;\n  `\nexport default function ButtonGroup({groups = ['25%','50%','75%','100%'],defaultBorderColor ,onChange,defaultValue ,outline,outlineColor,width,height,bgColor,className}){\n  const [value, setValue] = useState(defaultValue)\n  const select = current => {\n    if(current !== value) {\n      setValue(current)\n      onChange && onChange(current);\n    } else if(current === value){\n      setValue('')\n    } else {\n      setValue(current)\n    }\n  }\n  useEffect(() => {\n    setValue(defaultValue)\n  }, [defaultValue])\n  return (<Wrapper className={className}>\n    {groups.map((text,index) => (\n      <Button label={text} key={index} isSelected={text === value} outline = {outline} bgColor={bgColor} className='g-button' defaultBorderColor={defaultBorderColor} outlineColor={outlineColor} width={width} height={height} onClick={() => select(text)}/>\n    ))}\n  </Wrapper>)\n}","import React, { useState, useEffect } from 'react'\nimport Button from '../../components/Button/Button'\nimport './claim.less'\nexport default function Claim({lang,poolShow=true}) {\n  const [remainingTime,setRemainingTime] = useState('')\n  useEffect(() => {\n\t\tlet interval = null;\n\t\t\t//计数器\n\t\t\tinterval = window.setInterval(() => {\n\t\t\t\tlet period = 3600 * 8;\n\t\t\t\tlet current = parseInt(Date.now()/1000);\n\t\t\t\tlet epochBegin = parseInt(current / period)*period;\n\t\t\t\tlet dis = (epochBegin + period - current);\n\t\t\t\tlet h = parseInt(dis / 3600);\n\t\t\t\tlet m = parseInt((dis % 3600)/60)\n\t\t\t\tlet s = parseInt(dis % 60) \n\t\t\t\tsetRemainingTime(`${h} ${lang['h']} ${m} ${lang['m']} ${s} ${lang['s']}`);\n\t\t\t},1000);\n    return () => {\n      interval && clearInterval(interval);\n\t\t};\n\t\t\n  }, []);\n  return (\n    <div className='mining-claim'>\n      <div className='mining-claim-info'>\n        <div className='deri-num-slider'>\n          <div className='deri-claim-time'>\n            {remainingTime}\n          </div>\n          {poolShow && <div className='deri-claim-text'>\n            You have 2,100 unclaimed $DERI across all staked pools. You’ve earned a total of 23,694 Deri token since Sep 12, 2021. Woohoo!\n          </div>}\n          <div className='deri-claim-slider'>\n          </div>\n        </div>\n        {poolShow && <div className='cliam-button'>\n          <Button label={lang['claim-all']} />\n        </div>}\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/staked.45c27f0b.svg\";","import { useEffect, useState } from 'react'\nimport Input from \"../../components/Input/Input\"\nimport Button from \"../../components/Button/Button\"\nimport ButtonGroup from \"../../components/ButtonGroup/ButtonGroup\"\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\nimport { PRIMARY } from '../../utils/Constants';\nimport apiProxy from \"../../model/ApiProxy\"\nimport './operateLiauidity.less'\nimport {bg} from \"../../lib/web3js/index\"\nexport default function OperateLiquidity({ wallet,lang,type,isLp,bTokenId,version,baseToken,address,walletBalance,poolInfo,afterTransaction }) {\n  const [addRemoveValue,setAddRemoveValue] = useState('')\n  const getValue = (value)=>{\n    setAddRemoveValue(value)\n  }\n  const unit = type === 'add' || version === 'v2' ? baseToken : lang['shares']\n  const groupValue = (value)=>{\n    value = parseInt(value)\n    let balance = type === 'add' ? walletBalance : poolInfo.totalShares;\n    let percentage = bg(balance).times(bg(value/100)).toString()\n    setAddRemoveValue(percentage)\n  }\n  const addLiquidity = async ()=>{\n    const max = bg(walletBalance)\n    const cur = bg(addRemoveValue);\n    if(cur.gt(max)) {\n      alert(lang['not-sufficient-funds']);\n      return false;\n    }\n    if(addRemoveValue <=0 || isNaN(addRemoveValue)){\n      alert(lang['it-has-to-be-greater-than-zero']);\n      return false;\n    }\n    if(isLp === 'lp'){\n      let param = [wallet.detail.chainId,address,wallet.detail.account,addRemoveValue]\n      let res = await apiProxy.request('addLpLiquidity',param)\n    }else{\n      let param = [wallet.detail.chainId,address,wallet.detail.account,addRemoveValue,bTokenId]\n      let res = await apiProxy.request('addLiquidity',param)\n    }\n   \n    afterTransaction(true)\n    // if(!res || !res.success){\n    //   alert(lang['failure-of-transaction']);\n    //   return false; \n    // }\n    \n    return true;\n  }\n  const removeLiquidity = async ()=>{\n    const max = bg(poolInfo.totalShares)\n    const cur = bg(addRemoveValue)\n    if (cur.gt(max)) {\n      alert(`${lang['your-current-max-removable-shares-are']}  ${poolInfo.totalShares}`);\n      return false;\n    }\n    \n    if (+addRemoveValue <= 0 || isNaN(addRemoveValue)) {\n      alert(lang['invalid-liquidity']);\n      return false;\n    }\n    if(isLp === 'lp'){\n      let param = [wallet.detail.chainId,address,wallet.detail.account,addRemoveValue]\n      let res = await apiProxy.request('removeLpLiquidity',param)\n    }else{\n      let param = [wallet.detail.chainId,address,wallet.detail.account,addRemoveValue,bTokenId,max.eq(cur)]\n      let res = await apiProxy.request('removeLiquidity',param)\n    }\n    \n    afterTransaction()\n    // if(!res || !res.success){\n    //   alert(lang['failure-of-transaction']);\n    //   return false; \n    // }\n    return true;\n  }\n  useEffect(()=>{\n    setAddRemoveValue('')\n  },[type])\n  return (\n    <div className='operate'>\n      <div className='add-input'>\n        <Input value={addRemoveValue} unit={unit} onChange={getValue} styles={{ width: \"332px\" }} />\n      </div>\n      {type === 'add' && <div className='wallet-balance'>\n        {lang['wallet-balance']} <DeriNumberFormat value={walletBalance} displayType='text' decimalScale={2}  /> {baseToken}\n      </div>}\n      {type === 'remove' && <div className='wallet-balance'>\n      {lang['staked-balance']} <DeriNumberFormat value={poolInfo.totalShares} displayType='text' decimalScale={2}  /> {unit}\n      </div>}\n      \n      <div className='check-proportion'>\n      <ButtonGroup groups={['25%','50%','75%','100%']} onChange={groupValue} outline={true} bgColor =' rgba(85, 119, 253, 0.1)' width={77} height={40}/>\n      </div>\n      <div className='information'>\n      \n      </div>\n      <div className='add-remove-btn'>\n        {type === 'add' && <Button onClick={()=>{addLiquidity()}} type={PRIMARY} width=\"331\" label={lang[\"add-liquidity\"]} />}\n        {type === 'remove' && <Button onClick={()=>{removeLiquidity()}} type={PRIMARY} width=\"331\" label={lang[\"remove-liquidity\"]} />} \n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/back.b0297594.svg\";","import { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport Claim from './Claim'\nimport OperateLiquidity from './OperateLiquidity'\nimport Tab from '../../components/Tab/Tab'\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\nimport apiProxy from \"../../model/ApiProxy\"\nimport { formatAddress,isCakeLP,isSushiLP } from \"../../utils/utils\"\nimport config from '../../config.json'\nimport { DeriEnv } from '../../lib/web3js/index'\nimport './detail.less'\nimport backIcon from './img/back.svg'\nimport BSC from '../../assets/img/bsc-logo.svg'\nimport POLYGON from '../../assets/img/polygon-logo.svg'\nimport ETH from '../../assets/img/ethereum.svg'\nimport downIcon from '../../assets/img/arrow-down.svg'\nimport stakedLogo from './img/staked.svg'\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\nfunction Detail({ lang, wallet = {}, poolManager }) {\n  const { version, chainId, symbol, address, type } = useParams();\n  const [nowToken, setNowToken] = useState('')\n  const [nowTokenId, setNowTokenId] = useState('')\n  const [poolConfig, setPoolConfig] = useState('')\n  const [bTokenList, setBTokenList] = useState([])\n  const [isShowInfo, setIsShowInfo] = useState('show')\n  const [poolInfo, setPoolInfo] = useState({})\n  const [symbols, setSymbols] = useState('')\n  const [walletBalance, setWalletBalance] = useState()\n  const networkText = chainInfo[chainId] && chainInfo[chainId].name;\n  const networkLogo = (chainId) => {\n    let src;\n    let id = +chainId\n    if (id === 56 || id === 97) {\n      src = BSC\n    } else if (id === 137) {\n      src = POLYGON\n    } else if (id === 1) {\n      src = ETH\n    }\n    return src\n  }\n\n  const getWalletBalance = async () => {\n    if (wallet.isConnected()) {\n      let params = [wallet.detail.chainId, address, wallet.detail.account]\n      let balance = null;\n      if (poolConfig.isLp) {\n        balance = await apiProxy.request('getLpWalletBalance', params)\n      } else {\n        params.push(nowTokenId)\n        balance = await apiProxy.request('getBTokenBalance', params)\n      }\n      setWalletBalance(balance)\n    }\n  }\n  const afterTransaction = () => {\n    getWalletBalance()\n    getLiquidityInfo()\n  }\n  const tabSet = {\n    [lang['add']]: {\n      content: <OperateLiquidity isLp={type} wallet={wallet} afterTransaction={afterTransaction} version={version} bTokenId={nowTokenId} address={address} lang={lang} type='add' baseToken={nowToken} walletBalance={walletBalance} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      direction: \"tab-left\"\n    },\n    [lang['remove']]: {\n      content: <OperateLiquidity isLp={type} wallet={wallet} afterTransaction={afterTransaction} lang={lang} version={version} address={address} type='remove' bTokenId={nowTokenId} poolInfo={poolInfo} balance={poolInfo} baseToken={nowToken} version={version} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      direction: \"tab-right\"\n    },\n  }\n  const load = async () => {\n    await poolManager.load()\n    let pool = poolManager.pools;\n    if (type === 'lp') {\n      await poolManager.loadDoubleMingingPool();\n      pool = poolManager.lpPools\n    }\n    pool = pool.filter(p => p.address === address)\n    pool = pool[0]\n    let bToken0 = pool.bTokens[0].bTokenSymbol\n    if(isCakeLP(address)){\n      bToken0 = 'CAKE-LP'\n    }else if(isSushiLP(address)){\n      bToken0 = 'DERI-USDT SLP'\n    }\n    let bTokenId = pool.bTokens[0].bTokenId\n    let symbols = pool.symbols.map(item => {\n      let arr = [];\n      arr.push(item.symbol)\n      return arr\n    })\n    symbols = symbols.join(',')\n    setSymbols(symbols)\n    setPoolConfig(pool)\n    setBTokenList(pool.bTokens)\n    setNowToken(bToken0)\n    setNowTokenId(bTokenId)\n  }\n  const getPoolInfo = async () => {\n    if (poolConfig) {\n      let res = await poolConfig.getPoolInfo(wallet, poolConfig);\n      let arr = bTokenList.map(item => {\n        if (version === 'v2') {\n          item.apy = (+(res.bTokensApy.filter(i => i.bTokenId === item.bTokenId)[0].apy) * 100)\n        } else {\n          item.apy = +(res.bTokensApy[0].apy) * 100\n        }\n        return item\n      })\n      return res\n    }\n  }\n  const getLiquidityInfo = async () => {\n    let info = null\n    if (poolConfig) {\n      let res = await poolConfig.getPoolInfo(wallet, poolConfig);\n      let apy;\n      let liquidity;\n      if (version === 'v2' && nowTokenId) {\n        apy = res.bTokensApy.filter(p => p.bTokenId === nowTokenId);\n        apy = apy[0].apy;\n        liquidity = res.bTokensLiq.filter(p => p.bTokenId === nowTokenId);\n        liquidity = liquidity[0].liquidity;\n      } else {\n        apy = res.bTokensApy[0].apy\n        liquidity = res.bTokensLiq[0].liquidity\n      }\n      info = {\n        total: liquidity,\n        apy: (+apy) * 100,\n      }\n      if (wallet.isConnected()) {\n        let res = await poolConfig.getLiquidityInfo(wallet, address, poolConfig.version, poolConfig.isLp, nowTokenId)\n        info = res;\n        info['apy'] = (+apy) * 100;\n      }\n      setPoolInfo(info)\n    }\n  }\n  const checkoutBaseToken = async (bTokenId) => {\n    let now = poolConfig.bTokens.filter(b => b.bTokenId === bTokenId)\n    setNowTokenId(bTokenId)\n    setNowToken(now[0].bTokenSymbol)\n  }\n  useEffect(() => {\n    load()\n  }, [])\n  useEffect(() => {\n    getPoolInfo()\n  }, [poolConfig, bTokenList])\n  useEffect(() => {\n    getLiquidityInfo()\n    getWalletBalance()\n  }, [nowTokenId, poolConfig, wallet.detail.account])\n\n  return (\n    <div className='pool-detail'>\n      <div className='back-pool'>\n        <Link to='/pool'>\n          <div className='icon-back'>\n            <img alt='' src={backIcon} />\n            <span>{lang['back']}</span>\n          </div>\n        </Link>\n      </div>\n      <div className='pool-deatail-info'>\n        <div className='pool-detail-basetoken-info'>\n          <div className='pool-info-text'>\n            <div className='pool-network-type'>\n              <div className='network-logo'>\n                <img alt='' src={networkLogo(chainId)} />\n              </div>\n              <div className='pool-type-network-text'>\n                <div className='pool-type-text'>\n                  {lang[version]}\n                </div>\n                <div className='pool-network-text'>\n                  {networkText}\n                </div>\n              </div>\n            </div>\n            <div className='pool-des'>\n              {lang['pool-des']}\n              <span className='learn-more'> {lang['learn-more']}</span>\n            </div>\n          </div>\n          <div className='select-basetoken-info'>\n            <div className='select-coin-title'>\n              {lang['select-the-coin']}\n            </div>\n            <div className='coin-list'>\n              {type !== 'lp' && <>\n                {bTokenList.map((item, index) =>\n                (<div className='coin-box' onClick={() => { checkoutBaseToken(item.bTokenId) }}>\n                  <div className='base-apy-info'>\n                    <div className={`btoken-logo ${item.bTokenSymbol}`}></div>\n                    <div className='apy-base-staked'>\n                      <div className='base-name'>{item.bTokenSymbol}</div>\n                      <div className='base-apy'>\n                        {lang['apy']} <DeriNumberFormat value={item.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='staked'></div>\n                </div>)\n                )}\n              </>}\n              {type === 'lp' && bTokenList.length && <>\n                <div className='coin-box'>\n                  <div className='base-apy-info'>\n                    <div className='lp-btoken-logo'>\n                      <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                      <span className='conect-logo'>+</span>\n                      <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                    </div>\n                    <div className='apy-base-staked'>\n                      <div className='base-name'>{nowToken}</div>\n                      <div className='base-apy'>\n                        {lang['apy']} <DeriNumberFormat value={bTokenList[1].apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>}\n            </div>\n          </div>\n        </div>\n        <div className='pool-detail-add-remove-info'>\n          <div className='mining-deri-liquidity'>\n            <div className='btoken-liquidity'>\n              {type !== 'lp' &&  <>\n                <div className={`btoken-logo ${nowToken}`}></div>\n                <div className='manage-stake'>\n                  <div className='manage'>\n                    {lang['manage']} {nowToken} {lang['liquidity']}\n                  </div>\n                  <div className='stake'>\n                    <img src={stakedLogo} alt='' />\n                    {lang['staked']}\n                  </div>\n                </div>\n              </>}\n              {type === 'lp' && bTokenList.length && <>\n                <div className='lp-btoken-logo'>\n                  <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                  <span className='conect-logo'>+</span>\n                  <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                </div>\n                <div className='manage-stake'>\n                  <div className='manage'>\n                    {lang['manage']} {nowToken} {lang['liquidity']}\n                  </div>\n                  <div className='stake'>\n                    <img src={stakedLogo} alt='' />\n                    {lang['staked']}\n                  </div>\n                </div>\n              </>}\n            </div>\n            <div className='deri-current-epoch'>\n              <Claim poolShow={false} lang={lang} />\n            </div>\n          </div>\n          <div className='mining-add-remove-liquidity'>\n            <div className='pool-info'>\n              <div className='pool-info-title'>\n                <div className='pool-info-title-text'>\n                  {lang['pool-info']}\n                </div>\n                <div className='down-up'>\n                  {isShowInfo === 'show' && <span onClick={() => setIsShowInfo('hide')}>\n                    <img className='up-icon' alt='' src={downIcon} />\n                  </span>}\n                  {isShowInfo === 'hide' && <span onClick={() => setIsShowInfo('show')}>\n                    <img alt='' src={downIcon} />\n                  </span>}\n                </div>\n              </div>\n              <div className={`'pool-info-text' ${isShowInfo}`}>\n                <div className='pool-info-text-one'>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['apy']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat value={poolInfo.apy} displayType='text' decimalScale={2} suffix='%' />\n                    </div>\n                  </div>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['pool-liquidity']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat value={poolInfo.total} displayType='text' thousandSeparator={true} suffix={` ${nowToken}`} />\n                    </div>\n                  </div>\n                  {version === 'v2' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['multiplier']}</div>\n                    <div className='info-box-num'>1</div>\n                  </div>}\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['my-liquidity-percentage']}</div>\n                    <div className='info-box-num'><DeriNumberFormat allowZero={true} value={poolInfo.percent} decimalScale={2} suffix={'%'} /></div>\n                  </div>\n                  {version != 'v2' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['liquidity-share-value']}</div>\n                    <div className='info-box-num'><DeriNumberFormat allowZero={true} decimalScale={6} value={poolInfo.shareValue} thousandSeparator={true} /> {nowToken}</div>\n                  </div>}\n\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['staked-balance']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat allowZero={true} value={poolInfo.formatShares} decimalScale={2} />\n                      {version === 'v2' ? \" \" + nowToken : \" \" + lang['shares']}\n                    </div>\n                  </div>\n                  {version == 'v2' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['mining-pnl']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat allowZero={true} prefix=' ' value={poolInfo.swappedPnl} decimalScale={2} /> {nowToken}\n                    </div>\n                  </div>}\n                </div>\n                <div className='pool-info-text-two'>\n                  {type !== 'lp' && <div className='info-box'>\n                    <div className='info-box-title'>{lang['symbols']}</div>\n                    <div className='info-box-num symbols'>\n                      {symbols}\n                    </div>\n                  </div>}\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['contract-address']}</div>\n                    <div className='info-box-num'>\n                      {formatAddress(address)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='add-remove-liquidity'>\n              <Tab tabSet={tabSet} width={379} size={18} inactiveBgColor='#0c192d' icon='' borderBottom={true} divider={true} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default inject('wallet', 'poolManager')(observer(Detail))"],"sourceRoot":""}