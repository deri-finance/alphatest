{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/WebSocket.js","model/Intl.js","components/hoc/withModal.js","model/Type.js","model/Version.js","utils/utils.js","model/Config.js","lib/web3js/shared/utils/convert.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Loading.js","index.js","model/Trading.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","DeriEnv","_deriEnv","get","set","value","Error","VERSIONS","ALL_EXCEPT_OPEN_VERSIONS","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","PRESERVED_SYMBOLS","getChainProviderUrls","chainId","res","provider_urls","filter","i","length","MAX_UINT256","MAX_INT256","getDBAddress","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getJsonConfig","version","configs","jsonConfig","JSON","parse","includes","normalizeChainId","chainIds","toString","normalizeAddress","address","startsWith","Web3","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","keys","Object","forEach","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","retired","getLpConfigList","type","isLp","getMiningVaultRouterConfig","filteredConfig","MiningVaultRouter","getPreminingConfigList","staking","url","isInTvlRace","premining","getLpConfig","poolAddress","c","p","bTokenAddress","lTokenAddress","console","log","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getMiningVaultConfig","pools","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","key","deepClone","obj","clone","assign","from","shuffleArray","urls","newUrls","index","Math","floor","random","splice","getBlockNumber","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","slice","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","getChainProviderUrl","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","delay","ms","resolve","setTimeout","web3Factory","web3InstanceMap","pending","window","ethereum","request","method","walletChainId","isBrowser","isJsDom","retry","providerUrl","getLastUpdatedBlockNumber","contractAddress","position","getStorageAt","hexToNumber","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","events","amount","toBlock","es","e","getHttpBase","fetchJson","fetch","resp","json","fetchRestApi","path","opts","catchApiError","func","methodName","defaultValue","catchTxApiError","result","success","transaction","error","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","normalizeOptionSymbol","optionSymbol","split","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","map","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","indexOf","normalizeSymbolUnit","re","RegExp","join","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","symbolId","v2_lite_open","config","option","poolValidator","getOracleConfigList","oracle","ContractBase","constructor","contractAbi","this","Contract","_init","methods","call","err","accountAddress","gas","estimateGas","_getTransactionReceipt","tx","self","_transactionReceipt","reject","getTransactionReceipt","receipt","status","errorMessage","_estimatedGas","txRaw","numberToHex","data","encodeABI","params","CONTRACT_ABI","DatabaseContract","keyArray","_call","DatabaseWormholeContract","DatabaseAirdropContract","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","BToken","_balanceOf","decimals","bg","deriToNatural","allowance","gt","_transact","WrappedOracle","decimal","super","BrokerManager","brokerAddress","PTokenAirdrop","getPriceInfoForV1","async","baseUrl","addSymbolParam","priceInfo","mode","cache","ok","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","price","volatility","mapToBTokenInternal","getOraclePriceFromCache","timestamp","getOraclePrice","getPriceInfos","headers","body","symbolList","filteredByChainId","getOracleConfig","oracleFactory","getPrice","getOraclePricesForOption","oracleSymbols","oracleSymbolPrices","acc","toWei","getOracleVolatilitiesForOption","oracleSymbolVolatilities","instanceMap","RestOracle","wrappedOracleFactory","databaseFactory","databaseInstanceMap","database","databaseWormholeFactory","databaseAirdropFactory","bTokenFactory","DeriContract","MiningVaultPool","WormholeContract","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","v","r","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","getBalance","balance","fromWei","getUserInfo","db","userAddress","getValues","catch","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","processAsset","pnl","lastCumulativePnl","processPosition","volume","cost","lastCumulativeFundingRate","perpetualPoolFactory","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenId","swapperAddress","oracleAddress","discount","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","_calculateFee","abs","times","perpetualPoolRouterFactory","isMaximum","priceInfos","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getBrokerConfig","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","getSlpLiquidityInfo","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","message","POOL_ABI","PerpetualPool","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","MAX_GAS_AMOUNT","signed","fundingRatePerBlock","liquidityUsed","stateValues","getStateValues","parameters","args1","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getClpLiquidityInfo","totalSupply","maxRemovableShares","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","getPoolV2LiteManagerConfig","prod","dev","find","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","owner","operator","perpetualPoolLiteFactory","updateAddresses","symbolIds","getActiveSymbolIds","getSymbol","block_number","extraInfo","getBTokenSymbol","getSymbols","getPoolExtraInfo","perpetualPoolLiteViewerFactory","perpetualPoolLiteManagerFactory","poolId","pairedTokenAddress","getPoolOpenConfigList","openPoolChainIds","poolManagerAddress","poolManager","poolNums","getNumPools","numsArray","addresses","id","getConfig","getPoolOpenOracleList","o","isPoolController","controller","perpetualPoolLite","poolController","getPoolAllSymbolNames","viewerAddress","getPoolViewerConfig","poolViewer","getOffChainOracleSymbols","openConfigListCache","oldData","updatedAt","expandPoolConfigV2","bTokens","router","isOption","flat","expandPoolConfigV2Lite","offchainSymbolIds","offchainSymbols","expandPoolConfigOption","pricer","volatilitySymbols","expandPoolConfigV2LiteOpen","isOpen","getPoolConfigList","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","_getPoolConfig","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","viewers","getBrokerConfigList","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","trim","tradeHistoryOnline","liquidateHistoryOnline","getSpecification","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","perpetualPoolRouter","validation","_prices","symbolInfo","bTokenDiscounts","bTokenMultiplier","indexConstituents","symbolConfigList","positionInfo","margins","positions","latestPrice","getPosition","getMargins","getPositions","symbolPrices","marginHeldBySymbol","unrealizedPnlList","fundingFee","_getFundingRate","promiseList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","getTradeHistory","lTokenLiteAbi","PerpetualPoolLiteViewer","PerpetualPoolLite","viewer","activeSymbolIds","isEqualSet","Set","activeSymbols","prices","_updateOffchainSymbols","_getSymbolPrices","LTokenLite","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","getLastUpdateBlock","getMargin","priceIndex","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","newIntrinsicValue","strikePrice","newTimeValue","newDelta","premiumFundingPeriod","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","deleteIndexedKey","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","lastCumulativePremiumFundingRate","volatilitiesCache","optionPricerAbi","OptionPricer","everlastingOptionFactory","symbolVolatilities","getPoolStates","_updateConfig","volatilities","volatilityInfos","volSymbols","getOracleVolatilityForOption","bAmount","_getVolSymbolPrices","lShares","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","symbolIndex","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","symbolStr","volPrice","getTraderStates","timePrice","markPrice","dpmmPrice","oS","premiumFundingAccrued","fundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","getEstimatedTimePrice","toNumber","tradeCost","indexPrice","getEverlastingTimeValueAndDelta","contractValue","pricerAddress","tr","createPool","newParameters","addSymbol","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosPosition","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","WebSocket","socket","io","transports","withCredentials","event","emit","onMessage","listener","time_type","equalIgnoreCase","findEvent","pos","require","lang","page","toLowerCase","test","pageName","Intl","locale","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","current","makeAutoObservable","setCurrent","isFuture","Version","isV1","isV2","isV2Lite","base","BigNumber","repeat","formatAddress","formatBalance","toFixed","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","hasParam","param","urlString","href","URL","searchParams","has","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","Config","setAll","isOptions","sortOptionSymbols","cur","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","value1","value2","hexToString","hexToUtf8","hexToNumberString","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","newObj","k","symbolArr","unique","to2","index1","index2","index3","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","data-title","DesktopApp","MobileApp","Mask","setIsOpen","useState","useEffect","isShowMask","LoadingMask","MaskWrapper","isOptionsLite","useRouteMatch","isOptionsPro","categry","isMobile","Wallet","detail","supportWeb3","isConnected","approve","connect","loadWalletBalance","switchNetwork","network","metamask","addError","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","refresh","isSupportChain","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","wallet","spec","mockPositionInfo","deltaFundingAccrued","balanceContract","startAll","intervalAll","loadAll","load","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","isLoading","setIsLoading","trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","Type","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","refreshCache","fromStore","getFromStore","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","clean","initVolume","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7b632236.chunk.js","sourcesContent":["import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'production') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","// versions\r\nexport const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open', 'option']\r\nexport const ALL_EXCEPT_OPEN_VERSIONS = ['v2', 'v2_lite', 'option']\r\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\r\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open']\r\nexport const LITE_AND_OPTION_VERSIONS = ['v2_lite', 'v2_lite_open', 'option']\r\n\r\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://polygon-rpc.com',\r\n        //'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        //'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import { DeriEnv } from './env';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { VERSIONS } from './version';\r\n\r\nexport const getJsonConfig = (version, env) => {\r\n  env = env || DeriEnv.get();\r\n  // for browser and nodejs\r\n  let configs =\r\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && VERSIONS.includes(version)) {\r\n    configs = configs[version];\r\n    if (['prod', 'dev'].includes(env)) {\r\n      if (configs && configs[env]) {\r\n        return configs[env];\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n    );\r\n  }\r\n};\r\n","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import { DeriEnv } from '../config'\r\nimport { normalizeChainId } from '../utils/validate'\r\n\r\nexport const getPoolV1ConfigList = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  }\r\n  // develop environment\r\n  return [\r\n    {\r\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n      initialBlock: '9378545',\r\n      bTokenSymbol: 'BUSD',\r\n      symbol: 'BTCUSD',\r\n      unit: 'BTC',\r\n      chainId: '97',\r\n      version: 'v1',\r\n    },\r\n  ];\r\n};\r\n\r\n// export const getSlpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n//         chainId: '1',\r\n//         bTokenSymbol: 'DERI-USDT SLP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   }\r\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n//   return [];\r\n// };\r\n\r\n// export const getClpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '6894880',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP',\r\n//         symbol: '--',\r\n//         retired: true,\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '699498',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP SYRUP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nexport const getLpConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n        isLp: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDeriConfigList= (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\n\r\n// export const getSlpConfig = (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClp2Config= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClpConfig= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\nexport const getLpConfig = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriConfig= (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriConfig(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const env = DeriEnv.get()\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n    );\r\n  }\r\n}\r\n","\r\nconst paddingDate = (date) => {\r\n  date = date.toString()\r\n  if (date.length === 1) {\r\n    return '0' + date\r\n  } else {\r\n    return date\r\n  }\r\n}\r\nexport const getEpochTimeRange = (time) => {\r\n  //console.log('1', time.getTime()/1000)\r\n  const year = time.getUTCFullYear()\r\n  const month = time.getUTCMonth()\r\n  const day = time.getUTCDate()\r\n  let epochs = []\r\n  for (let i = 0; i< 3; i++) {\r\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\r\n    //console.log(newDate.getTime()/1000)\r\n    epochs.push(newDate)\r\n  }\r\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\r\n  let index = -1\r\n  for (let i = 0; i< epochs.length; i++) {\r\n    //console.log(i, epochs[i].getTime()/1000)\r\n    if (time.getTime() < epochs[i].getTime()) {\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  if (index !== -1) {\r\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\r\n  }\r\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\r\n}","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\nexport const shuffleArray = (urls) => {\r\n  const newUrls = deepClone(urls)\r\n  const length = urls.length\r\n  let res = []\r\n  for (let i = 0; i < length; i++) {\r\n    const index = Math.floor(Math.random() * urls.length)\r\n    res = res.concat(newUrls.splice(index,1))\r\n  }\r\n  return res\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  // pick 2 random urls\r\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  let pending = {}\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // for mining page should not depends wallet network\r\n      let walletChainId\r\n      if (typeof window === 'object' && window.ethereum) {\r\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\r\n      } else {\r\n        // MetaMask plugin is not installed in the browser\r\n        console.log('Please install MetaMask first');\r\n      }\r\n      // using metaMask ethereum object\r\n      if (\r\n        isBrowser() &&\r\n        !isJsDom() &&\r\n        typeof window.ethereum === 'object' &&\r\n        walletChainId &&\r\n        chainId === walletChainId.toString()\r\n      ) {\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else {\r\n        if (pending[chainId]) {\r\n          let retry = 10\r\n          while (retry > 0) {\r\n            await delay(300)\r\n            if (pending[chainId]) {\r\n              retry -= 1\r\n            } else {\r\n              if (web3InstanceMap[chainId]) {\r\n                return web3InstanceMap[chainId];\r\n              } else {\r\n                const providerUrl = await getChainProviderUrl(chainId);\r\n                web3InstanceMap[chainId] = new Web3(\r\n                  new Web3.providers.HttpProvider(providerUrl)\r\n                );\r\n                return web3InstanceMap[chainId];\r\n              }\r\n            }\r\n          }\r\n          const providerUrl = await getChainProviderUrl(chainId);\r\n          web3InstanceMap[chainId] = new Web3(\r\n            new Web3.providers.HttpProvider(providerUrl)\r\n          );\r\n          return web3InstanceMap[chainId];\r\n        } else {\r\n          pending[chainId] = true\r\n          try {\r\n            const providerUrl = await getChainProviderUrl(chainId);\r\n            web3InstanceMap[chainId] = new Web3(\r\n              new Web3.providers.HttpProvider(providerUrl)\r\n            );\r\n            delete pending[chainId]\r\n          } catch(err) {\r\n            console.log(err.toString())\r\n            delete pending[chainId]\r\n          }\r\n          return web3InstanceMap[chainId];\r\n        }\r\n      }\r\n    },\r\n  };\r\n})();","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","import {\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../config'\r\n\r\n// get REST HTTP Base url\r\nexport const getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nexport const fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n// query api wrapper\r\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    console.log(`${methodName}: `, err)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// tx api wrapper\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n","const bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n  GHSTUSDT: 'GHSTUSDT',\r\n  AGLDUSDT: 'AGLDUSDT',\r\n};\r\n\r\nexport const normalizeOptionSymbol = (optionSymbol) => {\r\n  const res = optionSymbol.split('-')\r\n  if (res.length >= 2) {\r\n    return res[0]\r\n  } else {\r\n    throw new Error(`invalid option symbol:${optionSymbol}`)\r\n  }\r\n};\r\n\r\nexport const getNormalizedOptionSymbols = (symbols) => {\r\n  let res = []\r\n  symbols.forEach((s) => {\r\n    const volSymbol = normalizeOptionSymbol(s)\r\n    if (!res.includes(volSymbol)) {\r\n      res.push(volSymbol)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getVolatilitySymbols = (symbols) => {\r\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\r\n}\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\r\n    return offchainSymbolPairs[symbol]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\r\n  if (index > -1) {\r\n    return Object.keys(offchainSymbolPairs)[index]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken)\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const normalizeSymbolUnit = (symbol) => {\r\n  const prefix = ['USD', 'USDT'];\r\n  const re = new RegExp(`(${prefix.join('|')})$`);\r\n  if (typeof symbol === 'string') {\r\n    return mapToSymbol(symbol).replace(re, '');\r\n  }\r\n  console.log(`symbol(${symbol}) is not a string type`);\r\n  return symbol;\r\n};\r\n\r\nexport const getIndexInfo = (symbol) => {\r\n  const internalSymbol = mapToSymbolInternal(symbol);\r\n  const customIndexs = {\r\n    IGAME: {\r\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\r\n      url: 'https://docs.deri.finance/products/index/game-index',\r\n    },\r\n    IBSCDEFI: {\r\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\r\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\r\n    },\r\n    IMEME: {\r\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\r\n      url: 'https://docs.deri.finance/products/index/meme-index',\r\n    },\r\n  };\r\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\r\n    return customIndexs[internalSymbol];\r\n  } else {\r\n    return { tokens: [], url: '' };\r\n  }\r\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\r\nimport {\r\n  isUsedRestOracle,\r\n  mapToBToken,\r\n  mapToSymbol,\r\n  getVolatilitySymbols,\r\n} from './token';\r\n\r\nconst validatePoolV2 = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n      'symbolCount',\r\n      'bTokenCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['bTokens'], 'bTokens');\r\n  pool['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processPoolV2 = (pool) => {\r\n  // process pool \r\n  pool['bTokenCount'] = pool['bTokens'].length;\r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\r\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n};\r\n\r\nconst validatePoolV2Lite = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n};\r\n\r\nconst processPoolV2Lite = (pool) => {\r\n  // process pool\r\n  if (!pool['symbolCount']) {\r\n    pool['symbolCount'] = pool['symbols'].length;\r\n  }\r\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\r\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validateConfigV2LiteOpen = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2LiteOpen = (config) => {\r\n  // process config\r\n  if (!config['symbolCount']) {\r\n    config['symbolCount'] = config['symbols'].length;\r\n  }\r\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\r\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validatePoolOption = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'pricer',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      // 'offchainSymbolIds',\r\n      // 'offchainSymbols',\r\n      'symbolCount',\r\n      'volatilitySymbols',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\r\n};\r\n\r\nconst processPoolOption = (pool) => {\r\n  // process pool \r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  if (!pool['volatilitySymbols']) {\r\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['volatilitySymbols'] = getVolatilitySymbols(\r\n      pool['symbols'].map((s) => s.symbol)\r\n    ); \r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nexport const poolProcessor = {\r\n  v2: processPoolV2,\r\n  v2_lite: processPoolV2Lite,\r\n  v2_lite_open: processConfigV2LiteOpen,\r\n  option: processPoolOption,\r\n};\r\n\r\nexport const poolValidator = {\r\n  v2: validatePoolV2,\r\n  v2_lite: validatePoolV2Lite,\r\n  v2_lite_open: validateConfigV2LiteOpen,\r\n  option: validatePoolOption,\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { mapToSymbolInternal } from './token';\r\n\r\nexport const getOracleConfigList = (version='v2', env) => {\r\n  const config = getJsonConfig(version, env || DeriEnv.get())\r\n  return config.oracle\r\n};\r\n\r\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const oracles = getOracleConfigList(version)\r\n  const filteredByChainId = oracles.filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\r\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        console.log(`-- estimatedGas: ${error}`)\r\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\r\n        // if (Array.isArray(res) && res.length >= 2) {\r\n        //   throw new Error(res[1].trim())\r\n        // }\r\n      }\r\n    }\r\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","import { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray]);\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","import { getOracleConfig } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory } from '../factory/oracle';\r\nimport { deriToNatural, toWei } from './convert';\r\nimport {\r\n  getVolatilitySymbols,\r\n  mapToSymbolInternal,\r\n  mapToBTokenInternal,\r\n  normalizeOptionSymbol,\r\n} from '../config/token';\r\nimport { PRESERVED_SYMBOLS } from '../config/version';\r\n\r\nexport const getPriceInfoForV1 = async(symbol) => {\r\n  const env = DeriEnv.get();\r\n  let method = 'get_signed_price'\r\n  let url\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n  if (symbol) {\r\n    url = addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    url = baseUrl;\r\n  }\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n        //return deriToNatural(priceInfo.data.price).toString()\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n}\r\n\r\n\r\nexport const getOracleUrl = (symbol, type='futures') => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = 'get_signed_price'\r\n  if (type === 'option') {\r\n    method = 'get_signed_volatility'\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = 'get_price'\r\n    symbol = `${symbol}_v2_bsc`\r\n  }\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol, type='futures') => {\r\n  const res = await getPriceInfo(symbol, type)\r\n  if (type === 'futures' && res.price) {\r\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\r\n  } else if (type === 'option' && res.volatility) {\r\n    return deriToNatural(res.volatility).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol, type='futures') => {\r\n  symbol = mapToBTokenInternal(symbol)\r\n  let url = getOracleUrl(symbol, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\n// cache\r\nexport const getOraclePriceFromCache = (function () {\r\n  let cache = {};\r\n  return {\r\n    async get(chainId, symbol = '_', version = 'v2') {\r\n      const key = `${chainId}_${symbol}_${version}`\r\n      if (\r\n        Object.keys(cache).includes(key) &&\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n      ) {\r\n        return cache[key].data;\r\n      } else {\r\n        const data = await getOraclePrice(chainId, symbol, version);\r\n        cache[key] = {\r\n          data,\r\n          timestamp: Math.floor(Date.now() / 1000),\r\n        };\r\n        return cache[key].data;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(version, chainId, symbol);\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\nexport const getOraclePriceForOption = async (chainId, symbol) => {\r\n  return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\r\n};\r\n\r\n// for viewer use\r\nexport const getOraclePricesForOption = async (chainId, symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const oracleSymbolPrices = await Promise.all(\r\n    oracleSymbols.reduce(\r\n      (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\r\n      []\r\n    )\r\n  );\r\n  return symbols.map((s) => {\r\n    return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\r\n  });\r\n};\r\n\r\n// for tx use\r\nexport const getOracleVolatilityForOption = async (symbols) => {\r\n  const volSymbols = getVolatilitySymbols(symbols)\r\n  //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\r\n\r\n  const volatilities = await Promise.all(\r\n    volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\r\n  );\r\n  //return volatilities;\r\n  return symbols.map((s) => {\r\n    return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\r\n  });\r\n};\r\n\r\n// for viewer use\r\nexport const getOracleVolatilitiesForOption = async (symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const oracleSymbolVolatilities = await Promise.all(\r\n    oracleSymbols.reduce(\r\n      (acc, i) => acc.concat([getPriceInfo(`VOL-${i}`, 'option')]),\r\n      []\r\n    )\r\n  );\r\n  return symbols.map((s) => {\r\n    return oracleSymbolVolatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))].volatility;\r\n  });\r\n};","import { isUsedRestOracle } from '../config/token';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\nimport { factory } from '../utils/factory';\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const wrappedOracleFactory = factory(WrappedOracle);\r\n","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\n\r\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { hexToNumber, fromWei } from '../utils';\r\nimport { web3Factory } from '../factory';\r\nimport { normalizeAddress } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  walletAddress = normalizeAddress(walletAddress)\r\n  const web3 = await web3Factory.get(chainId);\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  return fromWei(balance);\r\n};\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport { getPoolV1Config } from '../config/pool_v1'\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\r\n    getUserInfo(userAddress),\r\n    getUserInfoHarvest(userAddress),\r\n    getUserInfoTotal(userAddress),\r\n  ]);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","import { getDeriConfig } from '../config';\r\nimport {\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  return (await deri.balanceOf(accountAddress)).toString();\r\n};","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n} from '../config';\r\nimport { naturalToDeri } from '../../shared/utils';\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultConfig(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriConfig(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriConfig(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { lTokenAbi } from './abis';\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\r\nimport { perpetualPoolAbi } from './abis';\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { naturalToDeri } from '../../shared/utils'\r\nimport { MAX_INT256 } from '../../shared/config';\r\nimport { perpetualPoolRouterAbi} from './abis';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\r\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\r\nimport { pTokenFactory } from \"../../v2/factory\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","import { getLpConfig } from '../config';\r\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\r\n  const removable = bg(liquidity)\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return bg(volume).times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = bg(volume)\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = bg(liquidity)\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (bg(margin).plus(amount).gte(minMargin)) {\r\n    if (\r\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const MAX_GAS_AMOUNT = 582731\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfoForV1(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n} from '../factory/contract';\r\nimport { lTokenFactory } from '../../v1/factory';\r\nimport { bg } from '../utils';\r\nimport { getLpConfig } from '../config';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { getLpConfig } from '../config';\r\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\r\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\r\nimport {\r\n  unlockClp2,\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2_pool_api';\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { DeriEnv } from \"../shared/config/env\";\r\nimport { normalizeChainId } from \"../shared/utils/validate\";\r\n\r\nexport const openPoolChainIds = () => {\r\n  const configs = {\r\n    prod: ['56'],\r\n    dev: ['97'],\r\n  }\r\n  const env = DeriEnv.get()\r\n  if (Array.isArray(configs[env])) {\r\n    return configs[env]\r\n  } else {\r\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\r\n  }\r\n};\r\n\r\nexport const getPoolV2LiteManagerConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\r\n        initialBlock: \"10133599\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\n\r\nexport const expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { factory } from '../shared/utils/factory'\r\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\r\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\r\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\r\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\r\n","import {\r\n  bTokenFactory,\r\n  deriToNatural,\r\n  fetchJson,\r\n  getHttpBase,\r\n} from '../../shared';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { normalizeSymbolUnit } from '../../shared/config/token';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { PTokenLite } from './p_token';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async updateAddresses() {\r\n    if (!this.bTokenAddress) {\r\n     const res = await this._call('getAddresses');\r\n    // update this state\r\n     this.bTokenAddress = res.bTokenAddress;\r\n     this.lTokenAddress= res.lTokenAddress;\r\n     this.pTokenAddress= res.pTokenAddress;\r\n    }\r\n  }\r\n  async controller() {\r\n    const res = await this._call('controller');\r\n    return res\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return {\r\n      symbol: res.symbol,\r\n      oracleAddress: res.oracleAddress,\r\n      multiplier: deriToNatural(res.multiplier),\r\n      feeRatio: deriToNatural(res.feeRatio),\r\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n      price: deriToNatural(res.price),\r\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n      tradersNetCost: deriToNatural(res.tradersNetCost),\r\n    };\r\n  }\r\n  async getSymbols() {\r\n    await this.updateAddresses()\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    // update this state\r\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\r\n    this.symbols = await Promise.all(\r\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n    );\r\n    return this.symbols\r\n  }\r\n  async getBTokenSymbol() {\r\n    await this.updateAddresses()\r\n    if (!this.bToken) {\r\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\r\n    }\r\n    // update this state\r\n    this.bTokenSymbol = await this.bToken.symbol()\r\n    return this.bTokenSymbol\r\n  }\r\n  async getPoolExtraInfo() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\r\n    const res = await fetchJson(url)\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data\r\n    } else {\r\n\r\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\r\n      return  {\r\n        block_number: '1000000000',\r\n        version: '',\r\n      }\r\n    }\r\n  }\r\n  async getConfig() {\r\n    const [bToken, symbols, extraInfo] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      this.getPoolExtraInfo(),\r\n    ])\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock:extraInfo.block_number,\r\n      version:extraInfo.version,\r\n      chainId: this.chainId,\r\n    }\r\n  }\r\n\r\n  // tx\r\n  async addSymbol(accountAddress, parameters) {\r\n    return await this._transact('addSymbol', parameters, accountAddress)\r\n  }\r\n\r\n  async removeSymbol(accountAddress, symbolId) {\r\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\r\n\r\nexport class PerpetualPoolLiteManager extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\r\n  }\r\n\r\n  // query\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return res\r\n  }\r\n  async poolTemplate() {\r\n    const res = await this._call('poolTemplate', [])\r\n    return res\r\n  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return res\r\n  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return res\r\n  }\r\n  async protocolFeeCutRatio() {\r\n    const res = await this._call('protocolFeeCutRatio', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n\r\n}","import { catchApiError } from \"../../shared/utils/api\"\r\nimport { DeriEnv } from \"../../shared/config/env\"\r\nimport { getOracleConfigList } from \"../../shared/config/oracle\"\r\nimport { getJsonConfig } from \"../../shared/config/config\"\r\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\r\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\r\nimport { getPoolViewerConfig } from \"../../shared\"\r\nimport { expandPoolConfigV2LiteOpen, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\r\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\r\n\r\nexport const getPoolOpenConfigList = async (...args) => {\r\n  return catchApiError(\r\n    async () => {\r\n      let configs = [];\r\n      const chainIds = openPoolChainIds()\r\n      configs = chainIds.reduce(async (acc, chainId) => {\r\n        //console.log('chainId', chainId)\r\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\r\n          chainId\r\n        );\r\n        const poolManager = perpetualPoolLiteManagerFactory(\r\n          chainId,\r\n          poolManagerAddress\r\n        );\r\n        // get pool numbers\r\n        const poolNums = parseInt(await poolManager.getNumPools());\r\n        const numsArray = [...Array(poolNums).keys()];\r\n        // get pool addresses\r\n        const addresses = await Promise.all(\r\n          numsArray.reduce(\r\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\r\n            []\r\n          )\r\n        );\r\n        // get pools config\r\n        const res = await Promise.all(\r\n          addresses.reduce(\r\n            (acc, address) =>\r\n              acc.concat([\r\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n        return acc.concat(res);\r\n      }, []);\r\n      return configs;\r\n    },\r\n    args,\r\n    'getPoolOpenConfigList',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolOpenOracleList = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  return catchApiError(\r\n    async () => {\r\n      return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\r\n    },\r\n    [],\r\n    'getPoolOpenOracleInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolController = async(chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPoolLite.controller();\r\n    },\r\n    [chainId, poolAddress],\r\n    'getPoolController',\r\n    ''\r\n  );\r\n}\r\nexport const isPoolController = async (chainId, poolAddress, controller) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress, controller) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const poolController = await perpetualPoolLite.controller();\r\n      return (\r\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\r\n      );\r\n    },\r\n    [chainId, poolAddress, controller],\r\n    'isPoolController',\r\n    false\r\n  );\r\n};\r\n\r\nexport const getExpandedPoolOpenConfigList = async () => {\r\n  const env = DeriEnv.get()\r\n  const version = 'v2_lite_open'\r\n  let config = getJsonConfig(version, env);\r\n\r\n  config.pools =  await getPoolOpenConfigList()\r\n  const pools = config.pools\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  return expandPoolConfigV2LiteOpen(config);\r\n}\r\n\r\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\r\n  return catchApiError(\r\n    async () => {\r\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\r\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\r\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\r\n    },\r\n    [chainId.toString(), poolAddress],\r\n    'getPoolAllSymbolNames ',\r\n    []\r\n  );\r\n};\r\n\r\n\r\n// v2lite open config list cache\r\nexport const openConfigListCache = (() => {\r\n  let cache = {\r\n    data: [],\r\n    timestamp: 0,\r\n  };\r\n  return {\r\n    async update() {\r\n      let res\r\n      const oldData = cache.data\r\n      try {\r\n        if (Date.now()/1000 - cache.timestamp >= 10) {\r\n        //if (Date.now()/1000 - cache.timestamp > 60) {\r\n          cache.data = await getPoolOpenConfigList()\r\n          cache.timestamp = Date.now()/1000\r\n          //res = 'v2 lite open config list is updated'\r\n        }\r\n      } catch(err) {\r\n        console.log(err)\r\n        cache.data = oldData\r\n        //res = `v2 lite open config list updating with error: ${err}`\r\n      }\r\n      // res && console.log(res)\r\n      return cache.data\r\n    },\r\n    updatedAt() {\r\n      return cache.timestamp\r\n    },\r\n    get() {\r\n      return cache.data\r\n    }\r\n  }\r\n})()\r\n\r\n// // init\r\n// const initCache = () => {\r\n//   if (isBrowser()) {\r\n//     if(window.ethereum) {\r\n//       window.ethereum.request({ method: 'net_version' }).then((chainId) => {\r\n//         if (['1', '56', '137', '128'].includes(chainId)) {\r\n//           DeriEnv.set('prod')\r\n//           openConfigListCache.update().then((res) => console.log(res))\r\n//         } else {\r\n//           openConfigListCache.update().then((res) => console.log(res))\r\n//         }\r\n//       })\r\n//     }\r\n//   }\r\n// };\r\n// initCache()","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { getPoolV1ConfigList } from './pool_v1';\r\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\r\nimport { validateObjectKeyExist } from '../utils';\r\nimport { poolProcessor, poolValidator } from './config_processor';\r\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\r\n\r\nconst expandPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            version: 'v2',\r\n            isOption: false,\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite',\r\n          isOption: false,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigOption = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          pricer: pool.pricer,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          volatilitySymbols: pool.volatilitySymbols,\r\n          unit: symbol.unit,\r\n          version: 'option',\r\n          isOption: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      if (pool.symbols.length > 0) {\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: pool.bToken,\r\n            bTokenSymbol: pool.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            offchainSymbolIds: pool.offchainSymbolIds,\r\n            offchainSymbols: pool.offchainSymbols,\r\n            unit: symbol.unit,\r\n            version: 'v2_lite_open',\r\n            isOpen: true,\r\n          });\r\n        }\r\n      } else {\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: '--',\r\n          symbolId: '',\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: '',\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getConfig = (version='v2', env='dev') => {\r\n  let config = getJsonConfig(version, env);\r\n\r\n  if (version === 'v2_lite_open') {\r\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\r\n      //console.log('hit openConfigListCache')\r\n    config.pools = openConfigListCache.get()\r\n    //}\r\n  }\r\n\r\n  //console.log('>',config)\r\n  const pools = config.pools;\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n  return config;\r\n};\r\n\r\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\r\n  const config = getConfig(version, env)\r\n  if (version === 'v2') {\r\n    return expandPoolConfigV2(config)\r\n  } else if (version === 'v2_lite') {\r\n    return expandPoolConfigV2Lite(config)\r\n  } else if (version === 'v2_lite_open') {\r\n    return expandPoolConfigV2LiteOpen(config)\r\n  } else if (version === 'option') {\r\n    return expandPoolConfigOption(config)\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  // check the bToken in v2_lite\r\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\nexport const getFilteredPoolConfig  = getPoolConfig\r\n\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  //console.log('pools index', index)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  const config = getConfig(version, DeriEnv.get());\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool;\r\n  } else {\r\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\r\n  }\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (bTokenId !== undefined || bTokenId !== null) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\r\n  }\r\n  if (symbolId !== undefined || symbolId !== null) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n\r\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const env = DeriEnv.get()\r\n  const config = getJsonConfig(version, env)\r\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\r\n  }\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getJsonConfig(version, DeriEnv.get())\r\n  if (config.brokerManager) {\r\n    return config.brokerManager\r\n  } else {\r\n    // default value\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getBrokerConfig = (version='v2', chainId) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import {\r\n  bTokenFactory,\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  getPoolV1Config,\r\n  deriToNatural,\r\n} from '../../shared';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = formatBN(bg(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getPoolV1Config } from '../../shared/config';\r\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getLiquidateHistoryOnline,\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: i.baseToken.trim(),\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  bTokenFactory,\r\n} from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol()\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pPool.symbol(),\r\n  ]);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol();\r\n  const price = await getPriceFromRest(symbol);\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbol = await pPool.symbol();\r\n    await priceCache._update(poolAddress, symbol);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bToken.liquidity.minus(\r\n          minPoolMarginRatio\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        userLiquidity\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolBTokenIdList,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\r\nimport { calculateMaxRemovableLiquidity } from '../calculation';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  try {\r\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ]);\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    let promises = [];\r\n    for (let i = 0; i < bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n    }\r\n    const bTokens = await Promise.all(promises);\r\n\r\n    promises = [];\r\n    for (let i = 0; i < symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      );\r\n    }, bg(0));\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume)\r\n          .times(s.price)\r\n          .times(s.multiplier)\r\n          .minus(s.tradersNetCost)\r\n      );\r\n    }, bg(0));\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenId],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    );\r\n    const approximatePnl = pnl.plus(\r\n      bg(bTokens[bTokenId].cumulativePnl)\r\n        .minus(lastCumulativePnl)\r\n        .times(liquidity)\r\n    );\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString(),\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol: '',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol: '',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n","import { getPriceInfo } from '../../shared/utils/oracle';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  perpetualPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory';\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.removeLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();","import { bTokenFactory } from '../../shared/factory';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolBTokenList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolSymbolList,\r\n} from '../../shared/config';\r\nimport { bg, min, max } from '../../shared/utils'\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol)\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  };\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return {\r\n      price: price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolBTokenIdList,\r\n} from '../../shared/config';\r\nimport { bg } from '../../shared/utils';\r\nimport { getPriceInfo } from '../../shared/utils/oracle';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { isOrderValid } from '../calculation';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.addMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.removeMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .plus(newVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  //console.log('liquidity', liquidity.toString())\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume.plus(newVolume))\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  // console.log('pnl', pnl.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePositionWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            //baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            symbol: i.symbol,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import {\r\n  getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n} from '../../shared';\r\nimport { getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\n//import { MAX_INT256} from '../../shared/config'\r\nimport { PTokenLite } from './p_token';\r\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'v2_lite'\r\n    );\r\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    this.offchainSymbols = this.config.offchainSymbols;\r\n    this.bTokenAddress = this.config.bToken\r\n    this.lTokenAddress = this.config.lToken\r\n    this.pTokenAddress = this.config.pToken\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'v2_lite')\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([this.getAddresses()]);\r\n  }\r\n\r\n  async _updateOffchainSymbols() {\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = new PerpetualPoolLiteViewer(\r\n          this.chainId,\r\n          this.viewerAddress\r\n      )\r\n    }\r\n    //await this.getAddresses()\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\r\n    if (!this.activeSymbolIds || !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))) {\r\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(this.contractAddress)\r\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\r\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\r\n        return activeSymbols[index] == '' ? acc : acc.concat([i]);\r\n      }, []);\r\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\r\n      this.activeSymbolIds = activeSymbolIds;\r\n    }\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    this.bTokenAddress = res.bTokenAddress;\r\n    this.lTokenAddress = res.lTokenAddress;\r\n    this.pTokenAddress = res.pTokenAddress;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res)\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = []\r\n    await this._updateOffchainSymbols()\r\n    if (this.offchainSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offchainSymbolIds[\r\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import {\r\n  PerpetualPoolLite,\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\r\n    perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import {\r\n  calculateEntryPrice ,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\nimport { getPoolConfig } from \"../../shared/config\"\r\nimport { bTokenFactory } from \"../../shared/factory\"\r\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLatestBlockNumber,\r\n  getLastUpdatedBlockNumber,\r\n} from '../../shared/utils';\r\nimport { getOraclePriceFromCache } from '../../shared/utils/oracle'\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const [\r\n      parameterInfo,\r\n      symbolInfo,\r\n      liquidity,\r\n      symbolIds,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      positionInfo,\r\n      margin,\r\n      latestPrice,\r\n    ] = await Promise.all([\r\n      //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getActiveSymbolIds(),\r\n      poolAddress === '0x3422DcB21c32d91aDC8b7E89017e9BFC13ee2d42'\r\n        ? getLastUpdatedBlockNumber(chainId, poolAddress, 5)\r\n        : perpetualPool.getLastUpdateBlock(),\r\n      getLatestBlockNumber(chainId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargin(accountAddress),\r\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n    ]);\r\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\r\n\r\n    let promises = []\r\n    for (let i = 0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n\r\n    promises = []\r\n    for (let i=0; i< symbolIds.length; i++) {\r\n      promises.push(getOraclePriceFromCache.get(chainId, symbolList[i], 'v2_lite'))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const priceIndex = symbolIds.indexOf(symbolId)\r\n    let price\r\n    if (priceIndex === '-1') {\r\n      price = '0'\r\n    } else {\r\n      price = symbolPrices[priceIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\r\n\r\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    }, bg(0))\r\n\r\n    const totalCost = positions.reduce((accum, p) => {\r\n      return accum.plus(bg(p.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee: fundingFee.toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      ).toString(),\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\r\n    perpetualPool.getLiquidity(),\r\n    getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\r\n  const { minPoolMarginRatio } = parameterInfo\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n\r\n  let promises = []\r\n  for (let i = 0; i< symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    if (!price) {\r\n      price = await getOraclePriceFromCache.get(chainId, symbol, 'v2_lite')\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [price, symbolInfo] = await Promise.all([\r\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const { multiplier } = symbolInfo\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      null,\r\n      'v2_lite'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n        perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            symbol: i.symbol,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","\r\n\r\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\r\n    let u = Math.sqrt(8 / V / V / T + 1)\r\n    let timeValue, delta\r\n    if (S > K) {\r\n        timeValue = K * Math.pow(S/K, (1 - u) / 2) / u\r\n        delta = (1 - u) * timeValue / S / 2\r\n    } else if (S === K) {\r\n        timeValue = K / u\r\n        delta = 0\r\n    } else {\r\n        timeValue = K * Math.pow(S/K, (1 + u) / 2) / u\r\n        delta = (1 + u) * timeValue / S / 2\r\n    }\r\n    return [timeValue, delta]\r\n}\r\n\r\nfunction getDynamicInitialMarginRatio(spot, strike, isCall, initialMarginRatio, minInitialMarginRatio) {\r\n    if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\r\n        return initialMarginRatio\r\n    } else {\r\n        let otmRatio = (isCall ? strike - spot : spot - strike) / strike\r\n        return Math.max((1 - otmRatio * 3) * initialMarginRatio, minInitialMarginRatio)\r\n    }\r\n}\r\n\r\n// multiple position for same underlier, e.x. BTCUSD\r\nfunction canLiquidateWithPrice(pool, trader, symbols, positions, newUnderlierPrice) {\r\n    let newDynamicMargin = trader.dynamicMargin\r\n    let newInitialMargin = trader.initialMargin\r\n\r\n    for (let i = 0; i < symbols.length; i++) {\r\n        let symbol = symbols[i]\r\n        let position = positions[i]\r\n\r\n        let newIntrinsicValue = symbol.isCall ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\r\n                                              : Math.max(symbol.strikePrice - newUnderlierPrice, 0)\r\n        let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\r\n            newUnderlierPrice, symbol.strikePrice, symbol.volatility, pool.premiumFundingPeriod\r\n        )\r\n        if (newIntrinsicValue > 0) {\r\n            newDelta += symbol.isCall ? 1 : -1\r\n        }\r\n        let newPnl = position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier - position.cost\r\n        let newDynamicMarginRatio = getDynamicInitialMarginRatio(newUnderlierPrice, symbol.strikePrice, symbol.isCall, pool.initialMarginRatio, 0.01)\r\n\r\n        newDynamicMargin = newDynamicMargin - position.pnl + newPnl\r\n        newInitialMargin = newInitialMargin - Math.abs(position.volume * symbol.spotPrice * symbol.multiplier * symbol.dynamicMarginRatio)\r\n                                            + Math.abs(position.volume * newUnderlierPrice * symbol.multiplier * newDynamicMarginRatio)\r\n    }\r\n\r\n    let newMaintenanceMargin = newInitialMargin * pool.maintenanceMarginRatio / pool.initialMarginRatio\r\n\r\n    return newMaintenanceMargin > newDynamicMargin\r\n}\r\n\r\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\r\n    if (symbols.length != positions.length) {\r\n        throw 'canLiquidateWithPrice: symbols and positions length not match'\r\n    }\r\n    if (symbols.length === 0) {\r\n        return {\r\n            numPositions: positions.length,\r\n            price1: null,\r\n            price2: null,\r\n        }\r\n    }\r\n    let head = symbols[0].symbol.slice(0, 6)\r\n    for (let i = 0; i < symbols.length; i++) {\r\n        if (!symbols[i].symbol.startsWith(head)) {\r\n            throw 'canLiquidateWithPrice: symbols not in same underlier'\r\n        }\r\n    }\r\n\r\n    if (trader.maintenanceMargin > trader.dynamicMargin) {\r\n        return {\r\n          numPositions: positions.length,\r\n          price1: symbols[0].spotPrice,\r\n          price2: symbols[0].spotPrice\r\n        }\r\n    }\r\n\r\n    let final1, final2\r\n    let price1, price2\r\n    let l1, l2\r\n\r\n\r\n    price1 = symbols[0].spotPrice / 10\r\n    price2 = symbols[0].spotPrice\r\n    l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1)\r\n    l2 = false\r\n    while (true) {\r\n        if (l1 && l2) {\r\n            final1 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        if (!l1 && !l2) {\r\n            final1 = null\r\n            break\r\n        }\r\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n            final1 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        let price = (price1 + price2) / 2\r\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\r\n        if (l === l1) price1 = price\r\n        else price2 = price\r\n    }\r\n\r\n    price1 = symbols[0].spotPrice\r\n    price2 = symbols[0].spotPrice * 10\r\n    l1 = false\r\n    l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2)\r\n    while (true) {\r\n        if (l1 && l2) {\r\n            final2 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        if (!l1 && !l2) {\r\n            final2 = null\r\n            break\r\n        }\r\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n            final2 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        let price = (price1 + price2) / 2\r\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\r\n        if (l === l1) price1 = price\r\n        else price2 = price\r\n    }\r\n\r\n    return {\r\n        numPositions: positions.length,\r\n        price1: final1,\r\n        price2: final2\r\n    }\r\n}\r\n\r\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\r\nimport { findLiquidationPrice } from './findLiquidationPrice2';\r\n\r\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\r\n  }\r\n}\r\n\r\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  // for pool\r\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\r\n  }\r\n}\r\n\r\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(delta)\r\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\r\n        .times(price)\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.deltaFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(symbol.timeValue)\r\n        .times(symbol.multiplier)\r\n        .times(premiumFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\n\r\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\r\n  return isCall\r\n    ? max(bg(price).minus(strikePrice), bg(0))\r\n    : max(bg(strikePrice).minus(price), bg(0));\r\n};\r\n\r\n\r\nexport const getMarginHeldBySymbol = (\r\n  volume,\r\n  price,\r\n  symbol,\r\n  initialMarginRatio\r\n) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(\r\n      dynamicInitialMarginRatio(\r\n        price,\r\n        symbol.strikePrice,\r\n        symbol.isCall,\r\n        initialMarginRatio\r\n      )\r\n    );\r\n};\r\n\r\nexport const getAverageEntryPrice = (position, symbol) => {\r\n  return bg(position.volume).eq(0)\r\n    ? '0'\r\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\r\n};\r\n\r\nexport const getLiquidationPrice = (state, symbolId)  => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\r\n  let res = findLiquidationPrice(\r\n    toNumberForObject(poolState, [\r\n      'initialMarginRatio',\r\n      'maintenanceMarginRatio',\r\n      'premiumFundingPeriod',\r\n      'premiumFundingCoefficient',\r\n      'liquidity',\r\n      'totalDynamicEquity',\r\n      'totalInitialMargin',\r\n    ]),\r\n    toNumberForObject(traderState, [\r\n      'margin',\r\n      'totalPnl',\r\n      'totalFundingAccrued',\r\n      'dynamicMargin',\r\n      'initialMargin',\r\n      'maintenanceMargin',\r\n    ]),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n        ])\r\n      ),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(positionState[s.symbolId], [\r\n          'volume',\r\n          'cost',\r\n          'lastCumulativePremiumFundingRate',\r\n          'pnl',\r\n          'premiumFundingAccrued',\r\n        ])\r\n      )\r\n  );\r\n  res.underlier = normalizedSymbol\r\n  return res\r\n}\r\n\r\nexport const getLiquidationPrices = (state) => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\r\n    let res = findLiquidationPrice(\r\n      toNumberForObject(poolState, [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      toNumberForObject(traderState, [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n          ])\r\n        ),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(positionState[s.symbolId], [\r\n            'volume',\r\n            'cost',\r\n            'lastCumulativeDeltaFundingRate',\r\n            'lastCumulativePremiumFundingRate',\r\n            'pnl',\r\n            'deltaFundingAccrued',\r\n            'premiumFundingAccrued',\r\n          ])\r\n        )\r\n    );\r\n    return res;\r\n  });\r\n  return oracleSymbols.map((i, index) => { \r\n    liquidationPrices[index].underlier = i\r\n    return liquidationPrices[index]\r\n  })\r\n};","/* eslint-disable */\r\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\r\nimport { everlastingOptionViewerAbi } from './abis';\r\n\r\nexport class EverlastingOptionViewer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\r\n  }\r\n\r\n  // query\r\n  async _getTraderPortfolio(state, account) {\r\n    const res = await this._call('_getTraderPortfolio', [state, account]);\r\n    return res;\r\n  }\r\n  async _initState(poolAddress, oraclePrices) {\r\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\r\n    return res;\r\n  }\r\n  async _updateSymbolPrices(state) {\r\n    const res = await this._call('_updateSymbolPrices', [state]);\r\n    return res;\r\n  }\r\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        //'cumulativeDeltaFundingRate',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      symbolState,\r\n    };\r\n  }\r\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getTraderStates', [\r\n      poolAddress,\r\n      account,\r\n      oraclePrices,\r\n      oracleVolatilities,\r\n    ]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    const positionState = res[3].reduce((acc, i) => {\r\n      const position = fromWeiForObject(deleteIndexedKey(i), [\r\n        'volume',\r\n        'cost',\r\n        'pnl',\r\n        //'lastCumulativeDeltaFundingRate',\r\n        'lastCumulativeFundingRate',\r\n        //'deltaFundingAccrued',\r\n        'fundingAccrued',\r\n      ])\r\n      return acc.concat([position])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState: symbolState,\r\n      positionState: positionState,\r\n    };\r\n  }\r\n  async getVolatilityOracles(poolAddress) {\r\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n  async getPriceOracles(poolAddress) {\r\n    const res = await this._call('getPriceOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n\r\n  // tx\r\n}\r\n","import { factory } from '../../shared';\r\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\r\nimport { LTokenOption } from '../contract/l_token_option';\r\nimport { PTokenOption } from '../contract/p_token_option';\r\n\r\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\r\nexport const lTokenOptionFactory = factory(LTokenOption);\r\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, fromWei } from '../../shared'\r\nimport { lTokenOptionAbi } from './abis.js'\r\n\r\nexport class LTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  // async allowance(owner, spender) {\r\n  //   const res = await this._call('allowance', [owner, spender])\r\n  //   return res\r\n  // }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return fromWei(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return fromWei(res)\r\n  }\r\n\r\n  // tx\r\n  // async approve(accountAddress, spender, amount) {\r\n  //   return await this._transact('approve', [spender, amount], accountAddress)\r\n  // }\r\n  // async transfer(accountAddress, to, amount) {\r\n  //   return await this._transact('transfer', [to, amount], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, amount) {\r\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  // }\r\n\r\n}","import { ContractBase, fromWei } from '../../shared'\r\nimport { pTokenOptionAbi } from './abis.js'\r\n\r\nexport class PTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return res\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return res\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return res\r\n  }\r\n  async getApproved(tokenId) {\r\n    const res = await this._call('getApproved', [tokenId])\r\n    return res\r\n  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return fromWei(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return res\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return {\r\n      volume: fromWei(res[0]),\r\n      cost: fromWei(res[1]),\r\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\r\n    };\r\n }\r\n  async getTokenId(owner) {\r\n    const res = await this._call('getTokenId', [owner])\r\n    return res\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return res\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    const res = await this._call('isApprovedForAll', [owner, operator])\r\n    return res\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async ownerOf(tokenId) {\r\n    const res = await this._call('ownerOf', [tokenId])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async addMargin(accountAddress, owner, delta) {\r\n    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  }\r\n  async updateMargin(accountAddress, owner, margin) {\r\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  }\r\n  async updatePosition(accountAddress, owner, symbolId, position) {\r\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  }\r\n\r\n  // async approve(accountAddress, operator, tokenId) {\r\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  // }\r\n  // async setApprovalForAll(accountAddress, operator, approved) {\r\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  // }\r\n  // async toggleCloseOnly(accountAddress, symbolId) {\r\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\r\n\r\nexport const volatilitiesCache = (function() {\r\n  const cache = {}\r\n  return {\r\n    async get(poolAddress, symbols){\r\n      const key = poolAddress\r\n      if (!Object.keys(cache).includes(key) || Math.floor(Date.now()/1000) - cache[key].timestamp > 5) {\r\n        const timestamp = Math.floor(Date.now()/1000)\r\n        const data = await getOracleVolatilitiesForOption(symbols)\r\n        cache[key] = {\r\n          data,\r\n          timestamp,\r\n        }\r\n        return cache[key].data\r\n      } else {\r\n        return cache[key].data\r\n      }\r\n    }\r\n  }\r\n})()\r\n","import { ContractBase, fromWei } from '../../shared'\r\n\r\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\r\n\r\nexport class OptionPricer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, optionPricerAbi)\r\n  }\r\n\r\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\r\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\r\n    return {\r\n      timeValue: fromWei(res.timeValue),\r\n      delta: fromWei(res.delta),\r\n    };\r\n  }\r\n}","import { factory } from '../../shared';\r\nimport { EverlastingOption } from '../contract/everlasting_option';\r\nimport { OptionPricer } from '../contract/option_pricer';\r\n\r\nexport const everlastingOptionFactory = factory(EverlastingOption);\r\nexport const optionPricerFactory = factory(OptionPricer);","import {\r\n  ContractBase,\r\n  deleteIndexedKey,\r\n  fromWeiForObject,\r\n  fromWei,\r\n  naturalToDeri,\r\n  getPoolConfig,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n} from '../../shared';\r\nimport { getVolatilitySymbols } from '../../shared/config/token';\r\nimport {\r\n  getOracleVolatilityForOption,\r\n} from '../../shared/utils/oracle';\r\nimport {\r\n  everlastingOptionViewerFactory,\r\n  pTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { everlastingOptionAbi } from './abis.js';\r\n\r\nexport class EverlastingOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'option'\r\n    );\r\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    // this.offchainSymbols = this.config.offchainSymbols;\r\n    this.volatilitySymbols = this.config.volatilitySymbols;\r\n    this.bTokenAddress = this.config.bToken;\r\n    this.lTokenAddress = this.config.lToken;\r\n    this.pTokenAddress = this.config.pToken;\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\r\n  }\r\n  async _updateConfig() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = everlastingOptionViewerFactory(\r\n        this.chainId,\r\n        this.viewerAddress\r\n      );\r\n    }\r\n\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\r\n    ) {\r\n      // symbol is updated\r\n      const activeSymbols = await Promise.all(\r\n      activeSymbolIds.reduce(\r\n          (acc, i) => acc.concat([this.getSymbol(i)]),\r\n          []\r\n        )\r\n      );\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        this.contractAddress,\r\n        activeSymbols.map((s) => s.symbol)\r\n      );\r\n      //console.log(symbolVolatilities)\r\n      const state = await this.viewer.getPoolStates(\r\n        this.contractAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      // update state\r\n      this.activeSymbolIds = activeSymbolIds;\r\n      this.activeSymbols = symbolState.filter((s) =>\r\n        this.activeSymbolIds.includes(s.symbolId)\r\n      );\r\n      // for tx use\r\n      this.volatilitySymbols = getVolatilitySymbols(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n    }\r\n  }\r\n\r\n  // query\r\n  // async OptionPricer() {\r\n  //   const res = await this._call('OptionPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async PmmPricer() {\r\n  //   const res = await this._call('PmmPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async _T() {\r\n  //   const res = await this._call('_T', []);\r\n  //   return fromWei(res);\r\n  // }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getLastTimestamp() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1]\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return fromWei(res[0])\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'initialMarginRatio',\r\n      'liquidationCutRatio',\r\n      'maintenanceMarginRatio',\r\n      'maxLiquidationReward',\r\n      'minLiquidationReward',\r\n      'minPoolMarginRatio',\r\n      'protocolFeeCollectRatio',\r\n    ]);\r\n  }\r\n  // async getProtocolFeeAccrued() {\r\n  //   const res = await this._call('getPoolStateValues', []);\r\n  //   return fromWei(res[2])\r\n  // }\r\n\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'strikePrice',\r\n      'multiplier',\r\n      'feeRatioITM',\r\n      'feeRatioOTM',\r\n      'alpha',\r\n      'tradersNetVolume',\r\n      'tradersNetCost',\r\n      'cumulativeFundingRate',\r\n    ]);\r\n    // return {\r\n    //   symbolId: res[0],\r\n    //   symbol: res[1],\r\n    //   oracleAddress: res[2],\r\n    //   volatilityAddress: res[3],\r\n    //   isCall: res[4],\r\n    //   strikePrice: fromWei(res[5]),\r\n    //   multiplier: fromWei(res[6]),\r\n    //   feeRatio: fromWei(res[7]),\r\n    //   alpha: fromWei(res[8]),\r\n    //   tradersNetVolume: fromWei(res[9]),\r\n    //   tradersNetCost: fromWei(res[10]),\r\n    //   cumulativeFundingRate: fromWei(res[11]),\r\n    // };\r\n  }\r\n\r\n  // tx\r\n  async _getVolSymbolPrices() {\r\n    await this._updateConfig();\r\n    let volatilities = [];\r\n    if (this.volatilitySymbols.length > 0) {\r\n      const volatilityInfos = await getOracleVolatilityForOption(this.activeSymbols.map((s) => s.symbol))\r\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.activeSymbolIds[index],\r\n          p.timestamp,\r\n          p.volatility,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return volatilities;\r\n  }\r\n\r\n  async addLiquidity(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, lShares) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(lShares), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(bAmount)],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(tradeVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg } from '../../shared/utils';\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateShareValue,\r\n} from '../../v1/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport {\r\n  lTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\n\r\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { lToken: lTokenAddress } = getPoolConfig(\r\n    poolAddress,\r\n    '0',\r\n    '0',\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\r\n  const [\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n  ] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n\r\n  const symbols = optionPool.activeSymbols\r\n  const symbolVolatilities = await volatilitiesCache.get(poolAddress, symbols.map((s) => s.symbol))\r\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities)\r\n  const { poolState } = state;\r\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\r\n  const value = symbols.reduce(\r\n    (acc, s) =>\r\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\r\n    bg(0)\r\n  );\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      totalDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      bg(initialMarginRatio).times(10)\r\n    ).toString(),\r\n  };\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","/*\r\n    1. Calculate the cost for user input volume\r\n    2. Calculate the final price if user input volume is traded\r\n*/\r\n\r\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\r\n    return theoreticalPrice * (1 + K * tradersNetVolume)\r\n}\r\n\r\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\r\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\r\n}\r\n","import {\r\n  bg,\r\n  max,\r\n  bTokenFactory,\r\n  catchApiError,\r\n  deriToNatural,\r\n  getPoolConfig,\r\n} from '../../shared';\r\nimport { fundingRateCache } from '../../shared/api/api_globals';\r\nimport { normalizeOptionSymbol } from '../../shared/config/token';\r\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\r\nimport {\r\n  getOraclePricesForOption,\r\n  getPriceFromRest,\r\n  getOracleVolatilitiesForOption,\r\n} from '../../shared/utils/oracle';\r\nimport { queryTradePMM } from '../calculation/PMM2';\r\nimport {\r\n  dynamicInitialMarginRatio,\r\n  dynamicInitialPoolMarginRatio,\r\n  getAverageEntryPrice,\r\n  //getDeltaFundingPerSecond,\r\n  getLiquidationPrice,\r\n  getLiquidationPrices,\r\n  getMarginHeldBySymbol,\r\n} from '../calculation/trade';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\n//\r\nconst SECONDS_IN_A_DAY = 86400;\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const [symbolInfo2, poolInfo2] = await Promise.all([\r\n        optionPool.getSymbol(symbolId),\r\n        optionPool.getParameters(),\r\n      ]);\r\n\r\n      const symbols = optionPool.activeSymbols;\r\n      const [symbolPrices, symbolVolatilities] = await Promise.all([\r\n        getOraclePricesForOption(\r\n          chainId,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        volatilitiesCache.get(\r\n          poolAddress,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n      ]);\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbolInfo = symbolState[symbolIndex];\r\n      const { dynamicMarginRatio, isCall } =\r\n        symbolInfo;\r\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\r\n      const {\r\n        initialMarginRatio,\r\n        maintenanceMarginRatio,\r\n        minLiquidationReward,\r\n        maxLiquidationReward,\r\n        liquidationCutRatio,\r\n        protocolFeeCollectRatio,\r\n      } = poolInfo2;\r\n\r\n      return {\r\n        symbol,\r\n        bTokenSymbol,\r\n        multiplier: multiplier.toString(),\r\n        feeRatioOTM: feeRatioOTM.toString(),\r\n        feeRatioITM: feeRatioITM.toString(),\r\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\r\n        initialMarginRatio: dynamicMarginRatio.toString(),\r\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\r\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\r\n          .times(maintenanceMarginRatio)\r\n          .div(initialMarginRatio)\r\n          .toString(),\r\n        minLiquidationReward: minLiquidationReward.toString(),\r\n        maxLiquidationReward: maxLiquidationReward.toString(),\r\n        liquidationCutRatio: liquidationCutRatio.toString(),\r\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n        isCall: isCall,\r\n        indexConstituents: getIndexInfo(symbol),\r\n      };\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      //minPoolMarginRatio: '',\r\n      initialMarginRatio: '',\r\n      maintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { url: '', tokens: [] },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { symbol: symbolStr } = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols;\r\n      let symbolPrices = [],\r\n        symbolVolatilities = [],\r\n        volPrice;\r\n      if (symbols && symbols.length > 0) {\r\n        [symbolPrices, symbolVolatilities, volPrice] = await Promise.all([\r\n          getOraclePricesForOption(\r\n            chainId,\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          volatilitiesCache.get(\r\n            poolAddress,\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          getPriceFromRest(`VOL-${normalizeOptionSymbol(symbolStr)}`, 'option'),\r\n        ]);\r\n      }\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, symbolState, traderState, positionState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, totalPnl, initialMargin } = traderState;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbol = symbolState[symbolIndex];\r\n      const position = positionState[symbolIndex];\r\n      const price = await wrappedOracleFactory(\r\n        chainId,\r\n        symbol.oracleAddress\r\n      ).getPrice();\r\n      return {\r\n        symbolId,\r\n        symbol: symbolStr,\r\n        price,\r\n        strikePrice: symbol.strikePrice.toString(),\r\n        timePrice: symbol.timeValue.toString(),\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\r\n        margin: margin.toString(),\r\n        marginHeld: initialMargin.toString(),\r\n        marginHeldBySymbol: getMarginHeldBySymbol(\r\n          position.volume,\r\n          price,\r\n          symbol,\r\n          initialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: totalPnl,\r\n        unrealizedPnlList: symbolState\r\n          .filter((s, index) => positionState[index].pnl !== '0')\r\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\r\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\r\n        isCall: symbol.isCall,\r\n        volatility: bg(volPrice).times(100).toString(),\r\n        liquidationPrice: getLiquidationPrice(state, symbolId),\r\n      };\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      strikePrice: '',\r\n      timePrice: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      premiumFundingAccrued: '',\r\n      liquidationPrice: '',\r\n      volatility: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols;\r\n      const [symbolPrices, symbolVolatilities, volPrices] = await Promise.all([\r\n        getOraclePricesForOption(\r\n          chainId,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        volatilitiesCache.get(\r\n          poolAddress,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        getOracleVolatilitiesForOption(symbols.map((s) => s.symbol)),\r\n      ]);\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, traderState, positionState, symbolState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, initialMargin } = traderState;\r\n      const prices = await Promise.all(\r\n        symbols.reduce(\r\n          (acc, s) =>\r\n            acc.concat([\r\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\r\n            ]),\r\n          []\r\n        )\r\n      );\r\n\r\n      const liquidationPrices = getLiquidationPrices(state);\r\n      return symbols\r\n        .filter((s) => positionState[s.symbolId].volume !== '0')\r\n        .map((s) => {\r\n          const vIndex = symbolState.findIndex(\r\n            (oS) => oS.symbolId === s.symbolId\r\n          );\r\n          return {\r\n            symbolId: s.symbolId,\r\n            symbol: s.symbol,\r\n            price: prices[vIndex],\r\n            // strikePrice: s.strikePrice.toString(),\r\n            // timePrice: s.timeValue.toString(),\r\n            volume: bg(positionState[vIndex].volume)\r\n              .times(symbolState[vIndex].multiplier)\r\n              .toString(),\r\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\r\n            margin: margin.toString(),\r\n            marginHeld: initialMargin.toString(),\r\n            marginHeldBySymbol: getMarginHeldBySymbol(\r\n              positionState[vIndex].volume,\r\n              prices[vIndex],\r\n              s,\r\n              initialMarginRatio\r\n            ).toString(),\r\n            unrealizedPnl: positionState[vIndex].pnl,\r\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\r\n            isCall: s.isCall,\r\n            volatility: deriToNatural(volPrices[vIndex]).times(100).toString(),\r\n            liquidationPrice: liquidationPrices,\r\n          };\r\n        });\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\r\n        accountAddress\r\n      );\r\n      return balance.toString();\r\n    },\r\n    args,\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const bToken = bTokenFactory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig();\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n  const symbols = optionPool.activeSymbols;\r\n  const [symbolPrices, symbolVolatilities] = await Promise.all([\r\n    getOraclePricesForOption(\r\n      chainId,\r\n      symbols.map((s) => s.symbol)\r\n    ),\r\n    volatilitiesCache.get(\r\n      poolAddress,\r\n      symbols.map((s) => s.symbol)\r\n    ),\r\n  ]);\r\n  const state = await optionPool.viewer.getPoolStates(\r\n    poolAddress,\r\n    symbolPrices,\r\n    symbolVolatilities\r\n  );\r\n  const { poolState, symbolState } = state;\r\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\r\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\r\n  if (curSymbolIndex < 0) {\r\n    throw new Error(\r\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n    );\r\n  }\r\n  const symbolInfo = symbolState[curSymbolIndex];\r\n\r\n  const prices = await Promise.all(\r\n    symbolState.reduce(\r\n      (acc, s) =>\r\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\r\n      []\r\n    )\r\n  );\r\n\r\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\r\n    return acc.plus(\r\n      bg(s.tradersNetVolume)\r\n        .times(prices[index])\r\n        .times(s.multiplier)\r\n        .abs()\r\n        .times(\r\n          dynamicInitialPoolMarginRatio(\r\n            prices[index],\r\n            s.strikePrice,\r\n            s.isCall,\r\n            initialMarginRatio\r\n          )\r\n        )\r\n    );\r\n  }, bg(0));\r\n\r\n  const res = {\r\n    initialMarginRatio,\r\n    symbolIds: optionPool.activeSymbolIds,\r\n    symbols: symbolState,\r\n    liquidity,\r\n    totalDynamicEquity,\r\n    prices,\r\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\r\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\r\n      .div(symbolInfo.multiplier)\r\n      .times(SECONDS_IN_A_DAY)\r\n      .toString(),\r\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\r\n      symbolInfo.multiplier\r\n    ),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const symbolInfo = await optionPool.getSymbol(symbolId);\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { symbolIds, prices, symbols } = res;\r\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      const symbol = symbols[curSymbolIndex];\r\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\r\n      let fee\r\n      const intrinsicValue = symbol.isCall\r\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\r\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\r\n      if (bg(intrinsicValue).gt(0)) {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.spotPrice)\r\n          .times(symbolInfo.feeRatioITM)\r\n          .toString();\r\n      } else {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.timeValue)\r\n          .times(symbolInfo.feeRatioOTM)\r\n          .toString();\r\n      }\r\n      return fee\r\n    },\r\n    args,\r\n    'getFundingFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  const [parameterInfo, symbol] = await Promise.all([\r\n    optionPool.getParameters(),\r\n    optionPool.getSymbol(symbolId),\r\n  ]);\r\n  const price = await wrappedOracleFactory(\r\n    chainId,\r\n    symbol.oracleAddress\r\n  ).getPrice();\r\n  const { initialMarginRatio } = parameterInfo;\r\n  const marginRatio = dynamicInitialMarginRatio(\r\n    price,\r\n    symbol.strikePrice,\r\n    symbol.isCall,\r\n    initialMarginRatio\r\n  );\r\n  //console.log(marginRatio, symbol.multiplier, price, volume)\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(marginRatio);\r\n};\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      return {\r\n        premiumFunding0: bg(res.premiumFunding).toString(),\r\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\r\n        liquidity: res.liquidity.toString(),\r\n        volume: '-',\r\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\r\n      };\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    {\r\n      premiumFunding0: '',\r\n      premiumFundingPerSecond: '',\r\n      liquidity: '',\r\n      volume: '-',\r\n      tradersNetVolume: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async () => {\r\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      // if (!res) {\r\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      // }\r\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\r\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      // if (curSymbolIndex < 0) {\r\n      //   throw new Error(\r\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n      //   );\r\n      // }\r\n      // let symbol = symbols[curSymbolIndex];\r\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\r\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\r\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\r\n      // const deltaFunding1 = getdeltaFundingPerSecond(\r\n      //   symbol,\r\n      //   symbol.delta,\r\n      //   prices[curSymbolIndex],\r\n      //   totalDynamicEquity,\r\n      //   newNetVolume\r\n      // );\r\n\r\n      return {\r\n        // deltaFunding1: bg(deltaFunding1)\r\n        //   .div(symbol.multiplier)\r\n        //   .times(SECONDS_IN_A_DAY)\r\n        //   .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    {\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    {\r\n      liquidityUsed0: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\r\n\r\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\r\n        if (symbolIds[index] == symbolId) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        }\r\n      }, bg(0));\r\n      return {\r\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\r\n          .div(liquidity)\r\n          .times(100)\r\n          .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    {\r\n      liquidityUsed1: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        poolAddress,\r\n        optionPool.activeSymbols.map((s) => s.symbol)\r\n      );\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      //const { liquidity } = poolState;\r\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      if (index > -1) {\r\n        const {\r\n          tradersNetVolume,\r\n          multiplier,\r\n          intrinsicValue,\r\n          timeValue,\r\n          K,\r\n        } = symbolState[index];\r\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\r\n        const args = [\r\n          bg(tradersNetVolume).times(multiplier).toNumber(),\r\n          bg(intrinsicValue).plus(timeValue).toNumber(),\r\n          bg(K).toNumber(),\r\n          bg(newNetVolume).times(multiplier).toNumber(),\r\n        ]\r\n\r\n        const res = queryTradePMM(...args);\r\n        //console.log('res', res)\r\n        return bg(res).div(newNetVolume).div(multiplier).toString();\r\n      } else {\r\n        console.log(\r\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\r\n        );\r\n        return '';\r\n      }\r\n    },\r\n    args,\r\n    'getEstimatedMarkPrice',\r\n    ''\r\n  );\r\n};\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\n//import { isOrderValid } from '../../v2/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\nimport { pTokenOptionFactory} from '../factory/tokens';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      '0',\r\n      'option'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n      //   optionPool.getParameters(),\r\n      //   optionPool.getLiquidity(),\r\n      //   pToken.getMargin(accountAddress),\r\n      //   pToken.getActiveSymbolIds(),\r\n      // ]);\r\n      // no minInitialMarginRatio in option\r\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      // let promises = [];\r\n\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      // const symbols = await Promise.all(promises);\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      // }\r\n      // const positions = await Promise.all(promises);\r\n\r\n      // let marginHeld = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .times(bg(positions[index]).volume.plus(newVolume))\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // marginHeld = marginHeld.times(initialMarginRatio);\r\n\r\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume)\r\n      //         .plus(newVolume)\r\n      //         .times(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      // const orderValidation = isOrderValid(\r\n      //   margin,\r\n      //   marginHeld,\r\n      //   liquidity,\r\n      //   liquidityUsed\r\n      // );\r\n      // if (orderValidation.success) {\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      // } else {\r\n      //   throw new Error(orderValidation.error);\r\n      // }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, naturalToDeri, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson, max } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  bTokenSymbol,\r\n  symbolIdList,\r\n  symbols,\r\n  pricer,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const tradeCost = deriToNatural(info.tradeCost);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const volume = tradeVolume.abs();\r\n  const symbolId = info.symbolId\r\n  const volatility = info.volatility\r\n  const index = symbolIdList.indexOf(symbolId)\r\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\r\n  const indexPrice = deriToNatural(info.spotPrice)\r\n\r\n  const intrinsicValue = symbols[index].isCall\r\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\r\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\r\n  let timeValue = '0';\r\n  if (intrinsicValue.lte(0)) {\r\n    const res  = await pricer.getEverlastingTimeValueAndDelta(\r\n      naturalToDeri(indexPrice),\r\n      naturalToDeri(symbols[index].strikePrice),\r\n      volatility,\r\n      naturalToDeri(bg(1).div(365).toString())\r\n    );\r\n    timeValue = res.timeValue\r\n  }\r\n  if (index > -1) {\r\n    return {\r\n      direction,\r\n      baseToken: bTokenSymbol,\r\n      symbolId,\r\n      symbol: symbols[index].symbol,\r\n      price: price.toString(),\r\n      indexPrice: indexPrice.toString(),\r\n      volume: volume.times(symbols[index].multiplier).toString(),\r\n      transactionHash: txHash.toString(),\r\n      notional: tradeVolume\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      contractValue: tradeVolume\r\n        .abs()\r\n        .times(price)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      transactionFee: intrinsicValue.gt(0)\r\n        ? volume\r\n            .times(symbols[index].multiplier)\r\n            .times(indexPrice)\r\n            .times(symbols[index].feeRatioITM)\r\n            .toString()\r\n        : volume\r\n            .times(symbols[index].multiplier)\r\n            .times(timeValue)\r\n            .times(symbols[index].feeRatioOTM)\r\n            .toString(),\r\n      time,\r\n    };\r\n  } else {\r\n    return null\r\n  }\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol, pricer:pricerAddress } = getPoolConfig(poolAddress, undefined, undefined, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const pricer = optionPricerFactory(chainId, pricerAddress)\r\n  const [toBlock] = await Promise.all([\r\n    getBlockInfo(chainId, 'latest'),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\r\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i]));\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, optionPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  let result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      bTokenSymbol,\r\n      optionPool.activeSymbolIds,\r\n      symbols,\r\n      pricer,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  result = result.filter((tr) => tr !== null)\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    const [res] = await Promise.all([\r\n      fetchJson(\r\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n      ),\r\n      optionPool._updateConfig()\r\n    ]);\r\n    if (res && res.success) {\r\n      //console.log('his res', res.data)\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const symbols = optionPool.activeSymbols\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        //.filter((i) => i)\r\n        .map((i) => {\r\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\r\n          if (index > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              indexPrice: deriToNatural(i.indexPrice).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              contractValue: deriToNatural(i.contractValue).toString(),\r\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            // i.symbolId is not in activeSymbols\r\n            return null\r\n          }\r\n        });\r\n    }\r\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\r\n    // fetch tradeHistory on the block with fromBlock from rest api\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { catchTxApiError, naturalToDeri } from \"../../shared\"\r\nimport { normalizeChainId } from \"../../shared/utils/validate\";\r\nimport { getPoolV2LiteManagerConfig } from \"../config\";\r\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const createPool = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\r\n      const poolManager = perpetualPoolLiteManagerFactory(\r\n        chainId,\r\n        poolManagerAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\r\n      // send tx\r\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\r\n  }, args)\r\n}\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const addSymbol = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      // process parameters\r\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\r\n      // send tx\r\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\r\n  }, args)\r\n}\r\n","import {\r\n  DeriEnv,\r\n  getPoolConfigList as getPoolV2ConfigList,\r\n  getPoolV1ConfigList,\r\n  VERSIONS,\r\n} from '../shared/config';\r\nimport { getJsonConfig } from '../shared/config/config';\r\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\r\n\r\nexport const getContractAddressConfig = (env, version) => {\r\n  env = env || DeriEnv.get()\r\n  if (version === 'v1') {\r\n    return getPoolV1ConfigList(env);\r\n  } else if (VERSIONS.includes(version)) {\r\n    return getPoolV2ConfigList(version, env);\r\n  } else if (version === undefined) {\r\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\r\n  } else {\r\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n  }\r\n};\r\n\r\nexport const getPoolConfigList = (env) => {\r\n  env = env || DeriEnv.get();\r\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\r\n    let res = []\r\n    const config = getJsonConfig(v, env);\r\n    if (config && config.pools) {\r\n      res = config.pools.map((p) => {\r\n        p.version = v\r\n        return p\r\n      })\r\n    }\r\n    return [...acc, ...res];\r\n  }, []);\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport { getPoolVersion, LITE_VERSIONS, LITE_AND_OPTION_VERSIONS } from '../shared/config';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getPoolLiquidity as getPoolLiquidity2,\r\n  getPoolInfoApy as getPoolInfoApy2,\r\n} from '../shared/api/database_api';\r\nimport {\r\n  getLiquidityInfoV2,\r\n  getPoolLiquidityV2,\r\n  getPoolInfoApyV2,\r\n} from '../v2/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n  getPoolLiquidityV2l,\r\n  getPoolInfoApyV2l,\r\n} from '../v2_lite/api';\r\nimport {\r\n  getLiquidityInfoOption,\r\n} from '../option/api';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'option') {\r\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\r\n    return getPoolLiquidityV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolLiquidity2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\r\n    return getPoolInfoApyV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolInfoApy2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { getPoolVersion, LITE_VERSIONS } from '../shared'\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  } else if (version === 'option') {\r\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'option') {\r\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getEstimatedFundingRateOption,\r\n  getFundingRateCacheOption,\r\n  getFundingRateOption,\r\n  getLiquidityUsedOption,\r\n  getPositionInfoOption,\r\n  getSpecificationOption,\r\n  getWalletBalanceOption,\r\n  getEstimatedFeeOption,\r\n  getEstimatedMarginOption,\r\n  getEstimatedLiquidityUsedOption,\r\n  isUnlockedOption,\r\n  getPositionInfosPosition,\r\n} from '../option/api';\r\nimport { getPoolVersion, isDeriUnlocked, LITE_VERSIONS } from '../shared';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport {\r\n  getPositionInfoV2,\r\n  isUnlockedV2,\r\n  getEstimatedMarginV2,\r\n  getEstimatedFeeV2,\r\n  getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsedV2,\r\n  getSpecificationV2,\r\n  getWalletBalanceV2,\r\n  getFundingRateV2,\r\n  getLiquidityUsedV2,\r\n  getFundingRateCacheV2,\r\n} from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getSpecificationOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getPositionInfoOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  if (version === 'option') {\r\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    // return empty array for v1, v2, v2_lite\r\n    return []\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'option') {\r\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  } else {\r\n    return getEstimatedMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedFundingRateOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedFundingRateV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedLiquidityUsedOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\r\nimport { getPoolVersion, LITE_VERSIONS, unlockDeri } from '../shared';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\nimport {\r\n  unlockV2,\r\n  tradeWithMarginV2,\r\n  closePositionV2,\r\n  depositMarginV2,\r\n  withdrawMarginV2,\r\n} from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return unlockOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'option') {\r\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'option') {\r\n    return withdrawMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return tradeWithMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersion, LITE_VERSIONS } from '../shared';\r\nimport { getTradeHistoryOption } from '../option/api';\r\nimport { getTradeHistory2 } from '../v1/api';\r\nimport { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { io } from \"socket.io-client\";\r\nimport {equalIgnoreCase } from \"../utils/utils\";\r\n\r\nclass WebSocket {\r\n  constructor(){\r\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\r\n      transports: ['websocket'],\r\n      withCredentials: true\r\n    })\r\n    this.events = [];\r\n    this.socket.on('connect', () => {\r\n      console.log('connect')\r\n      this.events.forEach(event => {\r\n        this.socket.emit(event[0],event[1]);\r\n      })\r\n    })\r\n    this.socket.on('disconnect',event => {\r\n      console.log('web socket disconnect,will reconnect auto')\r\n    })\r\n  }\r\n\r\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\r\n    this.socket.on(listener,data => {\r\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\r\n        onMessage(data)\r\n      }\r\n    })\r\n    this.socket.emit(event, params)\r\n    if(this.findEvent(event,params) === -1){\r\n      this.events.push([event,params])\r\n    }\r\n  }\r\n\r\n  findEvent(event,params){\r\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\r\n  }\r\n\r\n  unsubscribe(event,params = {}){\r\n    this.socket.emit(event,params)\r\n    const pos = this.findEvent(event,params)\r\n    this.events.splice(pos,1)\r\n  }\r\n}\r\nexport default new WebSocket()","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 10,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass Type {\r\n  current = null;\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current:observable,\r\n      setCurrent : action,\r\n      isOption : computed,\r\n      isFuture : computed\r\n    })\r\n  }\r\n\r\n  setCurrent(type){\r\n    this.current = type;\r\n  }\r\n\r\n  get isOption() {\r\n    return this.current === 'option'\r\n  }\r\n\r\n  get isFuture() {\r\n    return this.current === 'future'\r\n  }\r\n}\r\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = null;\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.current === 'v2_lite_open'\r\n  }\r\n}\r\nexport default new Version()","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nimport type from '../model/Type';\r\nconst versionKey = 'deri-current-version'\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base == 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  if(type.isOption){\r\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\r\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\r\n    } else {\r\n      symbol = symbol.split('-')[0]\r\n    }\r\n  }\r\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\nexport function equalIgnoreCase(str1,str2){\r\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\r\n}\r\n\r\nexport function stripSymbol(symbol){\r\n  if(!symbol){\r\n    return symbol;\r\n  }\r\n  if(/-/.test(symbol)){\r\n    symbol = symbol.split('-')[0]\r\n  }\r\n  return symbol\r\n}\r\n\r\n\r\nexport const  secondsInRange = {\r\n  '1' : 60,\r\n  '5' : 300,\r\n  '15' : 900,\r\n  '30' : 1800,\r\n  '60' : 3600,\r\n  '1D' : 3600 * 24,\r\n  '1W' : 3600 * 24 * 7\r\n}\r\nexport const intervalRange = {\r\n  '1' : 'min',\r\n  '5' : '5min',\r\n  '15' : '15min',\r\n  '30' : '30min',\r\n  '60' : 'hour',\r\n  '1D' : 'day',\r\n  '1W' : 'week'\r\n}\r\n\r\n \r\nexport function calcRange(interval){\r\n  const timestamp = new Date().getTime() /1000 ;\r\n  let from,to;\r\n  if(interval !== '1W') {\r\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\r\n    from  = to - secondsInRange[interval] * 1440\r\n  } else {\r\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\r\n    from = to - secondsInRange[interval] * 1440\r\n  }\r\n  return [from,to]\r\n \r\n}\r\n\r\n\r\n\r\n","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  async load(version,isOptions){\r\n    let current = version && version.current;\r\n    if(isOptions){\r\n      current = 'option'\r\n    }\r\n    if(current === 'v2_lite_open'){\r\n       await openConfigListCache.update()\r\n    }\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(isOptions){\r\n      configs = sortOptionSymbols(configs)\r\n    }\r\n    if(!isOptions && version){\r\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\r\n\r\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n\r\n// == array set\r\nexport const isEqualSet = (set1, set2) => {\r\n  if (set1.size !== set2.size) return false;\r\n  for (let item of set1) {\r\n    if (!set2.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// == contract gen\r\nexport const deleteIndexedKey = (obj) => {\r\n  if (isObject(obj)) {\r\n    let newObj = {}\r\n    Object.keys(obj).forEach((k) => {\r\n      if (!(/^\\d/.test(k))) {\r\n        newObj[k] = obj[k];\r\n      }\r\n    });\r\n    return newObj;\r\n  } else {\r\n    return obj\r\n  }\r\n};\r\n\r\nexport const fromWeiForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = fromWei(obj[i]);\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const toNumberForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = bg(obj[i]).toNumber();\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n\r\n// for frontend to display symbols\r\nexport const sortOptionSymbols = (symbolList) => {\r\n  const symbolArr = symbolList\r\n    .map((s) => s.symbol)\r\n    .map((s) => {\r\n      return s.split('-');\r\n    });\r\n  const unique = (value, index, self) => self.indexOf(value) === index\r\n  const to2 = (i) => i < 10 ? `0${i}` : i\r\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\r\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\r\n  const price = symbolArr\r\n    .map((s) => s[1])\r\n    .filter(unique)\r\n    .sort((a, b) => parseInt(b) - parseInt(a));\r\n  return symbolList.map((i, index) => {\r\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\r\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\r\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\r\n    i.index = parseInt(`${index1}${index2}${index3}`)\r\n    return i\r\n  }).sort((a, b) => a.index - b.index).map((i) => {\r\n    delete i.index\r\n    return i\r\n  })\r\n}\r\n\r\n","var map = {\n\t\"./de/Signin.json\": 567,\n\t\"./de/bridge.json\": 568,\n\t\"./de/broker.json\": 569,\n\t\"./de/dip-history.json\": 570,\n\t\"./de/footer.json\": 571,\n\t\"./de/governance.json\": 572,\n\t\"./de/header.json\": 573,\n\t\"./de/home.json\": 574,\n\t\"./de/lite.json\": 575,\n\t\"./de/mining.json\": 576,\n\t\"./de/mobile-lite.json\": 577,\n\t\"./de/permission.json\": 578,\n\t\"./de/pro.json\": 579,\n\t\"./de/team.json\": 580,\n\t\"./en/Signin.json\": 581,\n\t\"./en/bridge.json\": 582,\n\t\"./en/broker.json\": 583,\n\t\"./en/dip-history.json\": 584,\n\t\"./en/footer.json\": 585,\n\t\"./en/governance.json\": 586,\n\t\"./en/header.json\": 587,\n\t\"./en/home.json\": 588,\n\t\"./en/lite.json\": 589,\n\t\"./en/mining.json\": 590,\n\t\"./en/mobile-lite.json\": 591,\n\t\"./en/permission.json\": 592,\n\t\"./en/pro.json\": 593,\n\t\"./en/team.json\": 594,\n\t\"./zh/Signin.json\": 595,\n\t\"./zh/bridge.json\": 596,\n\t\"./zh/broker.json\": 597,\n\t\"./zh/dip-history.json\": 598,\n\t\"./zh/footer.json\": 599,\n\t\"./zh/governance.json\": 600,\n\t\"./zh/header.json\": 601,\n\t\"./zh/home.json\": 602,\n\t\"./zh/lite.json\": 603,\n\t\"./zh/mining.json\": 604,\n\t\"./zh/mobile-lite.json\": 605,\n\t\"./zh/permission.json\": 606,\n\t\"./zh/pro.json\": 607,\n\t\"./zh/team.json\": 608\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 566;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport type from './model/Type'\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\n\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\r\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\r\n  const isOption = isOptionsLite || isOptionsPro\r\n  const categry = isOption ? 'option' : 'future'\r\n  type.setCurrent(categry)\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  }\r\n  if(isMobile){\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\nimport version from './Version'\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed,\r\n      supportOpen : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      if(version.isOpen){\r\n        await openConfigListCache.update()\r\n      }\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    if(version.isOpen){\r\n      await openConfigListCache.update()\r\n    }\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  isSupportChain(isOptions){\r\n    const chainId = this.detail.chainId\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    if(isOptions){\r\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\r\n    } else {\r\n      return this.supportChain\r\n    }\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n  get supportOpen(){\r\n    return this.detail.supportOpen\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport { equalIgnoreCase } from \"../utils/utils\";\r\nimport webSocket from \"./WebSocket\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n  load(symbol,timeType = 'min'){\r\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\r\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\r\n        this.setIndex(data.close)\r\n        for(const key of Object.keys(this.listeners)){\r\n          if(typeof this.listeners[key] === 'function'){\r\n            this.listeners[key](data)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol)\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n  unsubscribeBars(symbol){\r\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\r\n  }\r\n\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  clean(){\r\n    this.unsubscribeBars(this.symbol);\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\r\nimport { eqInNumber } from '../utils/utils';\r\nimport type from \"./Type\";\r\n\r\nexport default class Position {\r\n\r\n   callback = () => {}\r\n   callbackALL = ()=>{}\r\n   wallet = null;\r\n   spec = null\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n    premiumFundingAccrued:'',\r\n    deltaFundingAccrued:'',\r\n    strikePrice:0,\r\n    timePrice:0,\r\n    volatility:0,\r\n    isCall:false,\r\n   }\r\n\r\n   async load(wallet,spec,callback,isOption){\r\n     this.isOption = isOption\r\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      if(position){\r\n        if(callback){\r\n          callback(position)\r\n        }\r\n      }\r\n      this.start(wallet,spec,callback)\r\n      return position;\r\n     }\r\n   }\r\n\r\n   async loadAll(wallet,spec,callback){\r\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      let positions = [] \r\n      if(res.length){\r\n        positions = res.map(item=>{\r\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\r\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\r\n          return item\r\n        })\r\n      }\r\n      if(positions){\r\n        if(callback){\r\n          callback(positions)\r\n        }\r\n      }\r\n      this.startAll(wallet,spec,callback)\r\n      return positions;\r\n    }\r\n   }\r\n\r\n   startAll(wallet,spec,callback){\r\n    if(this.intervalAll !== null){\r\n      clearInterval(this.intervalAll);\r\n    }\r\n   this.intervalAll = window.setInterval(() => this.loadAll(wallet,spec,callback),3000)      \r\n   if(wallet){\r\n     this.wallet= wallet; \r\n   }\r\n   if(spec){\r\n     this.spec = spec\r\n   }\r\n   if(callback){\r\n     this.callbackALL = callback;\r\n   }\r\n  }\r\n\r\n   start(wallet,spec,callback){\r\n     if(this.interval !== null){\r\n       clearInterval(this.interval);\r\n     }\r\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback,this.isOption),3000)      \r\n    if(wallet){\r\n      this.wallet= wallet; \r\n    }\r\n    if(spec){\r\n      this.spec = spec\r\n    }\r\n    if(callback){\r\n      this.callback = callback;\r\n    }\r\n   }\r\n\r\n   \r\n\r\n   pause(){\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n   }\r\n\r\n   resume(wallet,spec,callback){\r\n     this.start(wallet,spec,callback || this.callback)\r\n   }\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\nimport type from \"./Type\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:[\"BUSD\"],\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    deltaFundingCoefficient:'0.2',\r\n    minInitialMarginRatio:0.1,\r\n    initialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    maintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    underlier :'',\r\n    strike:0,\r\n    optionType:'C',\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\r\n      if(type.isOption){\r\n        spec.underlier = this.getUnderlierStrike(spec).underlier\r\n        spec.strike = this.getUnderlierStrike(spec).strike\r\n        spec.optionType = this.getUnderlierStrike(spec).optionType\r\n      }\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  getUnderlierStrike(spec){\r\n    let underlier = spec.symbol.split('-')[0]\r\n    let strike = spec.symbol.split('-')[1]\r\n    let optionType = spec.symbol.split('-')[2]\r\n    return {\r\n      underlier:underlier,\r\n      strike:strike,\r\n      optionType:optionType\r\n    }\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    return spec.bTokenSymbol;\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config,isOptions){\r\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\nimport type from './model/Type';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\nimport type from './Type'\r\nimport Type from \"./Type\";\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  type = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  positions = []\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n  optionsConfigs = {}\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      positions : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setOptionConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setPositions : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      optionFundingRateTip : computed,\r\n      initialMarginRatioTip : computed,\r\n      maintenanceMarginRatioTip : computed,\r\n      TransactionFeeTip : computed,\r\n      multiplierTip : computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,finishedCallback){  \r\n    const isOption = Type.isOption\r\n    const all = await this.configInfo.load(version,isOption);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version,isOption);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback,isOption){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback,isOption)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback,isOption){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    } else{\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      this.oracle.load(getFormatSymbol(config.symbol))\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,(position) => {\r\n          this.setPosition(position)\r\n          this.syncFundingRate(wallet,config,isOption)\r\n        },isOption),\r\n        this.contractInfo.load(wallet,config,isOption),\r\n        this.loadFundingRate(wallet,config,isOption),\r\n        this.historyInfo.load(wallet,config,isOption),\r\n        isOption && this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions),isOption),\r\n      ]).then(results => {\r\n        if(results.length === 5){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n          results[4] && this.setPositions(results[4]);\r\n          // this.refreshCache();\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  refreshCache(){\r\n    const {pool} = this.config;\r\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\r\n    priceCache.clear();\r\n    priceCache.update(pool,symbol)\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n\r\n \r\n\r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    if(position){\r\n      this.setPosition(position)\r\n    }\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume(this.wallet,this.config);\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    if(type.isOption){\r\n      this.setOptionConfigs(configs)\r\n    } \r\n    this.configs = configs\r\n  }\r\n\r\n  setOptionConfigs(configs){\r\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\r\n  }\r\n\r\n  groupConfigBySymbol(configs = []){\r\n    return configs.reduce((total,config) => {\r\n      const symbol = config.symbol.split('-')[0]\r\n      if(!total[symbol]){\r\n        total[symbol] = []\r\n      }\r\n      total[symbol].push(config)\r\n      return total;\r\n    },[])\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setPositions(positions){\r\n    if(positions){\r\n      this.positions = positions\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\r\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\r\n      if(type.isOption){\r\n        volume = +volume * +this.contract.multiplier\r\n        let index = this.contract.multiplier.indexOf('.')\r\n        let num = this.contract.multiplier.slice(index);\r\n        let length = num.length \r\n        let value = volume.toString()\r\n        if(value.indexOf(\".\") !== '-1'){\r\n          value = value.substring(0,value.indexOf(\".\") + length)\r\n        }\r\n        this.setVolume(value)\r\n      }else{\r\n        this.setVolume(volume.toFixed(0))\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  clean(){\r\n    this.oracle.clean();\r\n    this.positionInfo.pause();\r\n    this.version = null;\r\n    this.configs = [] \r\n    this.config = null;\r\n    this.index = ''\r\n    this.volume = ''\r\n    this.fundingRate = {}\r\n    this.position = {}\r\n    this.positions = []\r\n    this.contract = {}\r\n    this.history = []\r\n    this.userSelectedDirection = 'long'\r\n    this.optionsConfigs = {}\r\n  }\r\n\r\n\r\n  get volumeDisplay(){\r\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n\r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\r\n    const volume = optionVolume\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = totalVolume * price * contract.multiplier\r\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config,isOption){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get optionFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get initialMarginRatioTip(){\r\n    if(this.contract && this.contract.initialMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n  get maintenanceMarginRatioTip(){\r\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get multiplierTip(){\r\n    if(this.contract && this.config){\r\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get TransactionFeeTip(){\r\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\r\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\r\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\r\n    }\r\n    return ''\r\n  }\r\n\r\n}"],"sourceRoot":""}