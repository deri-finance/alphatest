{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","model/Intl.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/config.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/config/broker.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/contract/database/database_base.js","lib/web3js/shared/config/database.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/factory/pool.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","model/Type.js","model/Config.js","lib/web3js/shared/utils/convert.js","model/Version.js","utils/utils.js","../lang).)*/.json$","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","r","cache","require","keys","forEach","key","path","split","lang","page","toLowerCase","test","pageName","Intl","locale","makeObservable","this","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","Object","supportedCatalog","includes","storeLocale","label","substr","toUpperCase","DeriEnv","_deriEnv","get","set","value","Error","VERSIONS","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","PRESERVED_SYMBOLS","MAX_UINT256","MAX_INT256","factory","klass","instances","chainId","address","deepClone","obj","clone","assign","Array","isArray","length","from","getBlockNumber","async","res","url","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","Web3","providers","HttpProvider","startTime","Date","now","eth","err","getLatestRPCServer","urls","newUrls","i","index","Math","floor","random","concat","splice","shuffleArray","promises","push","blockNumbers","Promise","all","sort","a","b","latestBlockNumber","reduce","findIndex","startsWith","normalizeChainId","chainIds","toString","normalizeAddress","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","prop","validateIsArray","getChainProviderUrl","provider_urls","filter","getChainProviderUrls","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","web3Factory","web3InstanceMap","isBrowser","isJsDom","window","ethereum","providerUrl","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","amount","events","es","toBlock","e","getHttpBase","fetchJson","fetch","resp","json","fetchRestApi","opts","method","catchApiError","func","methodName","defaultValue","console","log","catchTxApiError","result","success","transaction","error","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","normalizeOptionSymbol","optionSymbol","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","map","isUsedRestOracle","symbol","mapToSymbol","mapToSymbolInternal","values","indexOf","mapToBTokenInternal","bToken","poolProcessor","v2","pool","v2_lite","symbolId","v2_lite_open","config","option","poolValidator","getJsonConfig","version","configs","jsonConfig","JSON","parse","getConfig","pools","getPoolV1ConfigList","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","unit","retired","getLpConfigList","type","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","poolAddress","c","p","bTokenAddress","lTokenAddress","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getPoolV1Config","pTokenAddress","dTokenAdress","MinningVaultAddress","expendPoolConfigV2","bTokens","router","bTokenId","isOption","flat","expendPoolConfigV2Lite","offchainSymbolIds","offchainSymbols","expendPoolConfigOption","volatilitySymbols","expendPoolConfigV2LiteOpen","isOpen","getPoolConfigList","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","acc","v","_getPoolConfig","find","getPoolConfig2","bTokenCount","symbolCount","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","getOracleConfig","filteredByChainId","oracle","getOracleConfigList","getBrokerConfig","brokerManager","getBrokerConfigList","getPriceInfoForV1","baseUrl","addSymbolParam","retry","mode","ok","priceInfo","status","data","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","price","deriToNatural","volatility","getOraclePriceFromCache","timestamp","getOraclePrice","getPriceInfos","symbolList","headers","body","oracleFactory","decimal","getPrice","getOraclePricesForOption","oracleSymbols","self","oracleSymbolPrices","toWei","getOracleVolatilityForOption","volSymbols","volatilities","getOracleVolatilitiesForOption","oracleSymbolVolatilities","MAX_GAS_AMOUNT","ContractBase","contractAddress","contractAbi","Contract","_init","methods","call","accountAddress","gas","estimateGas","tx","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","errorMessage","_estimatedGas","txRaw","numberToHex","encodeABI","request","params","_getTransactionReceipt","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","WrappedOracle","constructor","super","_call","instanceMap","RestOracle","wrappedOracleFactory","DatabaseBaseContract","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","CONTRACT_ABI","DatabaseWormholeContract","DatabaseAirdropContract","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddress","database","databaseWormholeFactory","getDBWormholeAddress","databaseAirdropFactory","getDBAirdropAddress","bTokenFactory","decimals","_balanceOf","bg","allowance","gt","_transact","deriFactory","wormholeFactory","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","brokerAddress","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","hexToNumber","getUserWalletBalance","walletAddress","balance","getBalance","fromWei","getUserInfoAll","userInfo","db","userAddress","getValues","catch","deadline","nonce","valid","deriToString","deriToBool","getUserInfo","userInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoHarvest","userInfoTotal","total","getUserInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","getMiningVaultConfig","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","filteredConfig","MiningVaultRouter","getMiningVaultRouterConfig","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","processAsset","pnl","lastCumulativePnl","processPosition","volume","cost","lastCumulativeFundingRate","perpetualPoolFactory","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","oracleAddress","discount","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","getStorageAt","_calculateFee","abs","times","perpetualPoolRouterFactory","isMaximum","priceInfos","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","unlockSlp","addClp2Liquidity","removeClp2Liquidity","unlockClp2","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","message","POOL_ABI","PerpetualPool","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","getStateValues","stateValues","parameters","args1","fundingRatePerBlock","liquidityUsed","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","addClpLiquidity","removeClpLiquidity","unlockClp","getLpLiquidityInfo","bTokenBalance","shares","getLiquidity","poolLiquidity","getSlpLiquidityInfo","totalSupply","maxRemovableShares","getClpLiquidityInfo","getClp2LiquidityInfo","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","update","setInterval","_update","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","info","txHash","tradeVolume","timeStamp","_getTimeStamp","direction","time","transactionFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","trim","tradeHistoryOnline","liquidateHistoryOnline","getSpecification","addresses","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","getSymbol","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","perpetualPoolRouter","validation","_prices","symbolInfo","bTokenDiscounts","bTokenMultiplier","symbolConfigList","positionInfo","margins","positions","latestPrice","getLastUpdatedBlockNumber","getPosition","getMargins","getPositions","symbolPrices","marginHeldBySymbol","unrealizedPnlList","fundingFee","_getFundingRate","promiseList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","getTradeHistory","perpetualPoolLiteAbi","lTokenLiteAbi","pTokenLiteAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","operator","PerpetualPoolLiteViewer","PerpetualPoolLite","viewerAddress","viewer","getActiveSymbolIds","activeSymbolIds","isEqualSet","Set","getOffChainOracleSymbols","activeSymbols","prices","_updateOffchainSymbols","_getSymbolPrices","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","symbolIds","getLastUpdateBlock","getMargin","priceIndex","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","premiumFundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","deleteIndexedKey","PTokenOption","lastCumulativePremiumFundingRate","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","volatilitiesCache","everlastingOptionFactory","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","symbolIndex","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","symbolStr","volPrice","getTraderStates","timePrice","markPrice","dpmmPrice","oS","premiumFundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","premiumFundingPerSecond","intrinsicPrice","premiumFunding0","getEstimatedTimePrice","intrinsicValue","toNumber","tradeCost","tr","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosPosition","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","data-title","current","makeAutoObservable","setCurrent","isFuture","Config","setAll","load","isOptions","sortOptionSymbols","isV2","cur","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","hexToString","hexToUtf8","hexToNumberString","toFixed","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","has","newObj","k","symbolArr","unique","to2","index1","index2","index3","Version","isV1","isV2Lite","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","append","hasParam","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","module","exports","DesktopApp","MobileApp","Mask","setIsOpen","useState","useEffect","isShowMask","LoadingMask","MaskWrapper","isOptionsLite","useRouteMatch","isOptionsPro","categry","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","WebSocket","transports","withCredentials","emit","initWebSocket","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","callbackALL","spec","mockPositionInfo","deltaFundingAccrued","isSupportChain","balanceContract","startAll","intervalAll","loadAll","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","initVolume","currentSymbolMarginHeld","otherMarginHeld","contractValue","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ada3b270.chunk.js","sourcesContent":["import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","// versions\nexport const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open', 'option']\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open']\nexport const LITE_AND_OPTION_VERSIONS = ['v2_lite', 'v2_lite_open', 'option']\n\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","\nconst paddingDate = (date) => {\n  date = date.toString()\n  if (date.length === 1) {\n    return '0' + date\n  } else {\n    return date\n  }\n}\nexport const getEpochTimeRange = (time) => {\n  //console.log('1', time.getTime()/1000)\n  const year = time.getUTCFullYear()\n  const month = time.getUTCMonth()\n  const day = time.getUTCDate()\n  let epochs = []\n  for (let i = 0; i< 3; i++) {\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\n    //console.log(newDate.getTime()/1000)\n    epochs.push(newDate)\n  }\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\n  let index = -1\n  for (let i = 0; i< epochs.length; i++) {\n    //console.log(i, epochs[i].getTime()/1000)\n    if (time.getTime() < epochs[i].getTime()) {\n      index = i\n      break\n    }\n  }\n  if (index !== -1) {\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\n  }\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\n}","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      // using metaMask ethereum object\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else if (isBrowser() && !isJsDom()) {\n        // MetaMask plugin is not installed in the browser\n        throw new Error('Please install MetaMask first');\n      } else {\n        const providerUrl = await getChainProviderUrl(chainId);\n        web3InstanceMap[chainId] = new Web3(\n          new Web3.providers.HttpProvider(providerUrl)\n        );\n        return web3InstanceMap[chainId];\n      }\n    },\n  };\n})();","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","import {\n  getRestServerConfig,\n  DeriEnv,\n} from '../config'\n\n// get REST HTTP Base url\nexport const getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}: `, err)\n  }\n  return defaultValue\n}\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n","const bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index !== -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n  console.log(`symbol(${symbol}) is not a string type`);\n  return symbol;\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\nimport {\n  isUsedRestOracle,\n  mapToBToken,\n  mapToSymbol,\n  getVolatilitySymbols,\n} from './token';\n\nconst validatePoolV2 = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['bTokens'], 'bTokens');\n  pool['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processPoolV2 = (pool) => {\n  // process pool \n  pool['bTokenCount'] = pool['bTokens'].length;\n  pool['symbolCount'] = pool['symbols'].length;\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validatePoolV2Lite = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n};\n\nconst processPoolV2Lite = (pool) => {\n  // process pool\n  if (!pool['symbolCount']) {\n    pool['symbolCount'] = pool['symbols'].length;\n  }\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validateConfigV2LiteOpen = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2LiteOpen = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validatePoolOption = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      // 'offchainSymbolIds',\n      // 'offchainSymbols',\n      'symbolCount',\n      'volatilitySymbols',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\n};\n\nconst processPoolOption = (pool) => {\n  // process pool \n  pool['symbolCount'] = pool['symbols'].length;\n  if (!pool['volatilitySymbols']) {\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['volatilitySymbols'] = getVolatilitySymbols(\n      pool['symbols'].map((s) => s.symbol)\n    ); \n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nexport const poolProcessor = {\n  v2: processPoolV2,\n  v2_lite: processPoolV2Lite,\n  v2_lite_open: processConfigV2LiteOpen,\n  option: processPoolOption,\n};\n\nexport const poolValidator = {\n  v2: validatePoolV2,\n  v2_lite: validatePoolV2Lite,\n  v2_lite_open: validateConfigV2LiteOpen,\n  option: validatePoolOption,\n};","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { validateObjectKeyExist } from '../utils';\nimport { VERSIONS } from './version';\nimport { poolProcessor, poolValidator } from './config_processor';\n\nconst getJsonConfig = (version, env) => {\n  env = env || DeriEnv.get();\n  // for browser and nodejs\n  let configs =\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && VERSIONS.includes(version)) {\n    configs = configs[version];\n    if (['prod', 'dev'].includes(env)) {\n      if (configs && configs[env]) {\n        return configs[env];\n      }\n    }\n  } else {\n    throw new Error(\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n    );\n  }\n};\n\nexport const getConfig = (version='v2', env='dev') => {\n  const config = getJsonConfig(version, env);\n  //console.log('>',config)\n  const pools = config.pools;\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n  return config;\n};\n","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","import { getConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\n\nconst expendPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n            isOption: false,\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite',\n          isOption: false,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigOption = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          volatilitySymbols: pool.volatilitySymbols,\n          unit: symbol.unit,\n          version: 'option',\n          isOption: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\n  const config = getConfig(version, env)\n  if (version === 'v2') {\n    return expendPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expendPoolConfigV2Lite(config)\n  } else if (version === 'v2_lite_open') {\n    return expendPoolConfigV2LiteOpen(config)\n  } else if (version === 'option') {\n    return expendPoolConfigOption(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  // check the bToken in v2_lite\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\nexport const getFilteredPoolConfig  = getPoolConfig\n\n\nexport const getPoolVersion = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress);\n  const config = getConfig(version, DeriEnv.get());\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool;\n  } else {\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n  }\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const env = DeriEnv.get()\n  const config = getConfig(version, env)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { getConfig } from './config';\nimport { DeriEnv } from './env';\nimport { mapToSymbolInternal } from './token';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getConfig(version, env)\n  return config.oracle\n};\n\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version, DeriEnv.get())\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { getConfig } from './config';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getConfig(version)\n  return config.brokerManager\n};\n\nexport const getBrokerConfig = (chainId, version) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { getOracleConfig } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory } from '../factory/oracle';\nimport { deriToNatural, toWei } from './convert';\nimport {\n  getVolatilitySymbols,\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', version = 'v2') {\n      const key = `${chainId}_${symbol}_${version}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice(chainId, symbol, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(chainId, symbol, version);\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\nexport const getOraclePriceForOption = async (chainId, symbol) => {\n  return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n};\n\n// for viewer use\nexport const getOraclePricesForOption = async (chainId, symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolPrices = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n  });\n};\n\n// for tx use\nexport const getOracleVolatilityForOption = async (symbols) => {\n  const volSymbols = getVolatilitySymbols(symbols)\n  //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n  const volatilities = await Promise.all(\n    volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n  );\n  //return volatilities;\n  return symbols.map((s) => {\n    return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n  });\n};\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolVolatilities = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getPriceInfo(`VOL-${i}`, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return oracleSymbolVolatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))].volatility;\n  });\n};","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\n","import Web3 from 'web3';\nimport { getDBProviderUrls } from '../../config/database';\nimport { getLatestRPCServer } from '../../utils';\n\nexport class DatabaseBaseContract {\n  constructor(contractAddress, contractAbi) {\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n  _init() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      this.contractAbi,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrls());\n      this._init();\n    }\n  }\n\n  async _call(method, args) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch (err) {\n        this.providerUrl = null\n        console.log(err.toString())\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { DatabaseBaseContract } from './database_base';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, DB_CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\n\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig(chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n  deriToNatural,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getPoolV1Config } from '../../shared/config';\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './trade_history_api';\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol()\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            symbol: i.symbol,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import {\n  getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteAbi } from './abis';\n//import { MAX_INT256} from '../../shared/config'\nimport { PTokenLite } from './p_token';\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.offchainSymbols = this.config.offchainSymbols;\n    this.bTokenAddress = this.config.bToken\n    this.lTokenAddress = this.config.lToken\n    this.pTokenAddress = this.config.pToken\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'v2_lite')\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses()]);\n  }\n\n  async _updateOffchainSymbols() {\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    if (!this.viewer) {\n      this.viewer = new PerpetualPoolLiteViewer(\n          this.chainId,\n          this.viewerAddress\n      )\n    }\n    //await this.getAddresses()\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\n    if (!this.activeSymbolIds || !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))) {\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(this.contractAddress)\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\n        return activeSymbols[index] == '' ? acc : acc.concat([i]);\n      }, []);\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\n      this.activeSymbolIds = activeSymbolIds;\n    }\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res)\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = []\n    await this._updateOffchainSymbols()\n    if (this.offchainSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import {\n  calculateEntryPrice ,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { getOraclePriceFromCache } from '../../shared/utils/oracle'\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      perpetualPool.getLastUpdateBlock(),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\n    ])\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePriceFromCache.get(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePriceFromCache.get(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'v2_lite'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n        perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            symbol: i.symbol,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n    let u = Math.sqrt(8 / V / V / T + 1)\n    let timeValue, delta\n    if (S > K) {\n        timeValue = K * Math.pow(S/K, (1 - u) / 2) / u\n        delta = (1 - u) * timeValue / S / 2\n    } else if (S === K) {\n        timeValue = K / u\n        delta = 0\n    } else {\n        timeValue = K * Math.pow(S/K, (1 + u) / 2) / u\n        delta = (1 + u) * timeValue / S / 2\n    }\n    return [timeValue, delta]\n}\n\nfunction getDynamicInitialMarginRatio(spot, strike, isCall, initialMarginRatio, minInitialMarginRatio) {\n    if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n        return initialMarginRatio\n    } else {\n        let otmRatio = (isCall ? strike - spot : spot - strike) / strike\n        return Math.max((1 - otmRatio * 3) * initialMarginRatio, minInitialMarginRatio)\n    }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(pool, trader, symbols, positions, newUnderlierPrice) {\n    let newDynamicMargin = trader.dynamicMargin\n    let newInitialMargin = trader.initialMargin\n\n    for (let i = 0; i < symbols.length; i++) {\n        let symbol = symbols[i]\n        let position = positions[i]\n\n        let newIntrinsicValue = symbol.isCall ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n                                              : Math.max(symbol.strikePrice - newUnderlierPrice, 0)\n        let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n            newUnderlierPrice, symbol.strikePrice, symbol.volatility, pool.premiumFundingPeriod\n        )\n        if (newIntrinsicValue > 0) {\n            newDelta += symbol.isCall ? 1 : -1\n        }\n        let newPnl = position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier - position.cost\n        let newDynamicMarginRatio = getDynamicInitialMarginRatio(newUnderlierPrice, symbol.strikePrice, symbol.isCall, pool.initialMarginRatio, 0.01)\n\n        newDynamicMargin = newDynamicMargin - position.pnl + newPnl\n        newInitialMargin = newInitialMargin - Math.abs(position.volume * symbol.spotPrice * symbol.multiplier * symbol.dynamicMarginRatio)\n                                            + Math.abs(position.volume * newUnderlierPrice * symbol.multiplier * newDynamicMarginRatio)\n    }\n\n    let newMaintenanceMargin = newInitialMargin * pool.maintenanceMarginRatio / pool.initialMarginRatio\n\n    return newMaintenanceMargin > newDynamicMargin\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n    if (symbols.length != positions.length) {\n        throw 'canLiquidateWithPrice: symbols and positions length not match'\n    }\n    if (symbols.length === 0) {\n        return {\n            numPositions: positions.length,\n            price1: null,\n            price2: null,\n        }\n    }\n    let head = symbols[0].symbol.slice(0, 6)\n    for (let i = 0; i < symbols.length; i++) {\n        if (!symbols[i].symbol.startsWith(head)) {\n            throw 'canLiquidateWithPrice: symbols not in same underlier'\n        }\n    }\n\n    if (trader.maintenanceMargin > trader.dynamicMargin) {\n        return {\n          numPositions: positions.length,\n          price1: symbols[0].spotPrice,\n          price2: symbols[0].spotPrice\n        }\n    }\n\n    let final1, final2\n    let price1, price2\n    let l1, l2\n\n\n    price1 = symbols[0].spotPrice / 10\n    price2 = symbols[0].spotPrice\n    l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1)\n    l2 = false\n    while (true) {\n        if (l1 && l2) {\n            final1 = (price1 + price2) / 2\n            break\n        }\n        if (!l1 && !l2) {\n            final1 = null\n            break\n        }\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\n            final1 = (price1 + price2) / 2\n            break\n        }\n        let price = (price1 + price2) / 2\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\n        if (l === l1) price1 = price\n        else price2 = price\n    }\n\n    price1 = symbols[0].spotPrice\n    price2 = symbols[0].spotPrice * 10\n    l1 = false\n    l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2)\n    while (true) {\n        if (l1 && l2) {\n            final2 = (price1 + price2) / 2\n            break\n        }\n        if (!l1 && !l2) {\n            final2 = null\n            break\n        }\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\n            final2 = (price1 + price2) / 2\n            break\n        }\n        let price = (price1 + price2) / 2\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\n        if (l === l1) price1 = price\n        else price2 = price\n    }\n\n    return {\n        numPositions: positions.length,\n        price1: final1,\n        price2: final2\n    }\n}\n\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'premiumFundingPeriod',\n      'premiumFundingCoefficient',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption1.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeDeltaFundingRate',\n        'cumulativePremiumFundingRate',\n        'deltaFundingPerSecond',\n        'premiumFundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeDeltaFundingRate',\n        'cumulativePremiumFundingRate',\n        'deltaFundingPerSecond',\n        'premiumFundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        'lastCumulativeDeltaFundingRate',\n        'lastCumulativePremiumFundingRate',\n        'deltaFundingAccrued',\n        'premiumFundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase, fromWei } from '../../shared'\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { factory } from '../../shared';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, fromWei } from '../../shared'\nimport { lTokenOptionAbi } from './abis.js'\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi)\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return fromWei(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return fromWei(res)\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  return {\n    async get(poolAddress, symbols){\n      const key = poolAddress\n      if (!Object.keys(cache).includes(key) || Math.floor(Date.now()/1000) - cache[key].timestamp > 5) {\n        const timestamp = Math.floor(Date.now()/1000)\n        const data = await getOracleVolatilitiesForOption(symbols)\n        cache[key] = {\n          data,\n          timestamp,\n        }\n        return cache[key].data\n      } else {\n        return cache[key].data\n      }\n    }\n  }\n})()\n","import { factory } from '../../shared';\nimport { EverlastingOption } from '../contract/everlasting_option';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);","import {\n  ContractBase,\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  naturalToDeri,\n  getPoolConfig,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getVolatilitySymbols } from '../../shared/config/token';\nimport {\n  getOracleVolatilityForOption,\n} from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'option'\n    );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    this.volatilitySymbols = this.config.volatilitySymbols;\n    this.bTokenAddress = this.config.bToken;\n    this.lTokenAddress = this.config.lToken;\n    this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async _updateConfig() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.viewer) {\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n    }\n\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    if (\n      !this.activeSymbolIds ||\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\n    ) {\n      // symbol is updated\n      const activeSymbols = await Promise.all(\n      activeSymbolIds.reduce(\n          (acc, i) => acc.concat([this.getSymbol(i)]),\n          []\n        )\n      );\n      const symbolVolatilities = await volatilitiesCache.get(\n        this.contractAddress,\n        activeSymbols.map((s) => s.symbol)\n      );\n      //console.log(symbolVolatilities)\n      const state = await this.viewer.getPoolStates(\n        this.contractAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      // update state\n      this.activeSymbolIds = activeSymbolIds;\n      this.activeSymbols = symbolState.filter((s) =>\n        this.activeSymbolIds.includes(s.symbolId)\n      );\n      // for tx use\n      this.volatilitySymbols = getVolatilitySymbols(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1]\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0])\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatio',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativePremiumFundingRate',\n    ]);\n    // return {\n    //   symbolId: res[0],\n    //   symbol: res[1],\n    //   oracleAddress: res[2],\n    //   volatilityAddress: res[3],\n    //   isCall: res[4],\n    //   strikePrice: fromWei(res[5]),\n    //   multiplier: fromWei(res[6]),\n    //   feeRatio: fromWei(res[7]),\n    //   alpha: fromWei(res[8]),\n    //   tradersNetVolume: fromWei(res[9]),\n    //   tradersNetCost: fromWei(res[10]),\n    //   cumulativePremiumFundingRate: fromWei(res[11]),\n    // };\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._updateConfig();\n    let volatilities = [];\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilityForOption(this.activeSymbols.map((s) => s.symbol))\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.activeSymbolIds[index],\n          p.timestamp,\n          p.volatility,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(lShares), prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport {\n  lTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const { lToken: lTokenAddress } = getPoolConfig(\n    poolAddress,\n    '0',\n    '0',\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    optionPool._updateConfig(),\n  ]);\n\n  const symbols = optionPool.activeSymbols\n  const symbolVolatilities = await volatilitiesCache.get(poolAddress, symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities)\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","import {\n  bg,\n  bTokenFactory,\n  catchApiError,\n  deriToNatural,\n  getPoolConfig,\n} from '../../shared';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { normalizeOptionSymbol } from '../../shared/config/token';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport {\n  getOraclePricesForOption,\n  getPriceFromRest,\n  getOracleVolatilitiesForOption,\n} from '../../shared/utils/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getIntrinsicPrice,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.activeSymbols;\n      const [symbolPrices, symbolVolatilities] = await Promise.all([\n        getOraclePricesForOption(\n          chainId,\n          symbols.map((s) => s.symbol)\n        ),\n        volatilitiesCache.get(\n          poolAddress,\n          symbols.map((s) => s.symbol)\n        ),\n      ]);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatio } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatio: feeRatio.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n      };\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      //minPoolMarginRatio: '',\n      initialMarginRatio: '',\n      maintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { symbol: symbolStr } = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols;\n      let symbolPrices = [],\n        symbolVolatilities = [],\n        volPrice;\n      if (symbols && symbols.length > 0) {\n        [symbolPrices, symbolVolatilities, volPrice] = await Promise.all([\n          getOraclePricesForOption(\n            chainId,\n            symbols.map((s) => s.symbol)\n          ),\n          volatilitiesCache.get(\n            poolAddress,\n            symbols.map((s) => s.symbol)\n          ),\n          getPriceFromRest(`VOL-${normalizeOptionSymbol(symbolStr)}`, 'option'),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolStr,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].premiumFundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    'getPositionInfo',\n    {\n      price: '',\n      strikePrice: '',\n      timePrice: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      premiumFundingAccrued: '',\n      liquidationPrice: '',\n      volatility: '',\n    }\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols;\n      const [symbolPrices, symbolVolatilities, volPrices] = await Promise.all([\n        getOraclePricesForOption(\n          chainId,\n          symbols.map((s) => s.symbol)\n        ),\n        volatilitiesCache.get(\n          poolAddress,\n          symbols.map((s) => s.symbol)\n        ),\n        getOracleVolatilitiesForOption(symbols.map((s) => s.symbol)),\n      ]);\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].premiumFundingAccrued,\n            isCall: s.isCall,\n            volatility: deriToNatural(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.activeSymbols;\n  const [symbolPrices, symbolVolatilities] = await Promise.all([\n    getOraclePricesForOption(\n      chainId,\n      symbols.map((s) => s.symbol)\n    ),\n    volatilitiesCache.get(\n      poolAddress,\n      symbols.map((s) => s.symbol)\n    ),\n  ]);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    symbolPrices,\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.premiumFundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.premiumFundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, prices, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      const intrinsicPrice = getIntrinsicPrice(\n        prices[curSymbolIndex],\n        symbol.strikePrice,\n        symbol.isCall\n      );\n      //console.log(volume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\n      return bg(volume)\n        .abs()\n        .times(intrinsicPrice.plus(symbol.timeValue))\n        .times(symbol.multiplier)\n        .times(symbolInfo.feeRatio)\n        .toString();\n    },\n    args,\n    'getFundingFee',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n    'getFundingRate',\n    {\n      premiumFunding0: '',\n      premiumFundingPerSecond: '',\n      liquidity: '',\n      volume: '-',\n      tradersNetVolume: '',\n    }\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    {\n      liquidityUsed0: '',\n    }\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    {\n      liquidityUsed1: '',\n    }\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbolVolatilities = await volatilitiesCache.get(\n        poolAddress,\n        optionPool.activeSymbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    'getEstimatedMarkPrice',\n    ''\n  );\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\nimport { pTokenOptionFactory} from '../factory/tokens';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'option'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { deriToNatural, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId\n  const index = symbolIdList.indexOf(symbolId)\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\n\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume.abs().times(price).times(multiplier[index]).toString(),\n      transactionFee: calculateTxFee( tradeVolume, price, multiplier[index], feeRatio[index]).toString(),\n      time,\n    };\n  } else {\n    return null\n  }\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const [toBlock] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool._updateConfig(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i]));\n  }\n  let symbols = await Promise.all(promises)\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, optionPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  let result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n      optionPool.activeSymbolIds,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  result = result.filter((tr) => tr !== null)\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool._updateConfig()\n    ]);\n    if (res && res.success) {\n      //console.log('his res', res.data)\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.activeSymbols\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        //.filter((i) => i)\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\n          if (index > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null\n          }\n        });\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\n    // fetch tradeHistory on the block with fromBlock from rest api\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import {\n  DeriEnv,\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n  VERSIONS,\n} from '../shared/config';\n\nexport const getContractAddressConfig = (env, version) => {\n  env = env || DeriEnv.get()\n  if (version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (VERSIONS.includes(version)) {\n    return getPoolV2ConfigList(version, env);\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport { getPoolVersion, LITE_VERSIONS } from '../shared/config';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getPoolLiquidity as getPoolLiquidity2,\n  getPoolInfoApy as getPoolInfoApy2,\n} from '../shared/api/database_api';\nimport {\n  getLiquidityInfoV2,\n  getPoolLiquidityV2,\n  getPoolInfoApyV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n} from '../v2_lite/api';\nimport {\n  getLiquidityInfoOption,\n} from '../option/api';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (LITE_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (LITE_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersion, LITE_VERSIONS } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  } else if (version === 'option') {\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'option') {\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getEstimatedFundingRateOption,\n  getFundingRateCacheOption,\n  getFundingRateOption,\n  getLiquidityUsedOption,\n  getPositionInfoOption,\n  getSpecificationOption,\n  getWalletBalanceOption,\n  getEstimatedFeeOption,\n  getEstimatedMarginOption,\n  getEstimatedLiquidityUsedOption,\n  isUnlockedOption,\n  getPositionInfosPosition,\n} from '../option/api';\nimport { getPoolVersion, isDeriUnlocked, LITE_VERSIONS } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getSpecificationOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getPositionInfoOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'option') {\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\n  } else {\n    // return empty array for v1, v2, v2_lite\n    return []\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'option') {\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedFundingRateOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedLiquidityUsedOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\nimport { getPoolVersion, LITE_VERSIONS, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return unlockOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'option') {\n    return withdrawMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return tradeWithMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolVersion, LITE_VERSIONS } from '../shared';\nimport { getTradeHistoryOption } from '../option/api';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 10,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = null;\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version,isOptions){\n    let current = version && version.current;\n    if(isOptions){\n      current = 'option'\n    }\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(isOptions){\n      configs = sortOptionSymbols(configs)\n    }\n    if(!isOptions && version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// == contract gen\nexport const deleteIndexedKey = (obj) => {\n  if (isObject(obj)) {\n    let newObj = {}\n    Object.keys(obj).forEach((k) => {\n      if (!(/^\\d/.test(k))) {\n        newObj[k] = obj[k];\n      }\n    });\n    return newObj;\n  } else {\n    return obj\n  }\n};\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(a) - parseInt(b));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n}\nexport default new Version()","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nconst versionKey = 'deri-current-version'\n\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    } else {\n      symbol = symbol.split('-')[0]\n    }\n  }\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 1440\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 1440\n  }\n  return [from,to]\n \n}\n\n\n\n","var map = {\n\t\"./de/Signin.json\": 567,\n\t\"./de/bridge.json\": 568,\n\t\"./de/broker.json\": 569,\n\t\"./de/dip-history.json\": 570,\n\t\"./de/footer.json\": 571,\n\t\"./de/governance.json\": 572,\n\t\"./de/header.json\": 573,\n\t\"./de/home.json\": 574,\n\t\"./de/lite.json\": 575,\n\t\"./de/mining.json\": 576,\n\t\"./de/mobile-lite.json\": 577,\n\t\"./de/pro.json\": 578,\n\t\"./de/team.json\": 579,\n\t\"./en/Signin.json\": 580,\n\t\"./en/bridge.json\": 581,\n\t\"./en/broker.json\": 582,\n\t\"./en/dip-history.json\": 583,\n\t\"./en/footer.json\": 584,\n\t\"./en/governance.json\": 585,\n\t\"./en/header.json\": 586,\n\t\"./en/home.json\": 587,\n\t\"./en/lite.json\": 588,\n\t\"./en/mining.json\": 589,\n\t\"./en/mobile-lite.json\": 590,\n\t\"./en/pro.json\": 591,\n\t\"./en/team.json\": 592,\n\t\"./zh/Signin.json\": 593,\n\t\"./zh/bridge.json\": 594,\n\t\"./zh/broker.json\": 595,\n\t\"./zh/dip-history.json\": 596,\n\t\"./zh/footer.json\": 597,\n\t\"./zh/governance.json\": 598,\n\t\"./zh/header.json\": 599,\n\t\"./zh/home.json\": 600,\n\t\"./zh/lite.json\": 601,\n\t\"./zh/mining.json\": 602,\n\t\"./zh/mobile-lite.json\": 603,\n\t\"./zh/pro.json\": 604,\n\t\"./zh/team.json\": 605\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 566;","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\nimport { useRouteMatch } from 'react-router-dom';\nimport type from './model/Type'\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\n  const isOption = isOptionsLite || isOptionsPro\n  const categry = isOption ? 'option' : 'future'\n  type.setCurrent(categry)\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  }\n  if(isMobile){\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    // symbol = symbol+'_V2'\n    this.initWebSocket()\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    if(this.ws){\n      this.ws.emit('un_get_kline', {\n        symbol : symbol, 'time_type' : 'min'\n      })\n    }\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\nimport { eqInNumber } from '../utils/utils';\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   spec = null\n   isOption =null;\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,spec,callback,isOption){\n     this.isOption = isOption\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   async loadAll(wallet,spec,callback,isOption){\n    this.isOption = isOption\n      if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\n        let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n        let positions = [] \n        if(res.length){\n          positions = res.map(item=>{\n            item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n            item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\n            return item\n          })\n        }\n        if(positions){\n          if(callback){\n            callback(positions)\n          }\n        }\n        this.startAll(wallet,spec,callback)\n        return positions;\n       }\n   }\n\n   startAll(wallet,spec,callback){\n    if(this.intervalAll !== null){\n      clearInterval(this.intervalAll);\n    }\n   this.intervalAll = window.setInterval(() => this.loadAll(wallet,spec,callback,this.isOption),3000)      \n   if(wallet){\n     this.wallet= wallet; \n   }\n   if(spec){\n     this.spec = spec\n   }\n   if(callback){\n     this.callbackALL = callback;\n   }\n  }\n\n   start(wallet,spec,callback){\n     if(this.interval !== null){\n       clearInterval(this.interval);\n     }\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback,this.isOption),3000)      \n    if(wallet){\n      this.wallet= wallet; \n    }\n    if(spec){\n      this.spec = spec\n    }\n    if(callback){\n      this.callback = callback;\n    }\n   }\n\n   \n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption){\n        spec.underlier = this.getUnderlierStrike(spec).underlier\n        spec.strike = this.getUnderlierStrike(spec).strike\n        spec.optionType = this.getUnderlierStrike(spec).optionType\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  getUnderlierStrike(spec){\n    let underlier = spec.symbol.split('-')[0]\n    let strike = spec.symbol.split('-')[1]\n    let optionType = spec.symbol.split('-')[2]\n    return {\n      underlier:underlier,\n      strike:strike,\n      optionType:optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      positions : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setOptionConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setPositions : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      optionFundingRateTip : computed,\n      initialMarginRatioTip : computed,\n      maintenanceMarginRatioTip : computed,\n      TransactionFeeTip : computed,\n      multiplierTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,version,isOption,finishedCallback){  \n    const all = await this.configInfo.load(version,isOption);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version,isOption);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback,isOption){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback,isOption)\n  }\n\n  async onChange(config,changed,finishedCallback,isOption){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    } else{\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\n     //切换指数\n    if(symbolChanged && config){\n      const symbol = getFormatSymbol(config.symbol)\n      this.oracle.unsubscribeBars(symbol);\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(symbol)\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,(position) => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet,config,isOption)\n        },isOption),\n        this.contractInfo.load(wallet,config,isOption),\n        this.loadFundingRate(wallet,config,isOption),\n        this.historyInfo.load(wallet,config,isOption),\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions),isOption),\n      ]).then(results => {\n        if(results.length === 5){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n          results[4] && this.setPositions(results[4]);\n          // this.refreshCache();\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  refreshCache(){\n    const {pool} = this.config;\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\n    priceCache.clear();\n    priceCache.update(pool,symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    if(type.isOption){\n      this.setOptionConfigs(configs)\n    } \n    this.configs = configs\n  }\n\n  setOptionConfigs(configs){\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\n  }\n\n  groupConfigBySymbol(configs = []){\n    return configs.reduce((total,config) => {\n      const symbol = config.symbol.split('-')[0]\n      if(!total[symbol]){\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    },[])\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setPositions(positions){\n    if(positions){\n      this.positions = positions\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\n      if(type.isOption){\n        volume = +volume * +this.contract.multiplier\n        let index = this.contract.multiplier.indexOf('.')\n        let num = this.contract.multiplier.slice(index);\n        let length = num.length \n        let value = volume.toString()\n        if(value.indexOf(\".\") !== '-1'){\n          value = value.substring(0,value.indexOf(\".\") + length)\n        }\n        this.setVolume(value)\n      }else{\n        this.setVolume(volume.toFixed(0))\n      }\n      \n    }\n  }\n\n\n  get volumeDisplay(){\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    const volume = optionVolume\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n    \n    \n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config,isOption){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip(){\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\n      if(Intl.locale === 'zh'){\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \n      } else {\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \n      }\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip(){\n    if(this.contract && this.contract.initialMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip(){\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip(){\n    if(this.contract && this.config){\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip(){\n    if(this.contract && this.config){\n        return `${Intl.get('lite','transaction-fee-tip')}${this.config.unit} = ${Intl.get('lite','transaction-fee-tip1')} ${this.contract.feeRatio * 100}%`\n    }\n    return ''\n  }\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport type from './model/Type';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}