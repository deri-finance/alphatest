{"version":3,"sources":["lib/web3js/v2/utils/oracle.js","lib/web3js/v2/utils/api.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database_base.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/v2/contract/v2_lite/perpetual_pool.js","lib/web3js/v2/contract/v2_lite/l_token.js","lib/web3js/v2/contract/v2_lite/p_token.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/factory/v2/index.js","lib/web3js/v2/factory/v2_lite/index.js","lib/web3js/v2/api/v2/mining_query_api.js","lib/web3js/v2/api/v2/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/v2/trade_query_api.js","lib/web3js/v2/api/v2/trade_transaction_api.js","lib/web3js/v2/api/v2_lite/mining_query_api.js","lib/web3js/v2/api/v2_lite/mining_transaction_api.js","lib/web3js/v2/api/v2_lite/trade_query_api.js","lib/web3js/v2/api/v2_lite/trade_transaction_api.js","lib/web3js/v2/api/v2/trade_history_api.js","lib/web3js/v2/api/v2_lite/trade_history_api.js","lib/web3js/v2/api/broker_api.js","lib/web3js/v2/api/activity_api.js","lib/web3js/factory/web3.js","lib/web3js/config/database.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/chain.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","lib/web3js/config/rest_server.js","lib/web3js/utils.js","lib/web3js/indexV2.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","model/Intl.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","model/Version.js","utils/utils.js","lib/web3js/v2/config/pool.js","lib/web3js/v2/config/broker.js","lib/web3js/api/contractQueryApi.js","../lang).)*/.json$","lib/web3js/v2/factory/shared.js","lib/web3js/v2/config/chain.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","index.js","lib/web3js/v2/utils/convert.js","lib/web3js/v2/factory/web3.js","lib/web3js/v2/config/config.js","lib/web3js/v2/contract/oracle/woo_oracle.js","lib/web3js/v2/contract/oracle/chainlink_oracle.js","lib/web3js/v2/contract/oracle/wrapped_oracle.js","lib/web3js/v2/contract/oracle/offchain_oracle.js","lib/web3js/v2/contract/broker_manager.js","lib/web3js/v2/contract/ptoken_airdrop.js","lib/web3js/v2/contract/b_token.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/v2/config/oracle.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/contract/v2/perpetual_pool.js","lib/web3js/v2/contract/v2/perpetual_pool_router.js","lib/web3js/v2/contract/v2/l_token.js","lib/web3js/v2/contract/v2/p_token.js","lib/web3js/config/env.js"],"names":["getPriceInfo","async","res","url","symbol","env","DeriEnv","get","addSymbolParam","toLowerCase","getOracleUrl","retry","fetch","mode","cache","ok","Error","priceInfo","json","data","price","RestOracle","getPrice","deriToNatural","toString","getOraclePrice","chainId","version","normalizeChainId","config","getOracleConfig","address","decimal","oracle","oracleFactory","catchApiError","func","args","methodName","defaultValue","a","console","log","catchTxApiError","result","success","transaction","error","MAX_GAS_AMOUNT","Contract","contractAddress","contractAbi","isProvider","this","web3","web3Factory","metaMaskWeb3","contract","eth","accountAddress","poolAddress","method","_init","methods","call","includes","gas","i","estimateGas","from","parseInt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","to","Web3","utils","numberToHex","value","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","POOL_ABI","PerpetualPool","_call","bg","cumuFundingRate","cumuFundingRateBlock","liquidity","tradersNetVolume","tradersNetCost","multiplier","feeRatio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minAddLiquidity","redemptionFeeRatio","fundingRateCoefficient","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","getOracleInfo","signed","timestamp","v","r","s","getBTCUSDPrice","getStateValues","getParameters","args1","hasInvalidArgsValue","fundingRate","fundingRatePerBlock","calculateFundingRate","processFundingRate","args2","liquidityUsed","calculateLiquidityUsed","poolMarginRatio","amount","_transactPool","blockNumber","getBlock","eventName","filter","fromBlock","events","getPastEvents","toBlock","es","e","push","volume","abs","times","CONTRACT_ABI","BTokenContract","allowance","gt","_transact","MAX_VALUE","all","_balance","decimals","PTokenContract","cost","lastCumuFundingRate","margin","lastUpdateTimestamp","LTokenContract","DatabaseBaseContract","providers","HttpProvider","providerUrl","getLatestRPCServer","getDBProviderUrlsConfig","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","MiningVaultRouter","SlpPool","naturalToDeri","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","getDeriContractAddress","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddressConfig","key","Object","keys","database","databaseWormholeFactory","getDBWormholeAddressConfig","databaseAirdropFactory","getDBAirdropAddressConfig","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","bTokenFactory","bTokenInstanceMap","bToken","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","miningVaultPoolFactory","mVaultInstanceMap","mVault","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","PerpetualPoolLite","ContractBase","constructor","super","perpetualPoolLiteAbi","getPoolConfig","undefined","offchainSymbolIds","bTokenAddress","lTokenAddress","pouterAddress","liquidatorQualifierAddress","protocolFeeCollector","getAddresses","pTokenAddress","protocolFeeCollectRatio","symbolId","oracleAddress","cumulativeFundingRate","err","prices","length","symbolNames","reduce","acc","concat","getSymbol","map","p","index","_getSymbolPrices","newVolume","LTokenLite","lTokenLiteAbi","PTokenLite","pTokenLiteAbi","tokenId","Array","isArray","lastCumulativeFundingRate","processPosition","owner","operator","calculateEntryPrice","eq","div","calculateLiquidationPrice","dynamicCost","tmp","minus","plus","max","isOrderValid","marginHeld","minMargin","gte","calculateTxFee","validateArgs","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","bTokens","accum","b","discount","pnl","isBToken0RatioValid","bTokenId","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","symbols","totalCost","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","min","factory","klass","instances","perpetualPoolRouterFactory","PerpetualPoolRouter","LToken","PToken","perpetualPoolLiteFactory","lTokenLiteFactory","pTokenLiteFactory","getLiquidityInfo","getPoolConfig2","bTokenIdList","getPoolBTokenIdList","symbolIdList","getPoolSymbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","promises","totalPnl","restLiquidity","poolLiquidity","lastCumulativePnl","maxRemovableShares","calculateMaxRemovableLiquidity","approximatePnl","cumulativePnl","shares","getPoolLiquidity","db","getValues","catch","getPoolInfoApy","poolNetwork","getNetworkName","apy","volume1h","volume24h","addLiquidity","router","routerAddress","perpetualPoolRouter","minBToken0Ratio","validation","removeLiquidity","isMaximum","priceCache","_prices","split","set","val","isNaN","parseFloat","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getPoolBTokenList","symbolInfo","bTokenDiscounts","bTokenSymbol","bTokenMultiplier","getPositionInfo","symbolConfigList","getPoolSymbolList","symbolList","positionInfo","margins","positions","latestPrice","getLastUpdatedBlockNumber","getLatestBlockNumber","getPosition","getMargins","getPositions","symbolPrices","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getWalletBalance","balanceOf","isUnlocked","getEstimatedFee","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","promiseList","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","orderValidation","trade","closePosition","negated","_getLiquidityInfo","symbolIds","getLiquidity","totalSupply","getActiveSymbolIds","poolDynamicEquity","getMargin","priceIndex","indexOf","processTradeEvent","info","txHash","tradeVolume","timeStamp","_getTimeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","returnValues","item","unshift","getTradeHistory","tradeFromBlock","tradeHistory","resp","fetchJson","getRestServerConfig","tradeHistoryBlock","trim","tradeHistoryOnline","sort","initialBlock","getBlockInfo","baseToken","account","setBroker","brokerAddress","normalizeAddress","getBrokerConfig","brokerManagerAddress","brokerManager","brokerManagerFactory","getAirdropPTokenAddress","airdropPToken","pTokenAirdropFactory","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","web3Instance","web3InstanceMap","getChainProviderUrl","shuffleArray","array","j","Math","floor","random","temp","getBlockNumber","duration","Number","MAX_SAFE_INTEGER","startTime","urls","blockNumbers","findIndex","startsWith","getChainProviderUrls","getDailyBlockNumberConfig","position","getStorageAt","hexToNumber","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getChainIds","getChainProviderUrlsConfig","provider_urls","getContractAddressConfig","pool","dToken","MiningVault","unit","retired","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","getDeriContractAddressConfig","Deri","Wormhole","getPreminingContractConfig","staking","isInTvlRace","premining","chainBlockNumberList","process","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","lte","toChecksumAddress","hexToString","hexToUtf8","hexToNumberString","toFixed","naturalWithPercentage","sd","deriToString","deriToBool","toNumber","some","getPoolContractAddress","c","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","getLpContractAddress","deriAddress","responseJson","format","bigNumber","toFormat","replaceAll","chainIds","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","wooOracleAbi","chainlinkOracleAbi","wrappedOracleAbi","offchainOracleAbi","brokerManagerAbi","bTokenLiteAbi","pTokenAirdropAbi","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","getUserWalletBalance","walletAddress","getBalance","balance","fromWei","getLpLiquidityInfo","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","isV2","total","cur","getPoolConfigListV2","getContractAddressConfig2","getPoolVersion","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfo2","getPositionInfoV2","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistory2","getTradeHistoryV2","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","message","require","forEach","path","lang","page","test","pageName","Intl","locale","setLocale","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","pPool","maxWithdrawMargin","mintDToken","getUserInfoAll","userInfo","deadline","nonce","valid","miningVaultAddress","miningVault","freeze","mintDeri","databaseWormhole","signature","mintAirdrop","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","miningVaultRouter","mint","getUserInfo","userAddress","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","userInfoHarvest","userInfoTotal","assign","getLpPoolInfoApy","apy2","getUserInfoInPool","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","opts","fetchRestApi","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","wsOnPromise","ws","event","JSON","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","getOrSet","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","id","makeAutoObservable","setCurrent","isV1","isV2Lite","switch","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","stringify","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","expendPoolConfigV2","flat","expendPoolConfigV2Lite","getPoolConfigList","getConfig","getFilteredPoolConfigList","poolConfigList","check","_getPoolConfig","find","bTokenCount","symbolCount","filteredByChainId","getBrokerConfigList","parameters","getUserWormholeSignature","getDeriBalance","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","instanceMap","isUsedRestOracle","WrappedOracle","WooOracle","BToken","BrokerManager","PTokenAirdrop","MAX_UINT256","MAX_INT256","DesktopApp","MobileApp","inject","observer","intl","isBrowser","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","obj","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","syncFundingRate","setPaused","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","trading","ReactDOM","render","StrictMode","document","getElementById","isJsDom","userAgent","processConfigV2","validateConfigV2Lite","validateObjectKeyExist","validateIsArray","prop","processConfigV2Lite","jsonConfig","getJsonConfig","_balanceOf","bTokenBalance","getOracleConfigList","every","keyList","valName","protocolFeeAccrued","getLengths","decimals0","swapperAddress","priceInfos","processAsset","_deriEnv"],"mappings":"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","file":"static/js/main.9e15f3f3.chunk.js","sourcesContent":["import { getOracleConfig } from '../config/oracle';\nimport { oracleFactory } from '../factory/shared';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../../config';\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (symbol) => {\n  const env = DeriEnv.get();\n  //const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol.toLowerCase()}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/get_signed_price', symbol);\n    }\n    return 'https://oracle4.deri.finance/get_signed_price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/get_signed_price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/get_signed_price';\n  }\n};\n\nexport const getPriceInfo = async (symbol) => {\n  let url = getOracleUrl(symbol);\n  //console.log('oracle url', url);\n  let retry = 2;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      break;\n    }\n    retry -= 1;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\n  }\n  const priceInfo = await res.json();\n  if (priceInfo.data && priceInfo.data.price) {\n    return priceInfo.data;\n  } else {\n    throw new Error(\n      `fetch oracle info error: missing price at result ${priceInfo}.`\n    );\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      const priceInfo = await getPriceInfo(symbol)\n      return deriToNatural(priceInfo.price).toString()\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  const config = getOracleConfig(chainId, symbol, version);\n  // console.log('oracle config',config)\n  if (config && config.address) {\n    if (!config.decimal) {\n      throw new Error('getOraclePrice: decimal is empty', config.decimal);\n    }\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  }\n};\n","export const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    //console.log('args', args, methodName, defaultValue)\n    // console.log(await func(...args))\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}:`, err)\n    //console.log(`${methodName}: ${err}`)\n  }\n  return defaultValue\n}\n\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n","import Web3 from 'web3';\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class Contract {\n  constructor(chainId, contractAddress, contractAbi, isProvider) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n    this.isProvider = isProvider;\n  }\n  async _init() {\n    if (!this.web3) {\n      if (this.isProvider) {\n        this.web3 = await web3Factory(this.chainId);\n      } else {\n        this.web3 = metaMaskWeb3();\n      }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  setAccount(accountAddress) {\n    this.accountAddress = accountAddress;\n    return this;\n  }\n  setPool(poolAddress) {\n    this.poolAddress = poolAddress;\n    return this;\n  }\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while(retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n      //this.web3.eth.getGasPrice(),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\nimport {\n  hasInvalidArgsValue,\n  getBTCUSDPrice,\n  getOracleInfo,\n  deriToNatural,\n  bg,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  async _transactPool(method, args = [], accountAddress) {\n    await this._init()\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    // const [gas, gasPrice] = await Promise.all([\n    //   this._estimatedGas(method, [...args, ...signed], accountAddress),\n    //   this.web3.eth.getGasPrice(),\n    // ]);\n    //console.log(`gasPrice ${gasPrice / 1000000000} GW`);\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\n    try {\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = await this.getParameters();\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (hasInvalidArgsValue(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (hasInvalidArgsValue(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    //await this.web3.eth.getAccounts(console.log)\n    //console.log('depositMargin');\n    let res;\n    try {\n      let tx = await this._transactPool(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { Contract } from './contract';\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\n/* eslint-enable */\n\nexport class BTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    allowance = deriToNatural(allowance);\n    return allowance.gt(0);\n  }\n\n  async unlock(accountAddress) {\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { deriToNatural, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { deriToNatural } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import Web3 from 'web3';\nimport { getDBProviderUrlsConfig } from '../config/database';\nimport { getLatestRPCServer } from '../utils';\n\nexport class DatabaseBaseContract {\n  constructor(contractAddress, contractAbi) {\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n  _init() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      this.contractAbi,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async _call(method, args) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch (err) {\n        this.providerUrl = null\n        console.log(err.toString())\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { DatabaseBaseContract } from './database_base';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, DB_CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi'], isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI['abi'],\n    //   this.contractAddress\n    // );\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends Contract {\n  constructor(chainId, contractAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { PerpetualPool } from '../contract/perpetual_pool';\nimport { BTokenContract } from '../contract/bToken';\nimport { PTokenContract } from '../contract/pToken';\nimport { LTokenContract } from '../contract/lToken';\nimport { DatabaseContract } from '../contract/database';\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\n\nimport { DeriEnv } from '../config/env';\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\nimport { SlpPool } from '../contract/slp_pool';\nimport { ClpPool } from '../contract/clp_pool';\nimport { Clp2Pool } from '../contract/clp2_pool';\nimport { DeriContract } from '../contract/deri';\nimport { WormholeContract } from '../contract/wormhole';\n//import { getLpContractAddress } from '../utils';\n// import { getPoolBaseSymbolList } from '../utils'\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n      isProvider\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const bTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\n      return bTokenInstanceMap[key];\n    }\n    const bToken = new BTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new BTokenContract\")\n    bTokenInstanceMap[key] = bToken;\n    return bToken;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new LTokenContract\")\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\nexport const miningVaultPoolFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\n    // console.log(\"new MiningValutPool\")\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();\n\nexport const deriFactory = (function () {\n  const deriInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(deriInstanceMap).includes(key)) {\n      return deriInstanceMap[key];\n    }\n    const deri = new DeriContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    deriInstanceMap[key] = deri;\n    return deri;\n  };\n})();\n\nexport const wormholeFactory = (function () {\n  const wormholeInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\n      return wormholeInstanceMap[key];\n    }\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\n    wormholeInstanceMap[key] = wormhole;\n    return wormhole;\n  };\n})();\n\nexport const miningVaultRouterFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n","import { ContractBase } from '../contract_base'\nimport { offchainOracleAbi, perpetualPoolLiteAbi } from '../abis';\nimport { deriToNatural, naturalToDeri, getPriceInfo } from '../../utils'\n//import { MAX_INT256} from '../../config'\nimport { getPoolConfig } from '../../config';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.bTokenAddress = '';\n    this.lTokenAddress = '';\n    this.pouterAddress = '';\n    this.liquidatorQualifierAddress = '';\n    this.protocolFeeCollector = '';\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses(), this.getParameters()]);\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\n    this.protocolFeeCollector = res.protocolFeeCollector;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n  async _getSymbolPrices() {\n    let prices = []\n    if (this.offchainSymbolIds.length > 0) {\n      const symbolNames = (\n        await Promise.all(\n          this.offchainSymbolIds.reduce(\n            (acc, i) => acc.concat([this.getSymbol(i)]),\n            []\n          )\n        )\n      ).map((s) => s.symbol);\n      const priceInfos = await Promise.all(\n        symbolNames.reduce((acc, s) => acc.concat([getPriceInfo(s)]), [])\n      );\n      prices = priceInfos.reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../contract_base'\nimport { lTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../contract_base'\nimport { pTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { bg, max } from '../utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from '../../contract/v2';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n} from '../../contract/v2_lite';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)","import { databaseFactory } from '../../../factory/contracts';\nimport { lTokenFactory, perpetualPoolFactory } from '../../factory'\nimport { getPoolConfig2, getPoolBTokenIdList, getPoolSymbolIdList} from '../../config'\nimport { bg, deriToNatural, getNetworkName } from '../../utils'\nimport { calculateMaxRemovableLiquidity } from '../../calculation'\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const {lToken:lTokenAddress} = getPoolConfig2(poolAddress, bTokenId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n\n    const [parameterInfo, bTokenInfo, lTokenAsset ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ])\n    const { minPoolMarginRatio } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    const cost = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n    }, bg(0))\n    const totalPnl = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n    }, bg(0))\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl)\n      } else {\n        return accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n      }\n    }, bg(0))\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset\n    const maxRemovableShares = calculateMaxRemovableLiquidity(bTokens[bTokenId], liquidity, cost, totalPnl, restLiquidity, minPoolMarginRatio)\n    const approximatePnl = pnl.plus(bg(bTokens[bTokenId].cumulativePnl).minus(lastCumulativePnl).times(liquidity))\n    //console.log(\"approximatePnl\", approximatePnl.toString())\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString()\n    };\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};","import { getPoolBTokenIdList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList } from '../../config'\nimport { perpetualPoolRouterFactory, perpetualPoolFactory, lTokenFactory } from '../../factory'\nimport { RestOracle } from '../../utils'\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../../calculation'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n      res = { success: false, error: validation.error};\n   }\n   return res\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum=false,\n) => {\n   const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n     poolAddress,\n   );\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let symbolIdList = getPoolSymbolIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const promises = symbolList.map(async(s) => {\n        return await RestOracle(s).getPrice()\n      })\n      const prices = await Promise.all(promises)\n      const priceInfos = prices.map((p, index) => {\n        return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n      })\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const {router:routerAddress, lToken:lTokenAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       promises = symbolList.map(async(s) => {\n         return await RestOracle(s).getPrice()\n       })\n       const prices = await Promise.all(promises)\n       const priceInfos = prices.map((p, index) => {\n         return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n       })\n       const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../../factory';\nimport { getPoolBTokenIdList, getPoolBTokenList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList} from '../../config'\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../../calculation';\nimport { getOraclePrice, bg, min, max } from '../../utils'\nimport { fundingRateCache, priceCache } from '../api_globals';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList, getPoolBTokenIdList } from '../../config'\nimport {\n  bTokenFactory,\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../../factory';\nimport { RestOracle, bg } from '../../utils';\n\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n   const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume).plus(newVolume).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    //console.log('liquidity', liquidity.toString())\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n    // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n    // console.log('pnl', pnl.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n     promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n","import { databaseFactory } from '../../../factory/contracts';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../utils';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError } from '../../utils';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { calculateEntryPrice } from \"../../../calculation\"\nimport { calculateFundingRate, calculateLiquidationPrice, processFundingRate, calculateFundingFee } from \"../../calculation\"\nimport { getPoolConfig } from \"../../config\"\nimport { bTokenFactory } from \"../../factory/shared\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../../factory/v2_lite\"\nimport { bg, catchApiError, getLastUpdatedBlockNumber, getLatestBlockNumber, getOraclePrice } from \"../../utils\"\nimport { fundingRateCache, priceCache } from \"../api_globals\"\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n    ])\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    //console.log(latestBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePrice(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { bTokenFactory } from '../../factory/shared';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError, bg } from '../../utils';\n\nexport const unlock = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.unlock(accountAddress, poolAddress)\n  }, args)\n}\n\nexport const depositMargin = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addMargin(accountAddress, amount)\n  }, args)\n}\n\nexport const withdrawMargin = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeMargin(accountAddress, amount, isMaximum)\n  }, args)\n}\n\nexport const tradeWithMargin = async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId]\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n    const { pToken:pTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [parameterInfo, liquidity, margin, symbolIds ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getLiquidity(),\n      pToken.getMargin(accountAddress),\n      pToken.getActiveSymbolIds(),\n    ])\n    const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n    let promises = []\n\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    let marginHeld = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    let liquidityUsed = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.tradersNetVolume).plus(newVolume).times(s.price).times(s.multiplier).abs())\n      } else {\n        return acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n\n    const orderValidation = isOrderValid(\n      margin,\n      marginHeld,\n      liquidity,\n      liquidityUsed,\n    )\n    if (orderValidation.success) {\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error(orderValidation.error)\n    }\n  }, args)\n}\n\nexport const closePosition = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const { volume } = await pToken.getPosition(accountAddress, symbolId);\n    if (!volume.eq(0)) {\n      const newVolume = volume.negated()\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error('no position to close')\n    }\n  }, args)\n}\n","import { deriToNatural } from '../../utils';\nimport { perpetualPoolFactory } from '../../factory';\nimport { getPoolConfig2, getPoolSymbolIdList } from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { owner: accountAddress }\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../utils';\nimport { perpetualPoolLiteFactory } from '../../factory';\nimport { getPoolConfig, getPoolConfig2, getPoolSymbolIdList} from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\nimport { calculateTxFee } from '../../calculation/position';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { brokerManagerFactory } from \"../factory\"\nimport { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { getBrokerConfig } from \"../config\"\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig(chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}","import { pTokenAirdropFactory, pTokenFactory } from \"../factory\"\nimport { getPoolConfig2 } from '../config'\nimport { DeriEnv } from \"../../config\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import Web3 from 'web3';\nimport { getChainProviderUrl } from '../utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    let web3;\n    if (typeof window.ethereum !== undefined) {\n      web3 = new Web3(window.ethereum);\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n    web3Instance = web3;\n    return web3;\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return async(chainId) => {\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\n      return web3InstanceMap[chainId];\n    }\n    if (['1', '3', '42'].includes(chainId)) {\n      console.log(\n        `==== web3Factory(${chainId}), please caution the access limits ===`\n      );\n    }\n    const providerUrl = await getChainProviderUrl(chainId);\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n    web3InstanceMap[chainId] = web3;\n    return web3;\n  };\n})();\n","export const getDBProviderUrlsConfig = () => [\n  //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const fetchWithTimeout = (url, options = {}) => {\n  const { timeout = 1200, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((resolve) => {\n      setTimeout(() => {\n        // reject(\n        //   new Error(\n        //     `Request for ${url} timed out after ${timeout} ms`,\n        //   ),\n        // )\n        resolve({timeout:true})\n      }, timeout)\n    }),\n  ])\n}\n\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    if (!err.toString().includes('FetchError')) {\n      console.log(err);\n    }\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    //console.log(url)\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error(`getAliveHttpServer(): No alive http server in ${urls}`);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  // console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\nimport { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    //console.log(chainId, contractAddress, position)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', res)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97','127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","export const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\nexport const ChainProviderUrls = [\n  {\n    provider_urls: [\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '1',\n  },\n  {\n    provider_urls: [\n      'https://bsc-dataseed.binance.org',\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n    ],\n    chainId: '56',\n  },\n  {\n    provider_urls: ['https://http-mainnet.hecochain.com'],\n    chainId: '128',\n  },\n  {\n    provider_urls: [\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '3',\n  },\n  {\n    provider_urls: [\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '42',\n  },\n  {\n    provider_urls: [\n      //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\n    ],\n    chainId: '97',\n  },\n  {\n    provider_urls: ['https://http-testnet.hecochain.com'],\n    chainId: '256',\n  },\n];\n\nexport const getChainProviderUrlsConfig = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\n  }\n}\n","import { getChainIds } from './chain';\n\n/** @module config */\n\n/**\n * Get the contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getContractAddressConfig = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    // console.log('!!! production !!!')\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n/**\n * Get the Slp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getSlpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n      },\n    ];\n  }\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\n  return [];\n};\n\n/**\n * Get the Clp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getClpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        retired: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getLpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterContractAddress = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\n/**\n * Get the Deri contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].Deri - deri address\n * @returns {string} response[].Wormhole - wormhole token address\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getDeriContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingContractConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\nexport const getDailyBlockNumberConfig = () => {\n  const chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return 'https://testnetapi.deri.finance';\n    //return 'http://localhost:8082';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport {\n  DeriEnv,\n  getChainProviderUrlsConfig,\n  getContractAddressConfig,\n  getSlpContractAddressConfig,\n  getClpContractAddressConfig,\n  getClp2ContractAddressConfig,\n  getLpContractAddressConfig,\n  getDailyBlockNumberConfig,\n  getDeriContractAddressConfig,\n  getChainIds,\n} from './config';\n\n/** @module utils */\n\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport { BigNumber };\n\n/**\n * Change the value to BigNumber type\n * @func\n * @param {string|number} value - the number that need to changed to BigNumber type\n * @param {string} base - base of the number\n * @returns {BigNumber}\n */\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\n/**\n * Get the max value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Get the min value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Convert the number to a fixed precision\n * @func\n * @param {string} value - the number that need to convert\n * @param {number} num - the number for method toFixed()\n * @returns {string}\n */\nexport const toNatural = (value, num = 0) =>\n  BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const hexToNaturalWithPercentage = (value) =>\n  `${bg(hexToNumberString(value), -18)\n    .sd(4)\n    .times(100)\n    .toFixed(4)\n    .toString()}%`;\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const deriToNaturalWithPercentage = (value) =>\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasInvalidArgsValue = (...args) =>\n  args.some(\n    (i) =>\n      // console.log(bg(i))\n      isNaN(i.toString()) || i.toString() === '0'\n  );\n\n// language\nexport const isObject = (obj) => typeof obj === 'object';\n\n//const np = () => {}\n//const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// http\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    //const response = await fetch(url);\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    //console.log(err);\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    if (await checkHttpServerIsAlive(url)) {\n      //console.log(url)\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  //console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  //console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): cannot find alive RPC server in ${urls}`)\n  }\n};\n\n// ethereum chain\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};\n\nexport const getWalletBalanceUnit = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let index;\n  const unitNetworkIdsMap = {\n    ETH: ['1', '3', '42'],\n    BNB: ['56', '97'],\n    HT: ['128', '256'],\n  };\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\n  for (let i = 0; i < networkIdsArray.length; i++) {\n    if (networkIdsArray[i].includes(chainId)) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== undefined) {\n    return Object.keys(unitNetworkIdsMap)[index];\n  }\n  if (chainId === '') {\n    return '';\n  }\n  throw new Error('Invalid Network:', chainId);\n};\n\nexport const getPoolBaseSymbolList = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = [];\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol } = pools[i];\n    if (bTokenSymbol && symbol) {\n      result.push(`${symbol}/${bTokenSymbol}`);\n    }\n  }\n  return result;\n};\n\nexport const getPoolBaseTokenAddressObject = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = {};\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol, pool } = pools[i];\n    const key = `${symbol}/${bTokenSymbol}`;\n    if (bTokenSymbol && symbol) {\n      result[key] = pool;\n    }\n  }\n  return result;\n};\n\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\n//   if (pool.length > 0) {\n//     return [\n//       pool[0].pool,\n//       pool[0].bToken,\n//       pool[0].pToken,\n//       pool[0].lToken,\n//       pool[0].dToken,\n//       pool[0].MiningVault,\n//       pool[0].initialBlock,\n//     ];\n//   }\n//   console.log(\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\n//   );\n//   return [];\n// };\n\n// get config by poolAddress\nexport const getPoolContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  // console.log(\n  //   `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  // );\n  return [];\n};\n\nexport const getMiningVaultContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\n// export const getMiningVaultRouterContractAddress = (chainId) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   if (pools.length > 0) {\n//     if (pools[0].MiningVaultRouter) {\n//       return pools[0].MiningVaultRouter;\n//     }\n//   }\n// };\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  }\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\n};\n\nexport const getSlpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n    };\n  }\n  console.log(\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getLpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getOracleUrl = (chainId, poolAddress) => {\n  const env = DeriEnv.get()\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    return 'https://oracle4.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (chainId, poolAddress) => {\n  let url = getOracleUrl(chainId, poolAddress);\n  //console.log('oracle url', url);\n  let retry = 2;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    //if (res && !res.timeout) {\n    if (res.ok) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\n  const responseJson = await getOracleInfo(chainId, poolAddress);\n  let price = responseJson.price;\n  if (!price) {\n    price = '0';\n  }\n  return deriToNatural(responseJson.price).toString();\n};\nexport const getOraclePrice = getBTCUSDPrice;\n\nexport const getChainProviderUrl = async(chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrlsConfig(chainId)\n  if (urls.length > 0) {\n    return await getLatestRPCServer(urls)\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const format = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`)\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`)\n  }\n};","export {\n  DeriEnv,\n  //getContractAddressConfig,\n  getLpContractAddressConfig,\n  getSlpContractAddressConfig,\n  getPreminingContractConfig,\n} from './config';\nexport * from './utils';\nexport * from './calculation';\n\nexport * from './api/apiGlobals';\nexport * from './api/factoryApi';\nexport * from './api/walletApi';\nexport {\n  // isUnlocked,\n  // getEstimatedMargin,\n  // getEstimatedFee,\n  // getEstimatedFundingRate,\n  // getEstimatedLiquidityUsed,\n  isDeriUnlocked,\n  getUserWormholeSignature,\n  // getFundingRate,\n  //getPositionInfo,\n  getDeriBalance,\n} from './api/contractQueryApi';\nexport {\n  //unlock,\n  //depositMargin,\n  //withdrawMargin,\n  //addLiquidity,\n  //removeLiquidity,\n  //tradeWithMargin,\n  //closePosition,\n  mint,\n  mintDToken,\n  freeze,\n  mintDeri,\n  unlockDeri,\n  mintAirdrop,\n} from './api/contractTransactionApi';\nexport {\n  getUserInfo,\n  getUserInfoHarvest,\n  getUserInfoTotal,\n  getUserInfoAll,\n  //getPoolInfoApy,\n  getLpPoolInfoApy,\n  getUserInfoInPool,\n  getUserInfoAllForAirDrop,\n} from './api/databaseApi';\n\n// export * from './api/slpPoolApi';\n// export * from './api/clpPoolApi';\n\n// export * from './api/tradeHistoryApi';\nexport {\n//getSpecification2 as getSpecification,\n// getPositionInfo2 as getPositionInfo,\n//getLiquidityInfo2 as getLiquidityInfo,\n//getWalletBalance2 as getWalletBalance,\n//getFundingRate2 as getFundingRate,\n//getLiquidityUsed2 as getLiquidityUsed,\ngetFundingRateCache2 as getFundingRateCache,\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\ngetSlpWalletBalance2 as getSlpWalletBalance,\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\ngetClpWalletBalance2 as getClpWalletBalance,\n//getDeriBalance2 as getDeriBalance,\n//getTradeHistory2 as getTradeHistory,\nfetchRestApi,\n} from './api/restApi';\n\n// export {\n  //tradeWithMargin2 as tradeWithMargin,\n  //closePosition2 as closePosition,\n  //depositMargin2 as depositMargin,\n  //withdrawMargin2 as withdrawMargin,\n  //addLiquidity2 as addLiquidity,\n  //removeLiquidity2 as removeLiquidity,\n// } from './api/contractTransactionApiV2'\n\nexport * from './api/lpPoolApi';\n\nexport * from './api_wrapper';\n\nexport {\n  getPoolConfigList,\n  getFilteredPoolConfigList,\n  getPoolBTokensBySymbolId,\n  setBroker,\n  airdropPToken,\n  isUserPTokenExist,\n  getAirdropPTokenWhitelistCount,\n} from './v2';\n","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils';\n\nconst MAX_GAS_AMOUNT = 832731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      // if (isBrowser() && !isJsDom()) {\n      //   this.web3 = metaMaskWeb3();\n      // } else {\n      this.web3 = await web3Factory.get(this.chainId);\n      // }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        // ignore the metamask error\n      }\n    }\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const offchainOracleAbi= [{\"inputs\": [{\"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\"}, {\"internalType\": \"address\", \"name\": \"signatory_\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"delayAllowance_\", \"type\": \"uint256\"}], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\"inputs\": [], \"name\": \"delayAllowance\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"getPrice\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"price\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"signatory\", \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"timestamp\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"uint256\", \"name\": \"timestamp_\", \"type\": \"uint256\"}, {\"internalType\": \"uint256\", \"name\": \"price_\", \"type\": \"uint256\"}, {\"internalType\": \"uint8\", \"name\": \"v_\", \"type\": \"uint8\"}, {\"internalType\": \"bytes32\", \"name\": \"r_\", \"type\": \"bytes32\"}, {\"internalType\": \"bytes32\", \"name\": \"s_\", \"type\": \"bytes32\"}], \"name\": \"updatePrice\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]\n\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import Web3 from 'web3';\nimport { metaMaskWeb3 } from '../factory/web3';\nimport { hexToNumber } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window.ethereum !== undefined) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\n/**\n * Get balance of the connected account\n * @async\n * @method\n * @param {string} chainId - Id of the chain\n * @param {string} accountAddress - Address of the connected account\n * @returns {string} Account balance\n */\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  const web3 = metaMaskWeb3();\n  const balance = await web3.eth.getBalance(walletAddress);\n  const res = Web3.utils.fromWei(balance);\n  return res;\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n  unlockSlp,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './slpPoolApi';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n  unlockClp2,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './clp2PoolApi';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n  unlockClp,\n  // addClpLiquidity,\n  // removeClpLiquidity,\n} from './clpPoolApi';\n\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from './contractTransactionApiV2'\nimport { getLpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import { getContractAddressConfig as getContractAddressConfig2 } from \"../config\";\nimport { getPoolConfigList as getPoolConfigListV2} from \"../v2/config\"\n//import { getPoolVersion } from '../v2';\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getContractAddressConfig2(env)\n  } else if (version === 'v2' || version === 'v2_lite') {\n    return getPoolConfigListV2(version)\n  } else {\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\n  }\n}","import { getLiquidityInfo2 } from '../api/restApi';\nimport { getPoolLiquidity as getPoolLiquidity2, getPoolInfoApy as getPoolInfoApy2 } from '../api/databaseApi';\nimport { \n  getLiquidityInfo as getLiquidityInfoV2,\n  getPoolLiquidity as getPoolLiquidityV2,\n  getPoolInfoApy as getPoolInfoApyV2,\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n  getPoolVersion,\n } from '../v2';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\nimport {\n  addLiquidity as addLiquidityV2,\n  removeLiquidity as removeLiquidityV2,\n  // addLiquidityWithPrices as addLiquidityV2,\n  // removeLiquidityWithPrices as removeLiquidityV2,\n  addLiquidityV2l,\n  removeLiquidityV2l,\n  getPoolVersion,\n} from '../v2';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getPositionInfo as getPositionInfo2,\n  isUnlocked as isUnlocked2,\n  isDeriUnlocked,\n  getEstimatedMargin as getEstimatedMargin2,\n  getEstimatedFee as getEstimatedFee2,\n  getEstimatedFundingRate as getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\n  getWalletBalance as getWalletBalance2,\n} from '../api/contractQueryApi'\n\nimport {\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../api/restApi'\n//import { bTokenFactory } from '../factory/contracts'\n\nimport {\n  getPositionInfo as getPositionInfoV2,\n  isUnlocked as isUnlockedV2,\n  getEstimatedMargin as getEstimatedMarginV2,\n  getEstimatedFee as getEstimatedFeeV2,\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\n  getSpecification as getSpecificationV2,\n  getWalletBalance as getWalletBalanceV2,\n  getFundingRate as getFundingRateV2,\n  getLiquidityUsed as getLiquidityUsedV2,\n  getFundingRateCache as getFundingRateCacheV2,\n\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n\n  getPoolVersion,\n} from '../v2'\n\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getSpecificationV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress)\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress)\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress)\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume)\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\n  }\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedMarginV2l(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\n  } else {\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress)\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFundingRateV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress)\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedLiquidityUsedV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress)\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\n  }\n}\n","import { unlock as unlock2, unlockDeri } from '../api/contractTransactionApi';\nimport {\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../api/contractTransactionApiV2';\nimport {\n  unlock as unlockV2,\n  tradeWithMargin as tradeWithMarginV2,\n  closePosition as closePositionV2,\n  depositMargin as depositMarginV2,\n  withdrawMargin as withdrawMarginV2,\n  // tradeWithMarginWithPrices as tradeWithMarginV2,\n  // depositMarginWithPrices as depositMarginV2,\n  // withdrawMarginWithPrices as withdrawMarginV2,\n  // closePositionWithPrices as closePositionV2,\n\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n\n  getPoolVersion,\n} from '../v2';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return unlockV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return withdrawMarginV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return tradeWithMarginV2l(chainId, poolAddress, accountAddress, newVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","\nimport {getTradeHistory2} from '../api/restApi';\nimport { \n  getPoolVersion,\n  getTradeHistoryV2,\n  getTradeHistoryV2l,\n } from '../v2';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getTradeHistoryV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n}","import { bg, getDailyBlockNumber } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\nimport {\n  getPoolContractAddress,\n  getMiningVaultContractAddress,\n  getBTCUSDPrice,\n  bg,\n  naturalToDeri,\n  BigNumber,\n  format,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  getMiningVaultRouterContractAddress\n} from '../config'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transactPool(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transactPool(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transactPool(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriContractAddress(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  getPoolContractAddress,\n} from '../utils';\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import {\n  getPoolContractAddress,\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../utils';\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getRestServerConfig, DeriEnv } from '../config';\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './tradeHistoryApi';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url, opts) => {\n  const resp = await fetch(url, opts);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contractTransactionApi';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from './slpPoolApi'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from './clpPoolApi'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2PoolApi'\nimport { wsInstance } from './apiGlobals'\nimport { getRestServerConfig, DeriEnv } from '../config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { perpetualPoolFactory } from '../factory/contracts';\nimport { getBTCUSDPrice } from '../utils';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(chainId, poolAddress) {\n      try {\n        const res = await getBTCUSDPrice(chainId, poolAddress);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(chainId, poolAddress) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(chainId, poolAddress);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n}\nexport default new Version()","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nconst versionKey = 'deri-current-version'\n\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\n","import { DeriEnv } from '../../config';\nimport { getConfig } from './config';\n\nconst expendPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          router: pool.router,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          unit: symbol.unit,\n          version: 'v2_lite',\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getPoolConfigList = (version='v2') => {\n  const config = getConfig(version)\n  if (version === 'v2') {\n    return expendPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expendPoolConfigV2Lite(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version)\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\n  // check the bToken in v2_lite\n  if (version === 'v2_lite') {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\n\nexport const getPoolVersion = (poolAddress) => {\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\n    return acc.concat(getConfig(version)['pools'])\n  }, [])\n  //console.log('pools', pools)\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress)\n  const config = getConfig(version)\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool\n  }\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n","import { getConfig } from './config';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getConfig(version)\n  return config.brokerManager\n};\n\nexport const getBrokerConfig = (chainId, version) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getPoolInfoApy } from './databaseApi';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './apiGlobals';\nimport {\n  hasInvalidArgsValue,\n  naturalWithPercentage,\n  deriToNatural,\n  getPoolContractAddress,\n  getBTCUSDPrice,\n  bg,\n  BigNumber,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  let price = ''\n  try {\n    price = await getBTCUSDPrice(chainId, poolAddress);\n  } catch (err) {\n    console.log(err)\n  }\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, isProvider) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress, isProvider);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    await priceCache.update(chainId, poolAddress);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  return (await deri.balance(accountAddress)).toString();\n};\n","var map = {\n\t\"./de/Signin.json\": 585,\n\t\"./de/bridge.json\": 586,\n\t\"./de/broker.json\": 587,\n\t\"./de/dip-history.json\": 588,\n\t\"./de/footer.json\": 589,\n\t\"./de/governance.json\": 590,\n\t\"./de/header.json\": 591,\n\t\"./de/home.json\": 592,\n\t\"./de/lite.json\": 593,\n\t\"./de/mining.json\": 594,\n\t\"./de/mobile-lite.json\": 595,\n\t\"./de/pro.json\": 596,\n\t\"./de/team.json\": 597,\n\t\"./en/Signin.json\": 598,\n\t\"./en/bridge.json\": 599,\n\t\"./en/broker.json\": 600,\n\t\"./en/dip-history.json\": 601,\n\t\"./en/footer.json\": 602,\n\t\"./en/governance.json\": 603,\n\t\"./en/header.json\": 604,\n\t\"./en/home.json\": 605,\n\t\"./en/lite.json\": 606,\n\t\"./en/mining.json\": 607,\n\t\"./en/mobile-lite.json\": 608,\n\t\"./en/pro.json\": 609,\n\t\"./en/team.json\": 610,\n\t\"./zh/Signin.json\": 611,\n\t\"./zh/bridge.json\": 612,\n\t\"./zh/broker.json\": 613,\n\t\"./zh/dip-history.json\": 614,\n\t\"./zh/footer.json\": 615,\n\t\"./zh/governance.json\": 616,\n\t\"./zh/header.json\": 617,\n\t\"./zh/home.json\": 618,\n\t\"./zh/lite.json\": 619,\n\t\"./zh/mining.json\": 620,\n\t\"./zh/mobile-lite.json\": 621,\n\t\"./zh/pro.json\": 622,\n\t\"./zh/team.json\": 623\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 584;","import { isUsedRestOracle } from '../config/oracle';\nimport {\n  WooOracle,\n  WrappedOracle,\n  // OffchainOracle,\n  BrokerManager,\n  PTokenAirdrop,\n  BToken,\n} from '../contract';\nimport { RestOracle } from '../utils'\n\nexport const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal) => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      // if (['80001'].includes(chainId)) {\n      //   instanceMap[key] = new ChainlinkOracle(\n      //     chainId,\n      //     address,\n      //     symbol,\n      //     decimal\n      //   );\n      // } else if (['137', '97'].includes(chainId)) {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97','80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        instanceMap[key] = new WooOracle(chainId, address, symbol, decimal);\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\n\nexport const bTokenFactory = factory(BToken);\n\nexport const brokerManagerFactory = factory(BrokerManager);\n\nexport const pTokenAirdropFactory = factory(PTokenAirdrop)\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction App({intl}) {\n  if(isBrowser){\n    return <DesktopApp locale={intl.locale}/>\n  }\n  if(isMobile){\n    return <MobileApp locale={intl.locale}/>\n  }\n}\n\nexport default inject('intl')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    // symbol = symbol+'_V2'\n    this.initWebSocket()\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    if(this.ws){\n      this.ws.emit('un_get_kline_update', {\n        symbol : symbol, 'time_type' : 'min'\n      })\n    }\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n   }\n\n   async load(wallet,spec,callback){\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      // const fundingFee = await getFun\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(this.interval !== null){\n       clearInterval(this.interval);\n     }\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n    if(wallet){\n      this.wallet= wallet; \n    }\n    if(spec){\n      this.spec = spec\n    }\n    if(callback){\n      this.callback = callback;\n    }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    minInitialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    bTokenSymbolDisplay : ['BUSD']\n  }\n\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite){\n      return [spec.bTokenSymbol];\n    }\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,version,finishedCallback){    \n    const all = await this.configInfo.load(version);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() && !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback)\n  }\n\n  async onSymbolChange(spec,finishedCallback){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback)\n  }\n\n  async onChange(config,changed,finishedCallback){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback){\n     //切换指数\n    if(symbolChanged && config){\n      const symbol = getFormatSymbol(config.symbol)\n      this.oracle.unsubscribeBars(symbol);\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(symbol)\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,position => this.setPosition(position)),\n        this.contractInfo.load(wallet,config),\n        this.loadFundingRate(wallet,config),\n        this.historyInfo.load(wallet,config)\n      ]).then(results => {\n        if(results.length === 4){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n      })\n    }\n  }\n\n\n    //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n    getDefaultConfig(configs = [],wallet){\n      let defaultConfig = null;\n      if(configs.length > 0){    \n        const fromStore = this.getFromStore();\n        if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n          defaultConfig = fromStore;\n        }\n        if(defaultConfig){\n          //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n          const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n          if(pos === -1){\n            defaultConfig = configs[0];\n          }\n        } else {\n          defaultConfig = configs[0]\n        }   \n      }\n      return defaultConfig;    \n    }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\n      this.setVolume(volume.toFixed(0))\n    }\n  }\n\n\n  get volumeDisplay(){\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    \n    return ''\n  }\n\n\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n// const version = new Version();\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    if (typeof window.ethereum !== undefined) {\n      web3Instance = new Web3(window.ethereum);\n      return web3Instance;\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      console.log(`--- web3factory init (${chainId}) ---`)\n      // using metaMask ethereum object\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else if (isBrowser() && !isJsDom()) {\n        // MetaMask plugin is not installed in the browser\n        throw new Error('Please install MetaMask first');\n      } else {\n        const providerUrl = await getChainProviderUrl(chainId);\n        web3InstanceMap[chainId] = new Web3(\n          new Web3.providers.HttpProvider(providerUrl)\n        );\n        return web3InstanceMap[chainId];\n      }\n    },\n  };\n})();","import { DeriEnv } from '../../config';\nimport jsonConfig from '../resources/config.json';\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\n\nconst validateConfigV2 = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['bTokens'], 'bTokens');\n  config['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processConfigV2 = (config) => {\n  // process config\n  config['bTokenCount'] = config['bTokens'].length;\n  config['symbolCount'] = config['symbols'].length;\n};\n\nconst validateConfigV2Lite = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2Lite = (config) => {\n  // process config\n  config['symbolCount'] = config['symbols'].length;\n};\n\nconst getJsonConfig = (version) => {\n  const env = DeriEnv.get();\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\n    configs = configs[version]\n  }\n  if (['prod', 'dev'].includes(env)){\n    //console.log(env)\n    if (configs && configs[env]) {\n      //console.log(configs[env])\n      const pools = configs[env].pools;\n      if (pools && Array.isArray(pools)) {\n        if (version === 'v2') {\n          for (let i = 0; i < pools.length; i++) {\n            validateConfigV2(pools[i]);\n            processConfigV2(pools[i]);\n          }\n        } else if (version === 'v2_lite') {\n          for (let i = 0; i < pools.length; i++) {\n            validateConfigV2Lite(pools[i]);\n            processConfigV2Lite(pools[i]);\n          }\n        }\n      }\n      //console.log(configs[env])\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n      return configs[env];\n    }\n  }\n  throw new Error(\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n  );\n};\n\nexport const getConfig = (version='v2') => {\n  return getJsonConfig(version);\n};\n","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { bg } from '../../utils';\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('_I_')\n    return bg(res, `-${this.decimal}`).toString();\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { chainlinkOracleAbi } from '../abis';\nimport { bg } from \"../../utils\";\n\nexport class ChainlinkOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, chainlinkOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('latestRoundData');\n    if (res && res.answer) {\n      return bg(res.answer, `-${this.decimal}`).toString()\n    }\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { offchainOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class OffchainOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, offchainOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from \"./contract_base\";\nimport { brokerManagerAbi } from './abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from './contract_base'\nimport { pTokenAirdropAbi } from './abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { ContractBase } from './contract_base'\nimport { bTokenLiteAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenLiteAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  // async transfer() {\n  // call transfer\n  // }\n}","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\nimport { getSlpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\nimport { getClp2ContractAddress } from '../utils';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n  lTokenFactory,\n} from '../factory/contracts';\nimport { bg, getClpContractAddress } from '../utils';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { getConfig } from './config';\n\nexport const getOracleConfigList = (version) => {\n  const config = getConfig(version)\n  return config.oracle\n};\n\nexport const isUsedRestOracle = (symbol) => {\n  return ['AXSUSDT', 'MANAUSDT'].includes(symbol);\n};\n\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\n  const filteredByChainId = getOracleConfigList(version).filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  throw new Error(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { ContractBase } from '../contract_base'\nimport { perpetualPoolAbi } from '../abis';\nimport { deriToNatural, hexToNumber, bg } from '../../utils'\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../contract_base'\nimport { perpetualPoolRouterAbi} from '../abis';\nimport { naturalToDeri } from '../../utils'\nimport { MAX_INT256 } from '../../config';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../contract_base'\nimport { lTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n"],"sourceRoot":""}