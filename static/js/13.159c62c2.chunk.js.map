{"version":3,"sources":["components/Button/Button.js","utils/DeriNumberFormat.js","hooks/useMiningPool.js","components/Pool/PoolBox.js","components/Mining/Pool/PoolPlacehold.js","desktop/components/Mining/Pool.js"],"names":["Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","lang","useState","status","setStatus","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","onClick","a","beforeAction","afterAction","current","style","display","loadApproveStatus","detail","account","pool","bTokenId","res","approve","success","alert","useEffect","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","undefined","value","isNaN","Math","abs","displayType","env","DeriEnv","get","chainInfo","config","useMiningPool","isNew","loaded","setLoaded","pools","setPools","v1Pools","setV1Pools","v2Pools","setV2Pools","legacyPools","setLegacyPools","preminingPools","setPreminingPools","openPools","setOpenPools","mapConfig","getPoolLiquidity","chainId","liqPool","getPoolInfoApy","apyPool","Object","assign","network","name","liquidity","apy","toFixed","formatAdd","formatAddress","address","type","multiplier","groupByNetwork","all","reduce","total","find","item","eqInNumber","list","length","push","poolInfo","symbol","version","airdrop","bTokenSymbol","symbolId","v2Configs","getContractAddressConfig","v1Configs","liteConfigs","getPreminingContractConfig","configs","concat","pos","findIndex","indexOf","map","slpConfig","getLpContractAddressConfig","liqInfo","isLP","getLpPoolInfoApy","lapy","lpApy","apy2","isSushiLP","label","isCakeLP","allConfigs","Promise","then","filter","p","retired","legacy","premining","preminings","isOpen","chainConfig","Card","card","index","buttonElement","setButtonElement","connected","setConnected","history","useHistory","connectWallet","connect","claimAirdrop","getUserInfoAllForAirDrop","info","valid","mintAirdrop","isConnected","url","gotoMining","thousandSeparator","decimalScale","title","suffix","inject","observer","group","poolClass","classNames","toUpperCase","target","rel","href","PoolPlacehold","loading","curTab","setCurTab","tabCLassName","siwtchTab","tab"],"mappings":"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","file":"static/js/13.159c62c2.chunk.js","sourcesContent":["import {useState,useRef,useEffect} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [isApproved, setIsApproved] = useState(true);\n  const [pending, setPending] = useState(false);\n  const [buttonText, setbuttonText] = useState(btnText)\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    beforeAction()\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    afterAction()\n  }\n\n  const beforeAction = ()  => {\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n  }\n\n  const afterAction = () => {\n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  const loadApproveStatus = async () => {\n    if(checkApprove && wallet && wallet.detail.account){\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\n      setIsApproved(res);\n    }\n  }\n  const approve = async () => {\n    beforeAction();\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\n    if(res.success){\n      setIsApproved(true);\n    } else {\n      setIsApproved(false)\n      alert(lang['approve-failed'])\n    }\n    afterAction();\n  }\n\n  const action = () => {\n    if(isApproved){\n      onClick();\n    } else {\n      approve();\n    }\n  }\n\n  useEffect(() => {\n    loadApproveStatus();\n    return () => {};\n  }, [wallet,spec,checkApprove]);\n\n  useEffect(() => {\n    if(btnText){\n      setbuttonText(btnText)\n    }\n    return () => {\n    }\n  }, [btnText])\n\n  return(\n    <button className={className} onClick={action} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\n        </button>\n  )\n}","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import {useState,useEffect} from 'react';\nimport {\n  DeriEnv,\n  getContractAddressConfig,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getLpContractAddressConfig,\n  getLpPoolInfoApy,\n  getPreminingContractConfig\n} from '../lib/web3js/indexV2'\nimport config from '../config.json'\nimport { formatAddress, isLP,isSushiLP,isCakeLP, eqInNumber } from '../utils/utils';\nimport Intl from '../model/Intl';\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nexport default function useMiningPool(isNew){\n  const [loaded,setLoaded] = useState(false)\n  const [pools, setPools] = useState([])\n  const [v1Pools, setV1Pools] = useState([])    \n  const [v2Pools, setV2Pools] = useState([])\n  const [legacyPools, setLegacyPools] = useState([])\n  const [preminingPools, setPreminingPools] = useState([])\n  const [openPools, setOpenPools] = useState([])\n\n\n  useEffect(() => {\n    const mapConfig = async (config) => {\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n      const pool = config.pool || ''\n      return Object.assign(config,{ \n        network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n        liquidity : liqPool.liquidity,\n        apy :  ((+apyPool.apy) * 100).toFixed(2),\n        formatAdd : formatAddress(pool),\n        address : pool,\n        type : 'perpetual',\n        buttonText : 'STAKING',\n        multiplier : apyPool.multiplier \n      })\n    }\n    const groupByNetwork = pools => {\n      const all = []\n      pools.reduce((total,pool) => {\n        const find = total.find(item => eqInNumber(item['pool']['address'],pool['address']))\n        if(find && find.list.length < 5){\n          find['list'].push(pool)\n        } else {\n          const poolInfo = {\n            pool : {\n              network : pool.network,\n              symbol : pool.symbol,\n              address : pool.address,\n              formatAdd : pool.formatAdd,\n              version : pool.version,\n              // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n              chainId : pool.chainId,\n              airdrop : pool.airdrop,\n              type : pool.type,\n              bTokenSymbol : pool.bTokenSymbol,\n              bTokenId : pool.bTokenId,\n              symbolId : pool.symbolId\n            },\n            list : [pool]\n          }\n          total.push(poolInfo)\n        }\n        return total;\n      },all)\n      return all;\n    }\n    let v2Configs = getContractAddressConfig(env,'v2')\n    let v1Configs = getContractAddressConfig(env,'v1')\n    const liteConfigs = getContractAddressConfig(env,'v2_lite')\n    const preminingPools = getPreminingContractConfig(env);\n    const openPools = getContractAddressConfig(env,'v2_lite_open')\n    const all = []\n    let configs = v2Configs.concat(v1Configs).concat(preminingPools).concat(liteConfigs).concat(openPools).reduce((total,config) => {\n      const pos = total.findIndex(item => item.chainId === config.chainId && item.bTokenSymbol === config.bTokenSymbol && config.version === item.version)\n      if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'v2_lite_open')  && pos > -1 && total[pos].symbol.indexOf(config.symbol) === -1) {\n        total[pos].symbol += `,${config.symbol}` \n      } else {\n        total.push(config)\n      }\n      return total;\n    },all);\n    \n    configs = configs.map(mapConfig)\n    const slpConfig = getLpContractAddressConfig(env).map(async config => {\n      const liqInfo = await getPoolLiquidity(config.chainId,config.pool) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool) || {} \n      const pool = config.pool || ''      \n      let lpApy;\n      let label;\n      if(isLP(config.pool)){\n        let lapy = await getLpPoolInfoApy(config.chainId,config.pool);\n        lpApy = lapy && ((+lapy.apy2) * 100).toFixed(2);           \n      }\n      if(isSushiLP(config.pool)){\n        label = 'SUSHI-APY'\n      }\n      if(isCakeLP(config.pool)){\n        label = 'CAKE-APY'\n      }\n      return Object.assign(config,{\n        network : chainInfo[config.chainId].name,\n        liquidity : liqInfo.liquidity,\n        apy : ((+apyPool.apy) * 100).toFixed(2),\n        formatAdd : formatAddress(pool),\n        lpApy : lpApy,\n        address : pool,\n        type : 'lp',\n        label:label,\n        buttonText : 'STAKING'\n      })    \n    })\n    const allConfigs = configs.concat(slpConfig)\n    Promise.all(allConfigs).then(pools => {\n      const airDrop = {\n        network : 'BSC',\n        bTokenSymbol : 'GIVEAWAY',\n        liquidity : '2600',\n        symbol : '--',\n        airdrop : true,\n        chainId : 56,\n        buttonText : 'CLAIM'\n      }\n      // pools.push(airDrop)\n      let v1Pools = pools.filter(p => (p.version === 'v1' || !p.version) && !p.retired)\n      let v2Pools = pools.filter(p => (p.version === 'v2' || p.version === 'v2_lite'  )&& !p.retired)\n      const legacy = pools.filter(p => p.retired && !p.premining)\n      const preminings = pools.filter(p =>  p.retired && p.premining) \n      let openPools = pools.filter(p => p.isOpen)\n      //新版本按照网络来分组\n      if(isNew){\n        v1Pools = groupByNetwork(v1Pools);\n        v2Pools = groupByNetwork(v2Pools);\n        openPools = groupByNetwork(openPools)\n      }\n      setV2Pools(v2Pools);\n      setV1Pools(v1Pools);\n      setPools(pools);\n      setLegacyPools(legacy);\n      setPreminingPools(preminings)\n      setOpenPools(openPools)\n      setLoaded(true)\n    })\n    return () => pools.length = 0\n  },[])\n  return [loaded,pools,v1Pools,v2Pools,legacyPools,preminingPools,openPools];\n}","import React, { useState, useEffect } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport config from  '../../config.json'\nimport { DeriEnv, getUserInfoAllForAirDrop, connectWallet, mintAirdrop, isUnlocked, unlock } from '../../lib/web3js/indexV2';\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\nimport { inject, observer } from 'mobx-react';\nimport Button from '../Button/Button.js';\nimport { eqInNumber, addParam } from '../../utils/utils.js';\nimport classNames from 'classnames';\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\n\nfunction PoolBox({wallet,group = {},lang}){\n  const {pool,list} = group\n\n  \n\n  const poolClass = classNames('pool',{\n    'only-one' : list.length === 1 ,\n    'full' : list.length === 5\n  })\n\n  return(\n    <div className={poolClass} >\n      <div className='pool-header' >\n        <div className='left'>\n          <div className=\"network\">\n            {pool.network && pool.network.toUpperCase()}\n          </div>\n          <div className='pool-desc'>\n            <span className='symbol'>\n                <span className='symbol-label'>{lang['symbol']}:</span>\n                <span className='symbol-value'>{pool.symbol}</span>  \n            </span>\n            <span className='address'>\n              <span className='address-label'>{lang['address']}:</span>\n                {!pool.airdrop ? <a target='_blank' rel='noreferrer' href={`${chainConfig[pool.chainId] && chainConfig[pool.chainId]['viewUrl']}/address/${pool.address}`}> \n                  {pool.formatAdd}\n                </a> : '--'}\n            </span>\n          </div>\n        </div>\n        <div className='version'>{lang[pool.version]}</div>\n      </div>\n      <div className=\"pool-info\">\n        {list.map((card,index) => <Card card={card} key={index} index={index} pool={pool} list={list} wallet={wallet} lang={lang}/>)}\n      </div>\n    </div>\n  )\n}\n\nfunction Card({wallet,pool,card,index,list,lang}) {\n  const [buttonElement, setButtonElement] = useState('');\n  const [connected, setConnected] = useState(false)\n  const history = useHistory();\n  const gotoMining = url => {\n    history.push(url)\n  }\n  const connectWallet = () => {\n    wallet.connect().then(() => {\n      setConnected(true)\n    })\n  }\n  const claimAirdrop = async () =>{\n    let info =  await getUserInfoAllForAirDrop(wallet.detail.account)\n    if(!info.valid){\n      alert(lang['no-deri-to-claim']);\n      return;\n    }\n    if(!eqInNumber(wallet.detail.chainId,info.chainId)){\n      alert(lang['please-switch-to-BSC-to-claim-deri'])\n      return;\n    }\n    let res = await mintAirdrop(info.chainId,wallet.detail.account)\n    if(!res.success){\n      alert(lang['claim-failed'])\n    }\n  }\n\n  useEffect(() => {\n    if(pool && pool.airdrop){\n      if(!wallet.isConnected()) {\n        setButtonElement(<Button btnText={lang['connect-wallet']} click={connectWallet} lang={lang}></Button>)\n      } else {\n        setButtonElement(<Button btnText={lang['claim']} click={claimAirdrop} lang={lang}></Button>)\n      }\n    } else {\n      let url = `/mining/${pool.version || 'v1'}/${pool.chainId}/${card.type}/${card.symbol}/${card.bTokenSymbol}/${pool.address}`\n      if(card.bTokenId){\n        url = `${url}?baseTokenId=${card.bTokenId}`\n      }\n      if(card.symbolId){\n        if(url.indexOf('?') > 0){\n          url = `${url}&symbolId=${card.symbolId}`\n        } else {\n          url = `${url}?symbolId=${card.symbolId}`\n        }\n      }\n      setButtonElement(        \n          <button onClick={() => gotoMining(url)}>\n            {lang['staking']}\n          </button>\n        )\n    }    \n    return () => {};\n  }, [wallet.detail.account,connected]);\n  return (\n    <>\n      <div className=\"info\">\n        <div className=\"top-info\">\n          <div className='pool-top'>\n            <span className={`logo ${card.bTokenSymbol}`} ></span>\n            <span className=\"base-token\">{card.bTokenSymbol}</span>\n          </div>\n          <div className=\"pool-detail\">\n            <div>\n              <span className='title'>{card.airdrop ? lang['total'] : lang['pool-liq']}</span>\n              <DeriNumberFormat value={card.liquidity} displayType='text' thousandSeparator={true} decimalScale={card.lpApy ? 7 : 0}/>\n            </div>\n            <div className='multiplier'>\n            {card.multiplier && <>\n              <span>{lang['multiplier']}</span>\n              <span className='multiplier-value' title={lang['multiplier-tip']}>{card.multiplier}x</span>\n              </>}\n            </div>\n            <div className=\"apy\">\n              {!card.isOpen &&<>\n              <span>{lang['apy']}</span>\n              <span>\n                <span className={card.lpApy ? 'sushi-apy-underline' : ''} title={ card.lpApy && lang['deri-apy']}>\n                  {card.apy ? <DeriNumberFormat value={card.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2}/> : '--'}                 \n                </span>\n                {card.lpApy && card.lpApy > 0 &&<>\n                <span> + </span>\n                <span className={card.lpApy ? 'sushi-apy-underline' : '' } title={ card.lpApy && card.label}> <DeriNumberFormat value={card.lpApy} displayType='text' suffix='%' decimalScale={2}/></span>\n                </>}\n              </span>\n              </>}\n            </div>\n          </div>\n      </div>\n      <div className=\"bottom-btn\">\n        {buttonElement}\n      </div>\n    </div>\n    {index !== list.length-1 && <div className='top-line'></div>}\n  </>)\n}\nexport default  inject('wallet','version')(observer(PoolBox))","import './poolPlacehold.less'\n\nexport default function PoolPlacehold({lang}){\n  return(\n    <div className='pool-placehold'>\n      <div className='header'>\n        <div className='title'>{lang['add-pool']}</div>\n      </div>\n      <div className='pool-body'>\n        <div className='info'>\n          {/* <div className='coming-soon'>{lang['coming-soon']}</div> */}\n          <div>{lang['add-pool-text']}</div>\n        </div>\n        <div className='btn-c'>\n          <button onClick={() => alert(lang['coming-soon'])}>{lang['add']}</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useEffect ,useState} from 'react'\nimport PoolBox from '../../../components/Pool/PoolBox';\nimport useMiningPool from '../../../hooks/useMiningPool';\nimport './pool.less'\nimport './zh-pool.less'\nimport { inject, observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport PoolPlacehold from '../../../components/Mining/Pool/PoolPlacehold';\n\n\nfunction Pool({lang,loading}){\n  const [loaded,pools,v1Pools,v2Pools,legacyPools,preminingPools,openPools] = useMiningPool(true);\n  const [curTab, setCurTab] = useState('official')\n  const tabCLassName = classNames('filter-area',{'official' : curTab ==='official','open' : curTab === 'open'})\n  const siwtchTab = (tab) => {\n    setCurTab(tab);\n  }\n  useEffect(() => {\n    loaded ? loading.loaded() : loading.loading()\n    return () => {}\n  }, [loaded])\n  return (\n    <div className=\"mining-info\">\n      <div className={tabCLassName}>\n        <span className='official-zone' onClick={() => siwtchTab('official')}>{lang['official-zone']}</span>\n        <span className='separator-line'></span>\n        <span className='open-zone' onClick={() => siwtchTab('open')}>{lang['open-zone']}</span>\n      </div>\n      {curTab === 'official' && <div className='official-pool'>\n        <div className=\"pools\">\n          {v2Pools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\n        </div>\n        <div className='pools'>\n          {v1Pools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\n        </div>\n      </div>}\n      {curTab === 'open' && <div className='pools open-pool'>\n        {openPools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\n        <PoolPlacehold lang={lang}></PoolPlacehold>\n      </div>}\n    </div>\n  )\n}\nexport default inject('version','loading')(observer(Pool))"],"sourceRoot":""}