{"version":3,"sources":["utils/DeriNumberFormat.js","components/Token/img/pancake.svg","components/Token/img/sushi.svg","components/Token/Token.js","mobile/pages/Token/Token.js"],"names":["DeriNumberFormat","props","useState","renderablity","setRenderablity","useEffect","allowZero","others","undefined","value","isNaN","Math","abs","displayType","inject","observer","wallet","lang","loading","deriTokenAddress","setDeriTokenAddress","deriInfo","setDeriInfo","config","useConfig","addToken","a","window","ethereum","request","method","params","type","options","address","symbol","decimals","console","log","getDeriInfo","fetch","resp","json","res","obj","price","current_price","market_cap","circulating_supply","parseInt","total_supply","hasConnectWallet","detail","account","sushiBuy","switchNetwork","open","pancakeBuy","loaded","chainId","interval","setInterval","clearInterval","className","onClick","target","src","pancake","sushi","thousandSeparator","decimalScale","Token"],"mappings":"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","file":"static/js/27.20d9afc0.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nexport default function DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState('--');\r\n\r\n  useEffect(() => {\r\n    const {allowZero,...others} = props \r\n    if(((props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\r\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\r\n    } \r\n    return () => {};\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}","export default __webpack_public_path__ + \"static/media/pancake.ca855998.svg\";","export default __webpack_public_path__ + \"static/media/sushi.69219f52.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport useConfig from '../../hooks/useConfig';\r\nimport pancake from './img/pancake.svg'\r\nimport sushi from './img/sushi.svg'\r\nfunction Token({ wallet = {}, lang,loading }) {\r\n    const [deriTokenAddress, setDeriTokenAddress] = useState()\r\n    const [deriInfo, setDeriInfo] = useState()\r\n    const config = useConfig();\r\n    const addToken = async () => {\r\n        if (deriTokenAddress) {\r\n            const tokenSymbol = 'DERI';\r\n            const tokenDecimals = 18;\r\n            try {\r\n                const wasAdded = await window.ethereum.request({\r\n                    method: 'wallet_watchAsset',\r\n                    params: {\r\n                        type: 'ERC20', // Initially only supports ERC20, but eventually more!\r\n                        options: {\r\n                            address: deriTokenAddress, // The address that the token is at.\r\n                            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\r\n                            decimals: tokenDecimals, // The number of decimals in the token\r\n                        },\r\n                    },\r\n                });\r\n\r\n                if (wasAdded) {\r\n                    console.log('Thanks for your interest!');\r\n                } else {\r\n                    console.log('Your loss!');\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n    const getDeriInfo = async () => {\r\n        let path = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=deri-protocol&order=market_cap_desc&per_page=100&page=1&sparkline=false'\r\n        let resp = await fetch(path);\r\n        let res = await resp.json();\r\n        if (res) {\r\n            let obj = {}\r\n            obj.price = res[0].current_price\r\n            obj.market_cap = res[0].market_cap\r\n            obj.circulating_supply = parseInt(res[0].circulating_supply)\r\n            obj.total_supply = parseInt(res[0].total_supply)\r\n            setDeriInfo(obj)\r\n        }\r\n\r\n    }\r\n    const hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\r\n    \r\n    const sushiBuy = async ()=> {\r\n        if(hasConnectWallet()){\r\n            await wallet.switchNetwork(config[1])\r\n            window.open(\"https://app.sushi.com/swap?inputCurrency=&outputCurrency=0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9\")\r\n        }else{\r\n            window.open(\"https://app.sushi.com/swap?inputCurrency=&outputCurrency=0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9\")\r\n        }\r\n    }\r\n\r\n    const pancakeBuy = async ()=> {\r\n        if(hasConnectWallet()){\r\n            await wallet.switchNetwork(config[56])\r\n            window.open(\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=0xe60eaf5a997dfae83739e035b005a33afdcc6df5\")\r\n        }else{\r\n            window.open(\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=0xe60eaf5a997dfae83739e035b005a33afdcc6df5\")\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loading.loading()\r\n        if(deriInfo){\r\n            loading.loaded() \r\n        }\r\n    },[deriInfo])\r\n\r\n    useEffect(() => {\r\n        if (hasConnectWallet()) {\r\n            let address;\r\n            if (wallet.detail.chainId == 56) {\r\n                address = '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5'\r\n            } else if (wallet.detail.chainId == 1) {\r\n                address = '0xa487bf43cf3b10dffc97a9a744cbb7036965d3b9'\r\n            } else if (wallet.detail.chainId == 128) {\r\n                address = '0x2bdA3e331Cf735D9420e41567ab843441980C4B8'\r\n            } else if (wallet.detail.chainId == 137) {\r\n                address = '0x3d1d2afd191b165d140e3e8329e634665ffb0e5e'\r\n            }\r\n            setDeriTokenAddress(address)\r\n        }\r\n\r\n    }, [wallet.detail])\r\n    useEffect(() => {\r\n        let interval = null;\r\n        //计数器\r\n        interval = window.setInterval(() => {\r\n            getDeriInfo()\r\n        }, 1000);\r\n        return () => {\r\n            interval && clearInterval(interval);\r\n        };\r\n    }, [])\r\n    return (\r\n        <div className='token-info'>\r\n            <div className='title'>\r\n                {lang['the-deri-token']}\r\n            </div>\r\n            <div className='add-to-matemask'>\r\n                <button onClick={addToken}>\r\n                    {lang['add-deri-to-matemask']}\r\n                </button>\r\n            </div>\r\n            <div className='buy-deri'>\r\n                <a target='_blank' onClick={pancakeBuy}>\r\n                    <div className='pancake-buy'>\r\n                        <div>\r\n                            <img src={pancake} />\r\n                        </div>\r\n                        <span>\r\n                            {lang['buy-deri']}\r\n                        </span>\r\n                    </div>\r\n                </a>\r\n                <a target='_blank' onClick={sushiBuy}>\r\n                    <div className='sushi-buy'>\r\n                        <div>\r\n                            <img src={sushi} />\r\n                        </div>\r\n                        <span>\r\n                            {lang['buy-deri']}\r\n                        </span>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <div className='deri-info'>\r\n                <div className='bottom-square'></div>\r\n                <div className='line-of-box'>\r\n                    <div className='box'>\r\n                        <div className='num'>\r\n                            $ {deriInfo ? <DeriNumberFormat value={deriInfo.price} displayType='text' thousandSeparator={true} decimalScale='4' /> : '--'}\r\n                        </div>\r\n                        <div className='text'>\r\n                            {lang['price']}\r\n                        </div>\r\n                    </div>\r\n                    <div className='box'>\r\n                        <div className='num'>\r\n                            $ {deriInfo ? <DeriNumberFormat value={deriInfo.market_cap} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\r\n                        </div>\r\n                        <div className='text'>\r\n                            {lang['market-cap']}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='line-of-box'>\r\n                    <div className='box'>\r\n                        <div className='num'>\r\n                            {deriInfo ? <DeriNumberFormat value={deriInfo.circulating_supply} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\r\n                        </div>\r\n                        <div className='text'>\r\n                            {lang['circulating-supply']}\r\n                        </div>\r\n                    </div>\r\n                    <div className='box'>\r\n                        <div className='num'>\r\n                            {deriInfo ? <DeriNumberFormat value={deriInfo.total_supply} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\r\n                        </div>\r\n                        <div className='text'>\r\n                            {lang['total-supply']}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default inject('wallet','loading')(observer(Token))","import TokenInfo from '../../../components/Token/Token';\r\nimport './token.less'\r\nexport default function Token({lang}){\r\n    return(\r\n        <div className='token'>\r\n           <TokenInfo lang={lang}></TokenInfo>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}