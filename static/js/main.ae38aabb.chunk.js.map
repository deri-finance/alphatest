{"version":3,"sources":["lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/config/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","model/Intl.js","model/WebSocket.js","components/hoc/withModal.js","model/Type.js","model/Version.js","utils/utils.js","model/Config.js","lib/web3js/shared/utils/convert.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["DeriEnv","_deriEnv","get","set","value","Error","VERSIONS","ALL_EXCEPT_OPEN_VERSIONS","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","PRESERVED_SYMBOLS","MAX_UINT256","MAX_INT256","getJsonConfig","version","env","configs","jsonConfig","JSON","parse","includes","normalizeChainId","chainId","chainIds","res","toString","normalizeAddress","address","startsWith","length","Web3","utils","toChecksumAddress","validateArgs","args","every","i","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","keys","Object","forEach","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","retired","getLpConfigList","type","isLp","getPreminingConfigList","staking","url","isInTvlRace","premining","getLpConfig","poolAddress","filter","c","p","bTokenAddress","lTokenAddress","console","log","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","key","deepClone","obj","clone","assign","from","shuffleArray","urls","newUrls","index","Math","floor","random","splice","getBlockNumber","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","slice","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","getChainProviderUrl","async","provider_urls","getChainProviderUrls","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","delay","ms","resolve","setTimeout","web3Factory","web3InstanceMap","pending","window","ethereum","request","method","walletChainId","isBrowser","isJsDom","retry","providerUrl","getLastUpdatedBlockNumber","contractAddress","position","getStorageAt","hexToNumber","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","amount","events","es","toBlock","e","getHttpBase","getRestServerConfig","fetchJson","fetch","resp","json","fetchRestApi","path","opts","catchApiError","func","methodName","defaultValue","catchTxApiError","result","success","transaction","error","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","normalizeOptionSymbol","optionSymbol","split","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","map","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","indexOf","mapToBTokenInternal","normalizeSymbolUnit","re","RegExp","join","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","symbolId","v2_lite_open","config","option","poolValidator","getOracleConfigList","oracle","getOracleConfig","oracles","filteredByChainId","MAX_GAS_AMOUNT","ContractBase","contractAbi","this","Contract","_init","methods","call","accountAddress","gas","estimateGas","tx","self","_transactionReceipt","reject","getTransactionReceipt","receipt","status","errorMessage","_estimatedGas","txRaw","numberToHex","data","encodeABI","params","_getTransactionReceipt","CONTRACT_ABI","DatabaseContract","keyArray","_call","DatabaseWormholeContract","DatabaseAirdropContract","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","WrappedOracle","constructor","decimal","super","deriToNatural","getPriceInfoForV1","baseUrl","addSymbolParam","mode","cache","ok","priceInfo","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","price","volatility","getOraclePriceFromCache","timestamp","getOraclePrice","getPriceInfos","symbolList","headers","body","oracleFactory","getPrice","getOraclePricesForOption","oracleSymbols","acc","oracleSymbolPrices","toWei","getOracleVolatilityForOption","volSymbols","volatilities","getOracleVolatilitiesForOption","oracleSymbolVolatilities","instanceMap","RestOracle","wrappedOracleFactory","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddress","database","databaseWormholeFactory","getDBWormholeAddress","databaseAirdropFactory","getDBAirdropAddress","bTokenFactory","decimals","_balanceOf","bg","allowance","gt","_transact","deriFactory","wormholeFactory","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","v","r","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","brokerAddress","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","balance","getBalance","fromWei","getUserInfo","db","userAddress","getValues","catch","err","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","pools","getMiningVaultConfig","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","filteredConfig","MiningVaultRouter","getMiningVaultRouterConfig","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","PerpetualPool","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenId","swapperAddress","oracleAddress","discount","pnl","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","volume","abs","times","PerpetualPoolRouter","isMaximum","priceInfos","processAsset","lastCumulativePnl","LToken","processPosition","cost","lastCumulativeFundingRate","PToken","perpetualPoolFactory","perpetualPoolRouterFactory","lTokenFactory","pTokenFactory","setBroker","getBrokerConfig","brokerManagerAddress","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","unlockSlp","addClp2Liquidity","removeClp2Liquidity","unlockClp2","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","message","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","getStateValues","stateValues","parameters","args1","fundingRatePerBlock","liquidityUsed","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","addClpLiquidity","removeClpLiquidity","unlockClp","getLpLiquidityInfo","bTokenBalance","shares","getLiquidity","poolLiquidity","getSlpLiquidityInfo","totalSupply","maxRemovableShares","getClpLiquidityInfo","getClp2LiquidityInfo","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","openPoolChainIds","prod","dev","getPoolV2LiteManagerConfig","find","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","owner","operator","PerpetualPoolLite","updateAddresses","getActiveSymbolIds","symbolIds","getSymbol","block_number","getBTokenSymbol","getSymbols","getPoolExtraInfo","extraInfo","PerpetualPoolLiteManager","poolId","pairedTokenAddress","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","perpetualPoolLiteViewerFactory","perpetualPoolLiteManagerFactory","getPoolOpenConfigList","poolManagerAddress","poolManager","getNumPools","poolNums","numsArray","id","addresses","getConfig","getPoolOpenOracleList","o","isPoolController","controller","perpetualPoolLite","poolController","getPoolAllSymbolNames","viewerAddress","getPoolViewerConfig","poolViewer","getOffChainOracleSymbols","openConfigListCache","update","oldData","updatedAt","expandPoolConfigV2","bTokens","router","isOption","flat","expandPoolConfigV2Lite","offchainSymbolIds","offchainSymbols","expandPoolConfigOption","pricer","volatilitySymbols","expandPoolConfigV2LiteOpen","isOpen","getPoolConfigList","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","_getPoolConfig","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","viewers","getBrokerConfigList","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","setInterval","_update","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","info","txHash","tradeVolume","timeStamp","_getTimeStamp","direction","time","transactionFee","_calculateFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","trim","tradeHistoryOnline","liquidateHistoryOnline","getSpecification","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","perpetualPoolRouter","validation","_prices","symbolInfo","bTokenDiscounts","bTokenMultiplier","indexConstituents","symbolConfigList","getPosition","getMargins","getPositions","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnlList","fundingFee","_getFundingRate","promiseList","bTokenInfoList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","getTradeHistory","lTokenLiteAbi","viewer","activeSymbolIds","isEqualSet","Set","activeSymbols","prices","_updateOffchainSymbols","_getSymbolPrices","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","getLastUpdateBlock","getMargin","priceIndex","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","newIntrinsicValue","strikePrice","premiumFundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","deleteIndexedKey","PTokenOption","lastCumulativePremiumFundingRate","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","volatilitiesCache","EverlastingOption","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","optionPricerAbi","OptionPricer","everlastingOptionFactory","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","symbolIndex","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","symbolStr","volPrice","getTraderStates","timePrice","markPrice","dpmmPrice","oS","premiumFundingAccrued","fundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","getEstimatedTimePrice","toNumber","tradeCost","indexPrice","getEverlastingTimeValueAndDelta","contractValue","pricerAddress","tr","createPool","newParameters","addSymbol","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosPosition","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","process","require","lang","page","toLowerCase","test","pageName","Intl","locale","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","WebSocket","socket","io","transports","withCredentials","event","emit","onMessage","listener","time_type","equalIgnoreCase","findEvent","pos","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","current","makeAutoObservable","setCurrent","isFuture","Version","isV1","isV2","isV2Lite","chainInfo","base","BigNumber","repeat","formatAddress","formatBalance","toFixed","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","hasParam","param","urlString","href","URL","searchParams","has","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","groupByNetwork","list","network","formatAdd","airdrop","combineSymbolfromPoolConfig","mapPoolInfo","wallet","liqPool","apyPool","name","buttonText","isConnected","detail","claimInfo","Config","setAll","isOptions","sortOptionSymbols","cur","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","value1","value2","hexToString","hexToUtf8","hexToNumberString","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","newObj","k","symbolArr","unique","to2","index1","index2","index3","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","data-title","DesktopApp","MobileApp","Mask","setIsOpen","useState","useEffect","isShowMask","LoadingMask","MaskWrapper","isOptionsLite","useRouteMatch","isOptionsPro","categry","isMobile","Wallet","supportWeb3","approve","approved","connect","loadWalletBalance","switchNetwork","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","isSupportChain","balanceContract","started","runInAction","loadAll","startedAll","load","timer","clean","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","Trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","Type","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","startAll","fromStore","getFromStore","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","initVolume","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ae38aabb.chunk.js","sourcesContent":["// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","// versions\nexport const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open', 'option']\nexport const ALL_EXCEPT_OPEN_VERSIONS = ['v2', 'v2_lite', 'option']\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open']\nexport const LITE_AND_OPTION_VERSIONS = ['v2_lite', 'v2_lite_open', 'option']\n\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://polygon-rpc.com',\n        //'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        //'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { VERSIONS } from './version';\n\nexport const getJsonConfig = (version, env) => {\n  env = env || DeriEnv.get();\n  // for browser and nodejs\n  let configs =\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && VERSIONS.includes(version)) {\n    configs = configs[version];\n    if (['prod', 'dev'].includes(env)) {\n      if (configs && configs[env]) {\n        return configs[env];\n      }\n    }\n  } else {\n    throw new Error(\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n    );\n  }\n};\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n        isLp: true,\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n        isLp: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n        isLp: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  // pick 2 random urls\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  let pending = {}\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      // for mining page should not depends wallet network\n      let walletChainId\n      if (typeof window === 'object' && window.ethereum) {\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\n      } else {\n        // MetaMask plugin is not installed in the browser\n        console.log('Please install MetaMask first');\n      }\n      // using metaMask ethereum object\n      if (\n        isBrowser() &&\n        !isJsDom() &&\n        typeof window.ethereum === 'object' &&\n        walletChainId &&\n        chainId === walletChainId.toString()\n      ) {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else {\n        if (pending[chainId]) {\n          let retry = 10\n          while (retry > 0) {\n            await delay(300)\n            if (pending[chainId]) {\n              retry -= 1\n            } else {\n              if (web3InstanceMap[chainId]) {\n                return web3InstanceMap[chainId];\n              } else {\n                const providerUrl = await getChainProviderUrl(chainId);\n                web3InstanceMap[chainId] = new Web3(\n                  new Web3.providers.HttpProvider(providerUrl)\n                );\n                return web3InstanceMap[chainId];\n              }\n            }\n          }\n          const providerUrl = await getChainProviderUrl(chainId);\n          web3InstanceMap[chainId] = new Web3(\n            new Web3.providers.HttpProvider(providerUrl)\n          );\n          return web3InstanceMap[chainId];\n        } else {\n          pending[chainId] = true\n          try {\n            const providerUrl = await getChainProviderUrl(chainId);\n            web3InstanceMap[chainId] = new Web3(\n              new Web3.providers.HttpProvider(providerUrl)\n            );\n            delete pending[chainId]\n          } catch(err) {\n            console.log(err.toString())\n            delete pending[chainId]\n          }\n          return web3InstanceMap[chainId];\n        }\n      }\n    },\n  };\n})();","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","import {\n  getRestServerConfig,\n  DeriEnv,\n} from '../config'\n\n// get REST HTTP Base url\nexport const getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}: `, err)\n  }\n  return defaultValue\n}\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n","const bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n  AGLDUSDT: 'AGLDUSDT',\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index > -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n  console.log(`symbol(${symbol}) is not a string type`);\n  return symbol;\n};\n\nexport const getIndexInfo = (symbol) => {\n  const internalSymbol = mapToSymbolInternal(symbol);\n  const customIndexs = {\n    IGAME: {\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\n      url: 'https://docs.deri.finance/products/index/game-index',\n    },\n    IBSCDEFI: {\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\n    },\n    IMEME: {\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\n      url: 'https://docs.deri.finance/products/index/meme-index',\n    },\n  };\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\n    return customIndexs[internalSymbol];\n  } else {\n    return { tokens: [], url: '' };\n  }\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\nimport {\n  isUsedRestOracle,\n  mapToBToken,\n  mapToSymbol,\n  getVolatilitySymbols,\n} from './token';\n\nconst validatePoolV2 = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['bTokens'], 'bTokens');\n  pool['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processPoolV2 = (pool) => {\n  // process pool \n  pool['bTokenCount'] = pool['bTokens'].length;\n  pool['symbolCount'] = pool['symbols'].length;\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validatePoolV2Lite = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n};\n\nconst processPoolV2Lite = (pool) => {\n  // process pool\n  if (!pool['symbolCount']) {\n    pool['symbolCount'] = pool['symbols'].length;\n  }\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validateConfigV2LiteOpen = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2LiteOpen = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validatePoolOption = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'pricer',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      // 'offchainSymbolIds',\n      // 'offchainSymbols',\n      'symbolCount',\n      'volatilitySymbols',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\n};\n\nconst processPoolOption = (pool) => {\n  // process pool \n  pool['symbolCount'] = pool['symbols'].length;\n  if (!pool['volatilitySymbols']) {\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['volatilitySymbols'] = getVolatilitySymbols(\n      pool['symbols'].map((s) => s.symbol)\n    ); \n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nexport const poolProcessor = {\n  v2: processPoolV2,\n  v2_lite: processPoolV2Lite,\n  v2_lite_open: processConfigV2LiteOpen,\n  option: processPoolOption,\n};\n\nexport const poolValidator = {\n  v2: validatePoolV2,\n  v2_lite: validatePoolV2Lite,\n  v2_lite_open: validateConfigV2LiteOpen,\n  option: validatePoolOption,\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { mapToSymbolInternal } from './token';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getJsonConfig(version, env || DeriEnv.get())\n  return config.oracle\n};\n\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version)\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        console.log(`-- estimatedGas: ${error}`)\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","import { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray]);\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { getOracleConfig } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory } from '../factory/oracle';\nimport { deriToNatural, toWei } from './convert';\nimport {\n  getVolatilitySymbols,\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', version = 'v2') {\n      const key = `${chainId}_${symbol}_${version}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice(chainId, symbol, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(version, chainId, symbol);\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\nexport const getOraclePriceForOption = async (chainId, symbol) => {\n  return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n};\n\n// for viewer use\nexport const getOraclePricesForOption = async (chainId, symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolPrices = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n  });\n};\n\n// for tx use\nexport const getOracleVolatilityForOption = async (symbols) => {\n  const volSymbols = getVolatilitySymbols(symbols)\n  //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n  const volatilities = await Promise.all(\n    volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n  );\n  //return volatilities;\n  return symbols.map((s) => {\n    return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n  });\n};\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolVolatilities = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getPriceInfo(`VOL-${i}`, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return oracleSymbolVolatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))].volatility;\n  });\n};","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\n\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\n    getUserInfo(userAddress),\n    getUserInfoHarvest(userAddress),\n    getUserInfoTotal(userAddress),\n  ]);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import { DeriEnv } from \"../shared/config/env\";\nimport { normalizeChainId } from \"../shared/utils/validate\";\n\nexport const openPoolChainIds = () => {\n  const configs = {\n    prod: ['56'],\n    dev: ['97'],\n  }\n  const env = DeriEnv.get()\n  if (Array.isArray(configs[env])) {\n    return configs[env]\n  } else {\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\n  }\n};\n\nexport const getPoolV2LiteManagerConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\n        initialBlock: \"10133599\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\n\nexport const expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import {\n  bTokenFactory,\n  deriToNatural,\n  fetchJson,\n  getHttpBase,\n} from '../../shared';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { normalizeSymbolUnit } from '../../shared/config/token';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { PTokenLite } from './p_token';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async updateAddresses() {\n    if (!this.bTokenAddress) {\n     const res = await this._call('getAddresses');\n    // update this state\n     this.bTokenAddress = res.bTokenAddress;\n     this.lTokenAddress= res.lTokenAddress;\n     this.pTokenAddress= res.pTokenAddress;\n    }\n  }\n  async controller() {\n    const res = await this._call('controller');\n    return res\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbol: res.symbol,\n      oracleAddress: res.oracleAddress,\n      multiplier: deriToNatural(res.multiplier),\n      feeRatio: deriToNatural(res.feeRatio),\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n      price: deriToNatural(res.price),\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\n      tradersNetCost: deriToNatural(res.tradersNetCost),\n    };\n  }\n  async getSymbols() {\n    await this.updateAddresses()\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    // update this state\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\n    this.symbols = await Promise.all(\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n    );\n    return this.symbols\n  }\n  async getBTokenSymbol() {\n    await this.updateAddresses()\n    if (!this.bToken) {\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\n    }\n    // update this state\n    this.bTokenSymbol = await this.bToken.symbol()\n    return this.bTokenSymbol\n  }\n  async getPoolExtraInfo() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\n    const res = await fetchJson(url)\n    //console.log(res)\n    if (res.success) {\n      return res.data\n    } else {\n\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\n      return  {\n        block_number: '1000000000',\n        version: '',\n      }\n    }\n  }\n  async getConfig() {\n    const [bToken, symbols, extraInfo] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      this.getPoolExtraInfo(),\n    ])\n    return {\n      pool: this.contractAddress,\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock:extraInfo.block_number,\n      version:extraInfo.version,\n      chainId: this.chainId,\n    }\n  }\n\n  // tx\n  async addSymbol(accountAddress, parameters) {\n    return await this._transact('addSymbol', parameters, accountAddress)\n  }\n\n  async removeSymbol(accountAddress, symbolId) {\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\n\nexport class PerpetualPoolLiteManager extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\n  }\n\n  // query\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return res\n  }\n  async poolTemplate() {\n    const res = await this._call('poolTemplate', [])\n    return res\n  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return res\n  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return res\n  }\n  async protocolFeeCutRatio() {\n    const res = await this._call('protocolFeeCutRatio', [])\n    return res\n  }\n\n  // tx\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { factory } from '../shared/utils/factory'\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\n","import { catchApiError } from \"../../shared/utils/api\"\nimport { DeriEnv } from \"../../shared/config/env\"\nimport { getOracleConfigList } from \"../../shared/config/oracle\"\nimport { getJsonConfig } from \"../../shared/config/config\"\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\nimport { getPoolViewerConfig } from \"../../shared\"\nimport { expandPoolConfigV2LiteOpen, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\n\nexport const getPoolOpenConfigList = async (...args) => {\n  return catchApiError(\n    async () => {\n      let configs = [];\n      const chainIds = openPoolChainIds()\n      configs = chainIds.reduce(async (acc, chainId) => {\n        //console.log('chainId', chainId)\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\n          chainId\n        );\n        const poolManager = perpetualPoolLiteManagerFactory(\n          chainId,\n          poolManagerAddress\n        );\n        // get pool numbers\n        const poolNums = parseInt(await poolManager.getNumPools());\n        const numsArray = [...Array(poolNums).keys()];\n        // get pool addresses\n        const addresses = await Promise.all(\n          numsArray.reduce(\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\n            []\n          )\n        );\n        // get pools config\n        const res = await Promise.all(\n          addresses.reduce(\n            (acc, address) =>\n              acc.concat([\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\n              ]),\n            []\n          )\n        );\n        return acc.concat(res);\n      }, []);\n      return configs;\n    },\n    args,\n    'getPoolOpenConfigList',\n    []\n  );\n};\n\nexport const getPoolOpenOracleList = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  return catchApiError(\n    async () => {\n      return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\n    },\n    [],\n    'getPoolOpenOracleInfos',\n    []\n  );\n};\n\nexport const getPoolController = async(chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPoolLite.controller();\n    },\n    [chainId, poolAddress],\n    'getPoolController',\n    ''\n  );\n}\nexport const isPoolController = async (chainId, poolAddress, controller) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress, controller) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      const poolController = await perpetualPoolLite.controller();\n      return (\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\n      );\n    },\n    [chainId, poolAddress, controller],\n    'isPoolController',\n    false\n  );\n};\n\nexport const getExpandedPoolOpenConfigList = async () => {\n  const env = DeriEnv.get()\n  const version = 'v2_lite_open'\n  let config = getJsonConfig(version, env);\n\n  config.pools =  await getPoolOpenConfigList()\n  const pools = config.pools\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  return expandPoolConfigV2LiteOpen(config);\n}\n\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\n  return catchApiError(\n    async () => {\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\n    },\n    [chainId.toString(), poolAddress],\n    'getPoolAllSymbolNames ',\n    []\n  );\n};\n\n\n// v2lite open config list cache\nexport const openConfigListCache = (() => {\n  let cache = {\n    data: [],\n    timestamp: 0,\n  };\n  return {\n    async update() {\n      let res\n      const oldData = cache.data\n      try {\n        if (Date.now()/1000 - cache.timestamp >= 10) {\n        //if (Date.now()/1000 - cache.timestamp > 60) {\n          cache.data = await getPoolOpenConfigList()\n          cache.timestamp = Date.now()/1000\n          //res = 'v2 lite open config list is updated'\n        }\n      } catch(err) {\n        console.log(err)\n        cache.data = oldData\n        //res = `v2 lite open config list updating with error: ${err}`\n      }\n      // res && console.log(res)\n      return cache.data\n    },\n    updatedAt() {\n      return cache.timestamp\n    },\n    get() {\n      return cache.data\n    }\n  }\n})()\n\n// // init\n// const initCache = () => {\n//   if (isBrowser()) {\n//     if(window.ethereum) {\n//       window.ethereum.request({ method: 'net_version' }).then((chainId) => {\n//         if (['1', '56', '137', '128'].includes(chainId)) {\n//           DeriEnv.set('prod')\n//           openConfigListCache.update().then((res) => console.log(res))\n//         } else {\n//           openConfigListCache.update().then((res) => console.log(res))\n//         }\n//       })\n//     }\n//   }\n// };\n// initCache()","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\nimport { validateObjectKeyExist } from '../utils';\nimport { poolProcessor, poolValidator } from './config_processor';\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\n\nconst expandPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n            isOption: false,\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite',\n          isOption: false,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigOption = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          pricer: pool.pricer,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          volatilitySymbols: pool.volatilitySymbols,\n          unit: symbol.unit,\n          version: 'option',\n          isOption: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      if (pool.symbols.length > 0) {\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: pool.bToken,\n            bTokenSymbol: pool.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            offchainSymbolIds: pool.offchainSymbolIds,\n            offchainSymbols: pool.offchainSymbols,\n            unit: symbol.unit,\n            version: 'v2_lite_open',\n            isOpen: true,\n          });\n        }\n      } else {\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: '--',\n          symbolId: '',\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: '',\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getConfig = (version='v2', env='dev') => {\n  let config = getJsonConfig(version, env);\n\n  if (version === 'v2_lite_open') {\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\n      //console.log('hit openConfigListCache')\n    config.pools = openConfigListCache.get()\n    //}\n  }\n\n  //console.log('>',config)\n  const pools = config.pools;\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n  return config;\n};\n\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\n  const config = getConfig(version, env)\n  if (version === 'v2') {\n    return expandPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expandPoolConfigV2Lite(config)\n  } else if (version === 'v2_lite_open') {\n    return expandPoolConfigV2LiteOpen(config)\n  } else if (version === 'option') {\n    return expandPoolConfigOption(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  // check the bToken in v2_lite\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\nexport const getFilteredPoolConfig  = getPoolConfig\n\n\nexport const getPoolVersion = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress);\n  const config = getConfig(version, DeriEnv.get());\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool;\n  } else {\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n  }\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const env = DeriEnv.get()\n  const config = getJsonConfig(version, env)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getJsonConfig(version, DeriEnv.get())\n  if (config.brokerManager) {\n    return config.brokerManager\n  } else {\n    // default value\n    return []\n  }\n};\n\nexport const getBrokerConfig = (version='v2', chainId) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n  deriToNatural,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getPoolV1Config } from '../../shared/config';\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './trade_history_api';\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol()\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { getIndexInfo } from '../../shared/config/token';\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol)\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  };\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            symbol: i.symbol,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import {\n  getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteAbi } from './abis';\n//import { MAX_INT256} from '../../shared/config'\nimport { PTokenLite } from './p_token';\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.offchainSymbols = this.config.offchainSymbols;\n    this.bTokenAddress = this.config.bToken\n    this.lTokenAddress = this.config.lToken\n    this.pTokenAddress = this.config.pToken\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'v2_lite')\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses()]);\n  }\n\n  async _updateOffchainSymbols() {\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    if (!this.viewer) {\n      this.viewer = new PerpetualPoolLiteViewer(\n          this.chainId,\n          this.viewerAddress\n      )\n    }\n    //await this.getAddresses()\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\n    if (!this.activeSymbolIds || !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))) {\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(this.contractAddress)\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\n        return activeSymbols[index] == '' ? acc : acc.concat([i]);\n      }, []);\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\n      this.activeSymbolIds = activeSymbolIds;\n    }\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res)\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = []\n    await this._updateOffchainSymbols()\n    if (this.offchainSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import {\n  calculateEntryPrice ,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n  getLastUpdatedBlockNumber,\n} from '../../shared/utils';\nimport { getOraclePriceFromCache } from '../../shared/utils/oracle'\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\nimport { getIndexInfo } from '../../shared/config/token';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [\n      parameterInfo,\n      symbolInfo,\n      liquidity,\n      symbolIds,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      positionInfo,\n      margin,\n      latestPrice,\n    ] = await Promise.all([\n      //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      poolAddress === '0x3422DcB21c32d91aDC8b7E89017e9BFC13ee2d42'\n        ? getLastUpdatedBlockNumber(chainId, poolAddress, 5)\n        : perpetualPool.getLastUpdateBlock(),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\n    ]);\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePriceFromCache.get(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePriceFromCache.get(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      null,\n      'v2_lite'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n        perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'v2_lite'\n      );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            symbol: i.symbol,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n    let u = Math.sqrt(8 / V / V / T + 1)\n    let timeValue, delta\n    if (S > K) {\n        timeValue = K * Math.pow(S/K, (1 - u) / 2) / u\n        delta = (1 - u) * timeValue / S / 2\n    } else if (S === K) {\n        timeValue = K / u\n        delta = 0\n    } else {\n        timeValue = K * Math.pow(S/K, (1 + u) / 2) / u\n        delta = (1 + u) * timeValue / S / 2\n    }\n    return [timeValue, delta]\n}\n\nfunction getDynamicInitialMarginRatio(spot, strike, isCall, initialMarginRatio, minInitialMarginRatio) {\n    if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n        return initialMarginRatio\n    } else {\n        let otmRatio = (isCall ? strike - spot : spot - strike) / strike\n        return Math.max((1 - otmRatio * 3) * initialMarginRatio, minInitialMarginRatio)\n    }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(pool, trader, symbols, positions, newUnderlierPrice) {\n    let newDynamicMargin = trader.dynamicMargin\n    let newInitialMargin = trader.initialMargin\n\n    for (let i = 0; i < symbols.length; i++) {\n        let symbol = symbols[i]\n        let position = positions[i]\n\n        let newIntrinsicValue = symbol.isCall ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n                                              : Math.max(symbol.strikePrice - newUnderlierPrice, 0)\n        let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n            newUnderlierPrice, symbol.strikePrice, symbol.volatility, pool.premiumFundingPeriod\n        )\n        if (newIntrinsicValue > 0) {\n            newDelta += symbol.isCall ? 1 : -1\n        }\n        let newPnl = position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier - position.cost\n        let newDynamicMarginRatio = getDynamicInitialMarginRatio(newUnderlierPrice, symbol.strikePrice, symbol.isCall, pool.initialMarginRatio, 0.01)\n\n        newDynamicMargin = newDynamicMargin - position.pnl + newPnl\n        newInitialMargin = newInitialMargin - Math.abs(position.volume * symbol.spotPrice * symbol.multiplier * symbol.dynamicMarginRatio)\n                                            + Math.abs(position.volume * newUnderlierPrice * symbol.multiplier * newDynamicMarginRatio)\n    }\n\n    let newMaintenanceMargin = newInitialMargin * pool.maintenanceMarginRatio / pool.initialMarginRatio\n\n    return newMaintenanceMargin > newDynamicMargin\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n    if (symbols.length != positions.length) {\n        throw 'canLiquidateWithPrice: symbols and positions length not match'\n    }\n    if (symbols.length === 0) {\n        return {\n            numPositions: positions.length,\n            price1: null,\n            price2: null,\n        }\n    }\n    let head = symbols[0].symbol.slice(0, 6)\n    for (let i = 0; i < symbols.length; i++) {\n        if (!symbols[i].symbol.startsWith(head)) {\n            throw 'canLiquidateWithPrice: symbols not in same underlier'\n        }\n    }\n\n    if (trader.maintenanceMargin > trader.dynamicMargin) {\n        return {\n          numPositions: positions.length,\n          price1: symbols[0].spotPrice,\n          price2: symbols[0].spotPrice\n        }\n    }\n\n    let final1, final2\n    let price1, price2\n    let l1, l2\n\n\n    price1 = symbols[0].spotPrice / 10\n    price2 = symbols[0].spotPrice\n    l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1)\n    l2 = false\n    while (true) {\n        if (l1 && l2) {\n            final1 = (price1 + price2) / 2\n            break\n        }\n        if (!l1 && !l2) {\n            final1 = null\n            break\n        }\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\n            final1 = (price1 + price2) / 2\n            break\n        }\n        let price = (price1 + price2) / 2\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\n        if (l === l1) price1 = price\n        else price2 = price\n    }\n\n    price1 = symbols[0].spotPrice\n    price2 = symbols[0].spotPrice * 10\n    l1 = false\n    l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2)\n    while (true) {\n        if (l1 && l2) {\n            final2 = (price1 + price2) / 2\n            break\n        }\n        if (!l1 && !l2) {\n            final2 = null\n            break\n        }\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\n            final2 = (price1 + price2) / 2\n            break\n        }\n        let price = (price1 + price2) / 2\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\n        if (l === l1) price1 = price\n        else price2 = price\n    }\n\n    return {\n        numPositions: positions.length,\n        price1: final1,\n        price2: final2\n    }\n}\n\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'premiumFundingPeriod',\n      'premiumFundingCoefficient',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        //'cumulativeDeltaFundingRate',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        //'lastCumulativeDeltaFundingRate',\n        'lastCumulativeFundingRate',\n        //'deltaFundingAccrued',\n        'fundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase, fromWei } from '../../shared'\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { factory } from '../../shared';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, fromWei } from '../../shared'\nimport { lTokenOptionAbi } from './abis.js'\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi)\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return fromWei(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return fromWei(res)\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  return {\n    async get(poolAddress, symbols){\n      const key = poolAddress\n      if (!Object.keys(cache).includes(key) || Math.floor(Date.now()/1000) - cache[key].timestamp > 5) {\n        const timestamp = Math.floor(Date.now()/1000)\n        const data = await getOracleVolatilitiesForOption(symbols)\n        cache[key] = {\n          data,\n          timestamp,\n        }\n        return cache[key].data\n      } else {\n        return cache[key].data\n      }\n    }\n  }\n})()\n","import {\n  ContractBase,\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  naturalToDeri,\n  getPoolConfig,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getVolatilitySymbols } from '../../shared/config/token';\nimport {\n  getOracleVolatilityForOption,\n} from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'option'\n    );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    this.volatilitySymbols = this.config.volatilitySymbols;\n    this.bTokenAddress = this.config.bToken;\n    this.lTokenAddress = this.config.lToken;\n    this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async _updateConfig() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.viewer) {\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n    }\n\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    if (\n      !this.activeSymbolIds ||\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\n    ) {\n      // symbol is updated\n      const activeSymbols = await Promise.all(\n      activeSymbolIds.reduce(\n          (acc, i) => acc.concat([this.getSymbol(i)]),\n          []\n        )\n      );\n      const symbolVolatilities = await volatilitiesCache.get(\n        this.contractAddress,\n        activeSymbols.map((s) => s.symbol)\n      );\n      //console.log(symbolVolatilities)\n      const state = await this.viewer.getPoolStates(\n        this.contractAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      // update state\n      this.activeSymbolIds = activeSymbolIds;\n      this.activeSymbols = symbolState.filter((s) =>\n        this.activeSymbolIds.includes(s.symbolId)\n      );\n      // for tx use\n      this.volatilitySymbols = getVolatilitySymbols(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1]\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0])\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatioITM',\n      'feeRatioOTM',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativeFundingRate',\n    ]);\n    // return {\n    //   symbolId: res[0],\n    //   symbol: res[1],\n    //   oracleAddress: res[2],\n    //   volatilityAddress: res[3],\n    //   isCall: res[4],\n    //   strikePrice: fromWei(res[5]),\n    //   multiplier: fromWei(res[6]),\n    //   feeRatio: fromWei(res[7]),\n    //   alpha: fromWei(res[8]),\n    //   tradersNetVolume: fromWei(res[9]),\n    //   tradersNetCost: fromWei(res[10]),\n    //   cumulativeFundingRate: fromWei(res[11]),\n    // };\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._updateConfig();\n    let volatilities = [];\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilityForOption(this.activeSymbols.map((s) => s.symbol))\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.activeSymbolIds[index],\n          p.timestamp,\n          p.volatility,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(lShares), prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase, fromWei } from '../../shared'\n\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\n\nexport class OptionPricer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, optionPricerAbi)\n  }\n\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\n    return {\n      timeValue: fromWei(res.timeValue),\n      delta: fromWei(res.delta),\n    };\n  }\n}","import { factory } from '../../shared';\nimport { EverlastingOption } from '../contract/everlasting_option';\nimport { OptionPricer } from '../contract/option_pricer';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);\nexport const optionPricerFactory = factory(OptionPricer);","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport {\n  lTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const { lToken: lTokenAddress } = getPoolConfig(\n    poolAddress,\n    '0',\n    '0',\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    optionPool._updateConfig(),\n  ]);\n\n  const symbols = optionPool.activeSymbols\n  const symbolVolatilities = await volatilitiesCache.get(poolAddress, symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities)\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","import {\n  bg,\n  max,\n  bTokenFactory,\n  catchApiError,\n  deriToNatural,\n  getPoolConfig,\n} from '../../shared';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { normalizeOptionSymbol } from '../../shared/config/token';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport {\n  getOraclePricesForOption,\n  getPriceFromRest,\n  getOracleVolatilitiesForOption,\n} from '../../shared/utils/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\nimport { getIndexInfo } from '../../shared/config/token';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.activeSymbols;\n      const [symbolPrices, symbolVolatilities] = await Promise.all([\n        getOraclePricesForOption(\n          chainId,\n          symbols.map((s) => s.symbol)\n        ),\n        volatilitiesCache.get(\n          poolAddress,\n          symbols.map((s) => s.symbol)\n        ),\n      ]);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatioOTM: feeRatioOTM.toString(),\n        feeRatioITM: feeRatioITM.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n        indexConstituents: getIndexInfo(symbol),\n      };\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      //minPoolMarginRatio: '',\n      initialMarginRatio: '',\n      maintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { url: '', tokens: [] },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { symbol: symbolStr } = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols;\n      let symbolPrices = [],\n        symbolVolatilities = [],\n        volPrice;\n      if (symbols && symbols.length > 0) {\n        [symbolPrices, symbolVolatilities, volPrice] = await Promise.all([\n          getOraclePricesForOption(\n            chainId,\n            symbols.map((s) => s.symbol)\n          ),\n          volatilitiesCache.get(\n            poolAddress,\n            symbols.map((s) => s.symbol)\n          ),\n          getPriceFromRest(`VOL-${normalizeOptionSymbol(symbolStr)}`, 'option'),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolStr,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    'getPositionInfo',\n    {\n      price: '',\n      strikePrice: '',\n      timePrice: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      premiumFundingAccrued: '',\n      liquidationPrice: '',\n      volatility: '',\n    }\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols;\n      const [symbolPrices, symbolVolatilities, volPrices] = await Promise.all([\n        getOraclePricesForOption(\n          chainId,\n          symbols.map((s) => s.symbol)\n        ),\n        volatilitiesCache.get(\n          poolAddress,\n          symbols.map((s) => s.symbol)\n        ),\n        getOracleVolatilitiesForOption(symbols.map((s) => s.symbol)),\n      ]);\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        symbolPrices,\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\n            isCall: s.isCall,\n            volatility: deriToNatural(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.activeSymbols;\n  const [symbolPrices, symbolVolatilities] = await Promise.all([\n    getOraclePricesForOption(\n      chainId,\n      symbols.map((s) => s.symbol)\n    ),\n    volatilitiesCache.get(\n      poolAddress,\n      symbols.map((s) => s.symbol)\n    ),\n  ]);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    symbolPrices,\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, prices, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\n      let fee\n      const intrinsicValue = symbol.isCall\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\n      if (bg(intrinsicValue).gt(0)) {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.spotPrice)\n          .times(symbolInfo.feeRatioITM)\n          .toString();\n      } else {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.timeValue)\n          .times(symbolInfo.feeRatioOTM)\n          .toString();\n      }\n      return fee\n    },\n    args,\n    'getFundingFee',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n    'getFundingRate',\n    {\n      premiumFunding0: '',\n      premiumFundingPerSecond: '',\n      liquidity: '',\n      volume: '-',\n      tradersNetVolume: '',\n    }\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    {\n      liquidityUsed0: '',\n    }\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    {\n      liquidityUsed1: '',\n    }\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbolVolatilities = await volatilitiesCache.get(\n        poolAddress,\n        optionPool.activeSymbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    'getEstimatedMarkPrice',\n    ''\n  );\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\nimport { pTokenOptionFactory} from '../factory/tokens';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'option'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { deriToNatural, naturalToDeri, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson, max } from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n  pricer,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId\n  const volatility = info.volatility\n  const index = symbolIdList.indexOf(symbolId)\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\n  const indexPrice = deriToNatural(info.spotPrice)\n\n  const intrinsicValue = symbols[index].isCall\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\n  let timeValue = '0';\n  if (intrinsicValue.lte(0)) {\n    const res  = await pricer.getEverlastingTimeValueAndDelta(\n      naturalToDeri(indexPrice),\n      naturalToDeri(symbols[index].strikePrice),\n      volatility,\n      naturalToDeri(bg(1).div(365).toString())\n    );\n    timeValue = res.timeValue\n  }\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      indexPrice: indexPrice.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume\n        .abs()\n        .times(indexPrice)\n        .times(multiplier[index])\n        .toString(),\n      contractValue: tradeVolume\n        .abs()\n        .times(price)\n        .times(multiplier[index])\n        .toString(),\n      transactionFee: intrinsicValue.gt(0)\n        ? volume\n            .times(symbols[index].multiplier)\n            .times(indexPrice)\n            .times(symbols[index].feeRatioITM)\n            .toString()\n        : volume\n            .times(symbols[index].multiplier)\n            .times(timeValue)\n            .times(symbols[index].feeRatioOTM)\n            .toString(),\n      time,\n    };\n  } else {\n    return null\n  }\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol, pricer:pricerAddress } = getPoolConfig(poolAddress, undefined, undefined, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const pricer = optionPricerFactory(chainId, pricerAddress)\n  const [toBlock] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool._updateConfig(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i]));\n  }\n  let symbols = await Promise.all(promises)\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, optionPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  let result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      bTokenSymbol,\n      optionPool.activeSymbolIds,\n      symbols,\n      pricer,\n    );\n    result.unshift(res);\n  }\n  result = result.filter((tr) => tr !== null)\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool._updateConfig()\n    ]);\n    if (res && res.success) {\n      //console.log('his res', res.data)\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.activeSymbols\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        //.filter((i) => i)\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\n          if (index > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).div(symbols[index].multiplier).toString(),\n              indexPrice: deriToNatural(i.indexPrice).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              contractValue: deriToNatural(i.contractValue).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null\n          }\n        });\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\n    // fetch tradeHistory on the block with fromBlock from rest api\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { catchTxApiError, naturalToDeri } from \"../../shared\"\nimport { normalizeChainId } from \"../../shared/utils/validate\";\nimport { getPoolV2LiteManagerConfig } from \"../config\";\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const createPool = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\n      chainId = normalizeChainId(chainId)\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\n      const poolManager = perpetualPoolLiteManagerFactory(\n        chainId,\n        poolManagerAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\n      // send tx\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\n  }, args)\n}\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const addSymbol = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\n      chainId = normalizeChainId(chainId)\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      // process parameters\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\n      // send tx\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\n  }, args)\n}\n","import {\n  DeriEnv,\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n  VERSIONS,\n} from '../shared/config';\nimport { getJsonConfig } from '../shared/config/config';\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\n\nexport const getContractAddressConfig = (env, version) => {\n  env = env || DeriEnv.get()\n  if (version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (VERSIONS.includes(version)) {\n    return getPoolV2ConfigList(version, env);\n  } else if (version === undefined) {\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n\nexport const getPoolConfigList = (env) => {\n  env = env || DeriEnv.get();\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\n    let res = []\n    const config = getJsonConfig(v, env);\n    if (config && config.pools) {\n      res = config.pools.map((p) => {\n        p.version = v\n        return p\n      })\n    }\n    return [...acc, ...res];\n  }, []);\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport { getPoolVersion, LITE_VERSIONS, LITE_AND_OPTION_VERSIONS } from '../shared/config';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getPoolLiquidity as getPoolLiquidity2,\n  getPoolInfoApy as getPoolInfoApy2,\n} from '../shared/api/database_api';\nimport {\n  getLiquidityInfoV2,\n  getPoolLiquidityV2,\n  getPoolInfoApyV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n} from '../v2_lite/api';\nimport {\n  getLiquidityInfoOption,\n} from '../option/api';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersion, LITE_VERSIONS } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  } else if (version === 'option') {\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'option') {\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getEstimatedFundingRateOption,\n  getFundingRateCacheOption,\n  getFundingRateOption,\n  getLiquidityUsedOption,\n  getPositionInfoOption,\n  getSpecificationOption,\n  getWalletBalanceOption,\n  getEstimatedFeeOption,\n  getEstimatedMarginOption,\n  getEstimatedLiquidityUsedOption,\n  isUnlockedOption,\n  getPositionInfosPosition,\n} from '../option/api';\nimport { getPoolVersion, isDeriUnlocked, LITE_VERSIONS } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getSpecificationOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getPositionInfoOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const version = getPoolVersion(poolAddress);\n  if (version === 'option') {\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\n  } else {\n    // return empty array for v1, v2, v2_lite\n    return []\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'option') {\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedFundingRateOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedLiquidityUsedOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\nimport { getPoolVersion, LITE_VERSIONS, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return unlockOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'option') {\n    return withdrawMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return tradeWithMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolVersion, LITE_VERSIONS } from '../shared';\nimport { getTradeHistoryOption } from '../option/api';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import { io } from \"socket.io-client\";\nimport {equalIgnoreCase } from \"../utils/utils\";\n\nclass WebSocket {\n  constructor(){\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\n      transports: ['websocket'],\n      withCredentials: true\n    })\n    this.events = [];\n    this.socket.on('connect', () => {\n      console.log('connect')\n      this.events.forEach(event => {\n        this.socket.emit(event[0],event[1]);\n      })\n    })\n    this.socket.on('disconnect',event => {\n      console.log('web socket disconnect,will reconnect auto')\n    })\n  }\n\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\n    this.socket.on(listener,data => {\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\n        onMessage(data)\n      }\n    })\n    this.socket.emit(event, params)\n    if(this.findEvent(event,params) === -1){\n      this.events.push([event,params])\n    }\n  }\n\n  findEvent(event,params){\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\n  }\n\n  unsubscribe(event,params = {}){\n    this.socket.emit(event,params)\n    const pos = this.findEvent(event,params)\n    this.events.splice(pos,1)\n  }\n}\nexport default new WebSocket()","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 10,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = null;\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n}\nexport default new Version()","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nimport config from '../config.json'\n\nimport {\n  DeriEnv,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getUserInfoAll,\n  getLiquidityInfo\n} from '../lib/web3js/indexV2'\nconst versionKey = 'deri-current-version'\n\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\n\nexport function bg(value, base = 0) {\n  if (base === 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    } else {\n      symbol = symbol.split('-')[0]\n    }\n  }\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\nexport function equalIgnoreCase(str1,str2){\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 200\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 200\n  }\n  return [from,to]\n \n}\n\nexport function groupByNetwork(pools){\n  const all = []\n  pools.reduce((total, pool) => {\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\n    if (find && find.list.length < 5) {\n      find['list'].push(pool)\n    } else {\n      const poolInfo = {\n        pool: {\n          network: pool.network,\n          symbol: pool.symbol,\n          address: pool.address,\n          formatAdd: pool.formatAdd,\n          version: pool.version,\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n          chainId: pool.chainId,\n          airdrop: pool.airdrop,\n          type: pool.type,\n          bTokenSymbol: pool.bTokenSymbol,\n          bTokenId: pool.bTokenId,\n          symbolId: pool.symbolId\n        },\n        list: [pool]\n      }\n      total.push(poolInfo)\n    }\n    return total;\n  }, all)\n  return all;\n}\n\nexport function combineSymbolfromPoolConfig(configs){\n  return configs.reduce((total,config) => {\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open')  \n        && pos > -1) {\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\n        total[pos].symbol += `,${config.symbol}` \n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\n        total.push(config)\n      }\n    } else{\n      total.push(config)\n    }\n    return total;\n  },[]);\n}\n\nexport async function mapPoolInfo(config,wallet,chainInfo){\n  const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n  const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n  const pool = config.pool || ''\n  const item = { \n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n    liquidity : liqPool.liquidity,\n    apy :  ((+apyPool.apy) * 100).toFixed(2),\n    formatAdd : formatAddress(pool),\n    address : pool,\n    type : 'perpetual',\n    buttonText : 'STAKING',\n    multiplier : apyPool.multiplier \n  }\n  if(wallet && wallet.isConnected()){\n    const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\n    const claimInfo = await getUserInfoAll(wallet.detail.account);\n    if(info){\n      item['pnl'] = info.pnl\n    }\n    if(claimInfo){\n      item['claimed'] = claimInfo.total;\n      item['unclaimed'] = claimInfo.amount\n    }\n  }\n\n  return Object.assign(config,item)\n}\n\n\n\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  async load(version,isOptions){\n    let current = version && version.current;\n    if(isOptions){\n      current = 'option'\n    }\n    if(current === 'v2_lite_open'){\n       await openConfigListCache.update()\n    }\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(isOptions){\n      configs = sortOptionSymbols(configs)\n    }\n    if(!isOptions && version){\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// == contract gen\nexport const deleteIndexedKey = (obj) => {\n  if (isObject(obj)) {\n    let newObj = {}\n    Object.keys(obj).forEach((k) => {\n      if (!(/^\\d/.test(k))) {\n        newObj[k] = obj[k];\n      }\n    });\n    return newObj;\n  } else {\n    return obj\n  }\n};\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(b) - parseInt(a));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","var map = {\n\t\"./de/Signin.json\": 567,\n\t\"./de/bridge.json\": 568,\n\t\"./de/broker.json\": 569,\n\t\"./de/dip-history.json\": 570,\n\t\"./de/footer.json\": 571,\n\t\"./de/governance.json\": 572,\n\t\"./de/header.json\": 573,\n\t\"./de/home.json\": 574,\n\t\"./de/lite.json\": 575,\n\t\"./de/mining.json\": 576,\n\t\"./de/mobile-lite.json\": 577,\n\t\"./de/permission.json\": 578,\n\t\"./de/pro.json\": 579,\n\t\"./de/team.json\": 580,\n\t\"./en/Signin.json\": 581,\n\t\"./en/bridge.json\": 582,\n\t\"./en/broker.json\": 583,\n\t\"./en/dip-history.json\": 584,\n\t\"./en/footer.json\": 585,\n\t\"./en/governance.json\": 586,\n\t\"./en/header.json\": 587,\n\t\"./en/home.json\": 588,\n\t\"./en/lite.json\": 589,\n\t\"./en/mining.json\": 590,\n\t\"./en/mobile-lite.json\": 591,\n\t\"./en/permission.json\": 592,\n\t\"./en/pro.json\": 593,\n\t\"./en/team.json\": 594,\n\t\"./zh/Signin.json\": 595,\n\t\"./zh/bridge.json\": 596,\n\t\"./zh/broker.json\": 597,\n\t\"./zh/dip-history.json\": 598,\n\t\"./zh/footer.json\": 599,\n\t\"./zh/governance.json\": 600,\n\t\"./zh/header.json\": 601,\n\t\"./zh/home.json\": 602,\n\t\"./zh/lite.json\": 603,\n\t\"./zh/mining.json\": 604,\n\t\"./zh/mobile-lite.json\": 605,\n\t\"./zh/permission.json\": 606,\n\t\"./zh/pro.json\": 607,\n\t\"./zh/team.json\": 608\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 566;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\nimport { useRouteMatch } from 'react-router-dom';\nimport type from './model/Type'\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\n  const isOption = isOptionsLite || isOptionsPro\n  const categry = isOption ? 'option' : 'future'\n  type.setCurrent(categry)\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  }\n  if(isMobile){\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\nimport version from './Version'\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      if(version.isOpen){\n        await openConfigListCache.update()\n      }\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    if(version.isOpen){\n      await openConfigListCache.update()\n    }\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport { equalIgnoreCase } from \"../utils/utils\";\nimport webSocket from \"./WebSocket\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n  load(symbol,timeType = 'min'){\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\n        this.setIndex(data.close)\n        for(const key of Object.keys(this.listeners)){\n          if(typeof this.listeners[key] === 'function'){\n            this.listeners[key](data)\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol)\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n  unsubscribeBars(symbol){\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\n  }\n\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  clean(){\n    this.unsubscribeBars(this.symbol);\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\nimport { eqInNumber } from '../utils/utils';\nimport type from \"./Type\";\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   spec = null\n   counter = 0\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,spec,callback){\n     this.wallet= wallet; \n     this.spec = spec\n     if(callback){\n      this.callback = callback\n     }\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(this.callback){\n          this.callback(position)\n        }\n      }\n      return position;\n     }\n   }\n\n   async loadAll(wallet,spec,callback){\n    this.wallet= wallet; \n    this.spec = spec\n    if(callback){\n     this.callbackALL = callback\n    }\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      let positions = [] \n      if(res.length) {\n        positions = res.map(item => {\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\n          return item\n        })\n      }\n      if(positions){\n        if(this.callbackALL){\n          this.callbackALL(positions)\n        }\n      }\n      return positions;\n    }\n   }\n\n   startAll(){\n    this.paused = false;\n    if(!this.started){\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\n    }\n    this.started = true\n  }\n\n   start(){   \n    this.paused = false;\n    if(!this.startedAll){\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\n    }\n    this.startedAll = true\n   }\n\n   runInAction(action){\n    this.timer = window.setTimeout(async () => {\n      if(!this.paused){\n        const position = await action();\n        if(position) {\n          this.runInAction(action);\n        }\n      }\n    },3000)\n   }\n\n   pause(){\n    this.paused = true\n   }\n\n   resume(){\n    this.clean();\n    this.start(this.callback)\n   }\n\n   clean(){\n     this.paused = false;\n     this.timer = null;\n   }\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption){\n        spec.underlier = this.getUnderlierStrike(spec).underlier\n        spec.strike = this.getUnderlierStrike(spec).strike\n        spec.optionType = this.getUnderlierStrike(spec).optionType\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  getUnderlierStrike(spec){\n    let underlier = spec.symbol.split('-')[0]\n    let strike = spec.symbol.split('-')[1]\n    let optionType = spec.symbol.split('-')[2]\n    return {\n      underlier:underlier,\n      strike:strike,\n      optionType:optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\nimport Type from \"./Type\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      positions : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setOptionConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setPositions : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      optionFundingRateTip : computed,\n      initialMarginRatioTip : computed,\n      maintenanceMarginRatioTip : computed,\n      TransactionFeeTip : computed,\n      multiplierTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,finishedCallback){  \n    const isOption = Type.isOption\n    const all = await this.configInfo.load(version,isOption);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version,isOption);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback,isOption){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback,isOption)\n  }\n\n  async onChange(config,changed,finishedCallback,isOption){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    } else{\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\n     //切换指数\n    if(symbolChanged && config){\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,(position) => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet,config,isOption)\n        }),\n        this.contractInfo.load(wallet,config,isOption),\n        this.loadFundingRate(wallet,config,isOption),\n        this.historyInfo.load(wallet,config,isOption),\n        isOption && this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions)),\n      ]).then(results => {\n        if(results.length === 5){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n          results[4] && this.setPositions(results[4]);\n          // this.refreshCache();\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n        this.oracle.load(getFormatSymbol(config.symbol))\n        this.positionInfo.start()\n        isOption && this.positionInfo.startAll();\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  refreshCache(){\n    const {pool} = this.config;\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\n    priceCache.clear();\n    priceCache.update(pool,symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume();\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    if(type.isOption){\n      this.setOptionConfigs(configs)\n    } \n    this.configs = configs\n  }\n\n  setOptionConfigs(configs){\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\n  }\n\n  groupConfigBySymbol(configs = []){\n    return configs.reduce((total,config) => {\n      const symbol = config.symbol.split('-')[0]\n      if(!total[symbol]){\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    },[])\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setPositions(positions){\n    if(positions){\n      this.positions = positions\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\n      if(type.isOption){\n        volume = +volume * +this.contract.multiplier\n        let index = this.contract.multiplier.indexOf('.')\n        let num = this.contract.multiplier.slice(index);\n        let length = num.length \n        let value = volume.toString()\n        if(value.indexOf(\".\") !== '-1'){\n          value = value.substring(0,value.indexOf(\".\") + length)\n        }\n        this.setVolume(value)\n      }else{\n        this.setVolume(volume.toFixed(0))\n      }\n      \n    }\n  }\n\n  clean(){\n    this.oracle.clean();\n    this.positionInfo.clean();\n    this.version = null;\n    this.configs = [] \n    this.config = null;\n    this.index = ''\n    this.volume = ''\n    this.fundingRate = {}\n    this.position = {}\n    this.positions = []\n    this.contract = {}\n    this.history = []\n    this.userSelectedDirection = 'long'\n    this.optionsConfigs = {}\n  }\n\n\n  get volumeDisplay(){\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    const volume = optionVolume\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n    \n    \n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config,isOption){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip(){\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\n      if(Intl.locale === 'zh'){\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \n      } else {\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \n      }\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip(){\n    if(this.contract && this.contract.initialMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip(){\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip(){\n    if(this.contract && this.config){\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip(){\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\n    }\n    return ''\n  }\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport type from './model/Type';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}