{"version":3,"sources":["lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/factory/v2/index.js","lib/web3js/v2/factory/v2_lite/index.js","lib/web3js/v2/api/v2/mining_query_api.js","lib/web3js/v2/api/v2/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/v2/trade_query_api.js","lib/web3js/v2/api/v2/trade_transaction_api.js","lib/web3js/v2/api/v2_lite/mining_query_api.js","lib/web3js/v2/api/v2_lite/mining_transaction_api.js","lib/web3js/v2/api/v2_lite/trade_query_api.js","lib/web3js/v2/api/v2_lite/trade_transaction_api.js","lib/web3js/v2/api/v2/trade_history_api.js","lib/web3js/v2/api/v2_lite/trade_history_api.js","lib/web3js/v2/api/broker_api.js","lib/web3js/v2/api/activity_api.js","lib/web3js/factory/web3.js","lib/web3js/config/database.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/chain.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","lib/web3js/config/rest_server.js","lib/web3js/v2/utils/oracle.js","lib/web3js/v2/utils/api.js","lib/web3js/indexV2.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","lib/web3js/utils.js","model/Intl.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","model/Version.js","utils/utils.js","lib/web3js/api/contractQueryApi.js","lib/web3js/v2/config/pool.js","lib/web3js/v2/config/broker.js","lib/web3js/v2/factory/shared.js","../lang).)*/.json$","lib/web3js/v2/config/chain.js","lib/web3js/v2/utils/convert.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","index.js","lib/web3js/v2/factory/web3.js","lib/web3js/v2/config/config.js","lib/web3js/v2/contract/oracle/woo_oracle.js","lib/web3js/v2/contract/oracle/wrapped_oracle.js","lib/web3js/v2/contract/oracle/chainlink_oracle.js","lib/web3js/v2/contract/broker_manager.js","lib/web3js/v2/contract/oracle/offchain_oracle.js","lib/web3js/v2/contract/ptoken_airdrop.js","lib/web3js/v2/contract/b_token.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/v2/config/oracle.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/contract/v2/perpetual_pool.js","lib/web3js/v2/contract/v2/perpetual_pool_router.js","lib/web3js/v2/contract/v2/l_token.js","lib/web3js/v2/contract/v2/p_token.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database_base.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/config/env.js","lib/web3js/v2/contract/v2_lite/perpetual_pool.js","lib/web3js/v2/contract/v2_lite/l_token.js","lib/web3js/v2/contract/v2_lite/p_token.js"],"names":["calculateEntryPrice","volume","cost","multiplier","eq","bg","div","calculateLiquidationPrice","margin","dynamicCost","minMaintenanceMarginRatio","tmp","minus","res","gt","plus","max","isOrderValid","marginHeld","liquidity","liquidityUsed","minMargin","gte","success","error","calculateTxFee","price","feeRatio","abs","times","toString","calculateFundingRate","tradersNetVolume","fundingRateCoefficient","validateArgs","Error","processFundingRate","chainId","fundingRate","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","cumulativeFundingRate","lastCumulativeFundingRate","lastUpdatedBlockNumber","latestBlockNumber","args","console","log","calculateBTokenDynamicEquities","bTokens","reduce","accum","b","discount","pnl","isBToken0RatioValid","bTokenId","amount","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","symbols","poolMarginRatio","totalCost","i","length","s","tradersNetCost","calculateMaxRemovableLiquidity","bToken","restLiquidity","minPoolMarginRatio","min","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","value","shareValue","removable","factory","klass","instances","address","key","Object","keys","includes","perpetualPoolFactory","PerpetualPool","perpetualPoolRouterFactory","PerpetualPoolRouter","lTokenFactory","LToken","pTokenFactory","PToken","perpetualPoolLiteFactory","PerpetualPoolLite","lTokenLiteFactory","LTokenLite","pTokenLiteFactory","PTokenLite","getLiquidityInfo","poolAddress","accountAddress","a","getPoolConfig2","lTokenAddress","lToken","perpetualPool","bTokenIdList","getPoolBTokenIdList","symbolIdList","getPoolSymbolIdList","Promise","all","getParameters","getBToken","getAsset","parameterInfo","bTokenInfo","lTokenAsset","promises","push","getSymbol","totalPnl","index","parseInt","poolLiquidity","lastCumulativePnl","maxRemovableShares","approximatePnl","cumulativePnl","shares","getPoolLiquidity","db","databaseFactory","getValues","catch","err","deriToNatural","symbol","getPoolInfoApy","poolNetwork","getNetworkName","apy","volume1h","volume24h","addLiquidity","routerAddress","router","perpetualPoolRouter","minBToken0Ratio","validation","tx","transaction","removeLiquidity","isMaximum","priceCache","_prices","get","symbolId","split","set","val","isNaN","parseFloat","timestamp","Date","now","fundingRateCache","resourceMap","contractAddress","resource","getSpecification","undefined","getPoolBTokenList","symbolInfo","acc","concat","bTokenDiscounts","map","minInitialMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenSymbol","bTokenMultiplier","getPositionInfo","symbolConfigList","getPoolSymbolList","symbolList","pTokenAddress","pToken","getLastUpdatedBlockNumber","getLatestBlockNumber","getPosition","getMargins","getPositions","getOraclePrice","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","fundingFee","averageEntryPrice","liquidationPrice","getWalletBalance","bTokenAddress","bTokenFactory","balanceOf","balance","isUnlocked","getEstimatedFee","cache","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","promiseList","bTokenInfoList","fundingRatePerBlock","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","newVolume","orderValidation","trade","closePosition","negated","_getLiquidityInfo","getPoolConfig","getLiquidity","totalSupply","getActiveSymbolIds","symbolIds","poolDynamicEquity","catchApiError","catchTxApiError","getMargin","priceIndex","indexOf","p","fetchJson","url","fetch","resp","json","processTradeEvent","info","blockNumber","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","fromBlock","_getBlockInfo","toBlock","filters","owner","_getPastEvents","number","events","result","filter","returnValues","item","unshift","getTradeHistory","tradeHistory","getRestServerConfig","DeriEnv","tradeFromBlock","data","tradeHistoryBlock","Array","isArray","trim","tradeHistoryOnline","sort","initialBlock","getBlockInfo","baseToken","account","getPastEvents","contract","setBroker","brokerAddress","normalizeChainId","normalizeAddress","getBrokerConfig","brokerManagerAddress","brokerManager","brokerManagerFactory","getAirdropPTokenAddress","airdropPToken","pTokenAirdropFactory","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","metaMaskWeb3","web3Instance","web3","window","ethereum","Web3","web3Factory","web3InstanceMap","getChainProviderUrl","providerUrl","providers","HttpProvider","getDBProviderUrlsConfig","getDBAddressConfig","env","useProductionDB","getDBWormholeAddressConfig","getDBAirdropAddressConfig","shuffleArray","array","j","Math","floor","random","temp","getBlockNumber","duration","Number","MAX_SAFE_INTEGER","startTime","eth","getLatestRPCServer","urls","blockNumbers","findIndex","startsWith","getChainProviderUrls","getDailyBlockNumberConfig","position","getStorageAt","hexToNumber","getBlock","eventName","to","es","e","LoadingPage","React","Component","componentWillMount","NProgress","start","componentWillUnmount","done","render","LoadableComponent","component","Loadable","loader","loading","getChainIds","getChainProviderUrlsConfig","provider_urls","getContractAddressConfig","pool","dToken","MiningVault","unit","version","retired","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","MiningVaultRouter","getDeriContractAddressConfig","Deri","Wormhole","getPreminingContractConfig","staking","isInTvlRace","premining","chainBlockNumberList","process","getOracleUrl","addSymbolParam","toLowerCase","getPriceInfo","retry","mode","ok","priceInfo","RestOracle","getPrice","config","getOracleConfig","decimal","oracle","oracleFactory","func","methodName","defaultValue","MAX_GAS_AMOUNT","ContractBase","contractAbi","this","Contract","method","_init","methods","call","gas","estimateGas","from","self","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","numberToHex","encodeABI","request","params","_getTransactionReceipt","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","wooOracleAbi","chainlinkOracleAbi","wrappedOracleAbi","offchainOracleAbi","brokerManagerAbi","perpetualPoolLiteAbi","bTokenLiteAbi","lTokenLiteAbi","pTokenLiteAbi","pTokenAirdropAbi","connectWallet","async","handleChainChanged","handleAccountChanged","accounts","on","location","reload","getUserWalletBalance","walletAddress","getBalance","utils","fromWei","getLpLiquidityInfo","getLpContractAddress","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","c","isV2","total","cur","getPoolConfigListV2","getContractAddressConfig2","getPoolVersion","getLiquidityInfoV2l","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfo2","getPositionInfoV2","getWalletBalanceV2l","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistory2","getTradeHistoryV2","calculateLiquidityUsed","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","lte","message","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","toChecksumAddress","hexToString","hexToUtf8","hexToNumberString","naturalToDeri","toFixed","naturalWithPercentage","sd","deriToString","deriToBool","toNumber","hasInvalidArgsValue","some","MAX_VALUE","getPoolContractAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","getDeriContractAddress","deriAddress","wormholeAddress","getOracleInfo","getBTCUSDPrice","responseJson","format","bigNumber","toFormat","replaceAll","chainIds","r","require","forEach","path","lang","page","test","pageName","Intl","locale","setLocale","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","pPool","maxWithdrawMargin","_transactPool","getStateValues","mintDToken","userInfo","getUserInfoAll","deadline","nonce","v","valid","miningVaultAddress","miningVault","miningVaultPoolFactory","freeze","toChainId","wormhole","wormholeFactory","mintDeri","databaseWormhole","databaseWormholeFactory","signature","fromChainId","fromWormhole","fromNonce","deri","deriFactory","mintAirdrop","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","miningVaultRouter","miningVaultRouterFactory","mint","getUserInfo","userAddress","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","userInfoHarvest","userInfoTotal","assign","getLpPoolInfoApy","apy2","getUserInfoInPool","databaseAirdropFactory","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","opts","fetchRestApi","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","sendTradeTxToWorkerQuene","ws","wsInstance","getOrSet","send","methodCall","event","JSON","parse","wsOnPromise","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","id","Version","makeAutoObservable","setCurrent","isV1","isV2Lite","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","stringify","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","isProvider","parameters","getUserWormholeSignature","getDeriBalance","expendPoolConfigV2","flat","expendPoolConfigV2Lite","offchainSymbolIds","getPoolConfigList","getConfig","getFilteredPoolConfigList","poolConfigList","check","_getPoolConfig","find","bTokenCount","symbolCount","filteredByChainId","getBrokerConfigList","instanceMap","isUsedRestOracle","WrappedOracle","WooOracle","BToken","BrokerManager","PTokenAirdrop","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","MAX_UINT256","MAX_INT256","isBrowser","document","isJsDom","userAgent","DesktopApp","MobileApp","inject","observer","intl","isMobile","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","wallet","switchNetwork","network","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","isApproved","supportInnovation","Oracle","timeType","kData","paused","listeners","already","setIndex","WebSocket","withCredentials","emit","initWebSocket","obj","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","mockPositionInfo","interval","load","bTokenSymbolDisplay","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","syncFundingRate","setPaused","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","trading","ReactDOM","StrictMode","getElementById","processConfigV2","validateConfigV2Lite","validateObjectKeyExist","validateIsArray","prop","processConfigV2Lite","getJsonConfig","jsonConfig","_call","_transact","_balanceOf","decimals","allowance","slpPool","slpPoolFactory","bTokenBalance","clp2Pool","clp2PoolFactory","clpPool","clpPoolFactory","getOracleConfigList","every","keyList","valName","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","decimals0","swapperAddress","oracleAddress","priceInfos","processAsset","processPosition","POOL_ABI","cumuFundingRate","cumuFundingRateBlock","minAddLiquidity","redemptionFeeRatio","priceDelayAllowance","signed","args1","args2","CONTRACT_ABI","BTokenContract","_balance","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","DatabaseBaseContract","updateProviderUrl","DB_CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","SlpPool","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toWormholeAddress","databaseInstanceMap","database","perpetualPoolInstanceMap","bTokenInstanceMap","pTokenInstanceMap","lTokenInstanceMap","mVaultInstanceMap","mVault","slpPoolInstanceMap","clpPoolInstanceMap","clp2PoolInstanceMap","deriInstanceMap","wormholeInstanceMap","_deriEnv","pouterAddress","liquidatorQualifierAddress","prices","symbolNames","_getSymbolPrices","tokenId","operator"],"mappings":"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","file":"static/js/main.e2e60d51.chunk.js","sourcesContent":["import { bg, max } from '../utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from '../../contract/v2';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n} from '../../contract/v2_lite';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)","import { databaseFactory } from '../../../factory/contracts';\nimport { lTokenFactory, perpetualPoolFactory } from '../../factory'\nimport { getPoolConfig2, getPoolBTokenIdList, getPoolSymbolIdList} from '../../config'\nimport { bg, deriToNatural, getNetworkName } from '../../utils'\nimport { calculateMaxRemovableLiquidity } from '../../calculation'\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const {lToken:lTokenAddress} = getPoolConfig2(poolAddress, bTokenId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n\n    const [parameterInfo, bTokenInfo, lTokenAsset ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ])\n    const { minPoolMarginRatio } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    const cost = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n    }, bg(0))\n    const totalPnl = symbols.reduce((accum, s) => {\n        return accum.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n    }, bg(0))\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl)\n      } else {\n        return accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n      }\n    }, bg(0))\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset\n    const maxRemovableShares = calculateMaxRemovableLiquidity(bTokens[bTokenId], liquidity, cost, totalPnl, restLiquidity, minPoolMarginRatio)\n    const approximatePnl = pnl.plus(bg(bTokens[bTokenId].cumulativePnl).minus(lastCumulativePnl).times(liquidity))\n    //console.log(\"approximatePnl\", approximatePnl.toString())\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString()\n    };\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};","import { getPoolBTokenIdList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList } from '../../config'\nimport { perpetualPoolRouterFactory, perpetualPoolFactory, lTokenFactory } from '../../factory'\nimport { RestOracle } from '../../utils'\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../../calculation'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n      res = { success: false, error: validation.error};\n   }\n   return res\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum=false,\n) => {\n   const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n     poolAddress,\n   );\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let symbolIdList = getPoolSymbolIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig2(poolAddress)\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   const { minBToken0Ratio } = await perpetualPool.getParameters();\n   const validation = isBToken0RatioValid(bTokens, bTokenId, amount, minBToken0Ratio)\n   let res\n   if (validation.success) {\n    try {\n      const promises = symbolList.map(async(s) => {\n        return await RestOracle(s).getPrice()\n      })\n      const prices = await Promise.all(promises)\n      const priceInfos = prices.map((p, index) => {\n        return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n      })\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err};\n    }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const {router:routerAddress, lToken:lTokenAddress} = getPoolConfig2(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n\n   const lToken = lTokenFactory(chainId, lTokenAddress);\n   const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId)\n   const { liquidity:userLiquidity } = lTokenAsset\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   let promises = []\n   for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n   }\n   const bTokens = await Promise.all(promises)\n   promises = []\n\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   for (let i=0; i<symbolIdList.length; i++) {\n     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n   }\n   const symbols = await Promise.all(promises)\n   const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n   const validation = isPoolMarginRatioValid(bTokens, bTokenId, amount, userLiquidity, symbols, minPoolMarginRatio)\n   let res\n   if (validation.success) {\n     try {\n       promises = symbolList.map(async(s) => {\n         return await RestOracle(s).getPrice()\n       })\n       const prices = await Promise.all(promises)\n       const priceInfos = prices.map((p, index) => {\n         return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n       })\n       const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n       res = { success: true, transaction: tx };\n     } catch (err) {\n       res = { success: false, error: err};\n     }\n   } else {\n    res = { success: false, error: validation.error };\n   }\n   return res\n}\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../../factory';\nimport { getPoolBTokenIdList, getPoolBTokenList, getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList} from '../../config'\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../../calculation';\nimport { getOraclePrice, bg, min, max } from '../../utils'\nimport { fundingRateCache, priceCache } from '../api_globals';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return {\n      price: price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig2, getPoolSymbolIdList, getPoolSymbolList, getPoolBTokenIdList } from '../../config'\nimport {\n  bTokenFactory,\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../../factory';\nimport { RestOracle, bg } from '../../utils';\n\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n   const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume).plus(newVolume).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false,\n) => {\n   const { router: routerAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n   const pToken = pTokenFactory(chainId, pTokenAddress);\n   //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n   const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   //const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenIdList = getPoolBTokenIdList(poolAddress)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    //console.log('liquidity', liquidity.toString())\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n    // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n    // console.log('pnl', pnl.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n     promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(poolAddress);\n   const symbolList = getPoolSymbolList(poolAddress)\n   const symbolIdList = getPoolSymbolIdList(poolAddress)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n     const promises = symbolList.map(async(s) => {\n       return await RestOracle(s).getPrice()\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolIdList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n","import { databaseFactory } from '../../../factory/contracts';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../utils';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\n    perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { perpetualPoolLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError } from '../../utils';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { calculateEntryPrice } from \"../../../calculation\"\nimport { calculateFundingRate, calculateLiquidationPrice, processFundingRate, calculateFundingFee } from \"../../calculation\"\nimport { getPoolConfig } from \"../../config\"\nimport { bTokenFactory } from \"../../factory/shared\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../../factory/v2_lite\"\nimport { bg, catchApiError, getLastUpdatedBlockNumber, getLatestBlockNumber, getOraclePrice } from \"../../utils\"\nimport { fundingRateCache, priceCache } from \"../api_globals\"\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getLiquidity(),\n      pToken.getActiveSymbolIds(),\n      getLastUpdatedBlockNumber(chainId, poolAddress, 5),\n      getLatestBlockNumber(chainId),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargin(accountAddress),\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n    ])\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n    //console.log(latestBlockNumber)\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\n\n    let promises = []\n    for (let i = 0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const symbolList = symbols.map((s) => s.symbol)\n\n    promises = []\n    for (let i=0; i< symbolIds.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i], 'v2_lite'))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const priceIndex = symbolIds.indexOf(symbolId)\n    let price\n    if (priceIndex === '-1') {\n      price = '0'\n    } else {\n      price = symbolPrices[priceIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\n\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    }, bg(0))\n\n    const totalCost = positions.reduce((accum, p) => {\n      return accum.plus(bg(p.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee: fundingFee.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio,\n      ).toString(),\n    }\n  }, args, 'getPositionInfo', {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\n    perpetualPool.getLiquidity(),\n    getOraclePrice(chainId, symbol, 'v2_lite'),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getActiveSymbolIds(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\n  const { minPoolMarginRatio } = parameterInfo\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n\n  let promises = []\n  for (let i = 0; i< symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\n  }\n  const symbols = await Promise.all(promises)\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    let price = priceCache.get(poolAddress, symbolId)\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    if (!price) {\n      price = await getOraclePrice(chainId, symbol, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [price, symbolInfo] = await Promise.all([\n      getOraclePrice(chainId, symbol, 'v2_lite'),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { multiplier } = symbolInfo\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { isOrderValid } from '../../calculation';\nimport { getPoolConfig } from '../../config';\nimport { bTokenFactory } from '../../factory/shared';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../../factory/v2_lite';\nimport { catchTxApiError, bg } from '../../utils';\n\nexport const unlock = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.unlock(accountAddress, poolAddress)\n  }, args)\n}\n\nexport const depositMargin = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addMargin(accountAddress, amount)\n  }, args)\n}\n\nexport const withdrawMargin = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeMargin(accountAddress, amount, isMaximum)\n  }, args)\n}\n\nexport const tradeWithMargin = async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId]\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n    const { pToken:pTokenAddress } = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const [parameterInfo, liquidity, margin, symbolIds ] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getLiquidity(),\n      pToken.getMargin(accountAddress),\n      pToken.getActiveSymbolIds(),\n    ])\n    const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n    let promises = []\n\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n    }\n    const positions = await Promise.all(promises)\n\n    let marginHeld = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return acc.plus(bg(s.price).times(s.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    let liquidityUsed = symbols.reduce((acc, s, index) => {\n      if (index === parseInt(symbolId)) {\n        return acc.plus(bg(s.tradersNetVolume).plus(newVolume).times(s.price).times(s.multiplier).abs())\n      } else {\n        return acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n\n    const orderValidation = isOrderValid(\n      margin,\n      marginHeld,\n      liquidity,\n      liquidityUsed,\n    )\n    if (orderValidation.success) {\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error(orderValidation.error)\n    }\n  }, args)\n}\n\nexport const closePosition = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, symbolId) => {\n    const { pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', '0', 'v2_lite')\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n    const { volume } = await pToken.getPosition(accountAddress, symbolId);\n    if (!volume.eq(0)) {\n      const newVolume = volume.negated()\n      return await perpetualPool.trade(accountAddress, symbolId, newVolume)\n    } else {\n      throw new Error('no position to close')\n    }\n  }, args)\n}\n","import { deriToNatural } from '../../utils';\nimport { perpetualPoolFactory } from '../../factory';\nimport { getPoolConfig2, getPoolSymbolIdList } from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { owner: accountAddress }\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { deriToNatural, getBlockInfo, getPastEvents } from '../../utils';\nimport { perpetualPoolLiteFactory } from '../../factory';\nimport { getPoolConfig, getPoolConfig2, getPoolSymbolIdList} from '../../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../../config';\nimport { calculateTxFee } from '../../calculation/position';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { brokerManagerFactory } from \"../factory\"\nimport { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { getBrokerConfig } from \"../config\"\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig(chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig(chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}","import { pTokenAirdropFactory, pTokenFactory } from \"../factory\"\nimport { getPoolConfig2 } from '../config'\nimport { DeriEnv } from \"../../config\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import Web3 from 'web3';\nimport { getChainProviderUrl } from '../utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    let web3;\n    if (typeof window.ethereum !== undefined) {\n      web3 = new Web3(window.ethereum);\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n    web3Instance = web3;\n    return web3;\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return async(chainId) => {\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\n      return web3InstanceMap[chainId];\n    }\n    if (['1', '3', '42'].includes(chainId)) {\n      console.log(\n        `==== web3Factory(${chainId}), please caution the access limits ===`\n      );\n    }\n    const providerUrl = await getChainProviderUrl(chainId);\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n    web3InstanceMap[chainId] = web3;\n    return web3;\n  };\n})();\n","export const getDBProviderUrlsConfig = () => [\n  //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const fetchWithTimeout = (url, options = {}) => {\n  const { timeout = 1200, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((resolve) => {\n      setTimeout(() => {\n        // reject(\n        //   new Error(\n        //     `Request for ${url} timed out after ${timeout} ms`,\n        //   ),\n        // )\n        resolve({timeout:true})\n      }, timeout)\n    }),\n  ])\n}\n\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    if (!err.toString().includes('FetchError')) {\n      console.log(err);\n    }\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    //console.log(url)\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error(`getAliveHttpServer(): No alive http server in ${urls}`);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  // console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\nimport { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    //console.log(chainId, contractAddress, position)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', res)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97','127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","export const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\nexport const ChainProviderUrls = [\n  {\n    provider_urls: [\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '1',\n  },\n  {\n    provider_urls: [\n      'https://bsc-dataseed.binance.org',\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n    ],\n    chainId: '56',\n  },\n  {\n    provider_urls: ['https://http-mainnet.hecochain.com'],\n    chainId: '128',\n  },\n  {\n    provider_urls: [\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '3',\n  },\n  {\n    provider_urls: [\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '42',\n  },\n  {\n    provider_urls: [\n      //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\n    ],\n    chainId: '97',\n  },\n  {\n    provider_urls: ['https://http-testnet.hecochain.com'],\n    chainId: '256',\n  },\n];\n\nexport const getChainProviderUrlsConfig = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\n  }\n}\n","import { getChainIds } from './chain';\n\n/** @module config */\n\n/**\n * Get the contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getContractAddressConfig = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    // console.log('!!! production !!!')\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n/**\n * Get the Slp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getSlpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n      },\n    ];\n  }\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\n  return [];\n};\n\n/**\n * Get the Clp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getClpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        retired: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getLpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterContractAddress = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\n/**\n * Get the Deri contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].Deri - deri address\n * @returns {string} response[].Wormhole - wormhole token address\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getDeriContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingContractConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\nexport const getDailyBlockNumberConfig = () => {\n  const chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return 'https://testnetapi.deri.finance';\n    //return 'http://localhost:8082';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import { getOracleConfig } from '../config/oracle';\nimport { oracleFactory } from '../factory/shared';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../../config';\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (symbol) => {\n  const env = DeriEnv.get();\n  //const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol.toLowerCase()}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/get_signed_price', symbol);\n    }\n    return 'https://oracle4.deri.finance/get_signed_price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/get_signed_price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/get_signed_price';\n  }\n};\n\nexport const getPriceInfo = async (symbol) => {\n  let url = getOracleUrl(symbol);\n  //console.log('oracle url', url);\n  let retry = 2;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      break;\n    }\n    retry -= 1;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\n  }\n  const priceInfo = await res.json();\n  if (priceInfo.data && priceInfo.data.price) {\n    return priceInfo.data;\n  } else {\n    throw new Error(\n      `fetch oracle info error: missing price at result ${priceInfo}.`\n    );\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      const priceInfo = await getPriceInfo(symbol)\n      return deriToNatural(priceInfo.price).toString()\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  const config = getOracleConfig(chainId, symbol, version);\n  // console.log('oracle config',config)\n  if (config && config.address) {\n    if (!config.decimal) {\n      throw new Error('getOraclePrice: decimal is empty', config.decimal);\n    }\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  }\n};\n","export const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    //console.log('args', args, methodName, defaultValue)\n    // console.log(await func(...args))\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    console.log(`${methodName}:`, err)\n    //console.log(`${methodName}: ${err}`)\n  }\n  return defaultValue\n}\n\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n","export {\n  DeriEnv,\n  //getContractAddressConfig,\n  getLpContractAddressConfig,\n  getSlpContractAddressConfig,\n  getPreminingContractConfig,\n} from './config';\nexport * from './utils';\nexport * from './calculation';\n\nexport * from './api/apiGlobals';\nexport * from './api/factoryApi';\nexport * from './api/walletApi';\nexport {\n  // isUnlocked,\n  // getEstimatedMargin,\n  // getEstimatedFee,\n  // getEstimatedFundingRate,\n  // getEstimatedLiquidityUsed,\n  isDeriUnlocked,\n  getUserWormholeSignature,\n  // getFundingRate,\n  //getPositionInfo,\n  getDeriBalance,\n} from './api/contractQueryApi';\nexport {\n  //unlock,\n  //depositMargin,\n  //withdrawMargin,\n  //addLiquidity,\n  //removeLiquidity,\n  //tradeWithMargin,\n  //closePosition,\n  mint,\n  mintDToken,\n  freeze,\n  mintDeri,\n  unlockDeri,\n  mintAirdrop,\n} from './api/contractTransactionApi';\nexport {\n  getUserInfo,\n  getUserInfoHarvest,\n  getUserInfoTotal,\n  getUserInfoAll,\n  //getPoolInfoApy,\n  getLpPoolInfoApy,\n  getUserInfoInPool,\n  getUserInfoAllForAirDrop,\n} from './api/databaseApi';\n\n// export * from './api/slpPoolApi';\n// export * from './api/clpPoolApi';\n\n// export * from './api/tradeHistoryApi';\nexport {\n//getSpecification2 as getSpecification,\n// getPositionInfo2 as getPositionInfo,\n//getLiquidityInfo2 as getLiquidityInfo,\n//getWalletBalance2 as getWalletBalance,\n//getFundingRate2 as getFundingRate,\n//getLiquidityUsed2 as getLiquidityUsed,\ngetFundingRateCache2 as getFundingRateCache,\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\ngetSlpWalletBalance2 as getSlpWalletBalance,\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\ngetClpWalletBalance2 as getClpWalletBalance,\n//getDeriBalance2 as getDeriBalance,\n//getTradeHistory2 as getTradeHistory,\nfetchRestApi,\n} from './api/restApi';\n\n// export {\n  //tradeWithMargin2 as tradeWithMargin,\n  //closePosition2 as closePosition,\n  //depositMargin2 as depositMargin,\n  //withdrawMargin2 as withdrawMargin,\n  //addLiquidity2 as addLiquidity,\n  //removeLiquidity2 as removeLiquidity,\n// } from './api/contractTransactionApiV2'\n\nexport * from './api/lpPoolApi';\n\nexport * from './api_wrapper';\n\nexport {\n  getPoolConfigList,\n  getFilteredPoolConfigList,\n  getPoolBTokensBySymbolId,\n  setBroker,\n  airdropPToken,\n  isUserPTokenExist,\n  getAirdropPTokenWhitelistCount,\n} from './v2';\n","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils';\n\nconst MAX_GAS_AMOUNT = 832731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      // if (isBrowser() && !isJsDom()) {\n      //   this.web3 = metaMaskWeb3();\n      // } else {\n      this.web3 = await web3Factory.get(this.chainId);\n      // }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        // ignore the metamask error\n      }\n    }\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const offchainOracleAbi= [{\"inputs\": [{\"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\"}, {\"internalType\": \"address\", \"name\": \"signatory_\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"delayAllowance_\", \"type\": \"uint256\"}], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\"inputs\": [], \"name\": \"delayAllowance\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"getPrice\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"price\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"signatory\", \"outputs\": [{\"internalType\": \"address\", \"name\": \"\", \"type\": \"address\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"symbol\", \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [], \"name\": \"timestamp\", \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}], \"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"uint256\", \"name\": \"timestamp_\", \"type\": \"uint256\"}, {\"internalType\": \"uint256\", \"name\": \"price_\", \"type\": \"uint256\"}, {\"internalType\": \"uint8\", \"name\": \"v_\", \"type\": \"uint8\"}, {\"internalType\": \"bytes32\", \"name\": \"r_\", \"type\": \"bytes32\"}, {\"internalType\": \"bytes32\", \"name\": \"s_\", \"type\": \"bytes32\"}], \"name\": \"updatePrice\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]\n\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n\nexport const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import Web3 from 'web3';\nimport { metaMaskWeb3 } from '../factory/web3';\nimport { hexToNumber } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window.ethereum !== undefined) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\n/**\n * Get balance of the connected account\n * @async\n * @method\n * @param {string} chainId - Id of the chain\n * @param {string} accountAddress - Address of the connected account\n * @returns {string} Account balance\n */\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  const web3 = metaMaskWeb3();\n  const balance = await web3.eth.getBalance(walletAddress);\n  const res = Web3.utils.fromWei(balance);\n  return res;\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n  unlockSlp,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './slpPoolApi';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n  unlockClp2,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './clp2PoolApi';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n  unlockClp,\n  // addClpLiquidity,\n  // removeClpLiquidity,\n} from './clpPoolApi';\n\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from './contractTransactionApiV2'\nimport { getLpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import { getContractAddressConfig as getContractAddressConfig2 } from \"../config\";\nimport { getPoolConfigList as getPoolConfigListV2} from \"../v2/config\"\n//import { getPoolVersion } from '../v2';\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getContractAddressConfig2(env)\n  } else if (version === 'v2' || version === 'v2_lite') {\n    return getPoolConfigListV2(version)\n  } else {\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\n  }\n}","import { getLiquidityInfo2 } from '../api/restApi';\nimport { getPoolLiquidity as getPoolLiquidity2, getPoolInfoApy as getPoolInfoApy2 } from '../api/databaseApi';\nimport { \n  getLiquidityInfo as getLiquidityInfoV2,\n  getPoolLiquidity as getPoolLiquidityV2,\n  getPoolInfoApy as getPoolInfoApyV2,\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n  getPoolVersion,\n } from '../v2';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\nimport {\n  addLiquidity as addLiquidityV2,\n  removeLiquidity as removeLiquidityV2,\n  // addLiquidityWithPrices as addLiquidityV2,\n  // removeLiquidityWithPrices as removeLiquidityV2,\n  addLiquidityV2l,\n  removeLiquidityV2l,\n  getPoolVersion,\n} from '../v2';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getPositionInfo as getPositionInfo2,\n  isUnlocked as isUnlocked2,\n  isDeriUnlocked,\n  getEstimatedMargin as getEstimatedMargin2,\n  getEstimatedFee as getEstimatedFee2,\n  getEstimatedFundingRate as getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\n  getWalletBalance as getWalletBalance2,\n} from '../api/contractQueryApi'\n\nimport {\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../api/restApi'\n//import { bTokenFactory } from '../factory/contracts'\n\nimport {\n  getPositionInfo as getPositionInfoV2,\n  isUnlocked as isUnlockedV2,\n  getEstimatedMargin as getEstimatedMarginV2,\n  getEstimatedFee as getEstimatedFeeV2,\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\n  getSpecification as getSpecificationV2,\n  getWalletBalance as getWalletBalanceV2,\n  getFundingRate as getFundingRateV2,\n  getLiquidityUsed as getLiquidityUsedV2,\n  getFundingRateCache as getFundingRateCacheV2,\n\n  getPositionInfoV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n\n  getPoolVersion,\n} from '../v2'\n\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getSpecificationV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress)\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress)\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress)\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume)\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\n  }\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedMarginV2l(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\n  } else {\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress)\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedFundingRateV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress)\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getEstimatedLiquidityUsedV2l(chainId, poolAddress, newNetVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress)\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\n  }\n}\n","import { unlock as unlock2, unlockDeri } from '../api/contractTransactionApi';\nimport {\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../api/contractTransactionApiV2';\nimport {\n  unlock as unlockV2,\n  tradeWithMargin as tradeWithMarginV2,\n  closePosition as closePositionV2,\n  depositMargin as depositMarginV2,\n  withdrawMargin as withdrawMarginV2,\n  // tradeWithMarginWithPrices as tradeWithMarginV2,\n  // depositMarginWithPrices as depositMarginV2,\n  // withdrawMarginWithPrices as withdrawMarginV2,\n  // closePositionWithPrices as closePositionV2,\n\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n\n  getPoolVersion,\n} from '../v2';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return unlockV2l(chainId, poolAddress, accountAddress)\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount)\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return withdrawMarginV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return tradeWithMarginV2l(chainId, poolAddress, accountAddress, newVolume, symbolId)\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","\nimport {getTradeHistory2} from '../api/restApi';\nimport { \n  getPoolVersion,\n  getTradeHistoryV2,\n  getTradeHistoryV2l,\n } from '../v2';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if (getPoolVersion(poolAddress) === 'v2_lite') {\n    return getTradeHistoryV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n}","import { bg, getDailyBlockNumber } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport {\n  DeriEnv,\n  getChainProviderUrlsConfig,\n  getContractAddressConfig,\n  getSlpContractAddressConfig,\n  getClpContractAddressConfig,\n  getClp2ContractAddressConfig,\n  getLpContractAddressConfig,\n  getDailyBlockNumberConfig,\n  getDeriContractAddressConfig,\n  getChainIds,\n} from './config';\n\n/** @module utils */\n\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport { BigNumber };\n\n/**\n * Change the value to BigNumber type\n * @func\n * @param {string|number} value - the number that need to changed to BigNumber type\n * @param {string} base - base of the number\n * @returns {BigNumber}\n */\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\n/**\n * Get the max value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Get the min value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Convert the number to a fixed precision\n * @func\n * @param {string} value - the number that need to convert\n * @param {number} num - the number for method toFixed()\n * @returns {string}\n */\nexport const toNatural = (value, num = 0) =>\n  BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const hexToNaturalWithPercentage = (value) =>\n  `${bg(hexToNumberString(value), -18)\n    .sd(4)\n    .times(100)\n    .toFixed(4)\n    .toString()}%`;\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const deriToNaturalWithPercentage = (value) =>\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasInvalidArgsValue = (...args) =>\n  args.some(\n    (i) =>\n      // console.log(bg(i))\n      isNaN(i.toString()) || i.toString() === '0'\n  );\n\n// language\nexport const isObject = (obj) => typeof obj === 'object';\n\n//const np = () => {}\n//const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// http\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    //const response = await fetch(url);\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    //console.log(err);\n  }\n  return false;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    if (await checkHttpServerIsAlive(url)) {\n      //console.log(url)\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  //console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index].url\n  //console.log(res)\n  if (res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): cannot find alive RPC server in ${urls}`)\n  }\n};\n\n// ethereum chain\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};\n\nexport const getWalletBalanceUnit = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let index;\n  const unitNetworkIdsMap = {\n    ETH: ['1', '3', '42'],\n    BNB: ['56', '97'],\n    HT: ['128', '256'],\n  };\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\n  for (let i = 0; i < networkIdsArray.length; i++) {\n    if (networkIdsArray[i].includes(chainId)) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== undefined) {\n    return Object.keys(unitNetworkIdsMap)[index];\n  }\n  if (chainId === '') {\n    return '';\n  }\n  throw new Error('Invalid Network:', chainId);\n};\n\nexport const getPoolBaseSymbolList = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = [];\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol } = pools[i];\n    if (bTokenSymbol && symbol) {\n      result.push(`${symbol}/${bTokenSymbol}`);\n    }\n  }\n  return result;\n};\n\nexport const getPoolBaseTokenAddressObject = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = {};\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol, pool } = pools[i];\n    const key = `${symbol}/${bTokenSymbol}`;\n    if (bTokenSymbol && symbol) {\n      result[key] = pool;\n    }\n  }\n  return result;\n};\n\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\n//   if (pool.length > 0) {\n//     return [\n//       pool[0].pool,\n//       pool[0].bToken,\n//       pool[0].pToken,\n//       pool[0].lToken,\n//       pool[0].dToken,\n//       pool[0].MiningVault,\n//       pool[0].initialBlock,\n//     ];\n//   }\n//   console.log(\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\n//   );\n//   return [];\n// };\n\n// get config by poolAddress\nexport const getPoolContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  // console.log(\n  //   `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  // );\n  return [];\n};\n\nexport const getMiningVaultContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\n// export const getMiningVaultRouterContractAddress = (chainId) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   if (pools.length > 0) {\n//     if (pools[0].MiningVaultRouter) {\n//       return pools[0].MiningVaultRouter;\n//     }\n//   }\n// };\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  }\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\n};\n\nexport const getSlpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n    };\n  }\n  console.log(\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getLpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getOracleUrl = (chainId, poolAddress) => {\n  const env = DeriEnv.get()\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    return 'https://oracle4.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (chainId, poolAddress) => {\n  let url = getOracleUrl(chainId, poolAddress);\n  //console.log('oracle url', url);\n  let retry = 2;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    //if (res && !res.timeout) {\n    if (res.ok) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(2).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\n  const responseJson = await getOracleInfo(chainId, poolAddress);\n  let price = responseJson.price;\n  if (!price) {\n    price = '0';\n  }\n  return deriToNatural(responseJson.price).toString();\n};\nexport const getOraclePrice = getBTCUSDPrice;\n\nexport const getChainProviderUrl = async(chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrlsConfig(chainId)\n  if (urls.length > 0) {\n    return await getLatestRPCServer(urls)\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const format = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`)\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`)\n  }\n};","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\nimport {\n  getPoolContractAddress,\n  getMiningVaultContractAddress,\n  getBTCUSDPrice,\n  bg,\n  naturalToDeri,\n  BigNumber,\n  format,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  getMiningVaultRouterContractAddress\n} from '../config'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transactPool(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transactPool(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transactPool(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriContractAddress(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  getPoolContractAddress,\n} from '../utils';\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import {\n  getPoolContractAddress,\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../utils';\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getRestServerConfig, DeriEnv } from '../config';\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './tradeHistoryApi';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url, opts) => {\n  const resp = await fetch(url, opts);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contractTransactionApi';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from './slpPoolApi'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from './clpPoolApi'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2PoolApi'\nimport { wsInstance } from './apiGlobals'\nimport { getRestServerConfig, DeriEnv } from '../config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { perpetualPoolFactory } from '../factory/contracts';\nimport { getBTCUSDPrice } from '../utils';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(chainId, poolAddress) {\n      try {\n        const res = await getBTCUSDPrice(chainId, poolAddress);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(chainId, poolAddress) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(chainId, poolAddress);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n}\nexport default new Version()","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nconst versionKey = 'deri-current-version'\n\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  return version.current === 'v2' || version.current === 'v2_lite' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getPoolInfoApy } from './databaseApi';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './apiGlobals';\nimport {\n  hasInvalidArgsValue,\n  naturalWithPercentage,\n  deriToNatural,\n  getPoolContractAddress,\n  getBTCUSDPrice,\n  bg,\n  BigNumber,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  let price = ''\n  try {\n    price = await getBTCUSDPrice(chainId, poolAddress);\n  } catch (err) {\n    console.log(err)\n  }\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  if (price === '') {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, isProvider) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress, isProvider);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    await priceCache.update(chainId, poolAddress);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  return (await deri.balance(accountAddress)).toString();\n};\n","import { DeriEnv } from '../../config';\nimport { getConfig } from './config';\n\nconst expendPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expendPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          router: pool.router,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          unit: symbol.unit,\n          version: 'v2_lite',\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getPoolConfigList = (version='v2') => {\n  const config = getConfig(version)\n  if (version === 'v2') {\n    return expendPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expendPoolConfigV2Lite(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version)\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId, version='v2') => {\n  // check the bToken in v2_lite\n  if (version === 'v2_lite') {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\n\nexport const getPoolVersion = (poolAddress) => {\n  const pools = ['v2', 'v2_lite'].reduce((acc, version) => {\n    return acc.concat(getConfig(version)['pools'])\n  }, [])\n  //console.log('pools', pools)\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress)\n  const config = getConfig(version)\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool\n  }\n  throw new Error(`Cannot find the pool by poolAddress(${poolAddress})`);\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n","import { getConfig } from './config';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getConfig(version)\n  return config.brokerManager\n};\n\nexport const getBrokerConfig = (chainId, version) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { isUsedRestOracle } from '../config/oracle';\nimport {\n  WooOracle,\n  WrappedOracle,\n  // OffchainOracle,\n  BrokerManager,\n  PTokenAirdrop,\n  BToken,\n} from '../contract';\nimport { RestOracle } from '../utils'\n\nexport const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal) => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      // if (['80001'].includes(chainId)) {\n      //   instanceMap[key] = new ChainlinkOracle(\n      //     chainId,\n      //     address,\n      //     symbol,\n      //     decimal\n      //   );\n      // } else if (['137', '97'].includes(chainId)) {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (['56', '137', '97','80001'].includes(chainId)) {\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\n      } else {\n        instanceMap[key] = new WooOracle(chainId, address, symbol, decimal);\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\n\nexport const bTokenFactory = factory(BToken);\n\nexport const brokerManagerFactory = factory(BrokerManager);\n\nexport const pTokenAirdropFactory = factory(PTokenAirdrop)\n","var map = {\n\t\"./de/Signin.json\": 557,\n\t\"./de/bridge.json\": 558,\n\t\"./de/broker.json\": 559,\n\t\"./de/dip-history.json\": 560,\n\t\"./de/footer.json\": 561,\n\t\"./de/governance.json\": 562,\n\t\"./de/header.json\": 563,\n\t\"./de/home.json\": 564,\n\t\"./de/lite.json\": 565,\n\t\"./de/mining.json\": 566,\n\t\"./de/mobile-lite.json\": 567,\n\t\"./de/pro.json\": 568,\n\t\"./de/team.json\": 569,\n\t\"./en/Signin.json\": 570,\n\t\"./en/bridge.json\": 571,\n\t\"./en/broker.json\": 572,\n\t\"./en/dip-history.json\": 573,\n\t\"./en/footer.json\": 574,\n\t\"./en/governance.json\": 575,\n\t\"./en/header.json\": 576,\n\t\"./en/home.json\": 577,\n\t\"./en/lite.json\": 578,\n\t\"./en/mining.json\": 579,\n\t\"./en/mobile-lite.json\": 580,\n\t\"./en/pro.json\": 581,\n\t\"./en/team.json\": 582,\n\t\"./zh/Signin.json\": 583,\n\t\"./zh/bridge.json\": 584,\n\t\"./zh/broker.json\": 585,\n\t\"./zh/dip-history.json\": 586,\n\t\"./zh/footer.json\": 587,\n\t\"./zh/governance.json\": 588,\n\t\"./zh/header.json\": 589,\n\t\"./zh/home.json\": 590,\n\t\"./zh/lite.json\": 591,\n\t\"./zh/mining.json\": 592,\n\t\"./zh/mobile-lite.json\": 593,\n\t\"./zh/pro.json\": 594,\n\t\"./zh/team.json\": 595\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 556;","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        //'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction App({intl}) {\n  if(isBrowser){\n    return <DesktopApp locale={intl.locale}/>\n  }\n  if(isMobile){\n    return <MobileApp locale={intl.locale}/>\n  }\n}\n\nexport default inject('intl')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    // symbol = symbol+'_V2'\n    this.initWebSocket()\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    if(this.ws){\n      this.ws.emit('un_get_kline_update', {\n        symbol : symbol, 'time_type' : 'min'\n      })\n    }\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n   }\n\n   async load(wallet,spec,callback){\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      // const fundingFee = await getFun\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(this.interval !== null){\n       clearInterval(this.interval);\n     }\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n    if(wallet){\n      this.wallet= wallet; \n    }\n    if(spec){\n      this.spec = spec\n    }\n    if(callback){\n      this.callback = callback;\n    }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    minInitialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    bTokenSymbolDisplay : ['BUSD']\n  }\n\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbolDisplay = this.bTokenSymbolDisplay(spec)\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite){\n      return [spec.bTokenSymbol];\n    }\n    const {bTokenSymbol = [],bTokenMultiplier = []} = spec\n    return bTokenSymbol instanceof Array && bTokenSymbol.map((bToken,index) => `<span class='btoken-symbol'>${bToken}(<span class='multiplier' title='${Intl.get('lite','multiplier-tip')}'>${bTokenMultiplier[index]}x</span>)</span>`)\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet && wallet.supportChain && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,version,finishedCallback){    \n    const all = await this.configInfo.load(version);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() && !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback)\n  }\n\n  async onSymbolChange(spec,finishedCallback){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback)\n  }\n\n  async onChange(config,changed,finishedCallback){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback){\n     //切换指数\n    if(symbolChanged && config){\n      const symbol = getFormatSymbol(config.symbol)\n      this.oracle.unsubscribeBars(symbol);\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(symbol)\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,position => this.setPosition(position)),\n        this.contractInfo.load(wallet,config),\n        this.loadFundingRate(wallet,config),\n        this.historyInfo.load(wallet,config)\n      ]).then(results => {\n        if(results.length === 4){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n      })\n    }\n  }\n\n\n    //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n    getDefaultConfig(configs = [],wallet){\n      let defaultConfig = null;\n      if(configs.length > 0){    \n        const fromStore = this.getFromStore();\n        if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n          defaultConfig = fromStore;\n        }\n        if(defaultConfig){\n          //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n          const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n          if(pos === -1){\n            defaultConfig = configs[0];\n          }\n        } else {\n          defaultConfig = configs[0]\n        }   \n      }\n      return defaultConfig;    \n    }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    if(position){\n      this.setPosition(position)\n    }\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      const volume = increment / (price * this.contract.multiplier * this.contract.minInitialMarginRatio);\n      this.setVolume(volume.toFixed(0))\n    }\n  }\n\n\n  get volumeDisplay(){\n    if(Math.abs(this.volume) === 0 || this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n\n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    const volume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld = contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = totalVolume * price * contract.multiplier\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    \n    return ''\n  }\n\n\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n// const version = new Version();\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version} intl={intl}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    if (typeof window.ethereum !== undefined) {\n      web3Instance = new Web3(window.ethereum);\n      return web3Instance;\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      console.log(`--- web3factory init (${chainId}) ---`)\n      // using metaMask ethereum object\n      if (isBrowser() && !isJsDom() && typeof window.ethereum === 'object') {\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else if (isBrowser() && !isJsDom()) {\n        // MetaMask plugin is not installed in the browser\n        throw new Error('Please install MetaMask first');\n      } else {\n        const providerUrl = await getChainProviderUrl(chainId);\n        web3InstanceMap[chainId] = new Web3(\n          new Web3.providers.HttpProvider(providerUrl)\n        );\n        return web3InstanceMap[chainId];\n      }\n    },\n  };\n})();","import { DeriEnv } from '../../config';\nimport jsonConfig from '../resources/config.json';\nimport { validateObjectKeyExist, validateIsArray } from '../utils';\n\nconst validateConfigV2 = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['bTokens'], 'bTokens');\n  config['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processConfigV2 = (config) => {\n  // process config\n  config['bTokenCount'] = config['bTokens'].length;\n  config['symbolCount'] = config['symbols'].length;\n};\n\nconst validateConfigV2Lite = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2Lite = (config) => {\n  // process config\n  config['symbolCount'] = config['symbols'].length;\n};\n\nconst getJsonConfig = (version) => {\n  const env = DeriEnv.get();\n  let configs = typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && ['v2', 'v2_lite'].includes(version)) {\n    configs = configs[version]\n  }\n  if (['prod', 'dev'].includes(env)){\n    //console.log(env)\n    if (configs && configs[env]) {\n      //console.log(configs[env])\n      const pools = configs[env].pools;\n      if (pools && Array.isArray(pools)) {\n        if (version === 'v2') {\n          for (let i = 0; i < pools.length; i++) {\n            validateConfigV2(pools[i]);\n            processConfigV2(pools[i]);\n          }\n        } else if (version === 'v2_lite') {\n          for (let i = 0; i < pools.length; i++) {\n            validateConfigV2Lite(pools[i]);\n            processConfigV2Lite(pools[i]);\n          }\n        }\n      }\n      //console.log(configs[env])\n      validateObjectKeyExist(['oracle'], configs[env], 'oracle')\n      validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n      return configs[env];\n    }\n  }\n  throw new Error(\n    `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n  );\n};\n\nexport const getConfig = (version='v2') => {\n  return getJsonConfig(version);\n};\n","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { bg } from '../../utils';\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('_I_')\n    return bg(res, `-${this.decimal}`).toString();\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { chainlinkOracleAbi } from '../abis';\nimport { bg } from \"../../utils\";\n\nexport class ChainlinkOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, chainlinkOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    const res = await this._call('latestRoundData');\n    if (res && res.answer) {\n      return bg(res.answer, `-${this.decimal}`).toString()\n    }\n  }\n}","import { ContractBase } from \"./contract_base\";\nimport { brokerManagerAbi } from './abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { offchainOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class OffchainOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, offchainOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}","import { ContractBase } from './contract_base'\nimport { pTokenAirdropAbi } from './abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { ContractBase } from './contract_base'\nimport { bTokenLiteAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenLiteAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  // async transfer() {\n  // call transfer\n  // }\n}","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\nimport { getSlpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\nimport { getClp2ContractAddress } from '../utils';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n  lTokenFactory,\n} from '../factory/contracts';\nimport { bg, getClpContractAddress } from '../utils';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { getConfig } from './config';\n\nexport const getOracleConfigList = (version) => {\n  const config = getConfig(version)\n  return config.oracle\n};\n\nexport const isUsedRestOracle = (symbol) => {\n  return ['AXSUSDT', 'MANAUSDT'].includes(symbol);\n};\n\nexport const getOracleConfig = (chainId, symbol, version='v2') => {\n  const filteredByChainId = getOracleConfigList(version).filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  throw new Error(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { ContractBase } from '../contract_base'\nimport { perpetualPoolAbi } from '../abis';\nimport { deriToNatural, hexToNumber, bg } from '../../utils'\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../contract_base'\nimport { perpetualPoolRouterAbi} from '../abis';\nimport { naturalToDeri } from '../../utils'\nimport { MAX_INT256 } from '../../config';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../contract_base'\nimport { lTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import Web3 from 'web3';\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class Contract {\n  constructor(chainId, contractAddress, contractAbi, isProvider) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n    this.isProvider = isProvider;\n  }\n  async _init() {\n    if (!this.web3) {\n      if (this.isProvider) {\n        this.web3 = await web3Factory(this.chainId);\n      } else {\n        this.web3 = metaMaskWeb3();\n      }\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  setAccount(accountAddress) {\n    this.accountAddress = accountAddress;\n    return this;\n  }\n  setPool(poolAddress) {\n    this.poolAddress = poolAddress;\n    return this;\n  }\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while(retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}(${args})' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n      //this.web3.eth.getGasPrice(),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\nimport {\n  hasInvalidArgsValue,\n  getBTCUSDPrice,\n  getOracleInfo,\n  deriToNatural,\n  bg,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  async _transactPool(method, args = [], accountAddress) {\n    await this._init()\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    // const [gas, gasPrice] = await Promise.all([\n    //   this._estimatedGas(method, [...args, ...signed], accountAddress),\n    //   this.web3.eth.getGasPrice(),\n    // ]);\n    //console.log(`gasPrice ${gasPrice / 1000000000} GW`);\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\n    try {\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = await this.getParameters();\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (hasInvalidArgsValue(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (hasInvalidArgsValue(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    //await this.web3.eth.getAccounts(console.log)\n    //console.log('depositMargin');\n    let res;\n    try {\n      let tx = await this._transactPool(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { Contract } from './contract';\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\n/* eslint-enable */\n\nexport class BTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    allowance = deriToNatural(allowance);\n    return allowance.gt(0);\n  }\n\n  async unlock(accountAddress) {\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { deriToNatural, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { deriToNatural } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import Web3 from 'web3';\nimport { getDBProviderUrlsConfig } from '../config/database';\nimport { getLatestRPCServer } from '../utils';\n\nexport class DatabaseBaseContract {\n  constructor(contractAddress, contractAbi) {\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n  _init() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      this.contractAbi,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async _call(method, args) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch (err) {\n        this.providerUrl = null\n        console.log(err.toString())\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { DatabaseBaseContract } from './database_base';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, DB_CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","import { DatabaseBaseContract } from './database_base'\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\n  constructor(contractAddress) {\n    super(contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi'], isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI['abi'],\n    //   this.contractAddress\n    // );\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends Contract {\n  constructor(chainId, contractAddress, useProvider) {\n    super(chainId, contractAddress, CONTRACT_ABI, useProvider);\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { PerpetualPool } from '../contract/perpetual_pool';\nimport { BTokenContract } from '../contract/bToken';\nimport { PTokenContract } from '../contract/pToken';\nimport { LTokenContract } from '../contract/lToken';\nimport { DatabaseContract } from '../contract/database';\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\n\nimport { DeriEnv } from '../config/env';\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\nimport { SlpPool } from '../contract/slp_pool';\nimport { ClpPool } from '../contract/clp_pool';\nimport { Clp2Pool } from '../contract/clp2_pool';\nimport { DeriContract } from '../contract/deri';\nimport { WormholeContract } from '../contract/wormhole';\n//import { getLpContractAddress } from '../utils';\n// import { getPoolBaseSymbolList } from '../utils'\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n      isProvider\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const bTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\n      return bTokenInstanceMap[key];\n    }\n    const bToken = new BTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new BTokenContract\")\n    bTokenInstanceMap[key] = bToken;\n    return bToken;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new LTokenContract\")\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\nexport const miningVaultPoolFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\n    // console.log(\"new MiningValutPool\")\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();\n\nexport const deriFactory = (function () {\n  const deriInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(deriInstanceMap).includes(key)) {\n      return deriInstanceMap[key];\n    }\n    const deri = new DeriContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    deriInstanceMap[key] = deri;\n    return deri;\n  };\n})();\n\nexport const wormholeFactory = (function () {\n  const wormholeInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\n      return wormholeInstanceMap[key];\n    }\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\n    wormholeInstanceMap[key] = wormhole;\n    return wormhole;\n  };\n})();\n\nexport const miningVaultRouterFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","import { ContractBase } from '../contract_base'\nimport { offchainOracleAbi, perpetualPoolLiteAbi } from '../abis';\nimport { deriToNatural, naturalToDeri, getPriceInfo } from '../../utils'\n//import { MAX_INT256} from '../../config'\nimport { getPoolConfig } from '../../config';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'v2_lite'\n    );\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\n    this.bTokenAddress = '';\n    this.lTokenAddress = '';\n    this.pouterAddress = '';\n    this.liquidatorQualifierAddress = '';\n    this.protocolFeeCollector = '';\n  }\n\n  async _update() {\n    await Promise.all([this.getAddresses(), this.getParameters()]);\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    this.bTokenAddress = res.bTokenAddress;\n    this.lTokenAddress = res.lTokenAddress;\n    this.pTokenAddress = res.pTokenAddress;\n    this.liquidatorQualifierAddress = res.liquidatorQualifierAddress;\n    this.protocolFeeCollector = res.protocolFeeCollector;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n  async _getSymbolPrices() {\n    let prices = []\n    if (this.offchainSymbolIds.length > 0) {\n      const symbolNames = (\n        await Promise.all(\n          this.offchainSymbolIds.reduce(\n            (acc, i) => acc.concat([this.getSymbol(i)]),\n            []\n          )\n        )\n      ).map((s) => s.symbol);\n      const priceInfos = await Promise.all(\n        symbolNames.reduce((acc, s) => acc.concat([getPriceInfo(s)]), [])\n      );\n      prices = priceInfos.reduce((acc, p, index) => {\n        acc.push([\n          this.offchainSymbolIds[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices()\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../contract_base'\nimport { lTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../contract_base'\nimport { pTokenLiteAbi } from '../abis';\nimport { deriToNatural } from '../../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n"],"sourceRoot":""}