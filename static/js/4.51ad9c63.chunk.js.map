{"version":3,"sources":["utils/DeriNumberFormat.js","components/Button/Button.js","components/hoc/withModal.js","hooks/useQuery.js","components/Mining/Liquidity/Liquidity.js","components/Mining/Liquidity/Dialog/AddLiquidity.js","hooks/useSpecification.js","components/Mining/Liquidity/Dialog/RemoveLiquidity.js","components/Mining/Liquidity/LiquidityMining.js","components/Claim/Claim.js","hooks/useClaimInfo.js","hooks/useConfig.js","components/Mining/Trade/Liquidity.js","components/Mining/Trade/TradeMining.js","../node_modules/react-modal/lib/index.js"],"names":["DeriNumberFormat","props","useState","renderablity","setRenderablity","useEffect","allowZero","others","value","Math","abs","displayType","Button","btnText","className","disabled","click","afterClick","status","setStatus","pending","setPending","loadRef","useRef","onClick","a","current","style","display","ref","marginRight","withModal","Component","appElement","document","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","overflow","state","modalIsOpen","this","overlayMerged","Object","assign","mergedStyle","isOpen","onClose","React","useQuery","URLSearchParams","useLocation","search","AddDialog","wallet","address","baseToken","afterAdd","balance","isLpPool","baseTokenId","symbolId","amount","setAmount","decimal","setDecimal","addValue","setAddValue","spec","setSpec","loadSpec","isConnected","getSpecification","detail","chainId","account","useSpecification","addLiq","max","bg","gt","alert","minAddLiquidity","isNaN","res","addLpLiquidity","addLiquidity","success","toFixed","substring","indexOf","length","thousandSeparator","decimalScale","type","placeholder","onChange","e","target","RemoveDialog","liqInfo","afterRemove","setBalance","remove","shares","cur","removeLpLiquidity","removeLiquidity","data-dismiss","Operator","loadLiquidity","loadLiqidityInfo","isApproved","setIsApproved","btnType","setBtnType","setIsOpen","buttonElment","setButtonElment","loadBalance","eqInNumber","total","getLpWalletBalance","getWalletBalance","isApprove","isLpUnlocked","result","isUnlocked","approve","unlockLp","unlock","error","message","connect","el","inject","observer","liquidity","setLiquidity","bToken","setBToken","loadLiquidityInfo","getPoolInfoApy","apyPool","getPoolLiquidity","pooLiquidity","info","getLpLiquidityInfo","getLiquidityInfo","isLP","getLpPoolInfoApy","lapy","lpApy","apy2","shareValue","poolLiquidity","apy","percent","values","isCakeLP","suffix","title","isSushiLP","LiquidityMining","Claim","miningClaim","tradingClaim","setBtnText","claimed","setClaimed","claimInfo","setClaimInfo","interval","loadClaimInfo","getUserInfoAll","unclaimed","valid","harvestDeriLp","lp","harvestDeriTrade","trade","window","setInterval","clearInterval","useClaimInfo","claimInfoInterval","remainingTime","setRemainingTime","config","DeriEnv","get","useConfig","claim","text","parseInt","Date","now","mintDToken","period","dis","h","m","s","trading","symbol","userInfoInPool","setUserInfoInPool","tradeSummary","setTradeSummary","history","useHistory","loadUserInfoInPool","userInfo","getUserInfoInPool","userInfoPool","myTradingVolumeCurrent","volume1h","getTradeInfo","poolInfo","totalTradingVolumeCurrent","switch","pool","push","TradeMining","defineProperty","exports","obj","_Modal","require","_Modal2","__esModule","default","module"],"mappings":"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","file":"static/js/4.51ad9c63.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if((props.value || ((Math.abs(props.value)) === 0 && allowZero === true))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import {useState,useRef} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [pending, setPending] = useState(false);\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  return(\n    <button className={className} onClick={onClick} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? 'PENDING' : btnText  }\n        </button>\n  )\n}","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 2,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return WithModal;\n}\nexport default withModal;","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React, { useState, useEffect} from 'react'\nimport {\n\tgetLiquidityInfo,getPoolInfoApy,isUnlocked,unlock,getPoolLiquidity, getWalletBalance, unlockLp, isLpUnlocked, getLpWalletBalance, getLpLiquidityInfo,getLpPoolInfoApy\n} from '../../../lib/web3js/indexV2'\nimport AddLiquidity from './Dialog/AddLiquidity';\nimport RemoveLiquidity from './Dialog/RemoveLiquidity';\nimport Button from '../../Button/Button';\nimport { inject, observer } from 'mobx-react';\nimport withModal from '../../hoc/withModal';\nimport { eqInNumber, isCakeLP, isLP, isSushiLP } from '../../../utils/utils';\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat';\n\nfunction Liquidity({wallet,chainId,baseToken,address,type,baseTokenId,symbolId}) {\n  const [liquidity,setLiquidity] = useState({})\n  const [bToken,setBToken] = useState(baseToken)\n\n\tconst isLpPool = (type === 'lp')\n\t\n\n\tconst loadLiquidityInfo = async () => {\n\t\tconst apyPool = await getPoolInfoApy(chainId,address)\n\t\tconst pooLiquidity = await getPoolLiquidity(chainId,address);\n\t\tif(wallet.isConnected() && eqInNumber(chainId , wallet.detail.chainId)){\n\t\t\tlet info = null;\n\t\t\tif(isLpPool){\n\t\t\t\tinfo = await getLpLiquidityInfo(chainId,address,wallet.detail.account)\n\t\t\t} else {\n\t\t\t\tinfo = await getLiquidityInfo(chainId,address,wallet.detail.account);\n\t\t\t}\n\t\t\tlet lpApy ;\n\t\t\tif(isLP(address)){\n\t\t\t\tlet lapy = await getLpPoolInfoApy(chainId,address)\n        \t\tlpApy = (+lapy.apy2) * 100;                     \n\t\t\t}\n\n\t\t\tif(info){\n\t\t\t\tif(!info.shareValue){\n\t\t\t\t\tinfo.shareValue = 1; \n\t\t\t\t}\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal :  (+info.poolLiquidity),\n\t\t\t\t\tapy : (+apyPool.apy) * 100,\n\t\t\t\t\tshareValue : info.shareValue,\n\t\t\t\t\tpercent : ((info.shares * info.shareValue) / info.poolLiquidity) * 100 ,\n\t\t\t\t\tshares : info.shares,\n\t\t\t\t\tvalues : info.shares * info.shareValue,\n\t\t\t\t\tlpApy\n\t\t\t\t})\t\n\t\t\t}\n\t\t} else {\n\t\t\t\n\t\t\tlet lpApy ;\n\t\t\tif(isLP(address)){\n\t\t\t\tlet lapy = await getLpPoolInfoApy(chainId,address)\n        \t\tlpApy = (+lapy.apy2) * 100;                           \n\t\t\t}\n\t\t\tif(pooLiquidity){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal : pooLiquidity.liquidity,\n\t\t\t\t\tapy : (+apyPool.apy) * 100,\n\t\t\t\t\tlpApy\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tloadLiquidityInfo();\n\t\tif(isCakeLP(address)){\n\t\t\tsetBToken('CAKE-LP')\n\t\t}\n\t\treturn () => {}\n\t}, [wallet.detail.account,baseToken])\n\n\n  return (\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Provide { bToken } Earn DERI</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Pool Total Liquidity</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.total} suffix={` ${ bToken}`  } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">APY</div>\n\t\t\t\t\t\t<div className='text-num' >\n\t\t\t\t\t\t\t<span title={isLP(address) && 'DERI-APY'} className={`${isLP(address) && 'sushi-apy-underline'}`}><DeriNumberFormat value={ liquidity.apy } decimalScale={2} suffix='%'/></span>\n\t\t\t\t\t\t\t{isLP(address) && <><span> +</span> <span className=\"sushi-apy-underline text-num\" title={isSushiLP(address) ? 'SUSHI-APY' : 'CAKE-APY'}> \n\t\t\t\t\t\t\t<DeriNumberFormat value={ liquidity.lpApy } allowZero={true}  decimalScale={2} suffix='%'/></span></>}\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t</div>\t\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Liquidity Share Value</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat  allowZero={true} decimalScale={6} value={ liquidity.shareValue} suffix={ ' '+ bToken } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">My Liquidity Pencentage</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.percent } decimalScale={2} suffix={'%'}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Staked Balance </div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true}  value={ liquidity.shares  } decimalScale={2} /> <span>Shares</span> </div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd claim-network\">\n\t\t\t\t\t<div className=\"text-title money\"><DeriNumberFormat allowZero={true}   value={liquidity.values} suffix ={' '+ bToken } decimalScale={2}/></div>\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title-check\">\n\t\t\t\t</div>\n\t\t\t\t<Operator wallet={wallet} chainId={chainId} address={address} liqInfo={liquidity} baseToken={bToken} loadLiquidity={loadLiquidityInfo} isLpPool={isLpPool} loadLiqidityInfo={loadLiquidityInfo} symbolId={symbolId} baseTokenId={baseTokenId}/>\n\t</div>\n  )\n}\n\n\nconst AddDialog = withModal(AddLiquidity)\nconst RemoveDialog = withModal(RemoveLiquidity)\n\n//操作区\nconst Operator = ({wallet,chainId,address,baseToken,loadLiquidity,isLpPool,liqInfo,loadLiqidityInfo,baseTokenId,symbolId})=> {\n\tconst [isApproved,setIsApproved] = useState(false)\n\tconst [btnType, setBtnType] = useState('add')\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst [balance, setBalance] = useState('');\n\tconst [buttonElment, setButtonElment] = useState(null);\n\t\n\n  const loadBalance = async () => {\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\n\t\t\tlet total = null;\n\t\t\tif(isLpPool){\n\t\t\t\ttotal = await getLpWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\n\t\t\t} else {\n\t\t\t\ttotal = await getWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\n\t\t\t}\n\t\t\tif(typeof total !== 'object'){\n\t\t\t\tsetBalance(total)\t\t\t\t\n\t\t\t}\n    }\n  }\n\n  useEffect(() => {\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n    return () => {}\n  }, [wallet.detail.account])\n\n\n\tconst isApprove = async () => {\n\t\tif(isLpPool){\n\t\t\tconst result = await isLpUnlocked(chainId,address,wallet.detail.account) \t\t\t \n\t\t\tsetIsApproved(result);\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = await isUnlocked(chainId,address,wallet.detail.account,baseTokenId) \t\t\t \n\t\t\tsetIsApproved(result);\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\n\n\tconst approve = async () => {\n\t\tlet res = null;\n\t\tif(isLpPool){\n\t\t\tres = await unlockLp(chainId,address,wallet.detail.account);\n\t\t} else {\n\t\t\tres = await unlock(chainId,address,wallet.detail.account,baseTokenId);\n\t\t}\t\t\n\t\tif(res && res.success){\n\t\t\tsetIsApproved(true)\n\t\t} else {\n\t\t\talert(res.error ?  res.error.message || 'Approve failed' : 'Approve failed')\n\t\t}\n  }\n\n\n\tconst connect =  async () => {\n\t\tawait wallet.connect();\n\t}\n\t\n\tconst addLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('add')\n\t}\n\n\tconst afterClick = () => {\n\t\tsetIsOpen(false);\n\t\tloadLiquidity()\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n\t}\n\n\tconst removeLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('remove')\n\t}\n\n\n  \n  useEffect(() => {\n\t\t//todo 判断网络\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId, chainId)){\n\t\t\tisApprove()\n    }\n\t\treturn () => {}\n\t}, [wallet.detail.account])\n\n\tuseEffect(() => {\t\t\n\t\tif(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId) && isApproved){\n\t\t\tsetButtonElment((<div className=\"add-remove-liquidity\">\n\t\t\t<button \n\t\t\t\t\tclassName=\"add-liquidity\"\n\t\t\t\t\tonClick={addLiquidity}>\n\t\t\t\t\tADD LIQUIDITY\n\t\t\t</button>\n\t\t\t<button className=\"remove-liquidity\" onClick={removeLiquidity}>\n\t\t\t\t\tREMOVE LIQUIDITY\n\t\t\t</button>\n\t\t</div>))\n\t\t} else {\n\t\t\tlet el = null\n\t\t\tif(!wallet.isConnected()){\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={connect} btnText='Connect Wallet'></Button></div>\n\t\t\t} else if(!eqInNumber(wallet.detail.chainId,chainId)) {\n\t\t\t\tel = <div className=\"approve\" ><Button className='approve-btn wrong-network' btnText='Wrong Network'></Button></div>\t\t\t\t\n\t\t\t} else if(!isApproved) {\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={approve} btnText='APPROVE'></Button></div>\n\t\t\t} \n\t\t\tsetButtonElment(el)\n\t\t}\n\t\t\t\n\t\treturn () => {};\n\t}, [wallet.detail.account,isApproved]);\n\n  return (\n    <div className=\"liquidity-btn\">\n\t\t\t{\n\t\t\t\tbtnType === 'add' \n\t\t\t\t? <AddDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} balance={balance}\n\t\t\t\t\t\t\t\t\t\t  address={address} wallet={wallet} baseToken={baseToken} afterAdd={afterClick} baseTokenId={baseTokenId}  symbolId={symbolId}/> \n\t\t\t\t: <RemoveDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} liqInfo={liqInfo} \n\t\t\t\t\t\t\t\t\t\t\taddress={address} wallet={wallet} baseToken={baseToken} afterRemove={afterClick} baseTokenId={baseTokenId} symbolId={symbolId}/>\n\t\t\t}\t\t\t\n\t\t\t{buttonElment}\n  </div>\n  )\n}\n\nexport default inject('wallet')(observer(Liquidity))","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport Button from '../../../Button/Button';\nimport Modal from 'react-modal'\nimport { addLiquidity, getWalletBalance, bg, addLpLiquidity } from '../../../../lib/web3js/indexV2';\nimport useSpecification from '../../../../hooks/useSpecification';\n\n\n\nexport default function AddLiquidity({wallet,address,baseToken,onClose,afterAdd,balance,isLpPool,baseTokenId,symbolId}){\n  const [amount, setAmount] = useState('0');\n  const [decimal, setDecimal] = useState('00');\n  const [addValue, setAddValue] = useState('')\n  const spec = useSpecification({wallet,address,symbolId});\n\n\n  const input = (e) => {\n    const {value} =e.target\n    setAddValue(value)\n  }\n\n  const addAll = () => {\n    setAddValue(balance);\n  }\n\n  const addLiq = async () => {\n    const max = bg(balance)\n    const cur = bg(addValue);\n    if(cur.gt(max)) {\n      alert(\"not sufficient funds\");\n      return false;\n    }\n    if(spec && (+addValue) < (+spec.minAddLiquidity)) {\n      alert(`The input liquidity shall not be less than ${spec.minAddLiquidity}`);\n      return false;\n    }\n    if(addValue <=0 || isNaN(addValue)){\n      alert(\"It has to be greater than zero\");\n      return false;\n    }\n    let res =  null;\n    if(isLpPool){\n      res = await addLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue);\n    } else{\n      res = await addLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue,baseTokenId)\n    }\n    \n    if (!res ||  !res.success) {\n      alert(\"failure of transaction\");\n    }\n    return true;\n  }\n\n  useEffect(() => {    \n    const amount = (+balance).toFixed(2)\n    const decimal = amount.substring(amount.indexOf('.') + 1,amount.length)\n    setAmount(amount);\n    setDecimal(decimal)\n    return () => {};\n  }, [balance]);\n\n\n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>ADD LIQUIDITY</div>\n            <div className='close' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>\n            <div className='margin-box-info'>\n              <div>Wallet Balance</div>\n              <div className='money'>\n                <span> \n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={amount } thousandSeparator={true} allowZero={true} decimalScale={0}/>.\n                    <span className='float'><NumberFormat displayType='text' value ={decimal} thousandSeparator={true} decimalScale={2} allowZero={true}/></span>\n                  </span> \n                    <div className='base-token'>{ baseToken }</div> \n                  </span>\n                <span className='add'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : addValue ? 'block' : 'none'}}>LIQUIDITY</div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY'\n                      value={addValue}\n                      onChange={input}\n                    />\n                  </div>\n                </div>\n                <div>{ baseToken }</div>\n              </div>\n              <div className='max'>\n                MAX: <span className='max-num'>{balance }</span>\n                <span className='max-btn-left' onClick={addAll}>ADD ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button className='margin-btn' click={addLiq} btnText='ADD' afterClick={afterAdd}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { getSpecification } from \"../lib/web3js/indexV2\";\n\nexport default function useSpecification({wallet,address,symbolId}){\n  const [spec, setSpec] = useState({});\n\n  const loadSpec = async () => {\n    if(wallet.isConnected() && address){\n      const spec =  await getSpecification(wallet.detail.chainId,address,symbolId);\n      setSpec(spec);\n    }\n  }\n\n  useEffect(() => {\n    loadSpec();\n    return () => {      \n    }\n  }, wallet.detail.account,address);\n\n  return spec;\n}","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport { removeLiquidity, bg, removeLpLiquidity } from '../../../../lib/web3js/indexV2';\nimport Button from '../../../Button/Button';\n\nexport default function RemoveLiquidity({wallet,address,liqInfo,onClose,afterRemove,isLpPool,baseTokenId}){  \n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [decimal, setDecimal] = useState('00');\n\n\n  const addAll = () => {\n    setAmount(liqInfo.shares)\n  }\n\n  const onChange = e => {\n    const {value} = e.target;\n    setAmount(value)\n  }\n\n  const remove = async () => {\n    const max = bg(liqInfo.shares);\n    const cur = bg(amount);\n    if(!isLpPool){\n      const balance = (+liqInfo.shares) - (+amount)\n      if (balance < 1 && balance !== 0) {\n        alert('Leaving staking balance of smaller than 1 is not allowed. Please click \"MAX\" to remove all if you are to withdraw all of your liquidity.');\n        return false;\n      }\n    }\n    if (cur.gt(max)) {\n      alert(`Your current max removable shares are  ${liqInfo.shares}`);\n      return false;\n    }\n    if (+amount <= 0 || isNaN(amount)) {\n      alert(\"Invalid Liquidity!\");\n      return false;\n    }\n    let res = null;\n    if(isLpPool){\n      res = await removeLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount);\n    } else {\n      res = await removeLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount,baseTokenId);\n    }\n    \n    if(!res || !res.success){\n      alert(\"failure of transaction\");\n      return false; \n    }\n    return true;\n  }\n\n\n  useEffect(() => {    \n    if(liqInfo && liqInfo.shares){\n      const balance = (+liqInfo.shares).toFixed(2)\n      const decimal = balance.substring(balance.indexOf('.') +1 ,balance.length)\n      setBalance(balance);\n      setDecimal(decimal)\n    }\n    return () => {};\n  }, [liqInfo.shares]);\n\n  \n  \n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>REMOVE LIQUIDITY</div>\n            <div className='close' data-dismiss='modal' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>          \n            <div className='margin-box-info'>\n              <div>Shares Available</div>\n              <div className='money'>\n                <span>\n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={balance} decimalScale={0} thousandSeparator={true}/>.\n                    <span className='float'>{decimal}</span>\n                  </span>\n                    </span>\n                <span className='remove'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : amount ? 'block' : 'none'}}>\n                      LIQUIDITY SHARES\n                    </div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY SHARES'\n                      value={amount}\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div>Shares</div>\n              </div>\n              <div className='max'>\n                <span>MAX REMOVEABLE:</span>\n                <span className='max-num'>{liqInfo.shares}</span>\n                <span className='max-btn-left' onClick={addAll}>REMOVE ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button click={remove} className='margin-btn' btnText='REMOVE' afterClick={afterRemove}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n      )\n}","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\n\nfunction LiquidityMining(props){\n  return (\n    <div className=\"liquidity-info\">\n      <Claim {...props} miningClaim={true}/>\n      <Liquidity {...props}/>\n  </div>)\n}\n\nexport default LiquidityMining","import { useState, useEffect} from 'react'\n\nimport useClaimInfo from \"../../hooks/useClaimInfo\";\nimport useConfig from \"../../hooks/useConfig\";\nimport { mintDToken } from \"../../lib/web3js/indexV2\";\nimport Button from '../Button/Button';\nimport { eqInNumber } from '../../utils/utils';\n\nexport default function Claim({wallet,miningClaim,tradingClaim}){\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\n\tconst [claimed, setClaimed] = useState(false);\n\tconst [claimInfo,claimInfoInterval] = useClaimInfo(wallet);\n\tconst [remainingTime, setRemainingTime] = useState('')\n\tconst config = useConfig(claimInfo.chainId) \n\n  //claim deri\n\tconst claim = async () => {\n\t\tif(!eqInNumber(wallet.detail.chainId,claimInfo.chainId)) {\n\t\t\talert(`Your DERI is on ${ config.text } . Connect to ${ config.text } to claim.`)\n\t\t\treturn ;\n\t\t}\n\t\tif (claimInfo.unclaimed === 0) {\n\t\t\talert('Sorry,no DERI to claim yet');\n\t\t\treturn;\n\t\t}\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\n\t\tif (now < 1800) {\n\t\t\talert('Claiming DERI is disabled during first 30 minutes of each epoch');\n\t\t\treturn;\n\t\t}\n\t\tconst res = await mintDToken(wallet.detail.chainId,wallet.detail.account)\n\t\tif(res.success){\n\t\t\tclearInterval(claimInfoInterval);\n\t\t\treturn true;\n\t\t} else {\n\t\t\talert('Claim failed')\n\t\t\treturn false;\n\t\t}\n  }\n\n\tconst click = async () => {\n\t\tif(wallet.isConnected()){\n\t\t\tconst res = await claim();\n\t\t\tif(res){\n\t\t\t\tsetClaimed(true)\n\t\t\t}\n\t\t} \n\t}\n\n\n\t\n\t//初始化按钮文案和事件\n\tconst initButton = () => {\n\t\tif(wallet.isConnected()){\n\t\t\tsetBtnText('CLAIM')\n\t\t} else {\n\t\t\tsetBtnText('Collect Wallet')\n\t\t}\n\t}\n  \n  useEffect(() => {\n\t\tlet interval = null;\n\t\tif(miningClaim){\n\t\t\t//计数器\n\t\t\tinterval = window.setInterval(() => {\n\t\t\t\tlet period = 3600 * 8;\n\t\t\t\tlet current = parseInt(Date.now()/1000);\n\t\t\t\tlet epochBegin = parseInt(current / period)*period;\n\t\t\t\tlet dis = (epochBegin + period - current);\n\t\t\t\tlet h = parseInt(dis / 3600);\n\t\t\t\tlet m = parseInt((dis % 3600)/60)\n\t\t\t\tlet s = parseInt(dis % 60) \n\t\t\t\tsetRemainingTime(`${h} h ${m} m ${s} s`);\n\t\t\t},1000);\n\t\t}    \n\n\t\tinitButton();\t\t\n    return () => {\n      interval && clearInterval(interval);\n\t\t};\n\t\t\n  }, [wallet.detail.account]);\n\n\n  return (\n    <div className='claim-box'>\n\t\t\t\t<div className='odd title'>{miningClaim ?  'My Liquidity-Providing Harvest in Current Epoch' : 'My Trading Harvest in Current Epoch'}</div>\n\t\t\t\t{miningClaim && <div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Current Epoch Remaining Time</div>\n\t\t\t\t\t\t<div className='text-num'>{ remainingTime }</div>\n\t\t\t\t</div>}\t\t\t\t\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>My Harvest in Current Epoch (estimated)</div>}\n\t\t\t\t\t\t{tradingClaim && <div className='text-title'> My Trading Harvest in Current Epoch (Est)</div>}\n\t\t\t\t\t\t<div className='text-num'>{ miningClaim ? claimInfo.harvestDeriLp : claimInfo.harvestDeriTrade} DERI</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Claimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{claimed ? ((+claimInfo.claimed) + (+claimInfo.unclaimed)).toFixed(2) : claimInfo.claimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Unclaimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimed ? 0 : claimInfo.unclaimed }</div>\n\t\t\t\t</div>\n\t\t\t\t{tradingClaim && \n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className='odd claim-network'>\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>Your DERI is on { config.text } . Connect to { config.text } to claim.</div>}\n\t\t\t\t</div>\n\t\t\t\t<div className='claim-btn'>\n\t\t\t\t\t<Button btnText={btnText} click={click} className='claim'/>\t\t\t\t\t\n\t\t\t\t</div>\n      </div>\n  ) \n}","import { useState, useEffect } from 'react'\nimport { getUserInfoAll ,deriToNatural} from '../lib/web3js/indexV2';\n\n\nexport default function useClaimInfo(wallet){\n  const [claimInfo, setClaimInfo] = useState({});\n  let interval = null;\n\n  const loadClaimInfo =  async () => {\n    if(wallet.isConnected()){\n      const claimInfo  = await getUserInfoAll(wallet.detail.account);\n      const claimed = (+claimInfo.total).toFixed(2);\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\n      const chainId = claimInfo.chainId\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade,chainId})\n    }\n  }\n\n  useEffect(() => {\n    interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\n      loadClaimInfo();\n    return () => clearInterval(interval);\n  }, [wallet.detail.account])\n  return [claimInfo,interval];\n}","import config from '../config.json'\nimport {DeriEnv} from '../lib/web3js/indexV2'\nexport default function useConfig(chainId,type = 'chainInfo'){\n  return config[DeriEnv.get()][type][chainId] || {};\n}","import { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { getUserInfoAll,getUserInfoInPool ,getPoolInfoApy} from '../../../lib/web3js/indexV2';\nimport { useHistory } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\n\n\n\nfunction Liquidity({wallet = {},trading,chainId,address,symbol}) {\n  const [userInfoInPool,setUserInfoInPool] = useState({})\n  const [tradeSummary, setTradeSummary] = useState({});\n  const history = useHistory();\n\n\tconst loadUserInfoInPool = async () => {\n\t\tconst userInfo = await getUserInfoAll(wallet.account);\n\t\tconst userInfoPool = await getUserInfoInPool(chainId,address,wallet.account);\n\t\tconst harvestDeriTrade = (+userInfo.trade).toFixed(2);\n\t\tconst myTradingVolumeCurrent = userInfoPool.volume1h\n\t\tsetUserInfoInPool({harvestDeriTrade,myTradingVolumeCurrent})\n\t}\n\n\tconst getTradeInfo = async () => {\n\t\tconst poolInfo = await getPoolInfoApy(chainId,address);\n\t\tconst totalTradingVolumeCurrent = poolInfo.volume1h\n\t\tsetTradeSummary({totalTradingVolumeCurrent})\n  }\n  \n  const toTrade = () => {\n    trading.switch({chainId : chainId,pool : address,symbol : symbol})\n    // sessionStorage.setItem('current-trading-pool',JSON.stringify())\n    history.push('/lite')\n  }\n\n\tuseEffect(() => {\n\t\tif(wallet && wallet.account){\n\t\t\tloadUserInfoInPool();\n\t\t\tgetTradeInfo();\n\t\t}\n\t\treturn () => {};\n\t}, []);\n\n  return(\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Trade to Earn DERI</div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">Total Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ tradeSummary.totalTradingVolumeCurrent || 0}</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">My Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ userInfoInPool.myTradingVolumeCurrent || 0 }</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd claim-network\">\n              \n        </div>\n        <div className=\"claim-btn\">\n            <button className=\"claim\" onClick={toTrade}>\n              TRADE\n            </button>\n        </div>\n    </div> \n  )\n}\nexport default inject('trading')(observer(Liquidity))","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\nexport default function TradeMining({wallet,...props}){\n  return(\n    <div className=\"trade-info\">\n      <Claim wallet={wallet} tradingClaim={true}/>\n\t\t\t<Liquidity {...props}/>\n  </div>\n  )\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];"],"sourceRoot":""}