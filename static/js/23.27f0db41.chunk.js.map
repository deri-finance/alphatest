{"version":3,"sources":["../../src.ts/index.ts","../../src.ts/utils.ts","pages/Rebate/Register.js","pages/Rebate/Rebate.js"],"names":["Register","closeRegisterModal","contract","registerAfter","useState","recruiterCode","setRecruiteCode","brokerCode","setBrokerCode","recruiterCodeKeccak256","setRecruiterCodeKeccak256","brokerCodeKeccak256","setBrokerCodeKeccak256","isChecking","setIsChecking","isBrokerLegitimate","setIsBrokerLegitimate","isRecruiterLegitimate","setIsRecruiterLegitimate","disabled","setDisabled","noBrokerLegitimateText","setNoBrokerLegitimateText","noRecruiterLegitimateText","setNoRecruiterLegitimateText","transactionTitle","text","icon","transactionContent","success","error","getRecruiterIsTrue","useCallback","a","recruiterAddresses","getBorkerCodeIsTrue","brokerAddresses","click","recruiterValue","registerBroker","res","hash","Emitter","emit","EVENT_TRANS_BEGIN","title","content","wait","receipt","console","log","transactionHash","status","EVENT_TRANS_END","context","useEffect","className","Icon","token","onClick","placeholder","value","onChange","event","target","isletter","test","keccak256Data","toUtf8Bytes","keccak256Value","keccak256","Button","width","height","fontSize","label","inject","observer","wallet","intl","lang","useLang","dict","accountType","setAccountType","brokerInfos","setBrokerInfos","updatedTime","setUpdatedTime","reBateInfo","setReBateInfo","claimed","setClaimed","unclaimed","setUnclaimed","isCopied","setIsCopied","totalUser","setTotalUser","explained","setExplained","totalFee","setTotalFee","isClaiming","setIsClaiming","useModal","preventScroll","closeOnOverlayClick","RegisterModal","openRegisterModal","addressList","chainIdList","chainId","detail","address","RebateContract","useContract","onCopy","code","navigator","clipboard","writeText","setTimeout","claim","bg","gt","claimBrokerRebate","claimRecruiterRebate","getClaimed","account","brokerClaimed","BigNumber","from","_hex","toString","recruiterClaimed","getBrokerInfos","recruiterInfos","obj","id","getTotalFee","brokerFees","recruiterFees","ShowRegister","getTotalUsers","axios","get","params","role","data","count","getBrokerRebate","getRecruiterRebate","total","totalBrokerRebate","totalRecruiterRebate","crrent","currentBrokerRate","currentRecruiterRate","currentRate","totalRebate","getUpdatedTime","updatedTimestamp","date","Date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","hour","getUTCHours","minute","getUTCMinutes","second","getUTCSeconds","switchType","minus","toNumber","classNames","Spinner","toFixed","isConnected","href","rel","WalletView","isShowWalletModal","DeriNumberFormat","decimalScale"],"mappings":"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","file":"static/js/23.27f0db41.chunk.js","sourcesContent":["\"use strict\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Indexed, Interface, LogDescription, TransactionDescription } from \"./interface\";\nexport { ConstructorFragment, ErrorFragment, EventFragment, Fragment, FunctionFragment, ParamType, FormatTypes, AbiCoder, defaultAbiCoder, Interface, Indexed, checkResultErrors, LogDescription, TransactionDescription };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.dnsEncode = exports.parseBytes32String = void 0;\nvar abi_1 = require(\"@ethersproject/abi\");\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return abi_1.AbiCoder; } });\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return abi_1.checkResultErrors; } });\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return abi_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"defaultAbiCoder\", { enumerable: true, get: function () { return abi_1.defaultAbiCoder; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return abi_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return abi_1.EventFragment; } });\nObject.defineProperty(exports, \"FormatTypes\", { enumerable: true, get: function () { return abi_1.FormatTypes; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return abi_1.Fragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return abi_1.FunctionFragment; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return abi_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return abi_1.Interface; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return abi_1.LogDescription; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return abi_1.ParamType; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return abi_1.TransactionDescription; } });\nvar address_1 = require(\"@ethersproject/address\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return address_1.getAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return address_1.getCreate2Address; } });\nObject.defineProperty(exports, \"getContractAddress\", { enumerable: true, get: function () { return address_1.getContractAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return address_1.getIcapAddress; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return address_1.isAddress; } });\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\nexports.base64 = base64;\nvar basex_1 = require(\"@ethersproject/basex\");\nObject.defineProperty(exports, \"base58\", { enumerable: true, get: function () { return basex_1.Base58; } });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nObject.defineProperty(exports, \"arrayify\", { enumerable: true, get: function () { return bytes_1.arrayify; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return bytes_1.concat; } });\nObject.defineProperty(exports, \"hexConcat\", { enumerable: true, get: function () { return bytes_1.hexConcat; } });\nObject.defineProperty(exports, \"hexDataSlice\", { enumerable: true, get: function () { return bytes_1.hexDataSlice; } });\nObject.defineProperty(exports, \"hexDataLength\", { enumerable: true, get: function () { return bytes_1.hexDataLength; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return bytes_1.hexlify; } });\nObject.defineProperty(exports, \"hexStripZeros\", { enumerable: true, get: function () { return bytes_1.hexStripZeros; } });\nObject.defineProperty(exports, \"hexValue\", { enumerable: true, get: function () { return bytes_1.hexValue; } });\nObject.defineProperty(exports, \"hexZeroPad\", { enumerable: true, get: function () { return bytes_1.hexZeroPad; } });\nObject.defineProperty(exports, \"isBytes\", { enumerable: true, get: function () { return bytes_1.isBytes; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return bytes_1.isBytesLike; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return bytes_1.isHexString; } });\nObject.defineProperty(exports, \"joinSignature\", { enumerable: true, get: function () { return bytes_1.joinSignature; } });\nObject.defineProperty(exports, \"zeroPad\", { enumerable: true, get: function () { return bytes_1.zeroPad; } });\nObject.defineProperty(exports, \"splitSignature\", { enumerable: true, get: function () { return bytes_1.splitSignature; } });\nObject.defineProperty(exports, \"stripZeros\", { enumerable: true, get: function () { return bytes_1.stripZeros; } });\nvar hash_1 = require(\"@ethersproject/hash\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", { enumerable: true, get: function () { return hash_1._TypedDataEncoder; } });\nObject.defineProperty(exports, \"dnsEncode\", { enumerable: true, get: function () { return hash_1.dnsEncode; } });\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return hash_1.hashMessage; } });\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return hash_1.id; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return hash_1.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return hash_1.namehash; } });\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return hdnode_1.defaultPath; } });\nObject.defineProperty(exports, \"entropyToMnemonic\", { enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return hdnode_1.getAccountPath; } });\nObject.defineProperty(exports, \"HDNode\", { enumerable: true, get: function () { return hdnode_1.HDNode; } });\nObject.defineProperty(exports, \"isValidMnemonic\", { enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } });\nObject.defineProperty(exports, \"mnemonicToEntropy\", { enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } });\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", { enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } });\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak256_1.keccak256; } });\nvar logger_1 = require(\"@ethersproject/logger\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\nvar sha2_1 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return sha2_1.computeHmac; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return sha2_1.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_1.sha512; } });\nvar solidity_1 = require(\"@ethersproject/solidity\");\nObject.defineProperty(exports, \"solidityKeccak256\", { enumerable: true, get: function () { return solidity_1.keccak256; } });\nObject.defineProperty(exports, \"solidityPack\", { enumerable: true, get: function () { return solidity_1.pack; } });\nObject.defineProperty(exports, \"soliditySha256\", { enumerable: true, get: function () { return solidity_1.sha256; } });\nvar random_1 = require(\"@ethersproject/random\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_1.randomBytes; } });\nObject.defineProperty(exports, \"shuffled\", { enumerable: true, get: function () { return random_1.shuffled; } });\nvar properties_1 = require(\"@ethersproject/properties\");\nObject.defineProperty(exports, \"checkProperties\", { enumerable: true, get: function () { return properties_1.checkProperties; } });\nObject.defineProperty(exports, \"deepCopy\", { enumerable: true, get: function () { return properties_1.deepCopy; } });\nObject.defineProperty(exports, \"defineReadOnly\", { enumerable: true, get: function () { return properties_1.defineReadOnly; } });\nObject.defineProperty(exports, \"getStatic\", { enumerable: true, get: function () { return properties_1.getStatic; } });\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return properties_1.resolveProperties; } });\nObject.defineProperty(exports, \"shallowCopy\", { enumerable: true, get: function () { return properties_1.shallowCopy; } });\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nexports.RLP = RLP;\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nObject.defineProperty(exports, \"computePublicKey\", { enumerable: true, get: function () { return signing_key_1.computePublicKey; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } });\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_1.SigningKey; } });\nvar strings_1 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"formatBytes32String\", { enumerable: true, get: function () { return strings_1.formatBytes32String; } });\nObject.defineProperty(exports, \"nameprep\", { enumerable: true, get: function () { return strings_1.nameprep; } });\nObject.defineProperty(exports, \"parseBytes32String\", { enumerable: true, get: function () { return strings_1.parseBytes32String; } });\nObject.defineProperty(exports, \"_toEscapedUtf8String\", { enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } });\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return strings_1.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return strings_1.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } });\nvar transactions_1 = require(\"@ethersproject/transactions\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return transactions_1.accessListify; } });\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return transactions_1.computeAddress; } });\nObject.defineProperty(exports, \"parseTransaction\", { enumerable: true, get: function () { return transactions_1.parse; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return transactions_1.recoverAddress; } });\nObject.defineProperty(exports, \"serializeTransaction\", { enumerable: true, get: function () { return transactions_1.serialize; } });\nObject.defineProperty(exports, \"TransactionTypes\", { enumerable: true, get: function () { return transactions_1.TransactionTypes; } });\nvar units_1 = require(\"@ethersproject/units\");\nObject.defineProperty(exports, \"commify\", { enumerable: true, get: function () { return units_1.commify; } });\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return units_1.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return units_1.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return units_1.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return units_1.parseUnits; } });\nvar wallet_1 = require(\"@ethersproject/wallet\");\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return wallet_1.verifyMessage; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return wallet_1.verifyTypedData; } });\nvar web_1 = require(\"@ethersproject/web\");\nObject.defineProperty(exports, \"_fetchData\", { enumerable: true, get: function () { return web_1._fetchData; } });\nObject.defineProperty(exports, \"fetchJson\", { enumerable: true, get: function () { return web_1.fetchJson; } });\nObject.defineProperty(exports, \"poll\", { enumerable: true, get: function () { return web_1.poll; } });\n////////////////////////\n// Enums\nvar sha2_2 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", { enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } });\nvar strings_2 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", { enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } });\nObject.defineProperty(exports, \"Utf8ErrorReason\", { enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } });\n//# sourceMappingURL=utils.js.map","import { useState, useEffect, useCallback } from 'react'\r\nimport Icon from '../../components/Icon/Icon'\r\nimport { keccak256, toUtf8Bytes } from 'ethers/lib/utils'\r\nimport './register.less'\r\nimport Button from '../../components/Button/Button'\r\nimport Emitter from '../../utils/Emitter'\r\nimport { EVENT_TRANS_BEGIN, EVENT_TRANS_END } from '../../utils/Constants'\r\n\r\nexport default function Register({ closeRegisterModal, contract, registerAfter }) {\r\n  const [recruiterCode, setRecruiteCode] = useState(\"\")\r\n  const [brokerCode, setBrokerCode] = useState(\"\")\r\n  const [recruiterCodeKeccak256, setRecruiterCodeKeccak256] = useState(\"\")\r\n  const [brokerCodeKeccak256, setBrokerCodeKeccak256] = useState(\"\")\r\n  const [isChecking, setIsChecking] = useState(false)\r\n  const [isBrokerLegitimate, setIsBrokerLegitimate] = useState(true)\r\n  const [isRecruiterLegitimate, setIsRecruiterLegitimate] = useState(true)\r\n  const [disabled, setDisabled] = useState(true)\r\n  const [noBrokerLegitimateText, setNoBrokerLegitimateText] = useState(\"\")\r\n  const [noRecruiterLegitimateText, setNoRecruiterLegitimateText] = useState(\"\")\r\n  const transactionTitle = {\r\n    text: \"Generate Code\",\r\n    icon: \"\"\r\n  }\r\n  const transactionContent = {\r\n    success: \"Generate Code\",\r\n    error: \"Transaction Failed\"\r\n  }\r\n  const onChangeBroker = (event) => {\r\n    let { value } = event.target;\r\n    if (value) {\r\n      let isletter = /^[a-zA-Z]+$/.test(value);\r\n      console.log(isletter)\r\n      if (!isletter) {\r\n        return false\r\n      }\r\n      let keccak256Data = toUtf8Bytes(value)\r\n      let keccak256Value = keccak256(keccak256Data)\r\n      setBrokerCodeKeccak256(keccak256Value)\r\n    }\r\n    console.log(value)\r\n\r\n    setBrokerCode(value)\r\n  }\r\n  const onChangeRecuiter = (event) => {\r\n    let { value } = event.target;\r\n    console.log(value)\r\n    if (value) {\r\n      let isletter = /^[a-zA-Z0-9_]+$/.test(value);\r\n      console.log(isletter)\r\n      if (!isletter) {\r\n        return false\r\n      }\r\n      let keccak256Data = toUtf8Bytes(value)\r\n      let keccak256Value = keccak256(keccak256Data)\r\n      setRecruiterCodeKeccak256(keccak256Value)\r\n    } else {\r\n      setNoRecruiterLegitimateText(\"\")\r\n    }\r\n    setRecruiteCode(value)\r\n  }\r\n  const getRecruiterIsTrue = useCallback(async () => {\r\n    if (recruiterCodeKeccak256) {\r\n      let res = await contract.recruiterAddresses(recruiterCodeKeccak256)\r\n      if (res !== \"0x0000000000000000000000000000000000000000\") {\r\n        setIsRecruiterLegitimate(true)\r\n        setNoRecruiterLegitimateText(\"\")\r\n      } else {\r\n        setIsRecruiterLegitimate(false)\r\n        setNoRecruiterLegitimateText(\"Invalid recruiter code\")\r\n      }\r\n      setIsChecking(false)\r\n    }\r\n  }, [recruiterCodeKeccak256, contract])\r\n  const getBorkerCodeIsTrue = useCallback(async () => {\r\n    if (brokerCodeKeccak256) {\r\n      let res = await contract.brokerAddresses(brokerCodeKeccak256)\r\n      if (res === \"0x0000000000000000000000000000000000000000\") {\r\n        setIsBrokerLegitimate(true)\r\n        setNoBrokerLegitimateText(\"\")\r\n      } else {\r\n        setIsBrokerLegitimate(false)\r\n        setNoBrokerLegitimateText(\"Code is not available\")\r\n      }\r\n      setIsChecking(false)\r\n    }\r\n  }, [brokerCodeKeccak256, contract])\r\n\r\n  const click = useCallback(async () => {\r\n    if (brokerCode && isBrokerLegitimate) {\r\n      let recruiterValue = recruiterCode ? recruiterCode : \"DERI\"\r\n      let res\r\n      try {\r\n        res = await contract.registerBroker(brokerCode, recruiterValue)\r\n      } catch (error) {\r\n        return false;\r\n      }\r\n      if (res && res.hash) {\r\n        Emitter.emit(EVENT_TRANS_BEGIN, {\r\n          title: transactionTitle, content: transactionContent, hash: res.hash\r\n        })\r\n      } else {\r\n        return false\r\n      }\r\n      const receipt = await res.wait()\r\n      console.log(\"receipt\", receipt)\r\n      if (receipt) {\r\n        console.log(\"receipt\", receipt)\r\n        if (receipt && receipt.transactionHash) {\r\n          const hash = receipt.transactionHash\r\n          if (receipt.status) {\r\n            registerAfter()\r\n            closeRegisterModal()\r\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: true, hash: hash, error: \"error\" } })\r\n          } else {\r\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: false.success, hash: hash, error: \"error\" } })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [recruiterCode, brokerCode, contract])\r\n\r\n  useEffect(() => {\r\n    if (brokerCodeKeccak256) {\r\n      setIsChecking(true)\r\n      getBorkerCodeIsTrue()\r\n    }\r\n  }, [brokerCodeKeccak256])\r\n  useEffect(() => {\r\n    if (recruiterCodeKeccak256) {\r\n      setIsChecking(true)\r\n      getRecruiterIsTrue()\r\n    }\r\n  }, [recruiterCodeKeccak256])\r\n\r\n  useEffect(() => {\r\n    if (!isBrokerLegitimate || isChecking || !brokerCode || !isRecruiterLegitimate) {\r\n      setDisabled(true)\r\n    } else {\r\n      setDisabled(false)\r\n    }\r\n  }, [isBrokerLegitimate, isChecking, brokerCode, recruiterCode])\r\n\r\n\r\n\r\n  return <div className='register-modal-box'>\r\n    <div className='register-modal-header'>\r\n      Generate Code\r\n      <Icon token=\"close-modal-icon\" onClick={() => closeRegisterModal()} />\r\n    </div>\r\n    <div className='register-modal-info'>\r\n      <div>\r\n        <input placeholder='Enter a code' value={brokerCode} onChange={onChangeBroker} />\r\n      </div>\r\n      <div className='register-title'>\r\n        Broker Recruiter Code (Required)\r\n      </div>\r\n      <div>\r\n        <input placeholder='DERI' value={recruiterCode} onChange={onChangeRecuiter} />\r\n      </div>\r\n      <div className='confirm-btn'>\r\n        <div className='noLegitimateText'>\r\n          {noBrokerLegitimateText || noRecruiterLegitimateText ? <Icon token=\"code-error\" /> : null}  {noBrokerLegitimateText || noRecruiterLegitimateText}\r\n        </div>\r\n        <Button width=\"100%\" disabled={disabled} height={48} fontSize={16} label={isChecking ? \"Checking...\" : \"CONFIRM\"} onClick={click} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","import { useState, useEffect, useCallback } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport Icon from '../../components/Icon/Icon'\r\nimport './rebate.less'\r\nimport { EVENT_TRANS_BEGIN, EVENT_TRANS_END } from '../../utils/Constants'\r\nimport { bg } from '../../utils/utils'\r\nimport useContract from '../../hooks/useContractLp'\r\nimport { BigNumber } from 'ethers'\r\nimport axios from 'axios'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport classNames from 'classnames'\r\nimport { show } from 'react-functional-modal'\r\nimport Register from './Register'\r\nimport useLang from '../../hooks/useLang'\r\nimport WalletView from '../../components/Header/WalletView'\r\nimport Emitter from '../../utils/Emitter'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport { useModal } from 'react-hooks-use-modal'\r\nfunction Rebate({ wallet, intl }) {\r\n  const lang = useLang(intl.dict, 'header');\r\n  const [accountType, setAccountType] = useState(\"broker\")\r\n  const [brokerInfos, setBrokerInfos] = useState({})\r\n  const [updatedTime, setUpdatedTime] = useState(\"\");\r\n  const [reBateInfo, setReBateInfo] = useState({})\r\n  const [claimed, setClaimed] = useState(0)\r\n  const [unclaimed, setUnclaimed] = useState(0)\r\n  const [isCopied, setIsCopied] = useState(false)\r\n  const [totalUser, setTotalUser] = useState(\"\")\r\n  const [explained, setExplained] = useState('')\r\n  const [totalFee, setTotalFee] = useState('')\r\n  const [isClaiming, setIsClaiming] = useState(false)\r\n  const [RegisterModal,openRegisterModal,closeRegisterModal] = useModal(\"root\",{\r\n    preventScroll: true,\r\n    closeOnOverlayClick: false\r\n  })\r\n\r\n  const addressList = {\r\n    56: \"0x9A4f119904C6926EFE76F64BB70E35198a4dFF5f\",\r\n    42161: \"0x772Fc767b6ff9841175922dE11DCaF9365091d2C\"\r\n  }\r\n  const chainIdList = {\r\n    56: 56,\r\n    42161: 42161\r\n  }\r\n  const chainId = chainIdList[wallet.detail.chainId] ? chainIdList[wallet.detail.chainId] : 42161\r\n  const address = addressList[wallet.detail.chainId] ? addressList[wallet.detail.chainId] : addressList[42161]\r\n  const RebateContract = useContract(\"RebateImplementation\", chainId, address)\r\n  const token = chainId === 42161 ? \"USDC\" : \"BUSD\"\r\n  const transactionTitle = {\r\n    text: \"Claim Reward\",\r\n    icon: token\r\n  }\r\n  const transactionContent = {\r\n    success: \"Claim Reward\",\r\n    error: \"Transaction Failed\"\r\n  }\r\n  const onCopy = useCallback((code) => {\r\n    let text = accountType === \"borker\" ? `https://deri.io/#/trade/futures?ref=${code}?chainId=${chainId}` : code\r\n    console.log(\"onCopy\",navigator)\r\n    navigator.clipboard.writeText(text);\r\n    setIsCopied(true)\r\n    setTimeout(() => setIsCopied(false), 5000);\r\n  }, [accountType])\r\n\r\n  const claim = useCallback(async () => {\r\n    if (!bg(unclaimed).gt(0)) {\r\n      return false\r\n    }\r\n    if (RebateContract) {\r\n      setIsClaiming(true)\r\n      let res\r\n      try {\r\n        if (accountType === \"broker\") {\r\n          res = await RebateContract.claimBrokerRebate()\r\n        } else {\r\n          res = await RebateContract.claimRecruiterRebate()\r\n        }\r\n      } catch (error) {\r\n        setIsClaiming(false)\r\n        return false;\r\n      }\r\n      if (res && res.hash) {\r\n        Emitter.emit(EVENT_TRANS_BEGIN, {\r\n          title: transactionTitle, content: transactionContent, hash: res.hash\r\n        })\r\n      } else {\r\n        setIsClaiming(false)\r\n        return false\r\n      }\r\n      const receipt = await res.wait()\r\n      console.log(\"receipt\", receipt)\r\n      if (receipt) {\r\n        console.log(\"receipt\", receipt)\r\n        if (receipt && receipt.transactionHash) {\r\n          const hash = receipt.transactionHash\r\n          if (receipt.status) {\r\n            getClaimed()\r\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: true, hash: hash, error: \"error\" } })\r\n          } else {\r\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: false.success, hash: hash, error: \"error\" } })\r\n          }\r\n        }\r\n      }\r\n      setIsClaiming(false)\r\n    }\r\n  }, [unclaimed, accountType, RebateContract])\r\n\r\n  const getClaimed = useCallback(async () => {\r\n    if (RebateContract && wallet.detail.account) {\r\n      let res;\r\n      if (accountType === \"broker\") {\r\n        res = await RebateContract.brokerClaimed(wallet.detail.account)\r\n        if (res) {\r\n          res = BigNumber.from(res._hex).toString() / (10 ** 18)\r\n          setClaimed(res)\r\n        }\r\n      } else {\r\n        res = await RebateContract.recruiterClaimed(wallet.detail.account)\r\n        if (res) {\r\n          res = BigNumber.from(res._hex).toString() / (10 ** 18)\r\n          setClaimed(res)\r\n        }\r\n      }\r\n    }\r\n  }, [RebateContract, wallet.detail.account, accountType])\r\n\r\n  const getBrokerInfos = useCallback(async () => {\r\n    if (RebateContract && wallet.detail.account) {\r\n      let res\r\n      if (accountType === \"broker\") {\r\n        res = await RebateContract.brokerInfos(wallet.detail.account);\r\n      } else {\r\n        res = await RebateContract.recruiterInfos(wallet.detail.account);\r\n      }\r\n      if (res) {\r\n        let obj = {\r\n          code: res.code,\r\n          id: res.id,\r\n        }\r\n        setBrokerInfos(obj)\r\n      }\r\n    }\r\n  }, [RebateContract, wallet.detail.account, accountType])\r\n\r\n  const getTotalFee = useCallback(async () => {\r\n    if (RebateContract && wallet.detail.account) {\r\n      let res\r\n      if (accountType === \"broker\") {\r\n        res = await RebateContract.brokerFees(wallet.detail.account)\r\n      } else {\r\n        res = await RebateContract.recruiterFees(wallet.detail.account)\r\n      }\r\n      if (res) {\r\n        res = BigNumber.from(res._hex).toString() / (10 ** 18)\r\n        let explained = ''\r\n        if (res >= 10 && res < 1000) {\r\n          explained = 'one'\r\n        } else if (res >= 1000 && res < 2000) {\r\n          explained = 'two'\r\n        } else if (res >= 2000 && res < 4000) {\r\n          explained = 'three'\r\n        } else if (res >= 4000 && res < 6000) {\r\n          explained = 'four'\r\n        } else if (res >= 6000 && res < 10000) {\r\n          explained = 'five'\r\n        } else if (res >= 10000) {\r\n          explained = 'six'\r\n        }\r\n        setExplained(explained)\r\n        setTotalFee(res)\r\n      }\r\n    }\r\n  }, [RebateContract, wallet.detail.account, accountType])\r\n\r\n  const registerAfter = () => {\r\n    getBrokerInfos()\r\n    getBrokerRebate()\r\n    getTotalFee()\r\n    getClaimed()\r\n  }\r\n\r\n\r\n  const ShowRegister = useCallback(() => {\r\n    if (wallet.detail.account && RebateContract) {\r\n      // show(<Register account={wallet.detail.account} registerAfter={registerAfter} contract={RebateContract} accountType={accountType} />, {\r\n      //   key: \"register\",\r\n      //   fading: true,\r\n      //   style: {\r\n      //     background: \"rgba(0, 0, 0, 0.5)\",\r\n      //     zIndex: 2,\r\n      //   },\r\n      // })\r\n      openRegisterModal()\r\n    }\r\n  }, [wallet.detail.account, RebateContract, accountType])\r\n\r\n  const getTotalUsers = useCallback(async () => {\r\n    if (wallet.detail.account) {\r\n      let res = await axios.get(\"https://referral.deri.io/referral_count\", {\r\n        params: {\r\n          chainId: wallet.detail.chainId,\r\n          account: wallet.detail.account,\r\n          role: accountType\r\n        },\r\n      })\r\n      if (res.data) {\r\n        setTotalUser(res.data.count)\r\n      }\r\n    }\r\n  }, [accountType, wallet.detail.account, wallet.detail.chainId])\r\n\r\n  const getBrokerRebate = useCallback(async () => {\r\n    if (RebateContract && wallet.detail.account) {\r\n      let res\r\n      if (accountType === \"broker\") {\r\n        res = await RebateContract.getBrokerRebate(wallet.detail.account);\r\n      } else {\r\n        res = await RebateContract.getRecruiterRebate(wallet.detail.account)\r\n      }\r\n      if (res) {\r\n        console.log(\"getBrokerRebate\", res)\r\n        let total = accountType === \"broker\" ? res.totalBrokerRebate._hex : res.totalRecruiterRebate._hex\r\n        let crrent = accountType === \"broker\" ? res.currentBrokerRate._hex : res.currentRecruiterRate._hex\r\n        let obj = {\r\n          currentRate: BigNumber.from(crrent).toString() / (10 ** 18),\r\n          totalRebate: BigNumber.from(total).toString() / (10 ** 18)\r\n        }\r\n        setReBateInfo(obj)\r\n      }\r\n    }\r\n  }, [RebateContract, wallet.detail.account, accountType])\r\n\r\n  const getUpdatedTime = useCallback(async () => {\r\n    if (RebateContract) {\r\n      let res = await RebateContract.updatedTimestamp();\r\n      if (res) {\r\n        res = BigNumber.from(res._hex).toString() / (10 ** 6)\r\n        res = res * 1000\r\n        let date = new Date(res)\r\n        let year = date.getUTCFullYear()\r\n        let month = date.getUTCMonth() + 1\r\n        let day = date.getUTCDate()\r\n        let hour = date.getUTCHours()\r\n        let minute = date.getUTCMinutes()\r\n        let second = date.getUTCSeconds()\r\n        if (month < 10) {\r\n          month = `0${month}`\r\n        }\r\n        if (day < 10) {\r\n          day = `0${day}`\r\n        }\r\n        if (hour < 10) {\r\n          hour = `0${hour}`\r\n        }\r\n        if (minute < 10) {\r\n          minute = `0${minute}`\r\n        }\r\n        if (second < 10) {\r\n          minute = `0${minute}`\r\n        }\r\n        let text = ` ${month}.${day}.${year} ${hour}:${minute}:${second}`\r\n        setUpdatedTime(text)\r\n      }\r\n    }\r\n  }, [RebateContract])\r\n\r\n  const switchType = useCallback(() => {\r\n    if (accountType === \"broker\") {\r\n      setAccountType(\"broker_recruiter\")\r\n    } else {\r\n      setAccountType(\"broker\")\r\n    }\r\n  }, [accountType])\r\n\r\n  useEffect(() => {\r\n    if (RebateContract && wallet.detail.account) {\r\n      getBrokerInfos()\r\n      getBrokerRebate()\r\n      getTotalFee()\r\n      getClaimed()\r\n    }\r\n  }, [RebateContract, wallet.detail.account, accountType])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (reBateInfo.totalRebate) {\r\n      let unclaimed = bg(reBateInfo.totalRebate).minus(claimed).toNumber()\r\n      setUnclaimed(unclaimed)\r\n    }\r\n\r\n  }, [claimed, reBateInfo])\r\n\r\n  useEffect(() => {\r\n    if (RebateContract) {\r\n      getUpdatedTime()\r\n    }\r\n  }, [RebateContract])\r\n\r\n  useEffect(() => {\r\n    if (wallet.detail.account) {\r\n      getTotalUsers()\r\n    }\r\n  }, [wallet.detail.account, wallet.detail.chainId, accountType])\r\n  return <div className='rebate-box'>\r\n    <div className='rebate-box-info'>\r\n      <div className='rebate-box-info-titile'>\r\n        <span>\r\n          Referrals\r\n        </span>\r\n        <span className='rebate-des'>\r\n          Earn rebates through the DERI referral program.\r\n          <br></br>\r\n          For more information, please read the referral program details.\r\n        </span>\r\n      </div>\r\n      <div className='rebate-box-header'>\r\n        <div className='rebate-avatar'>\r\n          <Icon token=\"rebate\" />\r\n          {explained ? <Icon token={`explained-${explained}`} className=\"explained-logo\" /> : null}\r\n        </div>\r\n        <div className='rebate-account-reward-info'>\r\n          <div className='rebate-reward'>\r\n            You have <span className={classNames('reward-btn', {\r\n              \"no-reward\": unclaimed === 0\r\n            })} onClick={claim} >\r\n              {isClaiming && <Spinner />}\r\n              {unclaimed.toFixed(2)} <span className='token-icon-reward'><Icon token={token} /></span></span> unclaimed {token} reward\r\n          </div>\r\n          <div className='rebate-code'>\r\n            Referral Code\r\n            {brokerInfos.code ? <div className='code-hash-copy'>\r\n              <div className='code-hash'>\r\n                {brokerInfos.code}\r\n                <Icon token=\"copy-code\" onClick={() => onCopy(brokerInfos.code)} />\r\n              </div>\r\n              {isCopied ? <div className='copied-box'>\r\n                <Icon token=\"copied-logo\" />\r\n                Copied\r\n              </div> : null}\r\n            </div> : accountType === \"broker\" ? <div className={classNames('no-code-hash', {\r\n              \"no-wallet\": !wallet.isConnected()\r\n            })} onClick={ShowRegister}>\r\n              Generate  Code\r\n            </div> : <a className='no-recruiter-code-hash' target='_blank' href='https://forms.gle/BRWmZbzbexG9L1LJ6' rel='noreferrer' >\r\n              <Icon token=\"go-recruiter\" /> Apply\r\n            </a>}\r\n          </div>\r\n        </div>\r\n        <div className='broker-recruiter'>\r\n          <div className={classNames({\r\n            'broker-type': accountType === \"broker\",\r\n            'recruiter-type': accountType !== \"broker\",\r\n          })} onClick={switchType}>\r\n            {accountType === \"broker\" ? \"Broker\" : <>\r\n              Broker\r\n              <br></br>\r\n              Recruiter</>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='rebate-box-use-info'>\r\n        <div className='rebate-box-user-info-header'>\r\n          <div className='rebate-box-user-info-title'>\r\n            My Referral Stats <span>\r\n              （Last Updated: {updatedTime} UTC）\r\n            </span>\r\n          </div>\r\n          {/* {wallet.isConnected()?<div className='wallet-account-box'>\r\n            <Icon token={curConnector.icon} width='20' />\r\n            {formatAddress(wallet.detail.account)}\r\n          </div>: <Button label=\"CONNECT WALLET\" className='m-connect' onClick={showWalletModal} width={192} height={48} fontWeight={700} fontColor='#FFF' fontSize='18' />} */}\r\n          <WalletView lang={lang} isShowWalletModal={false} />\r\n        </div>\r\n        <div className='rebate-box-use-info-box'>\r\n          <div className='total-users-bg'>\r\n            <div className='total-users-box'>\r\n              <Icon token=\"rebate-total-users\" />\r\n              <div className='total-users-box-info'>\r\n                <div className='total-users-box-info-num'>\r\n                  <DeriNumberFormat value={totalUser} />\r\n                </div>\r\n                <div className='total-users-box-info-title'>\r\n                  Total Users\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='total-fee-bg'>\r\n            <div className='total-fee-box'>\r\n              <Icon token=\"rebate-total-fee\" />\r\n              <div className='total-fee-box-info'>\r\n                <div className='total-fee-box-info-num'>\r\n                  <DeriNumberFormat value={totalFee} decimalScale={+totalFee === 0 ? 0 : 2} />\r\n                </div>\r\n                <div className='total-fee-box-info-title'>\r\n                  Total Transaction Fee\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='total-rewards-bg'>\r\n            <div className='total-rewards-box'>\r\n              <Icon token=\"rebate-total-rewards\" />\r\n              <div className='total-rewards-box-info'>\r\n                <div className='total-rewards-box-info-num'>\r\n                  <DeriNumberFormat value={reBateInfo.totalRebate} decimalScale={+reBateInfo.totalRebate === 0 ? 0 : 2} />\r\n                </div>\r\n                <div className='total-rewards-box-info-title'>\r\n                  Total Rewards\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='rebate-box-explained'>\r\n        <div className='rebate-box-explained-title'>\r\n          Tiers Explained <Icon token=\"rebate-warn\" />\r\n        </div>\r\n        <div className='rebate-box-explained-list'>\r\n          <div className='rebate-box-explained-list-box rebate-explained-margin-box'>\r\n            <div className='explained-box'>\r\n              <div className='explained-box-info explained-one'>\r\n                <div className='explained-logo'>\r\n                  <Icon token=\"explained-one\" />\r\n                </div>\r\n                <div className='explained-text'>\r\n                  <div className='explained-rate'>\r\n                    20% commission rate\r\n                  </div>\r\n                  <div className='explained-range-usd'>\r\n                    For transaction fee range of 10-1000 USD\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='explained-box'>\r\n              <div className='explained-box-info explained-two'>\r\n                <div className='explained-logo'>\r\n                  <Icon token=\"explained-two\" />\r\n                </div>\r\n                <div className='explained-text'>\r\n                  <div className='explained-rate'>\r\n                    20% - 24% commission rate\r\n                  </div>\r\n                  <div className='explained-range-usd'>\r\n                    For transaction fee range of 1000-2000 USD\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='rebate-box-explained-list-box'>\r\n            <div className='explained-box'>\r\n              <div className='explained-box-info explained-three'>\r\n                <div className='explained-logo'>\r\n                  <Icon token=\"explained-three\" />\r\n                </div>\r\n                <div className='explained-text'>\r\n                  <div className='explained-rate'>\r\n                    24% - 28% commission rate\r\n                  </div>\r\n                  <div className='explained-range-usd'>\r\n                    For transaction fee range of 2000-4000 USD\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='explained-box'>\r\n              <div className='explained-box-info explained-four'>\r\n                <div className='explained-logo'>\r\n                  <Icon token=\"explained-four\" />\r\n                </div>\r\n                <div className='explained-text'>\r\n                  <div className='explained-rate'>\r\n                    28% - 32% commission rate\r\n                  </div>\r\n                  <div className='explained-range-usd'>\r\n                    For transaction fee range of 4000-6000 USD\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='rebate-box-explained-list-box'>\r\n            <div className='explained-box'>\r\n              <div className='explained-box-info explained-five'>\r\n                <div className='explained-logo'>\r\n                  <Icon token=\"explained-five\" />\r\n                </div>\r\n                <div className='explained-text'>\r\n                  <div className='explained-rate'>\r\n                    32%-40% commission rate\r\n                  </div>\r\n                  <div className='explained-range-usd'>\r\n                    For transaction fee range of 6000-10000 USD\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='explained-box'>\r\n              <div className='explained-box-info explained-six'>\r\n                <div className='explained-logo'>\r\n                  <Icon token=\"explained-six\" />\r\n                </div>\r\n                <div className='explained-text'>\r\n                  <div className='explained-rate'>\r\n                    40% commission rate\r\n                  </div>\r\n                  <div className='explained-range-usd'>\r\n                    For transaction fee range of 10000 USD and above\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Icon token=\"copied-logo\" className=\"loaded-copied-logo\" />\r\n    <RegisterModal>\r\n      <Register closeRegisterModal={closeRegisterModal} contract={RebateContract} registerAfter={registerAfter} />\r\n    </RegisterModal>\r\n  </div>\r\n}\r\nexport default inject('wallet', \"intl\")(observer(Rebate))"],"sourceRoot":""}