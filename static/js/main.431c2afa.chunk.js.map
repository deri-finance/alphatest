{"version":3,"sources":["lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/chain.js","components/Icon/Icon.js","lib/web3js/shared/utils/web3.js","assets/img/arrow-down.svg","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/config/config.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/api/config_api.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/abi/perpetualPoolLiteManagerDpmmAbi.js","lib/web3js/v2_lite_open/contract/gen/PerpetualPoolLiteManagerDpmm.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/factory.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/index.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/shared/cache/object_cache.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/v2_lite/api/index.js","lib/web3js/v2_lite_dpmm/contract/PoolApi.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/option/api/index.js","lib/web3js/api_wrapper/api_shared.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/v2_lite/contract/index.js","assets/img/bsc-logo.svg","lib/web3js/shared/error/error.js","lib/web3js/shared/contract/b_token.js","assets/img/logo.svg","assets/img/lang-icon.svg","assets/img/matemask-logo.svg","model/WebSocket.js","lib/web3js/shared/utils/api.js","components/Spinner/Spinner.js","components/Button/Button.js","lib/web3js/shared/config/check.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","utils/utils.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/database.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","model/Type.js","assets/img/close-modal-icon.svg","assets/img/ethereum.svg","assets/img/polygon-logo.svg","assets/img/rate-down-icon.svg","assets/img/btc-icon.svg","assets/img/btc.svg","assets/img/gauge-graph.svg","assets/img/rate-up-icon.svg","model/ApiProxy.js","lib/web3js/shared/utils/convert.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/pancakePairAbi.js","lib/web3js/shared/contract/gen/PancakePair.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/abi/bTokenOracle1Abi.js","lib/web3js/shared/contract/gen/BTokenOracle1.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/config/token.js","lib/web3js/shared/utils/factory.js","model/Version.js","utils/Constants.js","lib/web3js/shared/utils/derijsnext.js","lib/web3js/shared/contract/abis.js","assets/img sync /^/.//.*$","assets/img/amusdc.svg","assets/img/busd-logo.svg","assets/img/busd.svg","assets/img/cake.svg","assets/img/deposit.svg","assets/img/error.svg","assets/img/matic.svg","assets/img/success.svg","assets/img/tbusd.svg","assets/img/tweth.svg","assets/img/usdt.svg","assets/img/wbnb.svg","assets/img/withdraw.svg","assets/img/wmatic.svg","../lang).)*/.json$","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/error/error_code.js","lib/web3js/shared/config/constant.js","components/Label/Label.js","components/Header/Menu.js","components/Header/LangSelector.js","components/Header/NetworkSelector.js","components/Header/WalletSelector.js","components/Header/Header.js","hooks/useLang.js","components/Footer/Footer.js","utils/LoadableComponent.js","hoc/withLanguage.js","components/IndexRoute/IndexRoute.js","pages/PageRouter.js","App.js","model/Intl.js","reportWebVitals.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Pool.js","model/PoolManager.js","model/Trading.js","model/Loading.js","components/Message/MessageTemplate.js","index.js","lib/web3js/shared/config/version.js","lib/web3js/shared/factory/web3.js","lib/web3js/v2_lite/contract/abis.js"],"names":["getChainProviderUrl","chainId","a","urls","getChainProviderUrls","length","getLatestRPCServer","url","Error","getDailyBlockNumber","blockNumbers","getDailyBlockNumberConfig","parseInt","getNetworkName","config","chainConfigList","find","c","name","AppError","args","getChainGasUnit","unit","images","require","Wrapper","styled","img","props","width","height","Icon","token","src","default","intRe","deleteIndexedKey","obj","Object","keys","intKeyCount","reduce","acc","k","test","newObj","forEach","res","i","Array","isArray","push","getLatestBlockNumber","web3Factory","get","web3","eth","getBlockNumber","getBlockInfo","blockNumber","getBlock","getPastEvents","contract","eventName","filter","fromBlock","to","events","amount","includes","toBlock","es","e","getPastEventsUseAbi","contractAddress","contractAbi","Contract","MAX_GAS_AMOUNT","ContractBase","this","method","retry","_init","methods","call","accountAddress","gas","estimateGas","from","console","log","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","Promise","all","_estimatedGas","getGasPrice","toString","txRaw","numberToHex","value","data","encodeABI","window","ethereum","request","params","_getTransactionReceipt","duration","Number","MAX_SAFE_INTEGER","Web3","providers","HttpProvider","startTime","Date","now","promises","sort","b","latestBlockNumber","index","findIndex","startsWith","getJsonConfig","env","rawConfig","checkEnv","jsonTestnetConfig","jsonDevConfig","jsonProdConfig","JSON","parse","pools","getPoolViewerConfig","version","configs","address","viewer","getPoolConfig","poolAddress","DeriEnv","pool","concat","getPoolV1ConfigList","v","getPoolVersionId","checkAddress","versionId","failed","response","code","message","getLpConfigList","catchApiError","_getLpConfigList","getPreminingConfigList","_getPreminingConfigList","getRetiredPoolConfigList","_getRetiredPoolConfigList","getDeriConfig","_getDeriConfig","delay","ms","getPriceInfoForV1","symbol","baseUrl","addSymbolParam","fetch","mode","cache","ok","json","priceInfo","getOracleUrl","type","PRESERVED_SYMBOLS","getPriceFromRest","getPriceInfo","price","deriToNatural","volatility","mapToBTokenInternal","DEBUG","getOracleInfosFromRest","symbolList","headers","Accept","body","stringify","getPriceInfos","oraclePricesCache","pending","symbols","key","join","Math","floor","timestamp","RestOracle","getPrice","getOraclePrice2","oracleAddress","normalizeChainId","mapToSymbolInternal","oracle","wrappedOracleFactory","getOraclePriceFromCache2","getOracleVolatilitiesForOption","oracleSymbols","map","normalizeOptionSymbol","indexOf","os","volatilities","s","checkOffChainOracleSymbol","offChainOracleFactory","signer","signatory","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","symbolId","_symbol","f","onChainSymbolPrices","offChainSymbolPrices","fromWei","symbolPrices","o","shift","SymbolOracleOffChain","symbolOracleOffChainAbi","_call","WooOracle","decimal","wooOracleAbi","wooOracleAddresses","instanceMap","factory","WrappedOracle","wooOracleFactory","databaseFactory","databaseInstanceMap","useProductionDB","getDBAddress","database","DatabaseContract","databaseActivityFactory","databaseActivityClaimFactory","databaseDeriVoteFactory","databaseWormholeFactory","getDBWormholeAddress","DatabaseWormholeContract","databaseAirdropFactory","getDBAirdropAddress","DatabaseAirdropContract","TERC20","TERC20Abi","owner","spender","account","_transact","CONTRACT_ABI","DeriContract","allowance","gt","MAX_UINT256","_balanceOf","decimals","bg","MiningVaultPool","MiningVaultRouter","WormholeContract","toChainId","toWormholeAddress","wormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","r","deriFactory","wormholeFactory","miningVaultRouterFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clp2PoolFactory","clpPoolInstanceMap","clp2PoolInstanceMap","clp2Pool","hasWallet","BrokerManager","PTokenAirdrop","catchSyncApiError","isMetaMask","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","hexToNumber","getUserWalletBalance","checkChainId","getBalance","balance","getUserInfo","userAddress","db","toChecksumAddress","getValues","getTime","deriToString","deadline","nonce","valid","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","assign","getPoolInfoApy","poolNetwork","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","priceCache","_prices","split","set","val","isNaN","parseFloat","fundingRateCache","resourceMap","resource","liquidatePriceCache","_cache","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deriAddress","deri","isUnlocked","getDeriBalance","balanceOf","mintDeri","catchTxApiError","wormhole","unlockDeri","unlock","mintAirdrop","miningVaultAddress","getMiningVaultRouterConfig","miningVaultRouter","mint","getSlpLiquidityInfo","getLpConfig","bTokenAddress","bToken","ERC20Factory","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","isSlpUnlocked","getSlpWalletBalance","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","unlockSlp","getClp2LiquidityInfo","isClp2Unlocked","getClp2WalletBalance","addClp2Liquidity","removeClp2Liquidity","unlockClp2","getLpUserStakeInfo","slp","clp","isStaked","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","calculateLiquidityUsed","tradersNetVolume","multiplier","poolMarginRatio","abs","calculateFundingRate","fundingRateCoefficient","processFundingRate","fundingRate","annualBlockCount","times","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","tradersNetCost","minPoolMarginRatio","removable","plus","minus","max","min","calculateEntryPrice","volume","cost","calculateMarginHeld","minInitialMarginRatio","calculatePnl","calculateLiquidationPrice","margin","minMaintenanceMarginRatio","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","success","POOL_ABI","PerpetualPool","isProvider","defaultValue","result","cumuFundingRate","cumuFundingRateBlock","feeRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","errorMessage","signed","getStateValues","stateValues","getParameters","parameters","args1","validateArgs","fundingRatePerBlock","args2","liquidityUsed","transaction","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","unlockLp","addLpLiquidity","removeLpLiquidity","queryTradePMM","theoreticalPrice","K","invalidValues","NaN","undefined","getEverlastingTimePriceAndDelta","S","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","positions","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","pnl","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","maintenanceMargin","klass","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionOldAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","PTokenOption","tokenId","lastCumulativePremiumFundingRate","operator","optionPricerAbi","OptionPricer","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","optionPricerFactory","volatilitiesCache","_calculateDpmmPrice","indexPrice","alpha","tradersNetPosition","_queryTradeDpmm","tradePosition","EverlastingOption","viewerAddress","usedByEstimatedApi","addresses","getAddresses","pTokenAddress","lTokenAddress","optionPricerAddress","pricer","bTokenSymbol","fundingCoefficient","getActiveSymbolIds","symbolIds","activeSymbolIds","getSymbol","activeSymbolNames","ttt","symbolVolatilities","getPoolStates","activeSymbols","volatilitySymbols","getVolatilitySymbols","getPoolStateValues","preTimestamp","lastTimestamp","curTimestamp","userState","protocolFeeAccrued","chainlinkOracleFactory","symbolIndexPrices","getEverlastingTimeValueAndDelta","toWei","timeValues","dynamicEquity","intrinsicValue","dpmmPrice","fundingPerSecond","fundingPerVolume","funding","offset2","cumulativeFundingRate","getPosition","totalPnl","totalFundingAccrued","fundingAccrued","volatilityInfos","values","p","oracleSymbol","bAmount","_getVolSymbolPrices","prices","lShares","tradeVolume","event","info","returnValues","block","tradeFee","direction","tradeCost","notional","contractValue","transactionFee","transactionHash","time","extra","everlastingOptionFactory","getSpecification","checkApiInputWithoutAccount","checkTokenId","optionPool","init","symbolInfo2","poolInfo2","symbolIndex","symbolInfo","feeRatioOTM","feeRatioITM","protocolFeeCollectRatio","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","indexConstituents","getIndexInfo","getPositionInfo","checkApiInput","symbolName","getTraderStates","volPrice","timePrice","markPrice","averageEntryPrice","marginHeld","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","oS","premiumFundingAccrued","liquidationPrice","getPositionInfos","volPrices","vIndex","getWalletBalance","_getFundingRate","totalDynamicEquity","curSymbolIndex","liquidityUsedInAmount","premiumFunding","premiumFundingPerSecond","getEstimatedFee","fee","getEstimatedMargin","leverage","parameterInfo","marginRatio","getFundingRateCache","getFundingRate","premiumFunding0","getEstimatedFundingRate","newNetVolume","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getUserBTokensInfo","availableBalance","walletBalance","getVolatility","openPoolChainIds","prod","dev","testnet","getPoolV2LiteManagerDpmmConfig","initialBlock","getOracleFactoryChainlinkConfig","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","trim","oracleFactoryChainlinkAbi","OracleFactoryChainlink","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","perpetualPoolLiteManagerDpmmAbi","PerpetualPoolLiteManagerDpmm","poolId","sourcePool","pairedTokenAddress","processPosition","lastCumulativeFundingRate","PTokenLite","isProdChain","getOracleServerUrl","calculateK","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","processMethod","methodName","propList","originMethod","prototype","apply","processResult","processTxMethod","toWeiArgPositions","_getSymbolPrices","newArgs","arg","isEstimatedApi","getFundingPeriod","pTokenLiteFactory","lTokenLiteFactory","getPoolLiquidity","offChainOracleSymbolNames","offChainOracleSymbolIds","getConfig","bTokens","normalizeSymbolUnit","getSymbols","indexPrices","SECONDS_IN_A_DAY","getPositions","getLastTimestamp","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","getMargin","requiredInitialMargin","formatTradeEvent","priceInfos","getPoolExtraInfo","getHttpBase","fetchJson","chain_id","block_number","target_pool","migration_timestamp","isMigrationPrepared","migrationDestination","isMigrationApproved","getOpenzoneConfig","extraInfo","hasMigration","targetPool","migrationTimestamp","isValid","getOpenzoneConfigAlt","PerpetualPoolLite","target","graceDays","source","lTokenLiteAbi","LTokenLite","perpetualPoolLiteDpmmFactory","contractFactory","addMethods","getProtocolFeeAccrued","lTokenLiteAdapter","pTokenLiteAdapter","updateAddresses","getBTokenSymbol","isMigrationExecuted","PerpetualPoolLiteManager","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","perpetualPoolLiteViewerFactory","perpetualPoolLiteManagerDpmmFactory","chainlinkFeedFactory","oracleFactoryChainlinkFactory","getPoolOpenConfigList","chainIds","version_id","getConfigAlt","chain","zone","getConfigZone","getPoolOpenConfig","perpetualPoolLite","getPoolOpenOracleList","oracleFactoryConfig","oracleFactory","oracles","eventBlock","number","isPoolController","controller","poolController","getPoolAllSymbolNames","poolViewer","getOffChainOracleSymbols","getPoolAcitveSymbolIds","openConfigListCache","update","OPEN_POOL_EXPIRE_TIME","updatedAt","createPool","poolManagerAddress","poolManager","newParameters","createMigrationPool","addSymbol","prepareMigration","targetPoolAddress","approveMigration","executeMigration","oldPoolAddress","getLastUpdateBlock","lastUpdateBlock","perpetualPoolLiteDpmm","executeMigrationWithTimestamp","createOracle","feedAddress","feedContract","PerpetualPoolLiteOld","perpetualPoolLiteOldAbi","offChainOracleSymbols","instances","getPTokenAirdropConfig","getDeriVoteConfig","getStakingMiningVaultRouterConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isUserPTokenExist","isBTokenUnlocked","hasRequiredBalance","unlockBToken","airdropPToken","keyPrefix","epoch","claimKeyPrefix","getStakingTop10Users","n","fill","resultPnl","no","userAddr","feePaid","score","evgCoeff","specialRewardsA","specialRewardsB","top10","top10Pnl","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","topPnlUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getUserStakingClaimInfo","claimable","claimed","locked","unclaimed","deriPrice","bnbPrice","claimMyStaking","claimArgs","getVotingResult","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","option","vote","deriVote","voteId","getPoolConfigList","includeOpenPools","processTradeEvent","txHash","_getTimeStamp","timeStamp","_calculateFee","baseToken","getTradeHistoryOnline","getPoolV1Config","_getBlockInfo","filters","_getPastEvents","item","unshift","getTradeHistory","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","pPool","getLiquidityInfo","totalSupply","poolDynamicEquity","maxRemovableShares","catch","err","poolInfo","fundingRate0","naturalWithPercentage","toExponential","fundingRate1","depositMargin","withdrawMargin","api","tradeWithMargin","closePosition","dynamicCost","calculateTxFee","calculateFundingFee","lastUpdatedBlockNumber","calculateMaxRemovableLiquidity","userLiquidity","restLiquidity","discount","range","getLengths","lengths","routerAddress","router","perpetualPoolRouterDpmmFactory","bTokenIds","bTokenId","getBToken","bTokenOracle1Factory","equity","bTokenSymbols","toUpperCase","getBTokens","bTokenIndex","ratePerSecond","diff","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","margins","getMargins","totapPnl","totalEquity","m","totalNotional","lTokenAbi","LToken","pTokenAbi","PToken","perpetualPoolAbi","perpetualPoolRouterAbi","PerpetualPoolRouter","infos","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","ObjectCache","poolApiFactory","getAsset","assets","lTokenAsset","lastCumulativePnl","accum","approximatePnl","cumulativePnl","bToken0Symbol","swappedPnl","newAmount","percentage1","shareValue1","ErrorCode","INVALID_CACHE","minBToken0Ratio","checkSymbolId","bTokenMultiplier","totalCost","fundingFee","idx","funding0","funding1","balances","getUserStakeInfo","getEstimatedLiquidityInfo","checkAmount","getFundingFee","getEstimatedTimePrice","isMaximum","MAX_INT256","addMargin","removeMargin","_getLiquidityInfo","positionInfo","orderValidation","symbolIdList","ids","volumes","id","flat","PoolApi","tr","toNumber","apiMap","apiV1","v2_dpmm","apiV2Dpmm","v2_lite","apiV2l","v2_lite_open","v2_lite_dpmm","apiV2lDpmm","apiOption","VERSION_IDS_ALL","defaultReturnValue","isDefaultReturnValue","totalValue","apys","maxApy","apy1","getEstimatedLiquidatePrice","getBTokenBalance","LITE_VERSIONS","getEstimatedLiquidatePriceV2","getRestServerConfig","process","wrappedOracleAbi","brokerManagerAbi","brokerAddress","pTokenAirdropAbi","fullMessage","ErrorName","ErrorMessage","WebSocket","socket","io","transports","withCredentials","reconnectListeners","reconnected","callback","emit","onMessage","listener","time_type","equalIgnoreCase","findEvent","pos","splice","REST_API_CALL_RETRY","resp","func","Spinner","className","backgroundColor","fontSize","fontWeight","fontColor","borderSize","defaultBorderColor","borderColor","Button","label","PRIMARY","bgColor","outline","isSelected","outlineColor","icon","onClick","styles","useState","setPending","SECONDARY","click","clazz","classNames","selected","style","Env","getChainIds","utils","tokenIds","keyArray","chainInfo","firstLetterUppercase","str","replace","formatAddress","substr","formatBalance","toFixed","eqInNumber","str1","str2","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","restoreChain","storeLocale","locale","restoreLocale","getFormatSymbol","curChain","isOption","isV1","getDefaultNw","getNetworkList","network","isDefault","getMarkpriceSymbol","selectedSymbol","Type","current","intervalRange","greaterThan","param1","param2","percentTimesAmount","percent","PROD","TESTNET","DEV","freeze","_env","makeAutoObservable","observable","setCurrent","action","computed","isFuture","ApiProxy","options","includeResponse","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","sd","formatBN","bigNumber","toFormat","replaceAll","isBrowser","document","isJsDom","navigator","userAgent","keyList","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","pancakePairAbi","PancakePair","ERC20Adapter","ERC20Abi","ERC20","chainlinkOracleAbi","ChainlinkOracle","offChainOracleAbi","inputs","internalType","stateMutability","outputs","OffChainOracle","offChainVolatilityOracleAbi","OffChainVolatilityOracle","TERC20MintLimitAbi","TERC20MintLimit","bTokenOracle1Abi","BTokenOracle1","offChainOracleAdapter","offChainVolatilityOracleAdapter","isQuoteToken0","qDecimals","bDecimals","pair","priceCumulativeLast1","priceCumulativeLast2","timestampLast1","timestampLast2","pancakePair","getReserves","reserveQ","_reserve0","reserveB","_reserve1","_blockTimestampLast","price0CumulativeLast","price1CumulativeLast","tmpPairState","bTokenOracle1Adapter","dToken","MiningVault","retired","isLp","filteredConfig","getDeriConfigList","Deri","Wormhole","staking","isInTvlRace","premining","getMiningVaultConfig","dTokenAdress","MinningVaultAddress","bTokenPairs","AMUSDC","symbolPairs","IBSCDEFI","IGAME","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","SHIBUSDT","optionSymbol","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","re","RegExp","mapToSymbol","internalSymbol","customIndexs","tokens","IMEME","Version","isV2","isV2Lite","DEPOSIT","WITHDRAW","BUY","SELL","ARROW_UP","FUTURE","OPTION","VERSION_V2","VERSION_V2_LITE","VERSION_V2_OPEN","processObjectResult","prop","bTokenAbi","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","every","infuraAccount","provider_urls","chainBlockNumberList","WEB3_WALLET_NOT_FOUND","BROWSER_NOT_SUPPORTED","INVALID_DERI_ENV","INVALID_VERSION","INVALID_VERSION_ID","INVALID_CHAIN_ID","INVALID_ADDRESS","INVALID_TOKEN_ID","INVALID_TOKEN_ID_IN_RANGE","INVALID_SYMBOl","INVALID_BASE_TOKEN","INVALID_AMOUNT","INVALID_TRADE_VOLUME","INVALID_DATA","CONFIG_LIST_NOT_FOUND","CONFIG_NOT_FOUND","RPC_NODE_ALL_UNAVAILABLE","INVALID_JSON_RPC_RESPONSE","JSON_RPC_CALL_TIMEOUT","REST_API_CALL_TIMEOUT","INSUFFICIEN_MARGIN","INSUFFICIENT_BALANCE","INSUFFICIEN_LIQUIDITY","PRICE_EXPIRED","VOLATILITY_EXPIRED","DEADLINE_EXPIRED","OUT_OF_GAS","TRANSACTION_REVERTED","API_REQUEST_TIMEOUT","UNKOWN_ERROR","INVALID_SYMBOL","color","borderRadius","Label","text","alt","Menu","lang","useLocation","menus","link","subMenu","menu","pathname","Panel","LangSelector","langIcon","NetworkSelector","bscLogoIcon","arrowDownIcon","inject","observer","wallet","btnText","setBtnText","isIndex","useRouteMatch","isRoot","path","exact","isMining","isTeam","isRetired","isOptionsLite","isOptionsPro","isDownload","isInfo","isOptions","notConnectWalletPage","setAccountText","detail","isConnected","isSupportChain","useEffect","connect","href","matemaskIcon","dict","page","intl","logo","Footer","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","withLanguage","WithLanguage","prevProps","onRouteChanged","isMobile","mobile","IndexRoute","Home","Pool","PoolDetail","Trade","Bridge","Governance","Token","Info","InfoDetail","PageRouter","withRouter","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Wallet","defaultNw","supportWeb3","approve","approved","apiProxy","loadWalletBalance","switchNetwork","metamask","isOpen","supported","setDetail","setDefaultNw","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","setIndex","webSocket","subscribe","close","setSymbol","setTimeType","unsubscribe","setPause","unsubscribeBars","Position","callbackALL","counter","mockPositionInfo","deltaFundingAccrued","wrapperForDisplay","balanceContract","directionColor","unrealizedPnlColor","fundingFeeColor","notionalColor","unrealizedPnlRate","unrealizedPnlRateColor","started","runInAction","loadAll","startedAll","load","timer","clean","toLowerCase","pageName","makeObservable","setLocale","localeLabel","language","prefix","supportedCatalog","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","spec","extractBySymbol","setInfo","symboleInArray","History","columnMap","markpriceSymbolFormat","currentSymbol","setCurrentSymbol","setMarkpriceSymbolFormat","setAddress","setChain","setChainId","setZone","setVersion","setType","setSymbols","setBTokens","setDecimals","isInno","hasOwnProperty","attr","apyInfo","liq","totalLiquidity","bTokensApy","bTokensLiq","staked","lpApy","multipliedBy","dividedBy","formatShares","totalShares","tokenInfo","symbolDisplay","PoolManager","lpPools","setPools","setLpPools","v2Pools","innoPools","openPools","optionsPools","ammPools","futurePools","loadDoubleMingingPool","mapPools","FUTURE_INNO","FUTURE_OPEN","Trading","priceDecimals","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","closeOnly","percentageAmount","setWallet","setCloseOnly","setPriceDecimals","setMarkPrice","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setVolatility","setHistory","setSlideMargin","setDirection","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","dailyFunding","netPositionNutual","marginReqs","curSymbol","maxEntryVolume","minEntryVolume","currTradeUnit","sliderMax","curSliderValue","accountInfo","transactionSummary","inputHelpText","directionDisplay","indexOracle","markOracle","contractInfo","historyInfo","finishedCallback","loadByType","defaultPool","setPool","loadByPool","changed","onChange","symbolChanged","addListener","syncFundingRate","syncVolatility","loadFundingRate","results","finally","startAll","resume","histories","defaultConfig","fromStore","getFromStore","pause","setPaused","percentage","marginUsed","increment","MarginRatio","substring","num","dynEffMargin","marginUsage","availableMargin","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","lt","dynBalance","available","exchanged","totalContractValue","curContractValue","afterLeverage","Intl","groupConfigBySymbol","tradePrice","isLoading","setIsLoading","isShowMask","Wraper","trading","ReactDOM","TOP_RIGHT","timeout","offset","template","getElementById","LP","VERSIONS_RETIRED","VERSIONS_ALL","web3InstanceMap","walletChainId","providerUrl"],"mappings":"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","file":"static/js/main.431c2afa.chunk.js","sourcesContent":["\nconst paddingDate = (date) => {\n  date = date.toString()\n  if (date.length === 1) {\n    return '0' + date\n  } else {\n    return date\n  }\n}\nexport const getEpochTimeRange = (time) => {\n  //console.log('1', time.getTime()/1000)\n  const year = time.getUTCFullYear()\n  const month = time.getUTCMonth()\n  const day = time.getUTCDate()\n  let epochs = []\n  for (let i = 0; i< 3; i++) {\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\n    //console.log(newDate.getTime()/1000)\n    epochs.push(newDate)\n  }\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\n  let index = -1\n  for (let i = 0; i< epochs.length; i++) {\n    //console.log(i, epochs[i].getTime()/1000)\n    if (time.getTime() < epochs[i].getTime()) {\n      index = i\n      break\n    }\n  }\n  if (index !== -1) {\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\n  }\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\n}","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n  chainConfigList,\n} from '../config/chain';\nimport { getLatestRPCServer } from './network';\nimport { AppError } from '../error/error';\n\nexport const getChainProviderUrl = async (chainId) => {\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  const config = chainConfigList.find((c) => c.chainId === chainId)\n  if (config && config.name)  {\n    return config.name\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getNetworkName',\n    args: [chainId],\n  });\n};\n\nexport const getChainGasUnit= (chainId) => {\n  const config = chainConfigList.find((c) => c.chainId === chainId)\n  if (config && config.unit)  {\n    return config.unit\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getChainGasUnit',\n    args: [chainId],\n  });\n};","import styled from \"styled-components\"\nconst images = require.context('../../assets/img', true)\nconst Wrapper = styled.img`\n  width : ${props => props.width }px;\n  height : ${props => props.height}px;\n  display : flex;\n  align-items : center;\n`\nexport default function Icon({width,height,token}){\n  const img = images(`./${token}.svg`)\n  return <Wrapper src={img.default} width={width} height={height}/>\n}","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nconst intRe = /^\\d+$/\n// adopt from derijs next\nexport const deleteIndexedKey = (obj) => {\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\n    const keys = Object.keys(obj);\n    const intKeyCount = keys.reduce(\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\n      0\n    );\n    //console.log(keys);\n    // is leaf array\n    if (intKeyCount * 2 === keys.length) {\n      let newObj = {};\n      Object.keys(obj).forEach((k) => {\n        if (!intRe.test(k)) {\n          newObj[k] = obj[k];\n        }\n      });\n      return newObj;\n    } else if (intKeyCount === keys.length) {\n      // is array container\n      let res = [];\n      for (let i = 0; i < keys.length; i++) {\n        if (Array.isArray(obj[i])) {\n          res.push(deleteIndexedKey(obj[i]));\n        } else {\n          res.push(obj[i]);\n        }\n      }\n      return res;\n    }\n  }\n  return obj;\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\n  export const getPastEventsUseAbi = async(chainId, contractAddress, contractAbi, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const contract = new web3.eth.Contract(contractAbi, contractAddress);\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","export default __webpack_public_path__ + \"static/media/arrow-down.3242399e.svg\";","import { AppError } from '../error/error';\nimport { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731 * 3;\n////const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\n//const RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 3\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        if (retry === 1) {\n          this.web3 = null\n        }\n        // if (err.toString().includes('Invalid JSON RPC response')) {\n        //   console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        // } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n        //   console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        // } else {\n        //   //console.log('error:', err.toString())\n        // }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new AppError('JSON_RPC_CALL_TIMEOUT', {\n        name: method,\n        args: [...args, this.contractAddress],\n      });\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        console.log(`-- estimatedGas: ${error}`)\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          //receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    let [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, args, accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    if (this.chainId.toString() === '56') {\n      gasPrice = gasPrice * 1.002\n    }\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\n// export const shuffleArray = (urls) => {\n//   const newUrls = deepClone(urls)\n//   const length = urls.length\n//   let res = []\n//   for (let i = 0; i < length; i++) {\n//     const index = Math.floor(Math.random() * urls.length)\n//     res = res.concat(newUrls.splice(index,1))\n//   }\n//   return res\n// }\nexport const shuffleArray = (array) => {\n  let currentIndex = array.length, randomIndex;\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  // urls = shuffleArray(urls)\n  // pick 2 random urls\n  // urls = urls.length >= 2 ? urls.slice(0,2) : urls\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","// import { DeriEnv } from './env';\n// import jsonConfig from '../resources/config.json';\nimport jsonProdConfig from '../resources/config.prod.json';\nimport jsonTestnetConfig from '../resources/config.testnet.json';\nimport jsonDevConfig from '../resources/config.dev.json';\n// import { VERSIONS } from './version';\nimport { checkEnv } from './check';\nimport { AppError } from '../error/error';\n\n// export const getJsonConfig = (version, env) => {\n//   env = env || DeriEnv.get();\n//   // for browser and nodejs\n//   let configs =\n//     typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n//   if (configs[version] && VERSIONS.includes(version)) {\n//     configs = configs[version];\n//     if (['prod', 'dev', 'testnet'].includes(env)) {\n//       if (configs && configs[env]) {\n//         return configs[env];\n//       }\n//     }\n//   } else {\n//     throw new Error(\n//       `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n//     );\n//   }\n// };\n\nexport const getJsonConfig = (env) => {\n  env = checkEnv(env);\n  let rawConfig =\n    env !== 'prod'\n      ? env === 'testnet'\n        ? jsonTestnetConfig\n        : jsonDevConfig\n      : jsonProdConfig;\n  // to support both nodejs and browser\n  let config =\n    typeof rawConfig === 'object' ? rawConfig : JSON.parse(rawConfig);\n  if (config.pools) {\n    return config.pools;\n  }\n  throw new AppError('CONFIG_LIST_NOT_FOUND', { name: 'getJsonConfig', env });\n};\n","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\n// import { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\n// import { validateObjectKeyExist } from '../utils';\n// import { poolProcessor, poolValidator } from './config_processor';\n// import { openConfigListCache } from '../../v2_lite_open/api/query_api';\nimport { AppError } from '../error/error';\nimport { checkAddress } from '.';\n\n// const expandPoolConfigV2 = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       for (let i = 0; i < pool.bTokens.length; i++) {\n//         const bToken = pool.bTokens[i];\n//         for (let i = 0; i < pool.symbols.length; i++) {\n//           const symbol = pool.symbols[i];\n//           result.push({\n//             pool: pool.pool,\n//             pToken: pool.pToken,\n//             lToken: pool.lToken,\n//             router: pool.router,\n//             initialBlock: pool.initialBlock,\n//             chainId: pool.chainId,\n//             bToken: bToken.bToken,\n//             bTokenId: bToken.bTokenId,\n//             bTokenSymbol: bToken.bTokenSymbol,\n//             symbol: symbol.symbol,\n//             symbolId: symbol.symbolId,\n//             unit: symbol.unit,\n//             decimals: symbol.decimals ? symbol.decimals : '2',\n//             type: 'perpetual',\n//             version: 'v2',\n//             versionId: pool.versionId,\n//             isOption: false,\n//           });\n//         }\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// const expandPoolConfigV2Lite = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       for (let i = 0; i < pool.symbols.length; i++) {\n//         const symbol = pool.symbols[i];\n//         result.push({\n//           pool: pool.pool,\n//           pToken: pool.pToken,\n//           lToken: pool.lToken,\n//           initialBlock: pool.initialBlock,\n//           chainId: pool.chainId,\n//           bToken: pool.bToken,\n//           bTokenSymbol: pool.bTokenSymbol,\n//           symbol: symbol.symbol,\n//           symbolId: symbol.symbolId,\n//           offchainSymbolIds: pool.offchainSymbolIds,\n//           offchainSymbols: pool.offchainSymbols,\n//           unit: symbol.unit,\n//           decimals: symbol.decimals ? symbol.decimals : '2',\n//           type: 'perpetual',\n//           version: 'v2_lite',\n//           versionId: pool.versionId,\n//           isOption: false,\n//         });\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// const expandPoolConfigOption = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       for (let i = 0; i < pool.symbols.length; i++) {\n//         const symbol = pool.symbols[i];\n//         result.push({\n//           pool: pool.pool,\n//           pToken: pool.pToken,\n//           lToken: pool.lToken,\n//           initialBlock: pool.initialBlock,\n//           chainId: pool.chainId,\n//           bToken: pool.bToken,\n//           pricer: pool.pricer,\n//           bTokenSymbol: pool.bTokenSymbol,\n//           symbol: symbol.symbol,\n//           symbolId: symbol.symbolId,\n//           offchainSymbolIds: pool.offchainSymbolIds,\n//           offchainSymbols: pool.offchainSymbols,\n//           volatilitySymbols: pool.volatilitySymbols,\n//           decimals: symbol.decimals ? symbol.decimals : '2',\n//           unit: symbol.unit,\n//           type: 'option',\n//           version: 'option',\n//           versionId: pool.versionId,\n//           isOption: true,\n//         });\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// const expandPoolConfigV2LiteOpen = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       if (pool.symbols.length > 0) {\n//         for (let i = 0; i < pool.symbols.length; i++) {\n//           const symbol = pool.symbols[i];\n//           result.push({\n//             pool: pool.pool,\n//             pToken: pool.pToken,\n//             lToken: pool.lToken,\n//             initialBlock: pool.initialBlock,\n//             chainId: pool.chainId,\n//             bToken: pool.bToken,\n//             bTokenSymbol: pool.bTokenSymbol,\n//             symbol: symbol.symbol,\n//             symbolId: symbol.symbolId,\n//             offchainSymbolIds: pool.offchainSymbolIds,\n//             offchainSymbols: pool.offchainSymbols,\n//             unit: symbol.unit,\n//             decimals: symbol.decimals ? symbol.decimals : '2',\n//             type: 'perpetual',\n//             version: 'v2_lite_open',\n//             versionId: pool.versionId,\n//             isOpen: true,\n//           });\n//         }\n//       } else {\n//         result.push({\n//           pool: pool.pool,\n//           pToken: pool.pToken,\n//           lToken: pool.lToken,\n//           initialBlock: pool.initialBlock,\n//           chainId: pool.chainId,\n//           bToken: pool.bToken,\n//           bTokenSymbol: pool.bTokenSymbol,\n//           symbol: '--',\n//           symbolId: '',\n//           offchainSymbolIds: pool.offchainSymbolIds,\n//           offchainSymbols: pool.offchainSymbols,\n//           unit: '',\n//           type: 'perpetual',\n//           version: 'v2_lite_open',\n//           versionId: pool.versionId,\n//           isOpen: true,\n//         });\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// export const getConfig = (version='v2', env='dev') => {\n//   let config = getJsonConfig(version, env);\n//   if (version === 'v2_lite_open') {\n//     //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\n//       //console.log('hit openConfigListCache')\n//     config.pools = openConfigListCache.get()\n//     //}\n//   }\n\n//   const pools = config.pools;\n//   if (pools && Array.isArray(pools)) {\n//     for (let i = 0; i < pools.length; i++) {\n//       poolProcessor[version](pools[i])\n//       poolValidator[version](pools[i])\n//     }\n//   }\n\n//   //validateObjectKeyExist(['oracle'], config, 'oracle');\n//   //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n//   return config;\n// };\n\n// export const getPoolConfigList = (version = 'v2', env = 'dev') => {\n//   let config;\n//   config = getConfig(version, env);\n//   if (version === 'v2') {\n//     return expandPoolConfigV2(config);\n//   } else if (version === 'v2_lite') {\n//     return expandPoolConfigV2Lite(config, version);\n//   } else if (version === 'v2_lite_open') {\n//     return expandPoolConfigV2LiteOpen(config);\n//   } else if (version === 'option') {\n//     return expandPoolConfigOption(config);\n//   }\n// };\n\n// export const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n//   bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n//   symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n//   const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n//   const check = bTokenId != null\n//     ? symbolId != null\n//       ? (i) =>\n//           i.pool === poolAddress &&\n//           i.bTokenId === bTokenId &&\n//           i.symbolId === symbolId\n//       : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n//     : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n//   if (poolConfigList.length > 0) {\n//     const res = poolConfigList.filter(check)\n//     if (res && res.length > 0) {\n//       return res\n//     }\n//   }\n//   throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n// }\n\n// export const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n//   const version = getPoolVersion(poolAddress)\n//   //console.log('version', version, poolAddress)\n//   // check the bToken in v2_lite\n//   if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n//     bTokenId = undefined\n//   }\n//   const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n//   return res[0]\n// }\n// export const getFilteredPoolConfig  = getPoolConfig\n\n\n// export const getPoolVersion = (poolAddress) => {\n//   let pools = VERSIONS.reduce((acc, version) => {\n//     return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n//   }, [])\n//   //console.log(pools)\n//   // add v1 config\n//   pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n//   const index = pools.findIndex((v) => v.pool === poolAddress)\n//   //console.log('pools index', index)\n//   if (index >= 0) {\n//     return pools[index].version\n//   }\n// }\n\n// export const getPoolVersionId = (poolAddress) => {\n//   let pools = VERSIONS.reduce((acc, version) => {\n//     return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n//   }, [])\n//   // add v1 config\n//   pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n//   const index = pools.findIndex((v) => v.pool === poolAddress)\n//   if (index >= 0) {\n//     return pools[index].versionId\n//   }\n// }\n\n// export const _getPoolConfig = (poolAddress) => {\n//   const version = getPoolVersion(poolAddress);\n//   // console.log('version', version)\n//   const config = getConfig(version, DeriEnv.get());\n//   const pools = config.pools;\n//   let pool = pools.find((p) => p.pool === poolAddress);\n//   //console.log(pool)\n//   if (pool) {\n//     return pool;\n//   } else {\n//     throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n//   }\n// };\n\n// export const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   const defaultBToken = {\n//     bTokenId: '',\n//     bTokenSymbol: '',\n//     bToken: '',\n//   };\n//   const defaultSymbol = {\n//     symbolId: '',\n//     symbol: '',\n//     unit: '',\n//   };\n//   let bToken, symbol;\n//   if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\n//     bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\n//   }\n//   if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\n//     symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n//   }\n//   bToken = bToken || defaultBToken;\n//   symbol = symbol || defaultSymbol\n//   return {\n//     pool: pool.pool,\n//     pToken: pool.pToken,\n//     lToken: pool.lToken,\n//     router: pool.router,\n//     bTokenCount: pool.bTokenCount,\n//     symbolCount: pool.symbolCount,\n//     initialBlock: pool.initialBlock,\n//     chainId: pool.chainId,\n//     bToken: bToken.bToken,\n//     bTokenId: bToken.bTokenId,\n//     bTokenSymbol: bToken.bTokenSymbol,\n//     symbol: symbol.symbol,\n//     symbolId: symbol.symbolId,\n//     unit: symbol.unit,\n//     version: 'v2',\n//   };\n// };\n\n// export const getPoolBTokenList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.bTokens.map((b) => {\n//     return {\n//       bTokenId: b.bTokenId,\n//       bTokenSymbol: b.bTokenSymbol,\n//       bTokenAddress: b.bToken,\n//     };\n//   });\n// };\n\n// export const getPoolBTokenIdList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.bTokens.map((b) => b.bTokenId);\n// };\n\n// export const getPoolSymbolList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.symbols.map((s) => {\n//     return {\n//       symbol: s.symbol,\n//       symbolId: s.symbolId,\n//       unit: s.unit,\n//     };\n//   });\n// };\n\n// export const getPoolSymbolIdList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.symbols.map((b) => b.symbolId);\n// };\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const configs = [\n    {\n      chainId: '97',\n      address: '0x2cADdC11aDD70E520D950A51606243970A54d80a',\n      version: 'option',\n    },\n    {\n      chainId: '56',\n      address: '0x04e1b1A97bd59EeE1Ac249eb98B3EfefbAd3239e',\n      version: 'option',\n    },\n  ];\n  const viewer = configs.find(\n    (c) => c.chainId === chainId && c.version === version\n  );\n  if (viewer && viewer.address) {\n    return viewer.address\n  } else {\n    throw new AppError('CONFIG_NOT_FOUND', {\n      name: 'getPoolViewerConfig',\n      args: [chainId, version],\n    });\n  }\n};\n\nexport const getPoolConfig = (poolAddress) => {\n  let pools = getJsonConfig(DeriEnv.get());\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()));\n  const pool = pools.find((v) => v.pool === poolAddress);\n  if (pool) {\n    return pool;\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getPoolConfig',\n    args: [DeriEnv.get(), poolAddress],\n  });\n};\n\nexport const getPoolVersion = (poolAddress) => {\n  return getPoolConfig(poolAddress).version\n};\n\nexport const getPoolVersionId = (poolAddress) => {\n  try {\n    poolAddress = checkAddress(poolAddress)\n    return getPoolConfig(poolAddress).versionId;\n  } catch (error) {\n    return {\n      failed: true,\n      response: {\n        data: {},\n        error: { code: error.code, message: error.message },\n      },\n    };\n  }\n};\n","import { catchApiError } from '../utils/api';\nimport {\n  getLpConfigList as _getLpConfigList,\n  getPreminingConfigList as _getPreminingConfigList,\n  getPoolV1ConfigList as _getRetiredPoolConfigList,\n  getDeriConfig as _getDeriConfig,\n  getDeriConfigList as _getDeriConfigList,\n} from '../config/pool_v1';\n\nexport { DeriEnv, Env } from '../config/env';\nexport {\n  getPoolVersion,\n  getPoolVersionId,\n} from '../config/pool';\n\nexport const getLpConfigList = async(env) => {\n  return catchApiError(_getLpConfigList, [env], []);\n};\nexport const getPreminingConfigList = async(env) => {\n  return catchApiError(_getPreminingConfigList, [env], []);\n};\nexport const getRetiredPoolConfigList = async(env) => {\n  return catchApiError(_getRetiredPoolConfigList, [env], []);\n};\nexport const getDeriConfig = async(env, chainId) => {\n  return catchApiError(_getDeriConfig, [env, chainId]);\n};\nexport const getDeriConfigList = async(env) => {\n  return catchApiError(_getDeriConfigList, [env], []);\n};\n","import { DEBUG } from '../config/constant';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { wrappedOracleFactory } from '../factory/oracle';\nimport { deriToNatural, fromWei } from './convert';\nimport {\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\nimport { offChainOracleFactory } from '../contract/factory';\nimport { AppError } from '../error/error';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data\n        }\n      }\n    } catch(err) {\n      DEBUG && console.log(err)\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n};\n\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\n  let url = getOracleUrl(null, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, {\n        mode: \"cors\",\n        cache: \"no-cache\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(symbolList),\n      });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n          return priceInfo.data;\n        }\n      }\n    } catch (err) {\n      DEBUG &&  console.log(err)\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n};\n\n// cache\n// export const getOraclePriceFromCache = (function () {\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\n//   let cache = {};\n//   return {\n//     async get(chainId, symbol = '_', version = 'v2') {\n//       const key = `${chainId}_${symbol}_${version}`\n//       if (\n//         Object.keys(cache).includes(key) &&\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n//       ) {\n//         return cache[key].data;\n//       } else {\n//         const data = await getOraclePrice(chainId, symbol, version);\n//         cache[key] = {\n//           data,\n//           timestamp: Math.floor(Date.now() / 1000),\n//         };\n//         return cache[key].data;\n//       }\n//     },\n//   };\n// })();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, {\n        mode: 'cors',\n        cache: 'no-cache',\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(symbolList),\n      });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data;\n        }\n      }\n    } catch (err) {\n      DEBUG && console.log(err);\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n};\n\nexport const oraclePricesCache = (function(){\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=[]) {\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\n// export const getOraclePrice = async (chainId, symbol, version='v2') => {\n//   chainId = normalizeChainId(chainId);\n//   symbol = mapToSymbolInternal(symbol)\n//   const config = getOracleConfig(version, chainId, symbol);\n//   if (config && config.address) {\n//     const oracle = oracleFactory(\n//       chainId,\n//       config.address,\n//       symbol,\n//       config.decimal,\n//     );\n//     return await oracle.getPrice();\n//   } else {\n//     // for new added symbol and not updated to config yet\n//     const priceInfo = await getPriceInfo(symbol, version);\n//     return deriToNatural(priceInfo.price).toString();\n//   }\n// };\n\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  if (oracleAddress !== '') {\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache2 = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\n      const key = `${chainId}_${symbol}_${oracleAddress}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\n// export const getOraclePriceForOption = async (chainId, symbol) => {\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n// };\n\n// for viewer use\n// export const getOraclePricesForOption = async (chainId, symbols) => {\n//   const oracleSymbols = symbols\n//     .map((i) => normalizeOptionSymbol(i))\n//     .filter((value, index, self) => self.indexOf(value) === index);\n//   const oracleSymbolPrices = await Promise.all(\n//     oracleSymbols.reduce(\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n//       []\n//     )\n//   );\n//   return symbols.map((s) => {\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n//   });\n// };\n\n// // for tx use\n// export const getOracleVolatilityForOption = async (symbols) => {\n//   const volSymbols = getVolatilitySymbols(symbols)\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n//   const volatilities = await Promise.all(\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n//   );\n//   //return volatilities;\n//   return symbols.map((s) => {\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n//   });\n// };\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\n  //console.log('volatilities', volatilities)\n  return symbols.map((s) => {\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\n  });\n};\n\n// check symbol is used offchain oracle\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return \"\"\n};\n\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\n    offChainSymbolIds.indexOf(s.symbolId) > -1\n      ? ''\n      : s.oracleAddress\n  );\n\n  const onChainSymbolPrices = await Promise.all(\n    onChainOracleAddressWithPlaceHolder\n      .reduce((acc, address, index) => {\n        const _symbol = symbols.map((s) => s.symbol)[index];\n        if (address !== '') {\n          return acc.concat(\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\n          );\n        } else {\n          return acc.concat('');\n        }\n      }, [])\n      .filter((f) => f !== '')\n  );\n\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\n\n  // combine offChain and onChain symbol prices\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\n    if (o !== '') {\n      return onChainSymbolPrices.shift();\n    } else {\n      return offChainSymbolPrices.shift();\n    }\n  });\n  return symbolPrices\n};","import { ContractBase } from \"../contract_base\";\nimport { symbolOracleOffChainAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class SymbolOracleOffChain extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, symbolOracleOffChainAbi);\n  }\n  async getPrice() {\n    const res = await this._call('getPrice', []);\n    return deriToNatural(res);\n  }\n  async signer() {\n    await this._init();\n    const res = await this.contract.methods['signer']().call();\n    return res;\n  }\n  async signatory() {\n    await this._init();\n    const res = await this.contract.methods['signatory']().call();\n    return res;\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    //console.log('hit woo oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\nimport { WooOracle } from '../contract/oracle/woo_oracle';\n\nconst wooOracleAddresses = [\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\n]\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (wooOracleAddresses.includes(address)) {\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\nexport const wooOracleFactory = factory(WooOracle);\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityClaimFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0xe40a75957034A003Da4b341FBb02a457Af2aa302'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseDeriVoteFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from './contract_base'\nimport { deleteIndexedKey } from '../utils'\nimport { TERC20Abi } from './abis'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, TERC20Abi)\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  // only for testnet\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\nimport { TERC20 } from '../../contract/TERC20';\n\n//export const bTokenFactory = factory(BToken);\nexport const TERC20Factory = factory(TERC20)","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();","import {\n  hexToNumber,\n  fromWei,\n  catchSyncApiError,\n  catchApiError,\n  getChainGasUnit,\n} from '../utils';\nimport {\n  checkChainId,\n  checkAddress,\n} from '../config'\nimport { web3Factory } from '../factory';\nimport { AppError } from '../error/error';\n\nexport const hasWallet = () => {\n  return catchSyncApiError(() => {\n    let res = {};\n    if (window.ethereum) {\n      res.hasWallet = true;\n      if (window.ethereum.isMetaMask) {\n        res.isMetaMask = true;\n      }\n      return res;\n    }\n    throw new AppError('WEB3_WALLET_NOT_FOUND');\n  });\n};\n\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  return catchApiError(\n    async () => {\n      if (window != null && window.ethereum != null) {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n        const chainId = parseInt(\n          await window.ethereum.request({ method: 'net_version' })\n        );\n        // const chainId = hexToNumber(\n        //   await window.ethereum.request({ method: 'eth_chainId' })\n        // );\n        const account = Array.isArray(accounts) && accounts[0];\n\n        window.ethereum.on('accountsChanged', (accounts) => {\n          let account;\n          if (accounts.length > 0) {\n            account = accounts[0];\n          } else {\n            account = '';\n          }\n          if (typeof handleAccountChanged === 'function') {\n            handleAccountChanged(account);\n          } else {\n            window.location.reload();\n          }\n        });\n        window.ethereum.on('chainChanged', (chainId) => {\n          let res = hexToNumber(chainId);\n          if (typeof handleChainChanged === 'function') {\n            handleChainChanged(res);\n          } else {\n            window.location.reload();\n          }\n        });\n        return { account, chainId };\n      }\n      throw new AppError('WEB3_WALLET_NOT_FOUND');\n    },\n    [],\n    { account: '', chainId: '' }\n  );\n};\n\nexport const getUserWalletBalance = async (chainId, accountAddress) => {\n  return catchApiError(\n    async () => {\n      chainId = checkChainId(chainId);\n      accountAddress = checkAddress(accountAddress);\n      const web3 = await web3Factory.get(chainId);\n      const balance = await web3.eth.getBalance(accountAddress);\n      return  {\n        balance: fromWei(balance),\n        unit: getChainGasUnit(chainId),\n      }\n    },\n  );\n};\n","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  catchApiError,\n  //getPoolContractAddress,\n} from '../utils';\nimport {\n  checkChainId,\n  checkAddress,\n  checkTokenId,\n} from '../config/check'\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  let res,\n    retry = 2;\n  while (retry > 0) {\n    res = await db.getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ]);\n    if (\n      Math.floor(new Date().getTime() / 1000) < parseInt(deriToString(res[2]))\n    ) {\n      break;\n    } else {\n      retry -= 1;\n      db.web3 = null;\n      if (retry === 0) {\n        // if deadline is outdated\n        res = [...res];\n        res[7] = false;\n      }\n    }\n  }\n  const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n  return {\n    chainId: deriToString(chainId),\n    amount: deriToNatural(amount).toString(),\n    deadline: deriToString(deadline),\n    nonce: deriToString(nonce),\n    v: deriToString(v),\n    r,\n    s,\n    valid: deriToBool(valid),\n  };\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db.getValues([\n    `${userAddress}.claim.harvest.lp`,\n    `${userAddress}.claim.harvest.trade`,\n  ]);\n  const [harvestLp, harvestTrade] = res;\n  return {\n    lp: deriToNatural(harvestLp).toString(),\n    trade: deriToNatural(harvestTrade).toString(),\n  };\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db.getValues([`${userAddress}.claim.total`]);\n  const [total] = res;\n  return {\n    total: deriToNatural(total).toString(),\n  };\n};\n\nexport const getUserInfoAll = async (userAddress) => {\n  return catchApiError(async () => {\n    const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\n      getUserInfo(userAddress),\n      getUserInfoHarvest(userAddress),\n      getUserInfoTotal(userAddress),\n    ]);\n    return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n  });\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory();\n    const res = await db.getValues([`${chainId}.${poolAddress}.liquidity`]);\n    const [liquidity] = res;\n    return {\n      liquidity: deriToNatural(liquidity).toString(),\n    };\n  });\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory(true);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db.getValues([\n      `${poolNetwork}.${poolAddress}.apy`,\n      `${poolNetwork}.${poolAddress}.volume.1h`,\n      `${poolNetwork}.${poolAddress}.volume.24h`,\n    ]);\n    const [apy, volume1h, volume24h] = res;\n    return {\n      apy: deriToNatural(apy).toString(),\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n    };\n  });\n};\n\nexport const getPoolLiquidityV2 = async (chainId, poolAddress, bTokenId) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    bTokenId = checkTokenId(bTokenId)\n    const db = databaseFactory();\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n    const [liquidity] = res;\n    return {\n      liquidity: deriToNatural(liquidity).toString(),\n    };\n  });\n};\n\nexport const getPoolInfoApyV2 = async (chainId, poolAddress, bTokenId) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    bTokenId = checkTokenId(bTokenId)\n    const db = databaseFactory(true);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db.getValues([\n      `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n      `${poolNetwork}.${poolAddress}.volume.1h`,\n      `${poolNetwork}.${poolAddress}.volume.24h`,\n      `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n    ]);\n    const [apy, volume1h, volume24h, multiplier] = res;\n    return {\n      apy: deriToNatural(apy).toString(),\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n      multiplier: deriToNatural(multiplier).toString(),\n    };\n  });\n};\n\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory(true);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n    const [apy, apy2, volume1h, volume24h] = res;\n    return {\n      apy: deriToNatural(apy).toString(),\n      apy2: deriToNatural(apy2).toString(),\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n    };\n  });\n};\n\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory(true);\n    userAddress = toChecksumAddress(userAddress);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db.getValues([\n      `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n      `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n    ]);\n    const [volume1h, volume24h] = res;\n    return {\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n    };\n  });\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  return catchApiError(async () => {\n    const db = databaseAirdropFactory(true);\n    userAddress = toChecksumAddress(userAddress);\n    const res = await db.getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ]);\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  });\n};\n","import { isObject } from \"../utils\"\n\nexport const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const liquidatePriceCache = (function() {\n  let _cache = {}\n  return {\n    get(address) {\n      if (Object.keys(_cache).includes(address)) {\n        return _cache[address]\n      } else {\n        return {}\n      }\n    },\n    set(address, val) {\n      _cache[address] = val\n    },\n  }\n})()\n","import { getDeriConfig, checkAddress, DeriEnv, checkChainId } from '../config';\nimport { deriFactory, databaseWormholeFactory } from '../factory';\nimport { catchApiError } from '../utils';\n\nexport const getUserWormholeSignature = async (accountAddress) => {\n  return catchApiError(async () => {\n    accountAddress = checkAddress(accountAddress);\n    const databaseWormhole = databaseWormholeFactory(true);\n    return await databaseWormhole.signature(accountAddress);\n  });\n};\n\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  return catchApiError(async () => {\n    const env = DeriEnv.get();\n    chainId = checkChainId(chainId);\n    accountAddress = checkAddress(accountAddress);\n    const { wormholeAddress, deriAddress } = await getDeriConfig(env, chainId);\n    const deri = deriFactory(chainId, deriAddress);\n    return await deri.isUnlocked(accountAddress, wormholeAddress);\n  });\n};\n\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  return catchApiError(async () => {\n    const env = DeriEnv.get();\n    chainId = checkChainId(chainId);\n    accountAddress = checkAddress(accountAddress);\n    const { deriAddress } = await getDeriConfig(env, chainId);\n    const deri = deriFactory(chainId, deriAddress);\n    return (await deri.balanceOf(accountAddress)).toString();\n  });\n};\n","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n  checkChainId,\n  checkAddress,\n} from '../config';\nimport { naturalToDeri,  catchTxApiError } from '../../shared/utils';\nimport { AppError } from '../error/error';\n\nexport const mintDToken = async (chainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    accountAddress = checkAddress(accountAddress)\n    const userInfo = await getUserInfoAll(accountAddress);\n    const amount = naturalToDeri(userInfo.amount);\n    const { deadline, nonce, v, r, s } = userInfo;\n    // const { nonce } = userInfo;\n    // const { v } = userInfo;\n    // const { r } = userInfo;\n    // const { s } = userInfo;\n    if (userInfo.valid) {\n      const miningVaultAddress = getMiningVaultConfig(chainId);\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      return await miningVault.mintDToken(\n        accountAddress,\n        amount,\n        deadline,\n        nonce,\n        v,\n        r,\n        s\n      );\n    } else {\n      throw new AppError('INVALID_DATA', userInfo);\n    }\n  });\n};\n\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    toChainId = checkChainId(toChainId)\n    accountAddress = checkAddress(accountAddress)\n    const { wormholeAddress } = getDeriConfig(chainId);\n    const wormhole = wormholeFactory(chainId, wormholeAddress);\n    return await wormhole.freeze(accountAddress, amount, toChainId);\n  });\n};\n\nexport const mintDeri = async (toChainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    toChainId = checkChainId(toChainId)\n    accountAddress = checkAddress(accountAddress)\n    const databaseWormhole = databaseWormholeFactory(true);\n    const userInfo = await databaseWormhole.signature(accountAddress);\n    const {\n      amount,\n      fromChainId,\n      fromWormhole,\n      nonce: fromNonce,\n      v,\n      r,\n      s,\n    } = userInfo;\n    // const { fromChainId } = userInfo;\n    // const { fromWormhole } = userInfo;\n    // const fromNonce = userInfo.nonce;\n    // const { v } = userInfo;\n    // const { r } = userInfo;\n    // const { s } = userInfo;\n    if (userInfo.valid) {\n      const { wormholeAddress } = getDeriConfig(toChainId);\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      return await wormhole.mintDeri(\n        accountAddress,\n        amount,\n        fromChainId,\n        fromWormhole,\n        fromNonce,\n        v,\n        r,\n        s\n      );\n    } else {\n      throw new AppError('INVALID_DATA', userInfo);\n    }\n  });\n};\n\nexport const unlockDeri = async (chainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    accountAddress = checkAddress(accountAddress)\n    const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n    const deri = deriFactory(chainId, deriAddress);\n    return await deri.unlock(accountAddress, wormholeAddress);\n  });\n};\n\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    accountAddress = checkAddress(accountAddress)\n    const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n    const amount = naturalToDeri(userInfo.amount).toString();\n    const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n    if (userInfo.valid) {\n      const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      return await miningVaultRouter.mint(\n        accountAddress,\n        amount,\n        deadline,\n        nonce,\n        v1,\n        r1,\n        s1,\n        v2,\n        r2,\n        s2\n      );\n    } else {\n      throw new AppError('INVALID_DATA', userInfo);\n    }\n  });\n};","import { getLpConfig, checkChainId, checkAddress  } from '../config';\nimport { ERC20Factory } from '../contract';\nimport { slpPoolFactory } from '../factory/contract';\nimport { catchApiError, catchTxApiError } from '../utils';\n\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  });\n};\n\n\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.isUnlocked(accountAddress, poolAddress);\n  });\n};\n\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const balance = await bToken.balanceOf(accountAddress);\n    return balance.toString();\n  });\n};\n\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    return await slpPool.addLiquidity(accountAddress, amount);\n  });\n};\n\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    return await slpPool.removeLiquidity(accountAddress, amount);\n  });\n};\n\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  });\n};\n\n","import { clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\nimport { catchApiError, catchTxApiError} from '../utils';\nimport { checkChainId, checkAddress } from '../config/check';\nimport { ERC20Factory } from '../contract';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  });\n};\n\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.isUnlocked(accountAddress, poolAddress);\n  });\n};\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const balance = await bToken.balanceOf(accountAddress);\n    return balance.toString();\n  });\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    return await clp2Pool.addLiquidity(accountAddress, amount);\n  });\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    return await clp2Pool.removeLiquidity(accountAddress, amount);\n  });\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  });\n};\n\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\n// import {\n//   getClpLiquidityInfo,\n//   getClpWalletBalance,\n//   isClpUnlocked,\n// } from './clp_pool_api';\nimport { getLpConfig } from '../config';\nimport { clp2PoolFactory, slpPoolFactory } from '../factory/contract';\nimport { bg, catchApiError } from '../utils';\n\nexport const getLpUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    const { version } = await getLpConfig(chainId, poolAddress);\n    let liquidity;\n    if (version === 'slp') {\n      const slp = slpPoolFactory(chainId, poolAddress);\n      liquidity = await slp.getLiquidity(accountAddress);\n      //console.log('slp', liquidity.toString())\n    } else if (version === 'clp') {\n      const clp = clp2PoolFactory(chainId, poolAddress);\n      liquidity = await clp.getLiquidity(accountAddress);\n      //console.log('clp', liquidity.toString())\n    }\n    return { chainId, poolAddress, isStaked: bg(liquidity).gt(0) };\n  });\n};\n\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  // } else if (type === 'clp') {\n  //   return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (version === 'clp') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  }\n};\n\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  // } else if (version === 'clp') {\n  //   return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (version === 'clp') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  }\n};\n\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  // } else if (version === 'clp') {\n  //   return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (version  === 'clp') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  }\n};\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  // } else if (version === 'clp') {\n  //   return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (version === 'clp') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  }\n};\n\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (type === 'clp') {\n  //   return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'clp') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  }\n};\n\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (version === 'clp') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  }\n};\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","const invalidValues = [NaN, null, undefined];\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n  let u = Math.sqrt(8 / V / V / T + 1);\n  let timeValue, delta;\n  if (S > K) {\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\n    delta = ((1 - u) * timeValue) / S / 2;\n  } else if (S === K) {\n    timeValue = K / u;\n    delta = 0;\n  } else {\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\n    delta = ((1 + u) * timeValue) / S / 2;\n  }\n  return [timeValue, delta];\n}\n\nfunction getDynamicInitialMarginRatio(\n  spot,\n  strike,\n  isCall,\n  initialMarginRatio,\n  minInitialMarginRatio\n) {\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n    return initialMarginRatio;\n  } else {\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\n    return Math.max(\n      (1 - otmRatio * 3) * initialMarginRatio,\n      minInitialMarginRatio\n    );\n  }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(\n  pool,\n  trader,\n  symbols,\n  positions,\n  newUnderlierPrice\n) {\n  let newDynamicMargin = trader.dynamicMargin;\n  let newInitialMargin = trader.initialMargin;\n\n  for (let i = 0; i < symbols.length; i++) {\n    let symbol = symbols[i];\n    let position = positions[i];\n    if (position.volume === 0) {\n      continue;\n    }\n\n    let newIntrinsicValue = symbol.isCall\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.volatility,\n      pool.fundingPeriod\n    );\n    if (newIntrinsicValue > 0) {\n      newDelta += symbol.isCall ? 1 : -1;\n    }\n    let newPnl =\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\n      position.cost;\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.isCall,\n      pool.initialMarginRatio,\n      0.01\n    );\n\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\n    newInitialMargin =\n      newInitialMargin -\n      Math.abs(\n        position.volume *\n          symbol.spotPrice *\n          symbol.multiplier *\n          symbol.dynamicMarginRatio\n      ) +\n      Math.abs(\n        position.volume *\n          newUnderlierPrice *\n          symbol.multiplier *\n          newDynamicMarginRatio\n      );\n  }\n\n  let newMaintenanceMargin =\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\n\n  if (\n    invalidValues.includes(newMaintenanceMargin) ||\n    invalidValues.includes(newDynamicMargin)\n  ) {\n    throw new Error(\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\n    );\n  }\n  return newMaintenanceMargin > newDynamicMargin;\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n  if (symbols.length != positions.length) {\n    throw new Error(\n      'canLiquidateWithPrice: symbols and positions length not match'\n    );\n  }\n  if (symbols.length === 0) {\n    return {\n      numPositions: positions.length,\n      price1: null,\n      price2: null,\n    };\n  }\n  let head = symbols[0].symbol.slice(0, 6);\n  for (let i = 0; i < symbols.length; i++) {\n    if (!symbols[i].symbol.startsWith(head)) {\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\n    }\n  }\n\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\n    return {\n      numPositions: positions.length,\n      price1: symbols[0].spotPrice,\n      price2: symbols[0].spotPrice,\n    };\n  }\n\n  let final1, final2;\n  let price1, price2;\n  let l1, l2;\n\n  price1 = symbols[0].spotPrice / 10;\n  price2 = symbols[0].spotPrice;\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\n  l2 = false;\n  while (true) {\n    if (l1 && l2) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final1 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  price1 = symbols[0].spotPrice;\n  price2 = symbols[0].spotPrice * 10;\n  l1 = false;\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\n  while (true) {\n    if (l1 && l2) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final2 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  return {\n    numPositions: positions.length,\n    price1: final1,\n    price2: final2,\n  };\n}\n","import { bg, max, toNumberForObject } from \"../../shared/utils\"\nimport { normalizeOptionSymbol } from \"../../shared/config\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'fundingPeriod',\n      'fundingCoefficient',\n      'marginMultiplier',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'volatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativeFundingRate',\n          'fundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","// this file is generated by script, don't modify it !!!\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\nimport {\n  toWei,\n  getLiquidity,\n  getProtocolFeeAccrued,\n  getLastTimestamp,\n  bg,\n  processResult,\n  deriToNatural,\n  getBlockInfo,\n  getHttpBase,\n  fetchJson,\n  toChecksumAddress,\n} from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\nimport { getSymbolPrices } from '../../shared/utils/oracle'\nimport { getPriceInfos } from \"../utils.js\";\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\n\n\n// klass = addInstanceMethods(klass, [])\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\n\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return ''\n};\n\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const prices = await this._getSymbolPrices()\n    // console.log('prices', prices)\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\nconst init = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.activeSymbolIds) {\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n        this.getPoolStateValues(),\n        this.getFundingPeriod(),\n      ]);\n      this.fundingPeriod = parseInt(this.fundingPeriod);\n      // console.log(this.addresses, this.parameters)\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n\n      // init tokens\n      [this.bTokenSymbol ] = await Promise.all([\n        this.bToken.symbol(),\n      ]);\n      this.symbols = []\n      this.positions = []\n\n    }\n    // update symbols\n    // estimated for estimated* api use to disable async call\n    if (!isEstimatedApi) {\n      const symbolIds = await this.pToken.getActiveSymbolIds();\n      if (\n        !this.activeSymbolIds ||\n        this.activeSymbolIds.toString() !== symbolIds.toString()\n      ) {\n        this.poolLiquidity = await this.getPoolLiquidity();\n        this.activeSymbolIds = symbolIds;\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n        this.offChainOracleSymbolNames = await Promise.all(\n          this.symbols\n            .map((s) => s.oracleAddress)\n            .reduce(\n              (acc, o, index) => [\n                ...acc,\n                checkOffChainOracleSymbol(\n                  this.chainId,\n                  o,\n                  this.symbols[index].symbol\n                ),\n              ],\n              []\n            )\n        );\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n          (acc, i, index) => {\n            return this.offChainOracleSymbolNames[index] === ''\n              ? acc\n              : [...acc, i];\n          },\n          []\n        );\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\n          (s) => s && s !== ''\n        );\n        // console.log(\n        //   `${this.contractAddress} offchain`,\n        //   this.offChainOracleSymbolNames\n        // );\n      }\n    }\n  };\n  return klass;\n};\n\n// this.addresses\n// this.parameters\n\nconst getConfig = (klass) => {\n  klass.prototype[\"getConfig\"] = async function () {\n    await this.init()\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      // bTokenSymbol: this.bTokenSymbol,\n      bTokens: [\n        {\n          bTokenSymbol: this.bTokenSymbol,\n          bToken: this.addresses.bTokenAddress,\n        },\n      ],\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"future\",\n      version: \"v2_lite\",\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype[\"getStateValues\"] = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state = { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\n// getSymbol()\nconst getSymbols = (klass) => {\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    // const indexPrices = await Promise.all(\n    //   symbols.map((s) => {\n    //     const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\n    //     return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\n    //   })\n    // )\n\n    const indexPrices = await getSymbolPrices(\n      this.chainId,\n      symbols,\n      this.offChainOracleSymbolIds,\n      this.offChainOracleSymbolNames\n    );\n    //console.log('indexPrices', indexPrices);\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index]\n      s.K = calculateK(\n        s.indexPrice,\n        this.state.liquidity,\n        s.alpha\n      ).toString();\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      ).toString();\n\n      const pnl = calculateDpmmCost(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier,\n        bg(s.tradersNetVolume).negated().toString()\n      )\n        .negated()\n        .minus(s.tradersNetCost);\n      s.pnl = pnl.toString()\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.symbols[symbolIndex] = symbols[0]\n      }\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\n        []\n      )\n    );\n    await this.getLastTimestamp()\n\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\n// check is updated\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype['isSymbolsUpdated'] = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype['isPositionsUpdated'] = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce(\n          (acc, s) =>\n          acc.minus(s.pnl),\n            // acc\n            //   .plus(s.tradersNetCost)\n            //   .minus(\n            //     bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\n            //   ),\n          bg(0)\n        )\n      )\n      .toString();\n    this.state.dynamicEquity = res\n    return res\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    const { poolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\n          ),\n        bg(0)\n      )\n      .times(poolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated) {\n      await this.getPositions(account)\n    }\n    if (!this.margin) {\n      this.margin = await this.pToken.getMargin(account)\n    }\n    // console.log(this.positions)\n    // console.log(this.symbols)\n    const { initialMarginRatio } = this.parameters;\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\n      const s = this.symbols[i];\n      const p = this.positions[i];\n      dynamicMargin = dynamicMargin.plus(\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\n      );\n      requiredInitialMargin = requiredInitialMargin.plus(\n        bg(p.volume)\n          .times(s.indexPrice)\n          .times(s.multiplier)\n          .abs()\n          .times(initialMarginRatio)\n      );\n    }\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== '-1'\n          ? bg(tradeVolume).gt(0)\n            ? 'LONG'\n            : 'SHORT'\n          : 'LIQUIDATION';\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price: price,\n        indexPrice: deriToNatural(info.indexPrice).toString(),\n        notional: notional,\n        transactionFee:\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      return res;\n    } else {\n      return null;\n    }\n  };\n  return klass\n};\n\nconst _getSymbolPrices = (klass) => {\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\n    await this.init()\n    let prices = []\n    if (this.offChainOracleSymbolIds.length > 0) {\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbolNames);\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n            this.offChainOracleSymbolIds[\n            this.offChainOracleSymbolNames.indexOf(Object.keys(priceInfos)[index])\n            ],\n            p.timestamp,\n            p.price,\n            parseInt(p.v).toString(),\n            p.r,\n            p.s,\n        ]);\n        return acc;\n        }, []);\n    }\n    return prices;\n  };\n  return klass;\n};\n\n\n// migration\nconst getPoolExtraInfo = (klass) => {\n  klass.prototype['getPoolExtraInfo'] = async function() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`;\n    const res = await fetchJson(url);\n    //console.log(res)\n    if (res.success) {\n      return res.data;\n    } else {\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`);\n      return {\n        chain_id: this.chainId,\n        pool: this.contractAddress,\n        block_number: '1000000000',\n        version: '',\n        target_pool:'',\n        migration_timestamp: ''\n      };\n    }\n  }\n  return klass\n}\n\nconst isMigrationPrepared = (klass) => {\n  klass.prototype['isMigrationPrepared'] = async function() {\n    const res = await this.migrationDestination();\n    return res !== '0x0000000000000000000000000000000000000000';\n  }\n  return klass\n}\nconst isMigrationApproved = (klass) => {\n  klass.prototype['isMigrationApproved'] = async function() {\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\n    return poolAddress !== toChecksumAddress(this.contractAddress);\n  }\n  return klass\n}\n\nconst getOpenzoneConfig = (klass) => {\n  klass.prototype['getOpenzoneConfig'] = async function () {\n    await this.init();\n    const [\n      extraInfo,\n      isMigrationPrepared,\n      isMigrationApproved,\n    ] = await Promise.all([\n      this.getPoolExtraInfo(),\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n    ]);\n    const hasMigration = false;\n    return {\n      pool: this.contractAddress,\n      targetPool: extraInfo.target_pool || '',\n      migrationTimestamp: extraInfo.migration_timestamp || '',\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      bTokenSymbol: this.bTokenSymbol,\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: extraInfo.block_number || '',\n      type: 'perpetual',\n      version: extraInfo.version || '',\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isValid:\n        (!hasMigration && !isMigrationApproved),\n    };\n  };\n  return klass;\n};\n\n// reduce request for rest api\nconst getOpenzoneConfigAlt = (klass) => {\n  klass.prototype['getOpenzoneConfigAlt'] = async function () {\n    await this.init();\n    const [\n      isMigrationPrepared,\n      isMigrationApproved,\n    ] = await Promise.all([\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n    ]);\n    const hasMigration = false;\n    return {\n      pool: this.contractAddress,\n      //targetPool: extraInfo.targetPool ? extraInfo.targetPool : '',\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      bTokenSymbol: this.bTokenSymbol,\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      //initialBlock: extraInfo.block_number,\n      type: 'perpetual',\n      //version: extraInfo.version,\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isValid:\n        (!hasMigration && !isMigrationApproved),\n    };\n  };\n  return klass;\n};\n\n\nexport const perpetualPoolLiteAdapter = (klass) => {\n  //klass = processMethod(klass, \"getFundingPeriod\")\n\n  klass = addMethods(klass, [\n    init,\n\n    getConfig,\n    getLiquidity,\n    getLastTimestamp,\n    getProtocolFeeAccrued,\n    getStateValues,\n    getSymbols,\n    getPositions,\n    getDynamicEquity,\n    getPoolRequiredMargin,\n    getTraderMarginStatus,\n    isSymbolsUpdated,\n    isPositionsUpdated,\n    getTraderLiquidity,\n    formatTradeEvent,\n    _getSymbolPrices,\n\n    getPoolExtraInfo,\n    isMigrationPrepared,\n    isMigrationApproved,\n    getOpenzoneConfig,\n    getOpenzoneConfigAlt,\n  ]);\n\n  klass = overrideMethods(klass, [\n    [\n      processMethod,\n      'getParameters',\n      [\n        'poolMarginRatio',\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'minLiquidationReward',\n        'maxLiquidationReward',\n        'liquidationCutRatio',\n        'protocolFeeCollectRatio',\n      ],\n    ],\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\n    [processMethod, 'getFundingPeriod'],\n    [\n      processMethod,\n      'getSymbol',\n      [\n        'multiplier',\n        'feeRatio',\n        'fundingRateCoefficient',\n        'price',\n        'alpha',\n        'cumulativeFundingRate',\n        'tradersNetVolume',\n        'tradersNetCost',\n      ],\n    ],\n  ]);\n\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['1']],\n    [processTxMethod, 'removeLiquidity', ['1']],\n    [processTxMethod, 'addMargin', ['1']],\n    [processTxMethod, 'removeMargin', ['1']],\n    [processTxMethod, 'trade', ['2']],\n  ]);\n\n  return klass;\n};\n\nexport const lTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'balanceOf'],\n    [processMethod, 'totalSupply'],\n  ]);\n};\n\nexport const pTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'getMargin'],\n    [\n      processMethod,\n      'getPosition',\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n};\n\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    return klass\n}\n\n","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase } from '../../shared/contract';\nimport { deleteIndexedKey, fromWeiForObject } from '../../shared/utils';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        //'cumulativeDeltaFundingRate',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        //'lastCumulativeDeltaFundingRate',\n        'lastCumulativeFundingRate',\n        //'deltaFundingAccrued',\n        'fundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase } from '../../shared/contract';\nimport { fromWei } from '../../shared/utils';\nimport { lTokenOptionAbi } from './abis.js';\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi);\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account]);\n    return fromWei(res);\n  }\n  async name() {\n    const res = await this._call('name', []);\n    return res;\n  }\n  async pool() {\n    const res = await this._call('pool', []);\n    return res;\n  }\n  async symbol() {\n    const res = await this._call('symbol', []);\n    return res;\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', []);\n    return fromWei(res);\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { fromWei } from '../../shared/utils';\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { ContractBase } from '../../shared/contract';\nimport { fromWei } from '../../shared/utils';\n\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\n\nexport class OptionPricer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, optionPricerAbi)\n  }\n\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\n    return {\n      timeValue: fromWei(res.timeValue),\n      delta: fromWei(res.delta),\n    };\n  }\n}","import { factory } from '../../shared/utils';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\nimport { OptionPricer } from '../contract/option_pricer';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);\nexport const optionPricerFactory = factory(OptionPricer);","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=['BTCUSD']){\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            //console.log('data', data)\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\n// export const volatilityCache = (function() {\n//   const cache = {}\n//   return {\n//     async get(symbol){\n//       const key = symbol\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\n//         const timestamp = Math.floor(Date.now()/1000)\n//         const res = await getPriceInfo(symbol, 'option')\n//         const data = deriToNatural(res.volatility).toString()\n//         cache[key] = {\n//           data,\n//           timestamp,\n//         }\n//         //console.log('new key')\n//         return cache[key].data\n//       } else {\n//         return cache[key].data\n//       }\n//     }\n//   }\n// })()\n\n// export const volatilitiesCache2 = async (symbols) => {\n//   return await Promise.all(\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\n//   )\n// }\n","import { ContractBase } from '../../shared/contract';\nimport {\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  toWei,\n  naturalToDeri,\n  getBlockInfo,\n  deriToNatural,\n  bg,\n  max,\n } from '../../shared/utils';\nimport { getVolatilitySymbols, normalizeOptionSymbol } from '../../shared/config/token';\nimport { getPoolViewerConfig } from '../../shared/config/pool';\nimport { chainlinkOracleFactory, ERC20Factory\n } from '../../shared/contract/factory';\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  lTokenOptionFactory,\n  optionPricerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nconst SECONDS_IN_A_DAY = 60 * 60 * 24\nconst _calculateDpmmPrice = (\n  indexPrice,\n  theoreticalPrice,\n  delta,\n  alpha,\n  tradersNetPosition,\n  liquidity\n) => {\n  let K = \"0\", dpmmPrice = \"0\";\n  if (bg(liquidity).gt(0)) {\n    K = bg(indexPrice)\n      .times(indexPrice)\n      .div(theoreticalPrice)\n      .times(bg(delta).abs())\n      .times(alpha)\n      .div(liquidity);\n  } \n  dpmmPrice = theoreticalPrice.times(\n    bg(1).plus(bg(K).times(tradersNetPosition))\n  );\n  return [K, dpmmPrice];\n};\n\nconst _queryTradeDpmm = (\n  tradersNetPosition,\n  theoreticalPrice,\n  tradePosition,\n  K\n) => {\n  const r = bg(tradersNetPosition)\n    .plus(tradePosition)\n    .pow(2)\n    .minus(bg(tradersNetPosition).pow(2))\n    .times(K)\n    .div(2)\n    .plus(bg(tradePosition));\n  return bg(theoreticalPrice).times(r);\n};\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    // this.config = getPoolConfig(\n    //   contractAddress,\n    //   undefined,\n    //   undefined,\n    //   'option'\n    // );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    // this.volatilitySymbols = this.config.volatilitySymbols;\n    // this.bTokenAddress = this.config.bToken;\n    // this.lTokenAddress = this.config.lToken;\n    // this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async init(usedByEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      //console.log(this.addresses, this.parameters, this.state)\n      const {\n        pTokenAddress,\n        lTokenAddress,\n        optionPricerAddress,\n        bTokenAddress,\n      } = this.addresses;\n      this.lToken = lTokenOptionFactory(this.chainId, lTokenAddress);\n      this.pToken = pTokenOptionFactory(this.chainId, pTokenAddress);\n      this.pricer = optionPricerFactory(this.chainId, optionPricerAddress);\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n      this.bTokenSymbol = await this.bToken.symbol();\n      this.fundingPeriod = bg(1).div(365).toString();\n      this.fundingCoefficient = bg(1).div(24).div(3600).toString();\n    }\n    if (!usedByEstimatedApi) {\n      const symbolIds = await this.pToken.getActiveSymbolIds();\n      if (\n        !this.activeSymbolIds ||\n        this.activeSymbolIds.toString() !== symbolIds.toString()\n      ) {\n        this.activeSymbolIds = symbolIds;\n\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n        const ttt = await volatilitiesCache.get(this.activeSymbolNames)\n        const symbolVolatilities = ttt.map((v) => v.volatility);\n        const state = await this.viewer.getPoolStates(\n          this.contractAddress,\n          [],\n          symbolVolatilities\n        );\n        const { symbolState } = state;\n\n        // update state\n        //this.activeSymbolIds = activeSymbolIds;\n        this.activeSymbols = symbolState.filter((s) =>\n          this.activeSymbolIds.includes(s.symbolId)\n        );\n        // for tx use\n        this.volatilitySymbols = getVolatilitySymbols(\n          this.symbols.map((s) => s.symbol)\n        );\n      }\n      this.state = await this.getPoolStateValues();\n      this.state.preTimestamp = this.state.lastTimestamp;\n      this.state.curTimestamp = Math.floor(Date.now() / 1000).toString();\n      this.userState = {}\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1];\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0]);\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', []);\n    return {\n      liquidity: fromWei(res[0]),\n      lastTimestamp: res[1],\n      protocolFeeAccrued: fromWei(res[2]),\n    };\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatioITM',\n      'feeRatioOTM',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativeFundingRate',\n    ]);\n  }\n  async getSymbols(volatilities = []) {\n    const symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, i) => acc.concat([this.getSymbol(i)]),\n        []\n      )\n    );\n    const symbolIndexPrices = await Promise.all(\n      symbols.reduce(\n        (acc, s) => [\n          ...acc,\n          chainlinkOracleFactory(this.chainId, s.oracleAddress).getPrice(),\n        ],\n        []\n      )\n    );\n    if (volatilities.length !== this.activeSymbolIds.length) {\n      // volatilities = await Promise.all(\n      //   symbols.reduce(\n      //     (acc, s) => [\n      //       ...acc,\n      //       offChainVolatilityOracleFactory(\n      //         this.chainId,\n      //         s.volatilityAddress\n      //       ).volatility(),\n      //     ],\n      //     []\n      //   )\n      // );\n      volatilities = (\n        await volatilitiesCache.get(this.activeSymbolNames)\n      ).map((v) => deriToNatural(v.volatility).toString());\n    }\n    const timeValues = await Promise.all(\n      symbols.reduce(\n        (acc, s, index) => [\n          ...acc,\n          this.pricer.getEverlastingTimeValueAndDelta(\n            toWei(symbolIndexPrices[index]),\n            toWei(s.strikePrice),\n            toWei(volatilities[index]),\n            toWei(this.fundingPeriod)\n          ),\n        ],\n        []\n      )\n    );\n    let dynamicEquity = this.state.liquidity;\n    for (let i = 0; i < symbols.length; i++) {\n      const s = symbols[i];\n      s.tradersNetPosition = bg(s.tradersNetVolume)\n        .times(s.multiplier)\n        .toString();\n      s.indexPrice = symbolIndexPrices[i];\n      s.volatility = volatilities[i];\n      s.intrinsicValue = s.isCall\n        ? max(bg(s.indexPrice).minus(s.strikePrice), 0).toString()\n        : max(bg(s.strikePrice).minus(s.indexPrice), 0).toString();\n      s.timeValue = timeValues[i].timeValue;\n      s.theoreticalPrice = bg(s.intrinsicValue).plus(s.timeValue).toString();\n      s.delta = timeValues[i].delta;\n      if (bg(s.intrinsicValue).gt(0)) {\n        if (s.isCall) {\n          s.delta = bg(s.delta).plus(1).toString();\n        } else {\n          s.delta = bg(s.delta).minus(1).toString();\n        }\n      } else if (bg(s.indexPrice).eq(s.strikePrice)) {\n        s.delta = bg(1).div(2).toString();\n      }\n      const [K, dpmmPrice] = _calculateDpmmPrice(\n        s.indexPrice,\n        bg(s.intrinsicValue).plus(s.timeValue),\n        s.delta,\n        s.alpha,\n        bg(s.tradersNetVolume).times(s.multiplier),\n        this.state.liquidity\n      );\n      s.K = K.toString();\n      s.dpmmPrice = dpmmPrice.toString();\n      const cost = _queryTradeDpmm(\n        s.tradersNetPosition,\n        s.theoreticalPrice,\n        bg(s.tradersNetPosition).negated().toString(),\n        s.K\n      ).negated();\n      s.pnl = cost.minus(s.tradersNetCost).toString();\n      dynamicEquity = bg(dynamicEquity).minus(s.pnl).toString();\n      s.fundingPerSecond = bg(s.dpmmPrice)\n        .minus(s.intrinsicValue)\n        .times(s.multiplier)\n        .times(this.fundingCoefficient)\n        .toString();\n      s.fundingPerVolume = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\n      s.funding = bg(s.fundingPerVolume).div(s.multiplier).toString()\n      const offset2 = bg(s.fundingPerSecond).times(\n        bg(this.state.curTimestamp).minus(this.state.preTimestamp)\n      );\n      // console.log('offset2', offset2.toString())\n      s.cumulativeFundingRate = bg(s.cumulativeFundingRate).plus(offset2).toString()\n    }\n\n    this.state.dynamicEquity = dynamicEquity;\n    this.symbols = symbols\n\n    return symbols;\n  }\n\n  async getPositions(accountAddress) {\n    const positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(accountAddress, symbolId)],\n        []\n      )\n    );\n    let totalPnl = '0', totalFundingAccrued = '0'\n    for (let i = 0; i < positions.length; i++) {\n      // const cost = bg(positions[i].volume).times(this.symbols[i].dpmmPrice).times(this.symbols[i].multiplier).toString()\n      const cost = _queryTradeDpmm(\n        this.symbols[i].tradersNetPosition,\n        this.symbols[i].theoreticalPrice,\n        bg(positions[i].volume)\n          .times(this.symbols[i].multiplier)\n          .negated()\n          .toString(),\n        this.symbols[i].K\n      )\n        .negated()\n        .toString();\n      positions[i].pnl = bg(cost).minus(positions[i].cost).toString();\n      positions[i].fundingAccrued = bg(positions[i].volume)\n        .times(\n          bg(this.symbols[i].cumulativeFundingRate).minus(\n            positions[i].lastCumulativePremiumFundingRate\n          )\n        )\n        .toString();\n      totalPnl = bg(totalPnl).plus(positions[i].pnl).toString()\n      totalFundingAccrued = bg(totalFundingAccrued).plus(positions[i].fundingAccrued).toString()\n    }\n    this.userState.totalPnl = totalPnl\n    this.userState.totalFundingAccrued = totalFundingAccrued\n    this.positions = positions\n\n    return positions\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._init();\n    let volatilities = [];\n    let oracleSymbols = [];\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilitiesForOption(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        const oracleSymbol = normalizeOptionSymbol(\n          this.activeSymbolNames[index]\n        );\n        if (!oracleSymbols.includes(oracleSymbol)) {\n          oracleSymbols.push(oracleSymbol);\n          acc.push([\n            this.activeSymbolIds[index],\n            p.timestamp,\n            p.volatility,\n            parseInt(p.v).toString(),\n            p.r,\n            p.s,\n          ]);\n        }\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    let amount = naturalToDeri(lShares);\n    return await this._transact(\n      'removeLiquidity',\n      [amount, prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n\n  // trade history\n  async formatTradeEvent(event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume).toString();\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const indexPrice = deriToNatural(info.indexPrice).toString();\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== '-1'\n          ? bg(tradeVolume).gt(0)\n            ? 'LONG'\n            : 'SHORT'\n          : 'LIQUIDATION';\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(indexPrice)\n        .times(symbol.multiplier)\n        .toString();\n      const contractValue = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price,\n        indexPrice,\n        notional,\n        contractValue,\n        transactionFee:\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      //console.log(JSON.stringify(res));\n      return res;\n    } else {\n      return null;\n    }\n  }\n}\n","import { factory } from '../../shared/utils';\nimport { EverlastingOption } from '../contract/everlasting_option';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);","import {\n  bg,\n  max,\n  catchApiError,\n  fromWei,\n} from '../../shared/utils';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\nimport { getIndexInfo } from '../../shared/config/token';\nimport {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n  checkTokenId,\n} from '../../shared/config';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress)\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.symbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol: optionPool.bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatioOTM: feeRatioOTM.toString(),\n        feeRatioITM: feeRatioITM.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n        indexConstituents: getIndexInfo(symbol),\n      };\n    },\n    args,\n    {}\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      // const { symbol: symbolName} = getPoolConfig(\n      //   poolAddress,\n      //   undefined,\n      //   symbolId,\n      //   'option'\n      // );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.symbols\n      const symbolName = symbols.find((s) => s.symbolId === symbolId).symbol\n      let symbolVolatilities = []\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities] = await Promise.all([\n          volatilitiesCache.get(\n            symbols.map((s) => s.symbol)\n          ),\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolName,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    {}\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.symbols\n      let [symbolVolatilities] = await Promise.all([\n        volatilitiesCache.get(\n          symbols.map((s) => s.symbol)\n        ),\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\n      ]);\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            markPrice: symbolState[vIndex].dpmmPrice.toString(),\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\n            isCall: s.isCall,\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      // const { bToken: bTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      const balance = await optionPool.bToken.balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      //const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await optionPool.bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool.init();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.symbols;\n  const symbolVolatilities = (\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  ).map((v) => v.volatility);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    [],\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      let fee\n      const intrinsicValue = symbol.isCall\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\n      if (bg(intrinsicValue).gt(0)) {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.spotPrice)\n          .times(symbolInfo.feeRatioITM)\n          .toString();\n      } else {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.timeValue)\n          .times(symbolInfo.feeRatioOTM)\n          .toString();\n      }\n      return fee\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  [chainId, poolAddress, accountAddress] = checkApiInput(\n    chainId,\n    poolAddress,\n    accountAddress\n  );\n  symbolId = checkTokenId(symbolId);\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      console.log('res', res.liquidityUsed.toString())\n      return {\n        liquidityUsed0: bg(res.liquidityUsed).times(100).toString(),\n      };\n    },\n    args,\n    {}\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      const symbolVolatilities = (await volatilitiesCache.get(\n        optionPool.symbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    ''\n  );\n};\n\n  export const getUserBTokensInfo = async (\n    chainId,\n    poolAddress,\n    accountAddress\n  ) => {\n    return catchApiError(async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      const symbols = optionPool.symbols;\n      let symbolVolatilities = [];\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities] = await Promise.all([\n          volatilitiesCache.get(symbols.map((s) => s.symbol)),\n        ]);\n      }\n      const [balance, state] = await Promise.all([\n        optionPool.bToken.balanceOf(accountAddress),\n        optionPool.viewer.getTraderStates(\n          poolAddress,\n          accountAddress,\n          [],\n          symbolVolatilities.map((v) => v.volatility)\n        ),\n      ]);\n      const { traderState } = state;\n      const { margin, totalPnl, initialMargin } = traderState;\n\n      return [{\n        bTokenAddress: optionPool.addresses.bTokenAddress,\n        bTokenSymbol: optionPool.bTokenSymbol,\n        availableBalance: bg(margin)\n          .minus(initialMargin)\n          .plus(totalPnl)\n          .toString(),\n        walletBalance: balance.toString(),\n      }];\n    });\n  };\n\n// getVolatility\nexport const getVolatility = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n\n      const symbols = optionPool.symbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const symbolIndex = symbols.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      return bg(volPrice).times(100).toString()\n    },\n    args,\n    ''\n  );\n};\n","import { DeriEnv } from \"../shared/config/env\";\nimport { checkEnv, checkChainId } from \"../shared/config\";\n\nexport const openPoolChainIds = (env) => {\n  env = checkEnv(env)\n  const configs = {\n    prod: ['56'],\n    dev: ['97'],\n    testnet: ['97'],\n  }\n  return configs[env]\n};\n\nexport const getPoolV2LiteManagerConfig = (chainId) => {\n  chainId = checkChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\n        initialBlock: \"10133599\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n    testnet: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getPoolV2LiteManagerDpmmConfig = (chainId) => {\n  chainId = checkChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x0000000000000000000000000000000000000000\",\n        initialBlock: \"0\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0xC02d12bAf07E03412847671727334E13C437DDdb\",\n        initialBlock: \"13986219\",\n      },\n    ],\n    testnet: [\n      {\n        chainId: \"97\",\n        address: \"0xC02d12bAf07E03412847671727334E13C437DDdb\",\n        initialBlock: \"13986219\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerDpmmConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\n  chainId = checkChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\n        initialBlock: '11017943',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\n        initialBlock: '12440610',\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\n\nexport const expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller_\",\"type\":\"address\"},{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\nimport { chainlinkFeedAbi } from './abis';\n\nexport class ChainlinkFeed extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, chainlinkFeedAbi);\n  }\n  async symbol() {\n    const res = await this._call('description');\n    return res.split('/').map((s) => s.trim()).join('')\n  }\n}\n","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\n\nexport class OracleFactoryChainlink extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getFeed(symbol) {\n    const res = await this._call('getFeed', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol) {\n    return await this._transact('createOracle', [symbol], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryOffChainAbi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateVolatilityOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\n\nexport class OracleFactoryOffChain extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getVolatilityOracle(symbol) {\n    const res = await this._call('getVolatilityOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolLiteManagerDpmmAbi = [\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"protocolFeeCollector_\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"protocolFeeCollectRatio_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oldController\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"newController\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"ChangeController\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"sourcePool\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"targetPool\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateMigrationPool\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"pool\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreatePool\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"claimNewController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" }\n    ],\n    \"name\": \"createMigrationPool\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256[7]\",\n        \"name\": \"parameters\",\n        \"type\": \"uint256[7]\"\n      },\n      { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"pairedTokenAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"createPool\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getNumPools\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"poolTemplate\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"name\": \"pools\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"protocolFeeCollectRatio\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"protocolFeeCollector\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\n    ],\n    \"name\": \"setNewController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newTemplate\", \"type\": \"address\" }\n    ],\n    \"name\": \"setPoolTemplate\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newCollector\", \"type\": \"address\" }\n    ],\n    \"name\": \"setProtocolFeeCollector\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"newProtocolFeeCollectRatio\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setProtocolFeeCutRatio\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolLiteManagerDpmmAbi } from '../abi/perpetualPoolLiteManagerDpmmAbi.js'\n\nexport class PerpetualPoolLiteManagerDpmm extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerDpmmAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return deleteIndexedKey(res)\n  }\n  //  async poolTemplate() {\n  //    const res = await this._call('poolTemplate', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return deleteIndexedKey(res)\n  }\n  //  async protocolFeeCollectRatio() {\n  //    const res = await this._call('protocolFeeCollectRatio', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  async createMigrationPool(accountAddress, sourcePool) {\n    return await this._transact('createMigrationPool', [sourcePool], accountAddress)\n  }\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setPoolTemplate(accountAddress, newTemplate) {\n  //    return await this._transact('setPoolTemplate', [newTemplate], accountAddress)\n  //  }\n  //  async setProtocolFeeCollector(accountAddress, newCollector) {\n  //    return await this._transact('setProtocolFeeCollector', [newCollector], accountAddress)\n  //  }\n  //  async setProtocolFeeCutRatio(accountAddress, newProtocolFeeCollectRatio) {\n  //    return await this._transact('setProtocolFeeCutRatio', [newProtocolFeeCollectRatio], accountAddress)\n  //  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\n\nexport const isProdChain = (chainId) => {\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\n};\n\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\n\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = \"get_signed_price\";\n  if (type === \"option\") {\n    method = \"get_signed_volatility\";\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = \"get_price\";\n    symbol = `${symbol}_v2_bsc`;\n  }\n  let baseUrl = isProdChain(chainId)\n    ? `https://oracle4.deri.finance/${method}`\n    : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceInfos = async (chainId, symbolList) => {\n  let url = getOracleServerUrl(chainId);\n  let retry = 3;\n  //console.log('url', url)\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: \"cors\",\n      cache: \"no-cache\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n        return priceInfo.data;\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\n        priceInfo\n      )}`\n    );\n  }\n};\n","import { bg } from \"../shared/utils\";\n\nexport const calculateK = (indexPrice, liquidity, alpha) => {\n  return bg(indexPrice).times(alpha).div(liquidity);\n};\nexport const calculateDpmmPrice = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier\n) => {\n  return bg(indexPrice).times(\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\n  );\n};\nexport const calculateDpmmCost = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier,\n  tradeVolume\n) => {\n  return bg(indexPrice).times(\n    bg(multiplier)\n      .times(tradersNetVolume)\n      .plus(bg(multiplier).times(tradeVolume))\n      .pow(2)\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\n      .times(K)\n      .div(2)\n      .plus(bg(tradeVolume).times(multiplier))\n  );\n};","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[7]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[7]\"\n            },\n            {\n                \"internalType\": \"address[5]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[5]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getFundingPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"poolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setFundingPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\n\nexport class PerpetualPoolLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock;\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', []);\n    return deleteIndexedKey(res);\n  }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getFundingPeriod() {\n    const res = await this._call('getFundingPeriod', []);\n    return deleteIndexedKey(res);\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return deleteIndexedKey(res);\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', []);\n    return deleteIndexedKey(res);\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return deleteIndexedKey(res);\n  }\n   async migrationDestination() {\n     const res = await this._call('migrationDestination', [])\n     return deleteIndexedKey(res)\n   }\n   async migrationTimestamp() {\n     const res = await this._call('migrationTimestamp', [])\n     return deleteIndexedKey(res)\n   }\n\n  // tx\n  async addLiquidity(accountAddress, bAmount, prices) {\n    return await this._transact(\n      'addLiquidity',\n      [bAmount, prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact('addMargin', [bAmount], accountAddress);\n  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  // async executeMigration(accountAddress, source) {\n  //   return await this._transact('executeMigration', [source], accountAddress)\n  // }\n  //  async liquidate(accountAddress, account, prices) {\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, pTokenId, prices) {\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, lShares, prices) {\n    return await this._transact(\n      'removeLiquidity',\n      [lShares, prices],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount, prices) {\n    return await this._transact(\n      'removeMargin',\n      [bAmount, prices],\n      accountAddress\n    );\n  }\n  //  async setFundingPeriod(accountAddress, period) {\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\n    return await this._transact(\n      'trade',\n      [symbolId, tradeVolume, prices],\n      accountAddress\n    );\n  }\n\n  // open zone methods\n  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  }\n   async removeSymbol(accountAddress, symbolId) {\n     return await this._transact('removeSymbol', [symbolId], accountAddress)\n   }\n  async prepareMigration(accountAddress, target, graceDays) {\n    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  }\n  async approveMigration(accountAddress) {\n    return await this._transact('approveMigration', [], accountAddress)\n  }\n  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\n    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\n  }\n}","// this file is generated by script, don't modify it !!!\nexport const lTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\n\nexport class LTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async allowance(owner, spender) {\n  //    const res = await this._call('allowance', [owner, spender])\n  //    return deleteIndexedKey(res)\n  //  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, amount) {\n  //    return await this._transact('approve', [spender, amount], accountAddress)\n  //  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  //  async mint(accountAddress, account, amount) {\n  //    return await this._transact('mint', [account, amount], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const pTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"delta\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getActiveSymbolIds\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getNumPositionHolders\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"isActiveSymbolId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"margin\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\n\nexport class PTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addMargin(accountAddress, owner, delta) {\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\n  //  }\n  //  async addSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async removeSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, margin) {\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport {\n  perpetualPoolLiteAdapter,\n  lTokenLiteAdapter,\n  pTokenLiteAdapter,\n} from \"./adapter.js\";\n\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\nimport { LTokenLite } from './gen/LTokenLite.js';\nimport { PTokenLite } from './gen/PTokenLite.js';\n\n\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\n);\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\n","import {\n  deriToNatural,\n  fetchJson,\n  getHttpBase,\n  toChecksumAddress,\n  bg,\n} from '../../shared/utils';\nimport { ContractBase, ERC20Factory} from '../../shared/contract';\nimport { normalizeSymbolUnit } from '../../shared/config/token';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { PTokenLite } from './p_token';\nimport { perpetualPoolLiteDpmmFactory } from '../../v2_lite_dpmm/contract/factory';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    await this._init();\n    if (!this.pTokenAddress || !this.pToken) {\n      await this.updateAddresses();\n      // console.log(this.addresses, this.parameters)\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n    }\n  }\n\n  async updateAddresses() {\n    if (!this.bTokenAddress || !this.pTokenAddress) {\n      const res = await this._call('getAddresses');\n      // update this state\n      this.bTokenAddress = res.bTokenAddress;\n      this.lTokenAddress = res.lTokenAddress;\n      this.pTokenAddress = res.pTokenAddress;\n    }\n  }\n\n  async controller() {\n    const res = await this._call('controller');\n    return res;\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbol: res.symbol,\n      oracleAddress: res.oracleAddress,\n      multiplier: deriToNatural(res.multiplier),\n      feeRatio: deriToNatural(res.feeRatio),\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n      price: deriToNatural(res.price),\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\n      tradersNetCost: deriToNatural(res.tradersNetCost),\n    };\n  }\n  async getSymbols() {\n    await this.updateAddresses();\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n    }\n    // update this state\n    this.symbolIds = await this.pToken.getActiveSymbolIds();\n    this.symbols = await Promise.all(\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n    );\n    return this.symbols;\n  }\n\n  async getBTokenSymbol() {\n    await this.updateAddresses();\n    if (!this.bToken) {\n      this.bToken = ERC20Factory(this.chainId, this.bTokenAddress);\n    }\n    // update this state\n    this.bTokenSymbol = await this.bToken.symbol();\n    return this.bTokenSymbol;\n  }\n\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n\n  async migrationDestination() {\n    const res = await this._call('migrationDestination');\n    return res;\n  }\n\n  async migrationTimestamp() {\n    const res = await this._call('migrationTimestamp');\n    return res;\n  }\n\n  async isMigrationPrepared() {\n    const res = await this.migrationDestination();\n    return res !== '0x0000000000000000000000000000000000000000';\n  }\n\n  async isMigrationApproved() {\n    await this.init();\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\n    return poolAddress !== toChecksumAddress(this.contractAddress);\n  }\n  async isMigrationExecuted() {\n    await this.init();\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\n    if (poolAddress !== toChecksumAddress(this.contractAddress)) {\n      const pool = await perpetualPoolLiteDpmmFactory(\n        this.chainId,\n        poolAddress\n      );\n      const { liquidity } = await pool.getStateValues();\n      return bg(liquidity).gt(0);\n    } else {\n      return false;\n    }\n  }\n\n  async getPoolExtraInfo() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`;\n    const res = await fetchJson(url);\n    //console.log(res)\n    if (res.success) {\n      return res.data;\n    } else {\n      return {\n        chain_id: this.chainId,\n        pool: this.contractAddress,\n        block_number: '1000000000',\n        version: '',\n        target_pool: '',\n        migration_timestamp: '',\n      };\n    }\n  }\n\n  async getConfig() {\n    const [\n      bToken,\n      symbols,\n      extraInfo,\n      isMigrationPrepared,\n      isMigrationApproved,\n      isMigrationExecuted,\n    ] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      this.getPoolExtraInfo(),\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n      this.isMigrationExecuted(),\n    ]);\n    const hasMigration = true;\n    return {\n      pool: this.contractAddress,\n      targetPool: extraInfo.target_pool || '',\n      migrationTimestamp: extraInfo.migration_timestamp || '',\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: extraInfo.block_number || '',\n      type: 'future',\n      version: extraInfo.version || '',\n      versionId: 'v2_lite',\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isMigrationExecuted: hasMigration && isMigrationExecuted,\n      isValid:\n        !(hasMigration && isMigrationExecuted) ||\n        (!hasMigration && !isMigrationApproved),\n    };\n  }\n\n  // reduce rest api call\n  async getConfigAlt() {\n    const [\n      bToken,\n      symbols,\n      //extraInfo,\n      isMigrationPrepared,\n      isMigrationApproved,\n      isMigrationExecuted,\n    ] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      //this.getPoolExtraInfo(),\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n      this.isMigrationExecuted(),\n    ]);\n    const hasMigration = true;\n    return {\n      pool: this.contractAddress,\n      //targetPool: extraInfo.target_pool,\n      //migrationTimestamp: extraInfo.migration_timestamp,\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      //initialBlock: extraInfo.block_number,\n      type: 'perpetual',\n      //version: extraInfo.version,\n      versionId: 'v2_lite',\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isMigrationExecuted: hasMigration && isMigrationExecuted,\n      isValid:\n        !(hasMigration && isMigrationExecuted) ||\n        (!hasMigration && !isMigrationApproved),\n    };\n  }\n\n  // tx\n  async addSymbol(accountAddress, parameters) {\n    return await this._transact('addSymbol', parameters, accountAddress);\n  }\n\n  async removeSymbol(accountAddress, symbolId) {\n    return await this._transact('removeSymbol', [symbolId], accountAddress);\n  }\n\n  async prepareMigration(accountAddress, target, graceDays) {\n    return await this._transact(\n      'prepareMigration',\n      [target, graceDays],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\n\nexport class PerpetualPoolLiteManager extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\n  }\n\n  // query\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return res\n  }\n  async poolTemplate() {\n    const res = await this._call('poolTemplate', [])\n    return res\n  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return res\n  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return res\n  }\n  async protocolFeeCutRatio() {\n    const res = await this._call('protocolFeeCutRatio', [])\n    return res\n  }\n\n  // tx\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { factory } from '../shared/utils/factory'\nimport { oracleFactoryChainlinkAdapter, oracleFactoryOffChainAdapter, perpetualPoolLiteManagerDpmmAdapter } from './adapter'\nimport { ChainlinkFeed } from './contract/chainlink_feed'\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\nimport { PerpetualPoolLiteManagerDpmm} from './contract/gen/PerpetualPoolLiteManagerDpmm'\n\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite);\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer);\nexport const perpetualPoolLiteManagerFactory = factory(\n  PerpetualPoolLiteManager\n);\nexport const perpetualPoolLiteManagerDpmmFactory = factory(\n  perpetualPoolLiteManagerDpmmAdapter(PerpetualPoolLiteManagerDpmm)\n);\nexport const chainlinkFeedFactory = factory(ChainlinkFeed);\n\nexport const oracleFactoryChainlinkFactory = factory(\n  oracleFactoryChainlinkAdapter(OracleFactoryChainlink)\n);\nexport const oracleFactoryOffChainFactory = factory(\n  oracleFactoryOffChainAdapter(OracleFactoryOffChain)\n);","import { catchApiError } from \"../../shared/utils/api\"\nimport { getPoolViewerConfig } from \"../../shared/config/pool\"\nimport {\n  fetchJson,\n  getBlockInfo,\n  getHttpBase,\n  getPastEvents,\n  getNetworkName,\n} from '../../shared/utils';\nimport {\n  checkChainId,\n  checkAddress,\n  checkApiInputWithoutAccount,\n} from '../../shared/config/check'\nimport {\n  getOracleFactoryChainlinkConfig,\n  openPoolChainIds,\n} from '../config';\nimport {\n  oracleFactoryChainlinkFactory,\n  perpetualPoolLiteFactory,\n  perpetualPoolLiteManagerDpmmFactory,\n  perpetualPoolLiteManagerFactory,\n  perpetualPoolLiteViewerFactory,\n} from '../factory';\nimport { perpetualPoolLiteDpmmFactory } from \"../../v2_lite_dpmm/contract/factory\"\nimport { getConfigZone } from \"../../shared/config/version\"\nimport { OPEN_POOL_EXPIRE_TIME } from \"../../shared/config\";\n\nexport const getPoolOpenConfigList = async (env) => {\n  return catchApiError(\n    async () => {\n      let configs = [];\n      const chainIds = openPoolChainIds(env);\n      const url = `${getHttpBase(env)}/open_pools`;\n      const res = await fetchJson(url);\n      //console.log(res)\n      if (res.success && Array.isArray(res.data)) {\n        const addresses = res.data.filter((p) => chainIds.includes(p.chain_id));\n        configs = await Promise.all(\n          addresses.reduce((acc, config) => {\n            if (config.version_id === 'v2_lite_dpmm') {\n              return acc.concat([\n                perpetualPoolLiteDpmmFactory(\n                  config.chain_id,\n                  config.pool\n                ).getOpenzoneConfigAlt(),\n              ]);\n            } else {\n              return acc.concat([\n                perpetualPoolLiteFactory(\n                  config.chain_id,\n                  config.pool\n                ).getConfigAlt(),\n              ]);\n            }\n          }, [])\n        );\n        configs.forEach((config, index) => {\n          config.initialBlock = addresses[index].block_number;\n          config.migrationTimestamp =\n            addresses[index].migration_timestamp || '';\n          config.targetPool = addresses[index].target_pool || '';\n          config.version = addresses[index].version || 'v2_lite_open';\n          config.chain = getNetworkName(config.chainId);\n          config.zone = getConfigZone(config.version);\n          config.env = env;\n        });\n      }\n      return configs\n        .sort((a, b) => parseInt(b.initialBlock) - parseInt(a.initialBlock))\n        .filter((c) => c.isValid === true);\n    },\n    [],\n    []\n  );\n};\n\nexport const getPoolOpenConfig = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress)\n\n    const url = `${getHttpBase()}/open_pools`;\n    const res = await fetchJson(url);\n    if (res.success && res.data && res.data.length > 0) {\n      const address = res.data.find((c) => c.pool === poolAddress)\n      if (address && address.pool) {\n        if (address.version_id === 'v2_lite_dpmm') {\n          const perpetualPoolLite = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n          await perpetualPoolLite.init()\n          return await perpetualPoolLite.getOpenzoneConfig()\n        } else {\n          const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n          await perpetualPoolLite.init()\n          return await perpetualPoolLite.getConfig()\n        }\n\n      }\n    }\n    return {}\n  }, [], {});\n};\n\nexport const getPoolOpenOracleList = async(chainId, accountAddress) => {\n  return catchApiError(\n    async () => {\n    chainId = checkChainId(chainId)\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n    const oracleFactory = oracleFactoryChainlinkFactory(\n      chainId,\n      oracleFactoryConfig.address\n    );\n    await oracleFactory._init()\n    let eventBlock, oracles= [];\n    const res = await fetchJson(\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\n    );\n    if (res && res.success) {\n      eventBlock = parseInt(res.data.eventBlock);\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\n        oracles = res.data.oracles;\n      }\n      if (eventBlock === 0) {\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\n      }\n      const toBlock = await getBlockInfo(chainId, 'latest');\n      // fetch online\n      let events = await getPastEvents(\n        chainId,\n        oracleFactory.contract,\n        'CreateOracle',\n        {},\n        eventBlock,\n        toBlock.number\n      );\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          const event = events[i];\n          const info = event.returnValues;\n          oracles.push({\n            chainId,\n            symbol: info.symbol,\n            address: info.oracle,\n            blockNumber: event.blockNumber,\n          });\n        }\n        return oracles\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\n          .reduce((acc, i) => {\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\n          }, []);\n      } else {\n        return oracles\n      }\n    } else {\n      return [];\n    }\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\n    },\n    [],\n    []\n  );\n};\n\nexport const getPoolController = async(chainId, poolAddress) => {\n  chainId = checkChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPoolLite.controller();\n    },\n    [chainId, poolAddress],\n    ''\n  );\n}\nexport const isPoolController = async (chainId, poolAddress, controller) => {\n  chainId = checkChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress, controller) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      const poolController = await perpetualPoolLite.controller();\n      return (\n        checkAddress(controller) === checkAddress(poolController)\n      );\n    },\n    [chainId, poolAddress, controller],\n    false\n  );\n};\n\n// export const getExpandedPoolOpenConfigList = async () => {\n//   const env = DeriEnv.get()\n//   //const version = 'v2_lite_open'\n//   let config = getJsonConfig(env);\n\n//   config =  await getPoolOpenConfigList()\n//   const pools = config.pools\n//   if (pools && Array.isArray(pools)) {\n//     for (let i = 0; i < pools.length; i++) {\n//       poolProcessor[version](pools[i])\n//       poolValidator[version](pools[i])\n//     }\n//   }\n//   return expandPoolConfigV2LiteOpen(config);\n// }\n\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\n    },\n    [chainId.toString(), poolAddress],\n    []\n  );\n};\n\nexport const getPoolAcitveSymbolIds = async (...args) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      chainId = chainId.toString()\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPoolLite.init()\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\n    },\n    args,\n    []\n  );\n};\n\n\n// v2lite open config list cache\nexport const openConfigListCache = (() => {\n  let cache = {\n    data: [],\n    timestamp: 0,\n  };\n  return {\n    async update() {\n      const oldData = cache.data;\n      if (Date.now() / 1000 - cache.timestamp >= OPEN_POOL_EXPIRE_TIME) {\n        const res = await getPoolOpenConfigList();\n        if (res.success) {\n          cache.data = res.response.data;\n          cache.timestamp = Date.now() / 1000;\n        } else {\n          console.log(res.response.error && res.response.error.message);\n        }\n      }\n      return cache.data;\n    },\n    updatedAt() {\n      return cache.timestamp;\n    },\n    get() {\n      return cache.data;\n    },\n  };\n})()\n","import { AppError } from '../../shared/error/error';\nimport {\n  catchTxApiError,\n  getBlockInfo,\n  naturalToDeri,\n} from '../../shared/utils';\nimport {\n  checkAddress,\n  checkApiInput,\n} from '../../shared/config'\nimport { normalizeChainId } from '../../shared/utils/validate';\nimport { perpetualPoolLiteDpmmFactory } from '../../v2_lite_dpmm/contract/factory';\nimport {\n  getOracleFactoryChainlinkConfig,\n  getPoolV2LiteManagerDpmmConfig,\n} from '../config';\nimport {\n  chainlinkFeedFactory,\n  oracleFactoryChainlinkFactory,\n  perpetualPoolLiteFactory,\n  perpetualPoolLiteManagerDpmmFactory,\n  perpetualPoolLiteManagerFactory,\n} from '../factory';\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const createPool = async (...args) => {\n  return catchTxApiError(\n    async (\n      chainId,\n      accountAddress,\n      parameters,\n      bTokenAddress,\n      pairedTokenAddress\n    ) => {\n      chainId = normalizeChainId(chainId);\n      const { address: poolManagerAddress } = getPoolV2LiteManagerDpmmConfig(\n        chainId\n      );\n      const poolManager = perpetualPoolLiteManagerDpmmFactory(\n        chainId,\n        poolManagerAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString());\n      // send tx\n      return await poolManager.createPool(\n        accountAddress,\n        newParameters,\n        bTokenAddress,\n        pairedTokenAddress\n      );\n    },\n    args\n  );\n};\n\nexport const createMigrationPool = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const { address: poolManagerAddress } = getPoolV2LiteManagerDpmmConfig(\n      chainId\n    );\n    const poolManager = perpetualPoolLiteManagerDpmmFactory(\n      chainId,\n      poolManagerAddress\n    );\n    // send tx\n    return await poolManager.createMigrationPool(accountAddress, poolAddress);\n  }, args);\n};\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const addSymbol = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, parameters) => {\n      chainId = normalizeChainId(chainId);\n      const perpetualPoolLite = perpetualPoolLiteDpmmFactory(\n        chainId,\n        poolAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p, index) =>\n        index > 2 ? naturalToDeri(p).toString() : p\n      );\n      // send tx\n      return await perpetualPoolLite.addSymbol(accountAddress, newParameters);\n    },\n    args\n  );\n};\n\nexport const prepareMigration = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  targetPoolAddress\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    chainId = normalizeChainId(chainId);\n    const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n    // send tx\n    return await perpetualPoolLite.prepareMigration(\n      accountAddress,\n      targetPoolAddress,\n      3\n    );\n  }, []);\n};\n\nexport const approveMigration = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPoolLite = perpetualPoolLiteDpmmFactory(\n      chainId,\n      poolAddress\n    );\n    // send tx\n    return await perpetualPoolLite.approveMigration(accountAddress);\n  }, []);\n};\n\nexport const executeMigration = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  oldPoolAddress\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPoolLite = perpetualPoolLiteFactory(chainId, oldPoolAddress);\n    const lastUpdateBlock = await perpetualPoolLite.getLastUpdateBlock();\n    const lastTimestamp = (await getBlockInfo(chainId, lastUpdateBlock))\n      .timestamp;\n    const perpetualPoolLiteDpmm = perpetualPoolLiteDpmmFactory(\n      chainId,\n      poolAddress\n    );\n    // send tx\n    return await perpetualPoolLiteDpmm.executeMigrationWithTimestamp(\n      accountAddress,\n      oldPoolAddress,\n      lastTimestamp\n    );\n  }, []);\n};\n\nexport const createOracle = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress, feedAddress) => {\n    chainId = normalizeChainId(chainId);\n    feedAddress = checkAddress(feedAddress);\n    const feedContract = chainlinkFeedFactory(chainId, feedAddress);\n    const symbol = await feedContract.symbol();\n    if (typeof symbol === 'string' && symbol !== '') {\n      const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n      const oracleFactory = oracleFactoryChainlinkFactory(\n        chainId,\n        oracleFactoryConfig.address\n      );\n      // process parameters\n      // send tx\n      return await oracleFactory.createOracle(accountAddress, symbol);\n    } else {\n      throw new AppError('INVALID_SYMBOL', symbol);\n    }\n  }, args);\n};\n","import {\n  //getPoolConfig,\n  ContractBase,\n  //isEqualSet,\n  ERC20Factory,\n} from '../../shared/contract';\nimport {\n  deriToNatural,\n  naturalToDeri,\n} from '../../shared/utils'\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteOldAbi} from './abis';\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\n\nexport class PerpetualPoolLiteOld extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\n  }\n\n  async init() {\n    // init web3 and contract\n    await this._init();\n    // init address and parameters\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      // init bToken, pToken and lToken\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.bTokenSymbol = await this.bToken.symbol();\n    }\n    const symbolIds = await this.pToken.getActiveSymbolIds();\n    // update symbolIds\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\n      this.offChainOracleSymbolIds == null\n    ) {\n      this.activeSymbolIds = symbolIds;\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n      this.offChainOracleSymbols = await Promise.all(\n        this.symbols\n          .map((s) => s.oracleAddress)\n          .reduce(\n            (acc, o, index) => [\n              ...acc,\n              checkOffChainOracleSymbol(\n                this.chainId,\n                o,\n                this.symbols[index].symbol\n              ),\n            ],\n            []\n          )\n      );\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n        (acc, i, index) => {\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\n        },\n        []\n      );\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\n        (s) => s && s !== ''\n      );\n      //console.log('offchain', this.offChainOracleSymbols);\n    }\n  }\n\n  // update symbols\n  async getSymbols() {\n    await this.init()\n    this.symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n    return this.symbols\n  }\n\n  // update positions\n  async getPositions(accountAddress) {\n    await this.init()\n    this.positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [\n          ...acc,\n          this.pToken.getPosition(accountAddress, symbolId),\n        ],\n        []\n      )\n    );\n    return this.positions\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    return res;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = [];\n    await this.init()\n    if (this.offChainOracleSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import {\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// const factoryWithUpgrade = (klass, klassOld, newPoolList) => {\n//   let instances = {}\n//   return (chainId, address, initialBlock='') => {\n//     const key = address\n//     if (Object.keys(instances).includes(key)) {\n//       return instances[key];\n//     } else {\n//       if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\n//         instances[key] = new klass(chainId, address, initialBlock);\n//         return instances[key];\n//       } else {\n//         instances[key] = new klassOld(chainId, address, initialBlock);\n//         return instances[key];\n//       }\n//     }\n//   }\n// }\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLiteOld);\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { DeriEnv } from \"../shared/config\"\n\nexport const getPTokenAirdropConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getDeriVoteConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '1',\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\n      },\n      {\n        chainId: '56',\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\n      },\n      {\n        chainId: '128',\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\n      },\n      {\n        chainId: '137',\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getDeriVoteConfig(): invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getStakingMiningVaultRouterConfig = (chainId='56', env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get()\n  const configs = [\n    {\n      chainId: '56',\n      address: '0x224a441f7a4C6775009a1f506e725FE1D180950e',\n      env: 'prod',\n    }\n  ]\n  const res = configs.find((c) => c.chainId === chainId && c.env === env)\n  if (res) {\n    return res\n  } else {\n    throw new Error(`-- getStakingMiningVaultRouterConfig(): invalid env(${env}) or chainId(${chainId})`)\n  }\n}\n","import Web3 from \"web3\";\nimport { bg } from \"../shared/utils\";\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// convert\nexport const toWei = (number, unit = \"ether\") => {\n  return Web3.utils.toWei(number, unit);\n};\n\nexport const fromWei = (number, unit = \"ether\") => {\n  return Web3.utils.fromWei(number, unit);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// adapter\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = bg(fromWei(val[prop])).toString();\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nconst processResult = (val, propList = []) => {\n  if (isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (isObject(val)) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return bg(fromWei(val)).toString();\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const pTokenAirdropNULSAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AirdropPToken\",\n        \"type\": \"event\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"airdropPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"getBTokenBalance\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isAirdropPToken\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"isStartAirdrop\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"marginUnit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"maxAirdropLimit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"ownerAddress\",\n        \"outputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"marginUnit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMarginUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"maxAirdropLimit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMaxAirdropLimit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"tradeUnit_\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"setTradeUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"startAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"stopAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"totalAirdropCount\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"tradeUnit\",\n        \"outputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"withdrawBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\n\nexport class PTokenAirdropNULS extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\n  }\n\n  // query\n  //  async getBTokenBalance() {\n  //    const res = await this._call('getBTokenBalance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isAirdropPToken(account) {\n    const res = await this._call('isAirdropPToken', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async isStartAirdrop() {\n  //    const res = await this._call('isStartAirdrop', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async marginUnit() {\n  //    const res = await this._call('marginUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async maxAirdropLimit() {\n  //    const res = await this._call('maxAirdropLimit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerAddress() {\n  //    const res = await this._call('ownerAddress', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalAirdropCount() {\n    const res = await this._call('totalAirdropCount', [])\n    return deleteIndexedKey(res)\n  }\n  //  async tradeUnit() {\n  //    const res = await this._call('tradeUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n  //  async setMarginUnit(accountAddress, marginUnit_) {\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\n  //  }\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\n  //  }\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\n  //  }\n  //  async startAirdrop(accountAddress) {\n  //    return await this._transact('startAirdrop', [], accountAddress)\n  //  }\n  //  async stopAirdrop(accountAddress) {\n  //    return await this._transact('stopAirdrop', [], accountAddress)\n  //  }\n  //  async withdrawBToken(accountAddress) {\n  //    return await this._transact('withdrawBToken', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const deriVoteAbi = [\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingOption\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Vote\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"initializeVote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"numVotingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\n    ],\n    \"name\": \"setController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingDeadline\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingId\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"votingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"name\": \"votingTopics\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\n\nexport class DeriVote extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, deriVoteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numVotingOptions() {\n    const res = await this._call('numVotingOptions', [])\n    return deleteIndexedKey(res)\n  }\n  async votingDeadline() {\n    const res = await this._call('votingDeadline', [])\n    return deleteIndexedKey(res)\n  }\n  async votingId() {\n    const res = await this._call('votingId', [])\n    return deleteIndexedKey(res)\n  }\n  async votingOptions(votingId, voter) {\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\n    return deleteIndexedKey(res);\n  }\n  async votingTopics(votingId) {\n    const res = await this._call('votingTopics', [votingId])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\n  //  }\n  //  async setController(accountAddress, newController) {\n  //    return await this._transact('setController', [newController], accountAddress)\n  //  }\n  async vote(accountAddress, votingOption) {\n    return await this._transact('vote', [votingOption], accountAddress)\n  }\n\n}","import { contractFactory } from \"../utils\";\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\n\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\nimport { DeriVote } from \"./gen/DeriVote.js\";\n\n// pToken airdrop\nexport const PTokenAirdropNULSFactory = contractFactory(\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\n);\n\n// deri vote\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\nimport { getPTokenAirdropConfig } from \"../config\"\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\n\nexport const isPTokenAirdropped = async (...args) => {\n  return catchApiError(async(chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).isAirdropPToken(accountAddress);\n  }, args, 'isPTokenAirdropped', '')\n};\n\nexport const totalAirdropCount = async (...args) => {\n  return catchApiError(async(chainId) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).totalAirdropCount();\n  }, args, 'totalAirdropCount', '')\n};\n\nexport const isUserPTokenExist = async (...args) => {\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\n    let res = '';\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const result = await pool.pToken.balanceOf(accountAddress);\n    if (result === '1') {\n      res = true;\n    } else if (result === '0') {\n      res = false;\n    }\n    return res;\n  }, args, 'isUserPTokenExist', '');\n};\n\nexport const isBTokenUnlocked = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nexport const hasRequiredBalance = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const res = await pool.bToken.balanceOf(accountAddress)\n    console.log('res', res)\n    return bg(res).gte(100)\n  }, args, 'hasRequiredBalance', '')\n}\n\n\n// tx\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const airdropPToken = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).airdropPToken(accountAddress);\n  }, args);\n};\n","import { DeriEnv } from '../../shared/config';\nimport {\n  databaseActivityFactory,\n  miningVaultRouterFactory,\n} from '../../shared/factory';\nimport {\n  catchApiError,\n  bg,\n  deriToNatural,\n  deriToString,\n  toChecksumAddress,\n  max,\n  catchTxApiError,\n} from '../../shared/utils';\nimport { databaseActivityClaimFactory } from '../../shared/factory/database';\nimport { getStakingMiningVaultRouterConfig } from '../config';\n\nconst range = (n) => new Array(n).fill(0).map((i, index) => index);\n\nconst keyPrefix = (epoch) => {\n  if (!epoch || epoch.toString() === '1') {\n    return DeriEnv.get() === 'prod' ? 'TE' : 'TE10';\n  } else if (epoch.toString() === '2') {\n    return DeriEnv.get() === 'prod' ? 'TE2' : 'TE7';\n  }\n};\nconst claimKeyPrefix = (epoch) => {\n  if (!epoch || epoch.toString() === '1') {\n    return DeriEnv.get() === 'prod' ? 'TE1' : 'TE11';\n  } else if (epoch.toString() === '2') {\n    return DeriEnv.get() === 'prod' ? 'TE2' : 'TE9';\n  }\n};\n\nexport const getStakingTop10Users = async (epoch) => {\n  return catchApiError(\n    async () => {\n      //console.log('key', keyPrefix(epoch))\n      const db = databaseActivityFactory();\n      const key = range(10).reduce(\n        (acc, i) =>\n          acc.concat([\n            `${keyPrefix(epoch)}.top.${i + 1}.account`,\n            `${keyPrefix(epoch)}.top.${i + 1}.fee`,\n            `${keyPrefix(epoch)}.top.${i + 1}.score`,\n            `${keyPrefix(epoch)}.top.${i + 1}.cont`,\n            `${keyPrefix(epoch)}.toppnl.${i + 1}.account`,\n            `${keyPrefix(epoch)}.toppnl.${i + 1}.pnl`,\n          ]),\n        []\n      );\n      //console.log(key)\n      const res = await db.getValues(key);\n      //console.log(res)\n      if (Array.isArray(res) && res.length === 6 * 10) {\n        let result = [],\n          resultPnl = [];\n        for (let i = 0; i < res.length; i++) {\n          if ((i + 1) % 6 === 0) {\n            const info = res.slice(i - 5, i + 1);\n            const index = (i + 1) / 6;\n            result.push({\n              no: index,\n              userAddr: info[0].slice(0, 42),\n              feePaid: deriToNatural(info[1]).toString(),\n              score: deriToNatural(info[2]).toString(),\n              evgCoeff: deriToNatural(info[1]).eq(0)\n                ? '0'\n                : bg(info[3]).div(info[1]).toString(),\n              specialRewardsA:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '80000'\n                          : '60000'\n                        : '40000'\n                      : '20000'\n                    : '10000'\n                  : '8000',\n            });\n            resultPnl.push({\n              no: index,\n              userAddr: info[4].slice(0, 42),\n              pnl: deriToNatural(info[5]).toString(),\n              specialRewardsB:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '80000'\n                          : '60000'\n                        : '40000'\n                      : '20000'\n                    : '10000'\n                  : '8000',\n            });\n          }\n        }\n        return {\n          top10: result.filter(\n            (r) => r.userAddr !== '0x0000000000000000000000000000000000000000'\n          ),\n          top10Pnl: resultPnl.filter(\n            (r) => r.userAddr !== '0x0000000000000000000000000000000000000000'\n          ),\n        };\n      } else {\n        return { top10: [], top10Pnl: [] };\n      }\n    },\n    [],\n    'getStakingTop10Users',\n    { top10: [], top10Pnl: [] }\n  );\n};\n\nexport const getUserStakingInfo = async (accountAddress, epoch) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix(epoch)}.Q1.cont`,\n        `${keyPrefix(epoch)}.Q2.cont`,\n        `${keyPrefix(epoch)}.Q3.cont`,\n        `${keyPrefix(epoch)}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.fee`,\n        `${keyPrefix(epoch)}.${accountAddress}.coef`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0)\n        ? '0'\n        : bg(10000).times(bg(res[4]).div(res[0]));\n      const scoreQ2 = bg(res[1]).eq(0)\n        ? '0'\n        : bg(20000).times(bg(res[5]).div(res[1]));\n      const scoreQ3 = bg(res[2]).eq(0)\n        ? '0'\n        : bg(30000).times(bg(res[6]).div(res[2]));\n      const scoreQ4 = bg(res[3]).eq(0)\n        ? '0'\n        : bg(50000).times(bg(res[7]).div(res[3]));\n\n      const coef = deriToNatural(res[9]);\n      return {\n        userAddr: accountAddress,\n        feePaid: deriToNatural(res[8]).toString(),\n        coef: max(coef, bg(1)).toString(),\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString(),\n      };\n    },\n    args,\n    'getUserStakingInfo',\n    {\n      userAddr: '',\n      feePaid: '',\n      coef: '',\n      score: '',\n    }\n  );\n};\n\nexport const getUserStakingReward = async (accountAddress, epoch) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix(epoch)}.Q1.cont`,\n        `${keyPrefix(epoch)}.Q2.cont`,\n        `${keyPrefix(epoch)}.Q3.cont`,\n        `${keyPrefix(epoch)}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\n        `${keyPrefix(epoch)}.top.1.account`,\n        `${keyPrefix(epoch)}.top.2.account`,\n        `${keyPrefix(epoch)}.top.3.account`,\n        `${keyPrefix(epoch)}.top.4.account`,\n        `${keyPrefix(epoch)}.top.5.account`,\n        `${keyPrefix(epoch)}.top.6.account`,\n        `${keyPrefix(epoch)}.top.7.account`,\n        `${keyPrefix(epoch)}.top.8.account`,\n        `${keyPrefix(epoch)}.top.9.account`,\n        `${keyPrefix(epoch)}.top.10.account`,\n        `${keyPrefix(epoch)}.toppnl.1.account`,\n        `${keyPrefix(epoch)}.toppnl.2.account`,\n        `${keyPrefix(epoch)}.toppnl.3.account`,\n        `${keyPrefix(epoch)}.toppnl.4.account`,\n        `${keyPrefix(epoch)}.toppnl.5.account`,\n        `${keyPrefix(epoch)}.toppnl.6.account`,\n        `${keyPrefix(epoch)}.toppnl.7.account`,\n        `${keyPrefix(epoch)}.toppnl.8.account`,\n        `${keyPrefix(epoch)}.toppnl.9.account`,\n        `${keyPrefix(epoch)}.toppnl.10.account`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0)\n        ? '0'\n        : bg(10000).times(bg(res[4]).div(res[0]));\n      const scoreQ2 = bg(res[1]).eq(0)\n        ? '0'\n        : bg(20000).times(bg(res[5]).div(res[1]));\n      const scoreQ3 = bg(res[2]).eq(0)\n        ? '0'\n        : bg(30000).times(bg(res[6]).div(res[2]));\n      const scoreQ4 = bg(res[3]).eq(0)\n        ? '0'\n        : bg(50000).times(bg(res[7]).div(res[3]));\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\n\n      const topUsers = res\n        .slice(8, 18)\n        .map((u) => toChecksumAddress(u.slice(0, 42)));\n      const topPnlUsers = res\n        .slice(18)\n        .map((u) => toChecksumAddress(u.slice(0, 42)));\n      let specialRewardsA = '0';\n      if (topUsers.includes(accountAddress)) {\n        if (accountAddress === topUsers[0]) {\n          specialRewardsA = '80000';\n        } else if (accountAddress === topUsers[1]) {\n          specialRewardsA = '60000';\n        } else if (accountAddress === topUsers[2]) {\n          specialRewardsA = '40000';\n        } else if (accountAddress === topUsers[3]) {\n          specialRewardsA = '20000';\n        } else if (accountAddress === topUsers[4]) {\n          specialRewardsA = '10000';\n        } else {\n          specialRewardsA = '8000';\n        }\n      }\n      let specialRewardsB = '0';\n      if (topPnlUsers.includes(accountAddress)) {\n        if (accountAddress === topPnlUsers[0]) {\n          specialRewardsB = '80000';\n        } else if (accountAddress === topPnlUsers[1]) {\n          specialRewardsB = '60000';\n        } else if (accountAddress === topPnlUsers[2]) {\n          specialRewardsB = '40000';\n        } else if (accountAddress === topPnlUsers[3]) {\n          specialRewardsB = '20000';\n        } else if (accountAddress === topPnlUsers[4]) {\n          specialRewardsB = '10000';\n        } else {\n          specialRewardsB = '8000';\n        }\n      }\n      return {\n        userAddr: accountAddress,\n        rewardDERI,\n        specialRewardsA,\n        specialRewardsB,\n      };\n    },\n    args,\n    'getUserStakingReward',\n    { userAddr: '', rewardDERI: '', specialRewardsA: '', specialRewardsB: '' }\n  );\n};\n\nexport const getUserStakingContribution = async (accountAddress, epoch) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix(epoch)}.Q1.cont`,\n        `${keyPrefix(epoch)}.Q2.cont`,\n        `${keyPrefix(epoch)}.Q3.cont`,\n        `${keyPrefix(epoch)}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0)\n        ? '0'\n        : bg(10000).times(bg(res[4]).div(res[0]));\n      const scoreQ2 = bg(res[1]).eq(0)\n        ? '0'\n        : bg(20000).times(bg(res[5]).div(res[1]));\n      const scoreQ3 = bg(res[2]).eq(0)\n        ? '0'\n        : bg(30000).times(bg(res[6]).div(res[2]));\n      const scoreQ4 = bg(res[3]).eq(0)\n        ? '0'\n        : bg(50000).times(bg(res[7]).div(res[3]));\n\n      return {\n        userAddr: accountAddress,\n        totalContrib: deriToNatural(\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\n        ).toString(),\n        userContrib: deriToNatural(\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\n        ).toString(),\n        Q1Contrib: deriToNatural(res[0]).toString(),\n        Q2Contrib: deriToNatural(res[1]).toString(),\n        Q3Contrib: deriToNatural(res[2]).toString(),\n        Q4Contrib: deriToNatural(res[3]).toString(),\n        userQ1Contrib: deriToNatural(res[4]).toString(),\n        userQ2Contrib: deriToNatural(res[5]).toString(),\n        userQ3Contrib: deriToNatural(res[6]).toString(),\n        userQ4Contrib: deriToNatural(res[7]).toString(),\n        userQ1Point: scoreQ1.toString(),\n        userQ2Point: scoreQ2.toString(),\n        userQ3Point: scoreQ3.toString(),\n        userQ4Point: scoreQ4.toString(),\n      };\n    },\n    args,\n    'getUserStakingContribution',\n    { userAddr: '', totalContrib: '', userContrib: '' }\n  );\n};\n\nexport const getUserStakingClaimInfo = async (accountAddress, epoch) => {\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityClaimFactory();\n      const key = [\n        `${claimKeyPrefix(epoch)}.${accountAddress}.claimed.amount`,\n        `${claimKeyPrefix(epoch)}.${accountAddress}.unclaimed.amount`,\n        `${claimKeyPrefix(epoch)}.${accountAddress}.claimable.amount`,\n      ];\n      // console.log('key',key)\n      const res = await db.getValues(key);\n      const claimable = deriToNatural(res[2]).toString();\n      return {\n        claimed: deriToNatural(res[0]).toString(),\n        // unclaimed: deriToNatural(res[1]).toString(),\n        locked: deriToNatural(res[1]).minus(claimable).toString(),\n        claimable,\n        // deriPrice: '0.56',\n        // bnbPrice: '640.7',\n      };\n    },\n    [],\n    'getUserStakingClaimInfo',\n    {\n      claimed: '',\n      unclaimed: '',\n      claimable: '',\n      deriPrice: '',\n      bnbPrice: '',\n    }\n  );\n};\n\nexport const claimMyStaking = async (accountAddress, epoch) => {\n  return catchTxApiError(async () => {\n    const chainId = '56';\n    accountAddress = toChecksumAddress(accountAddress);\n    const db = databaseActivityClaimFactory();\n    const key = [\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.amount`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.deadline`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.nonce`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.v1`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.r1`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.s1`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.v2`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.r2`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.s2`,\n    ];\n    //console.log('key', key);\n    const res = await db.getValues(key);\n    const [amount, deadline, nonce, v1, r1, s1, v2, r2, s2] = res;\n    //\n    const claimArgs = [\n      accountAddress,\n      amount,\n      deriToString(deadline),\n      deriToString(nonce),\n      deriToString(v1),\n      r1,\n      s1,\n      deriToString(v2),\n      r2,\n      s2,\n    ];\n\n    const miningVaultAddress = getStakingMiningVaultRouterConfig(\n      chainId,\n      'prod'\n    ).address;\n    //console.log('miningVaultAddress', miningVaultAddress);\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      //console.log(claimArgs)\n      return await miningVaultRouter.mint(...claimArgs);\n    }\n  }, []);\n};\n","import { DeriEnv } from '../../shared/config/env';\nimport {\n  catchApiError,\n  catchTxApiError,\n  fromWei,\n  hexToNumberString,\n  toChecksumAddress,\n} from '../../shared/utils';\nimport { databaseDeriVoteFactory } from '../../shared/factory/database';\nimport { getDeriVoteConfig } from '../config';\nimport { deriVoteFactory } from '../contract/factory';\n\nconst votingId = '2';\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\n\nexport const getVotingResult = async () => {\n  return catchApiError(\n    async () => {\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.OP1.count`,\n        `${keyPrefix()}.OP2.count`,\n        `${keyPrefix()}.OP3.count`,\n      ];\n      const res = await db.getValues(keys);\n      return res.map((v) => fromWei(hexToNumberString(v)));\n    },\n    [],\n    'getOptionsVotingPowers',\n    ['', '', '']\n  );\n};\n\nexport const getUserVotingPower = async (accountAddress) => {\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseDeriVoteFactory();\n      const keys = [`${keyPrefix()}.${accountAddress}.count`];\n      const res = await db.getValues(keys);\n      return res.map((v) => fromWei(hexToNumberString(v)))[0];\n    },\n    [accountAddress],\n    'getUserVotingPowers',\n    ''\n  );\n};\n\nexport const getUserVotingResult = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.${accountAddress}.count`,\n        `${keyPrefix()}.${accountAddress}.option`,\n        `${keyPrefix()}.${accountAddress}.timestamp`,\n      ];\n      const res = await db.getValues(keys);\n      return {\n        votingPower: fromWei(hexToNumberString(res[0])),\n        option: hexToNumberString(res[1]),\n        timestamp: hexToNumberString(res[2]),\n      };\n    },\n    args,\n    'getVoteResult',\n    ''\n  );\n};\n\nexport const vote = async (chainId, accountAddress, votingOption) => {\n  const args = [chainId, accountAddress, votingOption];\n  return catchTxApiError(async () => {\n    chainId = chainId.toString();\n    accountAddress = toChecksumAddress(accountAddress);\n    const config = getDeriVoteConfig(chainId);\n    const deriVote = deriVoteFactory(chainId, config.address);\n    const voteId = await deriVote.votingId();\n    if (voteId !== votingId) {\n      throw new Error(\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\n      );\n    }\n    return await deriVote.vote(accountAddress, votingOption);\n  }, args);\n};\n","import { checkEnv } from '../shared/config';\nimport { getJsonConfig } from '../shared/config/config';\nimport { catchApiError } from '../shared/utils';\nimport { getPoolOpenConfigList } from '../v2_lite_open/api/query_api';\n\nexport const getPoolConfigList = async (env, type=null, includeOpenPools = false) => {\n  return catchApiError(async () => {\n    env = checkEnv(env);\n    let res = getJsonConfig(env);\n    // add v1 config\n    // res= res.concat(getPoolV1ConfigList(env));\n    if (includeOpenPools) {\n      const result = await getPoolOpenConfigList();\n      if (result.success) {\n        res = [...res, ...result.response.data];\n      } else {\n        console.log(result.response.error && result.response.error.message);\n      }\n    }\n    if (!!type) {\n      res = res.filter((c) => c.version === type)\n    }\n    return res;\n  }, [env, type, includeOpenPools]);\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  // hexToString,\n  // toChecksumAddress,\n  // hexToNumber,\n  // hexToNumberString,\n  bg,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\n//import { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\n//import { getPoolV1Config } from '../../shared/config';\nimport { getHttpBase, fetchJson, catchApiError } from '../../shared/utils';\n// import {\n//   getTradeHistoryOnline,\n// } from './trade_history_api';\n//import { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\n// const processLiquidateEvent = async (\n//   info,\n//   txHash,\n//   bTokenSymbol,\n//   multiplier\n// ) => {\n//   // console.log(info)\n//   const volume = deriToNatural(info.volume).abs();\n//   // const cost = deriToNatural(info.cost).abs()\n//   // const margin = info.margin\n//   const timestamp = `${info.timestamp}000`;\n//   const price = deriToNatural(info.price);\n//   // const liquidator = info.liquidator\n//   // const reward = info.reward\n//   const national = volume.times(price).times(multiplier);\n//   // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n//   const res = {\n//     direction: 'Liquidation',\n//     baseToken: bTokenSymbol,\n//     price: price.toString(),\n//     notional: national.toString(),\n//     volume: bg(volume).times(multiplier).toString(),\n//     transactionFee: '0',\n//     transactionHash: txHash.toString(),\n//     time: timestamp,\n//     // cost: naturalToDeri(cost).toString(),\n//     // margin: margin.toString(),\n//     // liquidator,\n//     // reward: reward.toString(),\n//   };\n//   return res;\n// };\n\n// export const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n//   const keyMeta = `${chainId}.${poolAddress}`;\n//   const db = databaseFactory();\n//   let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n//     db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n//     db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n//   ]);\n//   tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n//   liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n//   if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n//     // console.log(tradeFromBlock, liquidateFromBlock)\n//     const [\n//       tradeHistoryOffline,\n//       tradeHistoryOnline,\n//       liquidateHistoryOffline,\n//       liquidateHistoryOnline,\n//     ] = await Promise.all([\n//       getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n//       getTradeHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         tradeFromBlock + 1\n//       ),\n//       getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n//       getLiquidateHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         liquidateFromBlock + 1\n//       ),\n//     ]);\n//     const result = tradeHistoryOnline\n//       .concat(liquidateHistoryOnline)\n//       .concat(tradeHistoryOffline)\n//       .concat(liquidateHistoryOffline);\n//     return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n//   } else {\n//     const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n//     tradeFromBlock = parseInt(initialBlock);\n//     liquidateFromBlock = parseInt(initialBlock);\n//     const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n//       getTradeHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         tradeFromBlock + 1\n//       ),\n//       getLiquidateHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         liquidateFromBlock + 1\n//       ),\n//     ]);\n//     const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n//     return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n//   }\n// };\n\n// // get trade history combined from cache and from online pull\n// const getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n//   // console.log(chainId, poolAddress, accountAddress)\n//   let result = [];\n//   // use dev database\n//   const db = databaseFactory();\n//   const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n//   const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n//     accountAddress\n//   )}.trade`;\n//   //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const count = hexToNumber(res);\n\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//   const {\n//     multiplier,\n//   } = await perpetualPool.getParameters();\n//   try {\n//     if (count && count >= 0) {\n//       let keyArray = [];\n//       for (let i = count; i > 0; i--) {\n//         const key = `${keyMeta}.${i.toString()}`;\n//         keyArray = keyArray.concat([\n//           `${key}.direction`,\n//           `${key}.baseToken`,\n//           `${key}.price`,\n//           `${key}.notional`,\n//           `${key}.volume`,\n//           `${key}.transactionFee`,\n//           `${key}.transactionHash`,\n//           `${key}.time`,\n//         ]);\n//       }\n//       // console.log(keyArray)\n//       const tradeHistoryLength = keyArray.length / 8;\n//       // console.log(`trade history length: ${tradeHistoryLength}`)\n//       const resp = await db.getValues(keyArray);\n//       for (let i = 0; i < tradeHistoryLength; i++) {\n//         const indexBase = i * 8;\n//         //console.log(resp[indexBase + 6].trim());\n//         const item = {\n//           direction: hexToString(resp[indexBase]).trim(),\n//           baseToken: hexToString(resp[indexBase + 1]).trim(),\n//           price: deriToNatural(resp[indexBase + 2]).toString(),\n//           notional: deriToNatural(resp[indexBase + 3]).toString(),\n//           volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n//           transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n//           transactionHash: resp[indexBase + 6],\n//           time: hexToNumberString(resp[indexBase + 7]).toString(),\n//         };\n//         result.push(item);\n//       }\n//     } else {\n//       result = [];\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     result = [];\n//   }\n//   return result;\n// };\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\n// export const getLiquidateHistoryOnline = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   fromBlock\n// ) => {\n//   const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n//   // console.log(poolAddr, bTokenAddress);\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//   //perpetualPool.setAccount(accountAddress);\n//   const toBlock = await perpetualPool._getBlockInfo('latest');\n//   fromBlock = parseInt(fromBlock);\n//   const filters = { owner: accountAddress };\n//   const events = await perpetualPool._getPastEvents(\n//     'Liquidate',\n//     filters,\n//     fromBlock,\n//     toBlock.number\n//   );\n//   const { multiplier } = await perpetualPool.getParameters();\n\n//   const result = [];\n//   // console.log(\"events length:\", events.length);\n//   for (let i = 0; i < events.length; i++) {\n//     const item = events[i];\n//     // const info = item.returnValues;\n//     const res = await processLiquidateEvent(\n//       item.returnValues,\n//       item.transactionHash,\n//       bTokenSymbol,\n//       multiplier\n//     );\n//     result.unshift(res);\n//   }\n//   return result;\n// };\n\n// // get trade history combined from cache and from online pull\n// const getLiquidateHistoryOffline = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress\n// ) => {\n//   let result = [];\n//   // use dev database\n//   const db = databaseFactory();\n//   const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n//   const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n//     accountAddress\n//   )}.liquidate`;\n//   //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const count = hexToNumber(res);\n\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//   const {\n//     multiplier,\n//   } = await perpetualPool.getParameters();\n//   try {\n//     if (count && count >= 0) {\n//       let keyArray = [];\n//       for (let i = count; i > 0; i--) {\n//         const key = `${keyMeta}.${i.toString()}`;\n//         keyArray = keyArray.concat([\n//           `${key}.direction`,\n//           `${key}.baseToken`,\n//           `${key}.price`,\n//           `${key}.notional`,\n//           `${key}.volume`,\n//           `${key}.transactionFee`,\n//           `${key}.transactionHash`,\n//           `${key}.time`,\n//         ]);\n//       }\n//       // console.log(keyArray)\n//       const liquidateHistoryLength = keyArray.length / 8;\n//       const resp = await db.getValues(keyArray);\n//       for (let i = 0; i < liquidateHistoryLength; i++) {\n//         const indexBase = i * 8;\n//         const item = {\n//           direction: hexToString(resp[indexBase]).trim(),\n//           baseToken: hexToString(resp[indexBase + 1]).trim(),\n//           price: deriToNatural(resp[indexBase + 2]).toString(),\n//           notional: deriToNatural(resp[indexBase + 3]).toString(),\n//           volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n//           transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n//           transactionHash: resp[indexBase + 6],\n//           time: hexToNumberString(resp[indexBase + 7]).toString(),\n//         };\n//         result.push(item);\n//       }\n//     } else {\n//       result = [];\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     result = [];\n//   }\n//   return result;\n// };\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    let tradeFromBlock, liquidateFromBlock, tradeHistory;\n    const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n      tradeHistory = res.data.tradeHistory;\n    }\n\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const { multiplier } = await perpetualPool.getParameters();\n    tradeHistory = tradeHistory\n      .filter((i) => i)\n      .map((i) => {\n        return {\n          direction: i.direction.trim(),\n          baseToken: bTokenSymbol,\n          price: deriToNatural(i.price).toString(),\n          notional: deriToNatural(i.notional).toString(),\n          volume: deriToNatural(i.volume).times(multiplier).toString(),\n          transactionFee: deriToNatural(i.transactionFee).toString(),\n          transactionHash: i.transactionHash,\n          time: i.time.toString(),\n        };\n      });\n    if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n      tradeFromBlock = parseInt(initialBlock);\n      liquidateFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  }, [], []);\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// // websocket instance\n// export const wsInstance = (function(){\n//   let _ws = null;\n//   return {\n//     get() {\n//       if (_ws) {\n//         return _ws\n//       } else {\n//         console.log('wsInstance.get() error: ws instance is not init')\n//       }\n//     },\n//     set(url) {\n//       try {\n//         const ws = io(url, {\n//           transports: ['websocket'],\n//           path: '/ws',\n//         });\n//         ws.on('connect', () => {\n//           console.log('hello from ws:', ws.id);\n//         })\n//         if (ws) {\n//           _ws = ws\n//         } else {\n//           console.log('wsInstance.get() error: ws instance is not init')\n//         }\n//       } catch (err) {\n//         console.log('wsInstance.set():', err)\n//       }\n//     },\n//     getOrSet(url) {\n//       if (!_ws) {\n//         this.set(url)\n//       }\n//       return _ws\n//     }\n//   }\n// })();\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n  catchApiError,\n  toChecksumAddress,\n} from '../../shared/utils';\n// import {\n//   bTokenFactory,\n// } from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared/config/pool_v1';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\nimport { ERC20Factory } from '../../shared/contract';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress\n  //accountAddress,\n) => {\n  return catchApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const {\n      multiplier,\n      feeRatio,\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minAddLiquidity,\n      redemptionFeeRatio,\n      fundingRateCoefficient,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      priceDelayAllowance,\n    } = await pPool.getParameters();\n    let symbol = await pPool.symbol();\n    const bTokenSymbol = await bToken.symbol();\n    return {\n      addresses: poolAddress,\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minAddLiquidity: minAddLiquidity.toString(),\n      redemptionFeeRatio: redemptionFeeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      priceDelayAllowance: priceDelayAllowance.toString(),\n    };\n  });\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    poolAddress = toChecksumAddress(poolAddress);\n    accountAddress = toChecksumAddress(accountAddress);\n    const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n    const {\n      multiplier,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = await pPool.getParameters();\n    const symbol = await pPool.symbol();\n    const { volume, margin, cost } = await pToken.getPositionInfo(\n      accountAddress\n    );\n    const price = await getPriceFromRest(symbol);\n    if (price === '') {\n      return {\n        price,\n        volume: bg(volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: '',\n        unrealizedPnl: '',\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          cost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      return {\n        price,\n        volume: bg(volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: calculateMarginHeld(\n          price,\n          volume,\n          multiplier,\n          minInitialMarginRatio\n        ).toString(),\n        unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          cost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    }\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    //pPool.setAccount(accountAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n    //lToken.setAccount(accountAddress);\n\n    const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n      lToken.balanceOf(accountAddress),\n      lToken.totalSupply(),\n      pPool.symbol(),\n    ]);\n    const price = await getPriceFromRest(symbol);\n    const {\n      liquidity,\n      tradersNetCost,\n      tradersNetVolume,\n    } = await pPool.getStateValues();\n    const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n    const poolDynamicEquity = liquidity.plus(\n      tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n    );\n\n    return {\n      totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: liquidity.toString(),\n      shares: lTokenBalance.toString(),\n      shareValue: calculateShareValue(\n        lTokenTotalSupply,\n        poolDynamicEquity\n      ).toString(),\n      maxRemovableShares: calculateMaxRemovableShares(\n        lTokenBalance,\n        lTokenTotalSupply,\n        liquidity,\n        tradersNetVolume,\n        tradersNetCost,\n        multiplier,\n        minPoolMarginRatio,\n        price\n      ).toString(),\n    };\n  });\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const balance = await bToken.balanceOf(accountAddress);\n    return balance.toString();\n  });\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.isUnlocked(accountAddress, poolAddress);\n  });\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  return catchApiError(async () => {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    //pPool.setAccount(accountAddress);\n    const { multiplier } = await pPool.getParameters();\n    const symbol = await pPool.symbol();\n    const price = await getPriceFromRest(symbol);\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .div(bg(leverage))\n      .toString();\n  }, [], '');\n};\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  return catchApiError(async () => {\n    // const price = await getBTCUSDPrice(chainId, poolAddress);\n    let price = priceCache.get();\n    let parameters = PerpetualPoolParametersCache.get();\n    if (price === '') {\n      const pPool = perpetualPoolFactory(chainId, poolAddress);\n      const symbol = await pPool.symbol();\n      await priceCache._update(poolAddress, symbol);\n      price = priceCache.get();\n    }\n    // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n    // const { multiplier, feeRatio } = await pPool.getParameters();\n    if (!parameters.multiplier) {\n      parameters = await PerpetualPoolParametersCache.update(\n        chainId,\n        poolAddress\n      );\n    }\n    //console.log('price', price);\n    const { multiplier, feeRatio } = parameters;\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  });\n};\n\nexport const getFundingRate = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n    const res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getFundingRate', err));\n    fundingRateCache.set(chainId, poolAddress, res);\n    const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n    if (res) {\n      const {\n        fundingRate,\n        fundingRatePerBlock,\n        liquidity,\n        tradersNetVolume,\n        multiplier,\n      } = res;\n      const volume = poolInfo.volume24h;\n\n      return {\n        fundingRate0: naturalWithPercentage(fundingRate),\n        fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n        liquidity: liquidity.toString(),\n        volume: deriToNatural(volume).toString(),\n        tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n      };\n    }\n  });\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\nexport const getEstimatedFundingRate = async (chainId, poolAddress, newNetVolume) => {\n  return catchApiError(async () => {\n    let fundingRate1;\n    let res;\n    res = fundingRateCache.get(chainId, poolAddress);\n    if (!res) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      res = await perpetualPool.getFundingRate();\n    }\n    if (res) {\n      const parameters = [\n        bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      if (!validateArgs(...parameters)) {\n        return {\n          fundingRate1: '0',\n        };\n      }\n      // console.log(parameters)\n      fundingRate1 = calculateFundingRate(...parameters);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: naturalWithPercentage(fundingRate1),\n      };\n    }\n  });\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    let res;\n    res = fundingRateCache.get(chainId, poolAddress);\n    if (!res) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      res = await perpetualPool.getFundingRate();\n    }\n    if (res) {\n      const { liquidityUsed } = res;\n      return {\n        liquidityUsed0: naturalWithPercentage(liquidityUsed),\n      };\n    }\n  });\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  return catchApiError(async () => {\n    let res;\n    res = fundingRateCache.get(chainId, poolAddress);\n    if (!res) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      res = await perpetualPool\n        .getFundingRate()\n        .catch((err) => console.log('getLiquidityUsed', err));\n    }\n    if (res) {\n      const parameters = [\n        bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.poolMarginRatio,\n      ];\n      if (!validateArgs(...parameters)) {\n        return {\n          liquidityUsed1: '0',\n        };\n      }\n      const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n      return {\n        liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n      };\n    }\n  });\n};\n","import {\n  bg,\n  formatBN,\n  naturalToDeri,\n  deriToNatural,\n} from '../../shared/utils';\nimport {\n  getPoolV1Config,\n} from '../../shared/config';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  isOrderValid,\n} from '../calculation';\nimport { catchTxApiError } from '../../shared/utils';\nimport { AppError } from '../../shared/error/error';\nimport { ERC20Factory } from '../../shared/contract';\n\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress, poolAddress);\n\n    return await bToken.unlock(accountAddress, poolAddress);\n  });\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n  });\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    //let res;\n    //const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    //pPool.setAccount(accountAddress);\n    //const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n    //pToken.setAccount(accountAddress);\n\n    // const price = deriToNatural(\n    //   (await getPriceInfoForV1(symbol)).price\n    // ).toString();\n    // const { volume, margin, cost } = await pToken.getPositionInfo(\n    //   accountAddress\n    // );\n    // const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n    // const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    //   price,\n    //   volume,\n    //   margin,\n    //   cost,\n    //   multiplier,\n    //   minInitialMarginRatio\n    // );\n    return await pPool._transact(\n      'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n  });\n};\n\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  return catchTxApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress, poolAddress);\n    const decimals = await bToken.decimals();\n    const BONE = 10 ** decimals;\n    amount = formatBN(bg(amount).multipliedBy(BONE));\n    return await bToken._transact('mint', [amount], accountAddress);\n  });\n};\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n  })\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  return catchTxApiError(async () => {\n    const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n    const price = deriToNatural(\n      (await getPriceInfoForV1(symbol)).price\n    ).toString();\n\n    const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n      lToken.balance(accountAddress),\n      lToken.totalSupply(),\n    ]);\n    const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n    const {\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n    } = await pPool.getStateValues();\n\n    const maxRemovableShares = calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    );\n    if (bg(shares).lte(maxRemovableShares)) {\n      return await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n    } else {\n      throw new AppError('UNKOWN_ERROR', 'removeLiquidity');\n    }\n  });\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  return catchTxApiError(async () => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n      return await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n  } else {\n    throw new AppError('UNKOWN_ERROR', 'tradeWithMargin');\n  }\n})\n};\n\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n    let { volume } = await pToken.getPositionInfo(accountAddress);\n    volume = volume.negated();\n    if (!volume.eq(0)) {\n      return await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n    } else {\n      //res = { success: false, error: 'no position to close' };\n      throw new AppError('UNKOWN_ERROR', 'closePosition');\n    }\n  });\n};\n","// export shared api\n// import { priceCache, fundingRateCache } from './api_v1_globals';\n\n// export {\n//   mint,\n// } from './contract_transaction_api';\n\n// export v1 api\nimport { getTradeHistory } from './trade_history_api';\n\nimport {\n  getLiquidityInfo,\n  getPositionInfo,\n  isUnlocked,\n  getEstimatedMargin,\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getWalletBalance,\n  getSpecification,\n  getFundingRate,\n  getLiquidityUsed,\n  getFundingRateCache,\n} from './contract_query_api';\n\n// export {\n//   addLiquidity2,\n//   removeLiquidity2,\n//   tradeWithMargin2,\n//   closePosition2,\n//   depositMargin2,\n//   withdrawMargin2,\n// } from './contract_transaction_api_v2';\n\nimport {\n  unlock,\n  addLiquidity,\n  removeLiquidity,\n  tradeWithMargin,\n  closePosition,\n  depositMargin,\n  withdrawMargin,\n} from './contract_transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  //getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  //getEstimatedTimePrice,\n  getFundingRateCache,\n\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n  // extra for v2\n  //getPoolBTokensBySymbolId,\n  //getFundingFee,\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bg(bToken.liquidity).minus(\n          bg(minPoolMarginRatio)\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        bg(userLiquidity)\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","// this file is generated by script, don't modify it !!!\n// import { processMethod } from \"../../shared/utils/index.js\";\n\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\n// import {\n//   processResult,\n// } from \"../../shared/utils/contract.js\";\n//import { range } from '../../shared/utils/lang.js'\nimport { bTokenOracle1Factory, ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\n\n\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\n\nconst range = (n) => {\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\n    n = parseInt(n)\n  }\n  return [...Array(n).keys()]\n}\n\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    //const prices = await this._getSymbolPrices()\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    //newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n\nconst init = (klass) => {\n  klass.prototype.init = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.parameters) {\n      [this.addresses, this.parameters, this.state, this.lengths] =\n        await Promise.all([\n          this.getAddresses(),\n          this.getParameters(),\n          this.getPoolStateValues(),\n          this.getLengths(),\n        ]);\n      this.fundingPeriod = (3 * 24 * 3600).toString();\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\n    }\n    if (!isEstimatedApi) {\n      const lengths = await this.getLengths();\n      if (\n        !this.symbols ||\n        !this.bTokens ||\n        this.lengths.toString() !== lengths.toString()\n      ) {\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\n        this.bTokens = await Promise.all(\n          this.bTokenIds.reduce(\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n            []\n          )\n        );\n        // update bToken price\n        for (let i = 0; i < this.bTokenIds.length; i++) {\n          if (i === 0) {\n            this.bTokens[i].price = \"1\";\n          } else {\n            // this.bTokens[i].price = await offChainOracleFactory(\n            //   this.chainId,\n            //   this.bTokens[i].oracleAddress\n            // ).getPrice();\n            this.bTokens[i].price = await bTokenOracle1Factory(\n              this.chainId,\n              this.bTokens[i].oracleAddress\n            ).getPrice();\n          }\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\n            .times(this.bTokens[i].price)\n            .times(this.bTokens[i].discount)\n            .plus(this.bTokens[i].pnl)\n            .toString();\n        }\n        this.bTokenSymbols = await Promise.all(\n          this.bTokens.reduce(\n            (acc, bToken) => [\n              ...acc,\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\n            ],\n            []\n          )\n        );\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n\n        // init\n        this.positions = [];\n        this.userState = {};\n        this.offChainOracleSymbolIds = [];\n        this.offChainOracleSymbolNames = [];\n\n        await this.getLiquidity()\n      }\n    }\n  };\n  return klass;\n};\nconst getConfig = (klass) => {\n  klass.prototype.getConfig = async function () {\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      router: this.addresses.routerAddress,\n      // bTokenSymbols: this.bTokenSymbols,\n      bTokens: this.bTokens.map((b, index) => ({\n        bTokenId: index.toString(),\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\n        bToken: b.bTokenAddress,\n      })),\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: index.toString(),\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"perpetual\",\n      version: 'v2',\n      versionId: \"v2_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\nconst getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLiquidity = async function () {\n    await this._init()\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\n    this.state = this.state || {}\n    this.state.liquidity = res\n    return res\n  }\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLastTimestamp = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return res[0]\n    }\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getProtocolFeeAccrued = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return fromWei(res[1])\n    }\n  return klass\n}\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype.getStateValues = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state= { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\nconst getBTokens = (klass) => {\n  klass.prototype.getBTokens = async function (bTokenId) {\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\n    const bTokens = await Promise.all(\n      bTokenIds.reduce(\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n        []\n      )\n    );\n    // update bToken price\n    for (let i = 0; i < this.bTokenIds.length; i++) {\n      if (i === 0) {\n        bTokens[i].price = \"1\";\n      } else {\n        bTokens[i].price = await offChainOracleFactory(\n          this.chainId,\n          this.bTokens[i].oracleAddress\n        ).getPrice();\n      }\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\n        .times(this.bTokens[i].price)\n        .times(this.bTokens[i].discount)\n        .plus(this.bTokens[i].pnl)\n        .toString();\n    }\n\n    // update\n    if (bTokenId) {\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\n      if (bTokenIndex > -1) {\n        this.bTokens[bTokenIndex] = bTokens[0]\n      }\n    } else {\n      this.bTokens = bTokens\n    }\n    return bTokens\n  };\n  return klass\n};\n\n// getSymbols()\nconst getSymbols = (klass) => {\n  klass.prototype.getSymbols = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    const indexPrices = await Promise.all(\n      symbols.map((s) => {\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\n          ? ''\n          : s.oracleAddress;\n        return getOraclePriceFromCache2.get(\n          this.chainId,\n          s.symbol,\n          oracleAddress\n        );\n      })\n    );\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index];\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      );\n\n      const pnl = calculateDpmmCost(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier,\n        bg(s.tradersNetVolume).negated().toString()\n      )\n        .negated()\n        .minus(s.tradersNetCost);\n      const ratePerSecond = bg(s.dpmmPrice)\n        .minus(s.indexPrice)\n        .times(s.multiplier)\n        .div(this.fundingPeriod)\n        .toString();\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\n        this.state.lastTimestamp\n      );\n      s.fundingPerSecond = ratePerSecond\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\n      s.pnl = pnl.toString()\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\n        .minus(pnl)\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\n        .toString();\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      this.symbols[symbolIndex] = symbols[0]\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype.getPositions = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\n        []\n      )\n    );\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\nconst isBTokensUpdated = (klass) => {\n  klass.prototype.isBTokensUpdated = function() {\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\n  }\n  return klass\n}\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype.isSymbolsUpdated = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype.isPositionsUpdated = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\n  }\n  return klass\n}\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols();\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\n      )\n      .toString();\n    this.state.dynamicEquity = res;\n    return res;\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    const { minPoolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.notional)\n          ),\n        bg(0)\n      )\n      .times(minPoolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isBTokensUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated()) {\n      await this.getPositions(account)\n    }\n    if (!this.userState.margins) {\n      this.userState.margins = await this.pToken.getMargins(account);\n    }\n\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\n    this.userState.totalEquity = this.userState.margins.reduce(\n      (acc, m, i) =>\n        acc.plus(\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\n        ),\n      bg(this.userState.totalPnl)\n    );\n\n    this.userState.totalNotional = this.positions.reduce(\n      (acc, p) => acc.plus(p.notional),\n      bg(0)\n    );\n\n    return [this.userState.totalEquity, this.userState.totalNotional];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    const symbol = this.symbols[index];\n    const tradeFee = info.tradeFee;\n\n    const direction =\n      tradeFee !== '-1'\n        ? bg(tradeVolume).gt(0)\n          ? 'LONG'\n          : 'SHORT'\n        : 'LIQUIDATION';\n    const price = bg(info.tradeCost)\n      .div(info.tradeVolume)\n      .div(symbol.multiplier)\n      .toString();\n    const notional = bg(tradeVolume)\n      .abs()\n      .times(price)\n      .times(symbol.multiplier)\n      .toString();\n\n    const res = {\n      symbolId: info.symbolId,\n      symbol: symbol.symbol,\n      trader: info.trader,\n      direction,\n      volume: bg(tradeVolume).abs().toString(),\n      price: price,\n      indexPrice: deriToNatural(info.indexPrice).toString(),\n      notional: notional,\n      transactionFee:\n        tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n      transactionHash: event.transactionHash,\n      time: block.timestamp * 1000,\n      extra: {},\n    };\n    return res;\n  };\n  return klass;\n};\n\n\nexport const perpetualPoolDpmmAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    klass = addMethods(klass, [\n        init,\n        getConfig,\n        getLiquidity,\n        getLastTimestamp,\n        getProtocolFeeAccrued,\n        getStateValues,\n        getBTokens,\n        getSymbols,\n        getPositions,\n        isBTokensUpdated,\n        isSymbolsUpdated,\n        isPositionsUpdated,\n        getDynamicEquity,\n        getTraderLiquidity,\n        getTraderMarginStatus,\n        getPoolRequiredMargin,\n        formatTradeEvent,\n    ])\n    klass = overrideMethods(klass, [\n      [\n        processMethod,\n        \"getParameters\",\n        [\n          \"initialMarginRatio\",\n          \"liquidationCutRatio\",\n          \"maintenanceMarginRatio\",\n          \"maxLiquidationReward\",\n          \"minBToken0Ratio\",\n          \"minPoolMarginRatio\",\n          \"protocolFeeCollectRatio\",\n        ],\n      ],\n      [\n        processMethod,\n        \"getBToken\",\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\n      ],\n      [\n        processMethod,\n        \"getSymbol\",\n        [\n          \"multiplier\",\n          \"feeRatio\",\n          //\"fundingRateCoefficient\",\n          \"alpha\",\n          \"distributedUnrealizedPnl\",\n          //\"price\",\n          \"cumulativeFundingRate\",\n          \"tradersNetVolume\",\n          \"tradersNetCost\",\n        ],\n      ],\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\n    ]);\n    return klass\n}\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['2']],\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\n    [processTxMethod, 'removeLiquidity', ['2']],\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\n    [processTxMethod, 'addMargin', ['2']],\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\n    [processTxMethod, 'removeMargin', ['2']],\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\n    [processTxMethod, 'trade', ['2']],\n    //[processTxMethod, 'tradeWithPrices', ['2']],\n  ]);\n  return klass;\n};\n\nexport const lTokenAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\n  ]);\n  return klass;\n};\n\nexport const pTokenAdapter = (klass) => {\n  klass = overrideMethods(klass, [\n    [processMethod, 'getMargins'],\n    [\n      processMethod,\n      'getPosition',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n    [\n      processMethod,\n      'getPositions',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const lTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateAsset\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getAsset\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getAssets\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"asset\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updateAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\n\nexport class LToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async exists(owner) {\n  //    const res = await this._call('exists', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getAsset(owner, bTokenId) {\n    const res = await this._call('getAsset', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getAssets(owner) {\n    const res = await this._call('getAssets', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async numBTokens() {\n  //    const res = await this._call('numBTokens', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async pool() {\n  //    const res = await this._call('pool', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const pTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numSymbols_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargins\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPositions\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numSymbols\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumSymbols\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"margins\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"name\": \"updateMargins\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\n\nexport class PToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner, bTokenId) {\n    const res = await this._call('getMargin', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getMargins(owner) {\n    const res = await this._call('getMargins', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPositions(owner) {\n    const res = await this._call('getPositions', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numBTokens() {\n    const res = await this._call('numBTokens', [])\n    return deleteIndexedKey(res)\n  }\n  async numSymbols() {\n    const res = await this._call('numSymbols', [])\n    return deleteIndexedKey(res)\n  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setNumSymbols(accountAddress, num) {\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\n  //  }\n  //  async updateMargins(accountAddress, owner, margins) {\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[9]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[9]\"\n            },\n            {\n                \"internalType\": \"address[4]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[4]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"approveBTokenForTargetPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"routerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getBToken\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLengths\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals0\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minBToken0Ratio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minPoolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbolOracle\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourcePool\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"discount\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migratePoolStateValues\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"multiplier\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"alpha\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"distributedUnrealizedPnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolForLTokenAndPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\n\nexport class PerpetualPool extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getAddresses() {\n    const res = await this._call('getAddresses', [])\n    return deleteIndexedKey(res)\n  }\n  async getBToken(bTokenId) {\n    const res = await this._call('getBToken', [bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getLengths() {\n    const res = await this._call('getLengths', [])\n    return deleteIndexedKey(res)\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', [])\n    return deleteIndexedKey(res)\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', [])\n    return deleteIndexedKey(res)\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getSymbolOracle(symbolId) {\n  //    const res = await this._call('getSymbolOracle', [symbolId])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async addBToken(accountAddress, info) {\n  //    return await this._transact('addBToken', [info], accountAddress)\n  //  }\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addSymbol(accountAddress, info) {\n  //    return await this._transact('addSymbol', [info], accountAddress)\n  //  }\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, liquidator, trader) {\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\n  //  }\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\n  //  }\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\n  //  }\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\n  //  }\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolRouterAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"liquidatorQualifier\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"qualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setLiquidatorQualifier\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"tradeWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\n\nexport class PerpetualPoolRouter extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  //  async liquidatorQualifier() {\n  //    const res = await this._call('liquidatorQualifier', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationDestination() {\n  //    const res = await this._call('migrationDestination', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationTimestamp() {\n  //    const res = await this._call('migrationTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async addMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  //  }\n  //  async approveMigration(accountAddress) {\n  //    return await this._transact('approveMigration', [], accountAddress)\n  //  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async executeMigration(accountAddress, sourceRouter) {\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\n  //  }\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\n  //  }\n  async liquidate(accountAddress, trader) {\n    return await this._transact('liquidate', [trader], accountAddress)\n  }\n  async liquidateWithPrices(accountAddress, trader, infos) {\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\n  }\n  //  async prepareMigration(accountAddress, target, graceDays) {\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async removeMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setPool(accountAddress, poolAddress) {\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\n  }\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\n\nimport { LToken } from './gen/LToken.js';\nimport { PToken } from './gen/PToken.js';\nimport { PerpetualPool} from './gen/PerpetualPool';\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\n\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\n\n// dpmm\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\n","\nexport const ObjectCache = (function () {\n  let _cache = {};\n  return {\n    get(poolAddress, name) {\n      const key = `${poolAddress}.${name}`;\n      if (Object.keys(_cache).includes(key)) {\n        return _cache[key];\n      }\n      return null\n    },\n    set(poolAddress, name, val) {\n      const key = `${poolAddress}.${name}`;\n      const timestamp = Math.floor(Date.now() / 1000);\n      if (typeof val === 'object' && val != null && !Array.isArray(val)) {\n        val.timestamp = timestamp;\n        _cache[key] = val;\n      }\n    },\n  };\n})();","import { contractFactory } from \"../../activity/utils\"\nimport { bg, max, min } from \"../../shared/utils\"\nimport { SECONDS_IN_A_DAY, checkSymbolId  } from \"../../shared/config\";\nimport { getIndexInfo } from \"../../shared/config/token\"\nimport {\n  calculateLiquidationPrice,\n  calculateMaxRemovableLiquidity,\n} from '../../v2/calculation';\nimport { perpetualPoolDpmmFactory } from './factory';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\nimport { ERC20Factory } from \"../../shared/contract/factory\";\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\nimport { ObjectCache } from \"../../shared/cache\";\nimport { ErrorCode } from \"../../shared/error/error_code\";\nimport { AppError } from \"../../shared/error/error\";\n\n// PoolApi \nexport class PoolApi {\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  }\n\n  async init(usedByEstimatedApi) {\n    await this.pool.init(usedByEstimatedApi);\n  }\n\n  // API\n  async getUserStakeInfo(accountAddress) {\n    const pool = this.pool;\n    const assets = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, b, index) => [\n          ...acc,\n          pool.lToken.getAsset(accountAddress, index.toString()),\n        ],\n        []\n      )\n    );\n\n    return {\n      chainId: this.chainId,\n      poolAddress: this.poolAddress,\n      isStaked: assets.filter((a) => bg(a.liquidity).gt(0)).length > 0,\n      bTokens: assets.map((a, index) => ({\n        bTokenId: index.toString(),\n        isStaked: bg(a.liquidity).gt(0),\n      })),\n    };\n  }\n  async getLiquidityInfo(accountAddress, bTokenId) {\n    const pool = this.pool;\n    const [lTokenAsset, bTokens, symbols] = await Promise.all([\n      pool.lToken.getAsset(accountAddress, bTokenId),\n      pool.getBTokens(),\n      pool.getSymbols(),\n    ]);\n    const assets = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, b, index) => [\n          ...acc,\n          pool.lToken.getAsset(accountAddress, index.toString()),\n        ],\n        []\n      )\n    );\n    const { minPoolMarginRatio } = pool.parameters;\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const cost = symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\n    const totalPnl = symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\n\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenIndex],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    ).toString();\n    const approximatePnl = bg(pnl)\n      .plus(\n        bg(bTokens[bTokenIndex].cumulativePnl)\n          .minus(lastCumulativePnl)\n          .times(liquidity)\n      )\n      .toString();\n\n    ObjectCache.set(this.poolAddress, 'liquidity_info', {\n      assets,\n      bTokens,\n    });\n    return {\n      poolLiquidity,\n      shares: liquidity,\n      maxRemovableShares,\n      pnl: approximatePnl,\n      bToken0Symbol: pool.bTokenSymbols[0],\n      swappedPnl: bTokens[bTokenIndex].price ? bg(approximatePnl).div(bTokens[bTokenIndex].price).toString() : '',\n    };\n  }\n\n  async getEstimatedLiquidityInfo(accountAddress, newAmount, bTokenId) {\n    //await this.init();\n    //const pool = this.pool;\n    const res = ObjectCache.get(this.poolAddress, 'liquidity_info');\n    if (res && res.assets) {\n      const {\n        assets,\n        bTokens,\n      } = res;\n      //console.log(assets, bTokens)\n      const index = parseInt(bTokenId)\n      return {\n        percentage1: bg(assets[index].liquidity)\n          .plus(newAmount)\n          .div(bg(bTokens[index].liquidity).plus(newAmount)),\n        shareValue1: ''\n      };\n    } else {\n      throw new AppError(ErrorCode.INVALID_CACHE, {\n        name: `${this.poolAddress}.liquidity_info`,\n        data: res,\n      });\n    }\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool\n    const {\n      minPoolMarginRatio,\n      initialMarginRatio,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      maintenanceMarginRatio,\n      minBToken0Ratio,\n    } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbols,\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio,\n      minInitialMarginRatio: initialMarginRatio,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const oracleAddress =\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n        ? ''\n        : pool.symbols[symbolIndex].oracleAddress;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n      price,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n      getOraclePriceFromCache2.get(\n        this.chainId,\n        pool.symbols[symbolIndex].symbol,\n        oracleAddress\n      ),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const symbol = symbols[symbolIndex];\n    const position = positions[symbolIndex];\n    // const { volume } = position\n    // const { multiplier, indexPrice } = symbol\n    const margin = bTokens\n      .reduce(\n        (acc, b, index) =>\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n        bg(0)\n      )\n      .toString();\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n    const marginHeldBySymbol = bg(position.volume)\n      .times(symbol.multiplier)\n      .times(symbol.indexPrice)\n      .times(initialMarginRatio)\n      .abs();\n\n    const unrealizedPnl = positions.reduce(\n      (acc, p) => acc.plus(p.traderPnl),\n      bg(0)\n    );\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, positions[index].traderPnl];\n    });\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n    const dynamicCost = symbols.reduce((acc, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return acc.plus(\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n        );\n      } else {\n        return acc;\n      }\n    }, bg(0));\n    const fundingFee = bg(symbol.cumulativeFundingRate)\n      .minus(position.lastCumulativeFundingRate)\n      .plus(\n        bg(symbol.dpmmPrice)\n          .minus(symbol.indexPrice)\n          .times(symbol.multiplier)\n          .div(pool.fundingPeriod)\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n      )\n      .times(position.volume)\n      .toString();\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(this.poolAddress, {\n      volume: position.volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier: symbol.multiplier,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n    });\n\n    return {\n      symbol: symbol.symbol,\n      price: price,\n      markPrice: symbol.dpmmPrice.toString(),\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\n      averageEntryPrice: bg(position.volume).eq(0)\n        ? '0'\n        : bg(position.cost)\n            .div(position.volume)\n            .div(symbol.multiplier)\n            .toString(),\n      margin: margin,\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee,\n      liquidationPrice: calculateLiquidationPrice(\n        position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        symbol.multiplier,\n        maintenanceMarginRatio\n      ).toString(),\n    };\n  }\n\n  async getPositionInfos(accountAddress) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions\n      .map((p, index) => {\n        const symbolIndex = index;\n        const symbol = symbols[symbolIndex];\n        const position = positions[symbolIndex];\n        const margin = bTokens\n          .reduce(\n            (acc, b, index) =>\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n            bg(0)\n          )\n          .toString();\n        const marginHeld = symbols.reduce((acc, s, index) => {\n          return acc.plus(\n            bg(s.indexPrice)\n              .times(s.multiplier)\n              .times(positions[index].volume)\n              .times(initialMarginRatio)\n              .abs()\n          );\n        }, bg(0));\n        const marginHeldBySymbol = bg(position.volume)\n          .times(symbol.multiplier)\n          .times(symbol.indexPrice)\n          .times(initialMarginRatio)\n          .abs();\n        const unrealizedPnl = p.traderPnl\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\n          if (idx !== index) {\n            return acc.plus(\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n            );\n          } else {\n            return acc;\n          }\n        }, bg(0));\n        const fundingFee = bg(symbol.cumulativeFundingRate)\n          .minus(position.lastCumulativeFundingRate)\n          .plus(\n            bg(symbol.dpmmPrice)\n              .minus(symbol.indexPrice)\n              .times(symbol.multiplier)\n              .div(pool.fundingPeriod)\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n          )\n          .times(position.volume)\n          .toString();\n        return {\n          symbolId: symbolIndex.toString(),\n          symbol: symbol.symbol,\n          price: symbol.indexPrice,\n          markPrice: symbol.dpmmPrice.toString(),\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\n          averageEntryPrice: bg(position.volume).eq(0)\n            ? '0'\n            : bg(position.cost)\n                .div(position.volume)\n                .div(symbol.multiplier)\n                .toString(),\n          margin: margin,\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          fundingFee,\n          liquidationPrice: calculateLiquidationPrice(\n            position.volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            symbol.multiplier,\n            maintenanceMarginRatio\n          ).toString(),\n        };\n      })\n      .filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .times(feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init()\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\n    const liquidity = pool.state.liquidity\n    return {\n      funding0: bg(funding).div(multiplier).toString(),\n      fundingPerSecond: bg(fundingPerSecond).div(multiplier).toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { minPoolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(minPoolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { minPoolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getUserBTokensInfo(accountAddress) {\n    const pool = this.pool;\n    await pool.getSymbols();\n    await pool.getPositions(accountAddress);\n    const { initialMarginRatio } = pool.parameters\n    const margins = await pool.pToken.getMargins(accountAddress);\n    const balances = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, i) => [\n          ...acc,\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\n        ],\n        []\n      )\n    );\n\n    const margin = pool.bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0)).toString()\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(pool.positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0)).toString();\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\n\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\n      const bToken = pool.bTokens[i]\n      bToken.walletBalance = balances[i]\n      bToken.availableBalance = max(\n        min(\n          bg(margin)\n            .minus(marginHeld)\n            .plus(pnl)\n            .div(pool.bTokens[i].price)\n            .div(pool.bTokens[i].discount),\n          bg(margins[i])\n        ),\n        bg(0)\n      ).toString();\n    }\n    return pool.bTokens.map((b, index) => {\n      return {\n        bTokenId: index.toString(),\n        bTokenAddress: b.bTokenAddress,\n        bTokenSymbol: pool.bTokenSymbols[index],\n        availableBalance: b.availableBalance,\n        walletBalance: b.walletBalance,\n      }\n    })\n  }\n\n  async getFundingFee(accountAddress, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    if (!pool.isPositionsUpdated()) {\n      await pool.getPositions(accountAddress);\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    return pool.positions[symbolIndex].fundingAccrued;\n  }\n}\n\n\n\n\nexport const poolApiFactory = contractFactory(PoolApi);","import {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n  checkSymbolId,\n  checkTokenId,\n  checkAmount,\n} from '../../shared/config';\nimport { catchApiError } from '../../shared/utils/api';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\nimport { bg } from '../../shared/utils';\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getUserStakeInfo(accountAddress);\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId);\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getLiquidityInfo(accountAddress, bTokenId);\n  });\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n  bTokenId,\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId)\n    newAmount = checkAmount(newAmount)\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init()\n    return await api.getEstimatedLiquidityInfo(accountAddress, newAmount, bTokenId)\n  })\n}\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getSpecification(symbolId);\n    },\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    symbolId = checkTokenId(symbolId);\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getPositionInfo(accountAddress, symbolId);\n  });\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPositionInfos(accountAddress);\n    },\n    [],\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      bTokenId = checkTokenId(bTokenId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.balanceOf(accountAddress);\n    },\n    [],\n    ''\n  );\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      bTokenId = checkTokenId(bTokenId);\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedMargin(\n        accountAddress,\n        volume,\n        leverage,\n        symbolId\n      );\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFee(volume, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingRate(symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getLiquidityUsed();\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getUserBTokensInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      //symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getUserBTokensInfo(accountAddress);\n    },\n    [],\n    []\n  );\n};\n\nexport const getFundingFee = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingFee(accountAddress, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    ''\n  );\n};\n","import {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n  catchTxApiError,\n  catchApiError,\n} from '../../shared/utils';\n// import {\n//   getPoolConfig,\n// } from '../../shared/config';\nimport { perpetualPoolDpmmFactory, } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: '',\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(async () => {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init();\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId);\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: '',\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume)\n                .times(perpetualPool.symbols[symbolIndex].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: '',\n              symbolId: i.symbolId ? i.symbolId : '',\n              symbol: i.symbol ? i.symbol : '',\n              price: i.price ? deriToNatural(i.price).toString() : '',\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\n              volume: i.volume\n                ? deriToNatural(i.volume)\n                    .times(perpetualPool.symbols[symbolIndex].multiplier)\n                    .toString()\n                : '',\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            return null;\n          }\n        })\n        .filter((i) => i != null);\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      //const { initialBlock } = getPoolConfig(poolAddress);\n      const initialBlock = 100000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  });\n};\n","// import {\n//   getPoolInfoApy,\n//   getPoolLiquidity,\n// } from '../../v2/api/mining_query_api';\nimport {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getUserStakeInfo,\n  getLiquidityInfo,\n  getEstimatedLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getUserBTokensInfo,\n  getFundingFee,\n  getEstimatedTimePrice,\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n  // getPoolLiquidity,\n  // getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n  // extra for v2\n  getUserBTokensInfo,\n  getFundingFee,\n};\n","import {\n  checkApiInput,\n  checkAmount,\n  checkSymbolId,\n  checkTokenId,\n  MAX_INT256,\n} from '../../shared/config';\nimport { bg, deriToNatural } from '../../shared/utils';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { catchTxApiError } from '../../shared/utils/api';\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\n\n// mining\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\n  }, []);\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    if (isMaximum) {\n      amount = deriToNatural(MAX_INT256).toString();\n    }\n    return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\n  }, []);\n};\n\n//trading\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds);\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, []);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.router.addMargin(accountAddress, bTokenId, amount);\n  }, []);\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.router.removeMargin(accountAddress, bTokenId, amount);\n  }, []);\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newVolume = checkAmount(newVolume);\n    symbolId = checkTokenId(symbolId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier } = pool.symbols[symbolIndex];\n    return await pool.router.trade(\n      accountAddress,\n      symbolId,\n      bg(newVolume).div(multiplier).toString()\n    );\n  }, []);\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    symbolId = checkTokenId(symbolId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const { volume } = await pool.pToken.getPosition(accountAddress, symbolId);\n    if (!bg(volume).eq(0)) {\n      const newVolume = bg(volume).negated().toString();\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\n    } else {\n      throw new Error('no position to close');\n    }\n  }, []);\n};\n","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const lToken = perpetualPool.lToken\n  // const pToken = perpetualPool.pToken\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  //const symbolIndex = symbolIds.indexOf(symbolId)\n  //const symbols = perpetualPool.symbols\n\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    //perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    //pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      // totalSupply: '',\n      // poolLiquidity: '',\n      // shares: '',\n      // shareValue: '',\n      // maxRemovableShares: '',\n    }\n  );\n}\n\n// replace by database api\n\n// export const getPoolLiquidity = async (chainId, poolAddress) => {\n//   // use the dev database\n//   const db = databaseFactory();\n//   try {\n//     const res = await db\n//       .getValues([`${chainId}.${poolAddress}.liquidity`])\n//       .catch((err) => console.log('getPoolLiquidity', err));\n//     if (res) {\n//       const [liquidity] = res;\n//       return {\n//         liquidity: deriToNatural(liquidity).toString(),\n//         symbol:'',\n//       };\n//     }\n//   } catch (err) {\n//     console.log(`${err}`)\n//   }\n//   return {\n//     // liquidity: '',\n//     // symbol:'',\n//   };\n// };\n\n// export const getPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(`${err}`)\n//   }\n// };\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { fromWei } from \"../shared/utils\";\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\n\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\n    offChainSymbolIds.indexOf(s.symbolId) > -1\n      ? ''\n      : s.oracleAddress\n  );\n\n  const onChainSymbolPrices = await Promise.all(\n    onChainOracleAddressWithPlaceHolder\n      .reduce((acc, address, index) => {\n        const _symbol = symbols.map((s) => s.symbol)[index];\n        if (address !== '') {\n          return acc.concat(\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\n          );\n        } else {\n          return acc.concat('');\n        }\n      }, [])\n      .filter((f) => f !== '')\n  );\n\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\n\n  // combine offChain and onChain symbol prices\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\n    if (o !== '') {\n      return onChainSymbolPrices.shift();\n    } else {\n      return offChainSymbolPrices.shift();\n    }\n  });\n  return symbolPrices\n};","import {\n  calculateEntryPrice,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\n//import { getPoolConfig } from \"../../shared/config\"\n//import { bTokenFactory } from \"../../shared/factory\"\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport { getIndexInfo } from '../../shared/config/token';\nimport { getSymbolPrices } from '../utils';\nimport {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n} from '../../shared/config';\nimport { AppError } from '../../shared/error/error';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const bTokenSymbol = perpetualPool.bTokenSymbol\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol),\n    }\n  }, args, {\n    // symbol: '',\n    // bTokenSymbol: '',\n    // multiplier: '',\n    // feeRatio: '',\n    // fundingRateCoefficient: '',\n    // minPoolMarginRatio: '',\n    // minInitialMarginRatio: '',\n    // minMaintenanceMarginRatio: '',\n    // minLiquidationReward: '',\n    // maxLiquidationReward: '',\n    // liquidationCutRatio: '',\n    // protocolFeeCollectRatio: '',\n    // indexConstituents: { url: '', tokens: [] },\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n\n    if (symbolIndex > -1) {\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      //const symbol = symbols[symbolIndex].symbol\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        symbolInfo,\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        positionInfo,\n        margin,\n        //latestPrice,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbolInfo;\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      // }\n      //const symbols = await Promise.all(promises);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n      let price;\n      if (symbolIndex === '-1') {\n        price = '0';\n      } else {\n        price = symbolPrices[symbolIndex];\n        priceCache.set(poolAddress, symbolId, price);\n      }\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [\n          s.symbol,\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n            .toString(),\n        ];\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n      const dynamicCost = symbols.reduce((accum, s, index) => {\n        if (index !== symbolIndex) {\n          return accum.plus(\n            bg(positions[index].volume)\n              .times(symbolPrices[index])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n\n      liquidatePriceCache.set(poolAddress, {\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier,\n        minMaintenanceMarginRatio,\n      });\n\n      return {\n        symbol:symbols[symbolIndex].symbol,\n        price,\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee: fundingFee.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      throw new AppError('INVALID_SYMBOL_ID', symbolId)\n    }\n  }, args)\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        margin,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        //perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        //pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      const symbolList = symbols.map((s) => s.symbol);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n\n      return positions.map((p, index) => {\n      const symbolId = symbolList[index]\n      const symbol = symbols[index]\n      const price = symbolPrices[index]\n\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbol;\n      priceCache.set(poolAddress, symbolId, price);\n\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(\n            bg(positions[idx].volume)\n              .times(symbolPrices[idx])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price,\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\n          averageEntryPrice: calculateEntryPrice(\n            volume,\n            cost,\n            multiplier\n          ).toString(),\n          margin: margin.toString(),\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          //unrealizedPnlList,\n          fundingFee: fundingFee.toString(),\n          liquidationPrice: calculateLiquidationPrice(\n            volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            multiplier,\n            minMaintenanceMarginRatio\n          ).toString(),\n        };\n      }).filter((p) => p.volume !== '0')\n  }, args, [])\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const balance = await perpetualPool.bToken.balanceOf(accountAddress)\n    return balance.toString()\n  }, args, '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    return await perpetualPool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  const symbolIndex = symbolIds.indexOf(symbolId)\n\n  let promises = [];\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises);\n\n  if (symbolIndex > -1) {\n    const symbolInfo = symbols[symbolIndex];\n    // const symbol = symbols[symbolIndex].symbol;\n    // const isOffchainOracleSymbol =\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n    // const oracleAddress = isOffchainOracleSymbol\n    //   ? ''\n    //   : symbols[symbolIndex].oracleAddress;\n    const [liquidity, prices] = await Promise.all([\n      perpetualPool.getLiquidity(),\n      getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      ),\n    ]);\n    const price = prices[symbolIndex]\n    priceCache.set(poolAddress, symbolId, price);\n    const {\n      multiplier,\n      fundingRateCoefficient,\n      tradersNetVolume,\n      feeRatio,\n    } = symbolInfo;\n    const { minPoolMarginRatio } = parameterInfo;\n    const fundingRateArgs = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient,\n    ];\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\n\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .times(minPoolMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n\n    const res = {\n      price,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n      liquidity: liquidity.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      fundingRatePerBlock: fundingRatePerBlock,\n      fundingRate: fundingRate,\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    };\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\n    return res;\n  } else {\n    throw new AppError('INVALID_SYMBOL_ID', symbolId)\n  }\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    //const symbol = symbols[symbolIndex]\n    let price = priceCache.get(poolAddress, symbolId)\n    //console.log('symbol',symbol)\n\n    if (!price) {\n      // const symbolName = symbol.symbol;\n      // const isOffchainOracleSymbol =\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    if (symbolIndex > -1) {\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      const price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier } = symbols[symbolIndex]\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n    } else {\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\n    }\n\n  }, args, '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    [chainId, poolAddress ] = checkApiInput(\n      chainId,\n      poolAddress\n    );\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    }\n  }, args, {\n    // fundingRate0: '',\n    // fundingRatePerBlock: '',\n    // liquidity: '',\n    // volume: '',\n    // tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n    [chainId, poolAddress ] = checkApiInputWithoutAccount(\n      chainId,\n      poolAddress,\n    );\n\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   symbolId,\n      //   'v2_lite'\n      // );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      const pToken = perpetualPool.pToken\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    ''\n  );\n}\n","import { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    // const { bToken: bTokenAddress } = getPoolConfig(\n    //   poolAddress,\n    //   '0',\n    //   null,\n    //   'v2_lite'\n    // );\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n      await perpetualPool.init()\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = perpetualPool.pToken\n      const parameterInfo = perpetualPool.parameters\n      // const symbols = perpetualPool.symbols\n      const symbolIds = perpetualPool.activeSymbolIds\n      const [liquidity, margin] = await Promise.all([\n        //perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        //pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const symbol = symbols.find((s) => s.symbolId === symbolId);\n      const { multiplier } = symbol;\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(\n          accountAddress,\n          symbolId,\n          bg(newVolume).div(multiplier).toString()\n        );\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const pToken = perpetualPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson, catchTxApiError } from '../../shared/utils';\n// import {\n//   getPoolConfig,\n//   getPoolConfig2,\n// } from '../../shared/config';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  bTokenSymbol,\n  symbols,\n  symbolIds,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const index = symbolIds.findIndex((s) => s === symbolId)\n  const symbol = symbols[index]\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    symbol.multiplier,\n    symbol.feeRatio,\n  );\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    //volume: volume.toString(),\n    volume: bg(volume).times(symbol.multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('symbolIdList', symbolIdList);\n  //const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const bTokenSymbol = perpetualPool.bTokenSymbol\n  const { pTokenAddress } = await perpetualPool.getAddresses()\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\n  const symbolIdList = await pToken.getActiveSymbolIds()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      bTokenSymbol,\n      symbols,\n      symbolIdList,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await perpetualPool.init();\n    const symbolIds = perpetualPool.activeSymbolIds;\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    let symbols = await Promise.all(promises);\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          if (i.direction !== 'LIQUIDATION') {\n            const index = symbolIds.indexOf(i.symbolId);\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              //volume: deriToNatural(i.volume).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              return ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .abs()\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  price: prices[id].toString(),\n                  notional: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n            } else {\n              // handle missing price data\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                price: '',\n                notional: '',\n                //volume: deriToNatural(i.volume).toString(),\n                volume: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          }\n        })\n        .flat();\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      //const { initialBlock } = getPoolConfig2(poolAddress);\n      const initialBlock = 100000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  });\n};\n","// v2 lite\nimport {\n  getLiquidityInfo,\n} from './mining_query_api'\n\nimport {\n  addLiquidity,\n  removeLiquidity,\n} from './mining_transaction_api'\n\nimport {\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  isUnlocked,\n  getWalletBalance,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getFundingRateCache,\n} from './trade_query_api';\n\nimport {\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './trade_transaction_api';\n\nimport { getTradeHistory } from './trade_history_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  //getEstimatedTimePrice,\n  getFundingRateCache,\n\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","import { bg, max, min } from '../../shared/utils';\nimport { contractFactory } from '../../shared/utils';\nimport { getIndexInfo, SECONDS_IN_A_DAY, checkSymbolId } from '../../shared/config';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateLiquidationPrice } from '../../v2/calculation';\nimport { calculateDpmmPrice } from '../calc';\nimport { perpetualPoolLiteDpmmFactory} from './factory';\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\nimport { ObjectCache } from '../../shared/cache';\nimport { ErrorCode } from '../../shared/error/error_code';\nimport { AppError } from '../../shared/error/error';\nimport { calculateShareValue } from '../../v1/calculation';\n\nexport class PoolApi {\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  }\n  async init(isEstimatedApi) {\n    await this.pool.init(isEstimatedApi);\n  }\n\n  // =================\n  //  api\n  // =================\n  async getUserStakeInfo(accountAddress) {\n    const pool = this.pool;\n    const liquidity = await pool.lToken.balanceOf(accountAddress);\n    return {\n      chainId: this.chainId,\n      poolAddress: this.poolAddress,\n      isStaked: bg(liquidity).gt(0),\n      bTokens: [{ isStaked: bg(liquidity).gt(0) }],\n    };\n  }\n  async getLiquidityInfo(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const lToken = pool.lToken;\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n      pool.getPoolLiquidity(),\n      lToken.balanceOf(accountAddress),\n      lToken.totalSupply(),\n    ]);\n    const { poolMarginRatio } = pool.parameters;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const poolDynamicEquity = await pool.getDynamicEquity();\n    const shareValue = bg(lTokenTotalSupply).eq(0)\n      ? '0'\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\n\n    const value = pool.symbols.reduce((acc, s) => {\n      return acc.plus(\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\n      );\n    }, bg(0));\n    const removable = bg(poolDynamicEquity).minus(\n      bg(value).times(poolMarginRatio)\n    );\n\n    ObjectCache.set(this.poolAddress, 'liquidity_info', {\n      lTokenBalance,\n      liquidity: liquidity,\n      shareValue: shareValue,\n      lTokenTotalSupply: lTokenTotalSupply,\n      totalDynamicEquity: poolDynamicEquity,\n    });\n    return {\n      totalSupply: lTokenTotalSupply,\n      poolLiquidity: liquidity,\n      shares: lTokenBalance,\n      shareValue,\n      maxRemovableShares: max(\n        min(\n          bg(lTokenBalance),\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\n        ),\n        bg(0)\n      ),\n    };\n  }\n  async getEstimatedLiquidityInfo(accountAddress, newAmount) {\n    //await this.init();\n    //const pool = this.pool;\n    const res = ObjectCache.get(this.poolAddress, 'liquidity_info');\n    if (res) {\n      const {\n        lTokenBalance,\n        liquidity,\n        shareValue,\n        lTokenTotalSupply,\n        totalDynamicEquity,\n      } = res;\n      return {\n        percentage1: bg(lTokenBalance)\n          .div(shareValue)\n          .plus(newAmount)\n          .div(bg(liquidity).plus(newAmount)),\n        shareValue1: calculateShareValue(\n          bg(lTokenTotalSupply).plus(newAmount),\n          bg(totalDynamicEquity).plus(newAmount)\n        ).toString(),\n      };\n    } else {\n      throw new AppError(ErrorCode.INVALID_CACHE, {\n        name: `${this.poolAddress}.liquidity_info`,\n        data: res,\n      });\n    }\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n    const parameterInfo = pool.parameters;\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbol,\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\n      minLiquidationReward: parameterInfo.minLiquidationReward,\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\n    if (symbolIndex > -1) {\n      const oracleAddress =\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n          ? ''\n          : pool.symbols[symbolIndex].oracleAddress;\n      const [\n        symbols,\n        lastTimestamp,\n        margin,\n        fundingPeriod,\n        price,\n      ] = await Promise.all([\n        pool.getSymbols(),\n        pool.getLastTimestamp(),\n        pool.pToken.getMargin(accountAddress),\n        pool.getFundingPeriod(),\n        getOraclePriceFromCache2.get(\n          this.chainId,\n          pool.symbols[symbolIndex].symbol,\n          oracleAddress\n        ),\n      ]);\n\n      const positions = await pool.getPositions(accountAddress);\n\n      const symbol = symbols[symbolIndex];\n      const position = positions[symbolIndex];\n      // const { volume } = position\n      // const { multiplier, indexPrice } = symbol\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(s.indexPrice)\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(initialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(position.volume)\n        .times(symbol.multiplier)\n        .times(symbol.indexPrice)\n        .times(initialMarginRatio)\n        .abs();\n\n      const unrealizedPnl = positions.reduce((acc, p) => {\n        return acc.plus(bg(p.traderPnl));\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [s.symbol, positions[index].traderPnl];\n      });\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n      const dynamicCost = symbols.reduce((acc, s, index) => {\n        if (index !== parseInt(symbolId)) {\n          return acc.plus(\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n          );\n        } else {\n          return acc;\n        }\n      }, bg(0));\n      const fundingFee = bg(symbol.cumulativeFundingRate)\n        .minus(position.lastCumulativeFundingRate)\n        .plus(\n          bg(symbol.dpmmPrice)\n            .minus(symbol.indexPrice)\n            .times(symbol.multiplier)\n            .div(fundingPeriod)\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n        )\n        .times(position.volume)\n        .toString();\n\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\n\n      // set liquidatePrice cache\n      liquidatePriceCache.set(this.poolAddress, {\n        volume: position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier: symbol.multiplier,\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\n      });\n\n      return {\n        symbol: symbol.symbol,\n        price: price,\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: bg(position.volume).eq(0)\n          ? '0'\n          : bg(position.cost)\n              .div(position.volume)\n              .div(symbol.multiplier)\n              .toString(),\n        margin: margin,\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee,\n        liquidationPrice: calculateLiquidationPrice(\n          position.volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          symbol.multiplier,\n          maintenanceMarginRatio\n        ).toString(),\n      };\n    }\n  }\n\n  async getPositionInfos(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [symbols, lastTimestamp, margin, fundingPeriod] = await Promise.all([\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargin(accountAddress),\n      pool.getFundingPeriod(),\n    ]);\n    const positions = await pool.getPositions(accountAddress);\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions\n      .map((p, index) => {\n        const symbolIndex = index;\n        const symbol = symbols[symbolIndex];\n        const position = positions[symbolIndex];\n        // const { volume } = position\n        // const { multiplier, indexPrice } = symbol\n        const marginHeld = symbols.reduce((acc, s, index) => {\n          return acc.plus(\n            bg(s.indexPrice)\n              .times(s.multiplier)\n              .times(positions[index].volume)\n              .times(initialMarginRatio)\n              .abs()\n          );\n        }, bg(0));\n        const marginHeldBySymbol = bg(position.volume)\n          .times(symbol.multiplier)\n          .times(symbol.indexPrice)\n          .times(initialMarginRatio)\n          .abs();\n        const unrealizedPnl = p.traderPnl;\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\n          if (idx !== index) {\n            return acc.plus(\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n            );\n          } else {\n            return acc;\n          }\n        }, bg(0));\n        const fundingFee = bg(symbol.cumulativeFundingRate)\n          .minus(position.lastCumulativeFundingRate)\n          .plus(\n            bg(symbol.dpmmPrice)\n              .minus(symbol.indexPrice)\n              .times(symbol.multiplier)\n              .div(fundingPeriod)\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n          )\n          .times(position.volume)\n          .toString();\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price: symbol.indexPrice,\n          markPrice: symbol.dpmmPrice.toString(),\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\n          averageEntryPrice: bg(position.volume).eq(0)\n            ? '0'\n            : bg(position.cost)\n                .div(position.volume)\n                .div(symbol.multiplier)\n                .toString(),\n          margin: margin,\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          fundingFee,\n          liquidationPrice: calculateLiquidationPrice(\n            position.volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            symbol.multiplier,\n            maintenanceMarginRatio\n          ).toString(),\n        };\n      })\n      .filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .times(symbol.feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n\n    const liquidity = pool.state.liquidity;\n    return {\n      funding0: bg(symbol.funding).div(symbol.multiplier).toString(),\n      fundingPerSecond: bg(symbol.fundingPerSecond)\n        .div(symbol.multiplier)\n        .toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(symbol.tradersNetVolume)\n        .times(symbol.multiplier)\n        .toString(),\n    };\n  }\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { poolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(poolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { poolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n  async getUserBTokensInfo(accountAddress) {\n    const pool = this.pool\n    const { initialMarginRatio } = pool.parameters;\n    const [balance, margin, symbols] = await Promise.all([\n      pool.bToken.balanceOf(accountAddress),\n      pool.pToken.getMargin(accountAddress),\n      pool.getSymbols(),\n    ]);\n    const positions = await pool.getPositions(accountAddress);\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n    const unrealizedPnl = positions.reduce((acc, p) => {\n      return acc.plus(bg(p.traderPnl));\n    }, bg(0));\n\n    return [{\n      bTokenAddress: pool.addresses.bTokenAddress,\n      bTokenSymbol: pool.bTokenSymbol,\n      availableBalance: bg(margin).minus(marginHeld).plus(unrealizedPnl).toString(),\n      walletBalance: balance,\n    }];\n  }\n\n  // =================\n  // static method\n  // =================\n}\n\nexport const poolApiFactory = contractFactory(PoolApi);\n","import {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n  checkSymbolId,\n  checkTokenId,\n  checkAmount,\n} from '../../shared/config';\nimport { catchApiError } from '../../shared/utils/api';\nimport { bg } from '../../shared/utils';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { calculateDpmmCost } from '../calc';\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getUserStakeInfo(accountAddress);\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init()\n    return await api.getLiquidityInfo(accountAddress);\n  });\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newAmount = checkAmount(newAmount)\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init()\n    return await api.getEstimatedLiquidityInfo(accountAddress, newAmount)\n  })\n}\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getSpecification(symbolId);\n    },\n    args,\n    {\n      // symbol: '',\n      // bTokenSymbol: '',\n      // multiplier: '',\n      // feeRatio: '',\n      // fundingRateCoefficient: '',\n      // minPoolMarginRatio: '',\n      // minInitialMarginRatio: '',\n      // minMaintenanceMarginRatio: '',\n      // minLiquidationReward: '',\n      // maxLiquidationReward: '',\n      // liquidationCutRatio: '',\n      // protocolFeeCollectRatio: '',\n      // indexConstituents: { tokens: [], url: '' },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfo(accountAddress, symbolId);\n    },\n    args,\n    {}\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfos(accountAddress);\n    },\n    args,\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.bToken.balanceOf(accountAddress);\n    },\n    args,\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    false\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const args = [\n    chainId,\n    poolAddress,\n    accountAddress,\n    volume,\n    leverage,\n    symbolId,\n  ];\n  return catchApiError(\n    async (\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    ) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedMargin(\n        accountAddress,\n        volume,\n        leverage,\n        symbolId\n      );\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFee(volume, symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getFundingRate(symbolId);\n    },\n    args,\n    ''\n  );\n};\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getLiquidityUsed(symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      //console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    ''\n  );\n};\n\nexport const getUserBTokensInfo = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getUserBTokensInfo(accountAddress);\n    },\n    [],\n    []\n  );\n};\n","import {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n  catchTxApiError,\n} from '../../shared/utils';\n// import {\n//   getPoolConfig,\n// } from '../../shared/config';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('bTokenSymbol', bTokenSymbol)\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: perpetualPool.bTokenSymbol,\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init();\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId);\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume)\n                .times(perpetualPool.symbols[symbolIndex].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken ? i.baseToken.trim() : '',\n              symbolId: i.symbolId ? i.symbolId : '',\n              symbol: i.symbol ? i.symbol : '',\n              price: i.price ? deriToNatural(i.price).toString() : '',\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\n              volume: i.volume\n                ? deriToNatural(i.volume)\n                    .times(perpetualPool.symbols[symbolIndex].multiplier)\n                    .toString()\n                : '',\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            return null;\n          }\n        })\n        .filter((i) => i != null);\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      //const { initialBlock } = getPoolConfig(poolAddress);\n      const initialBlock = 100000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  });\n};\n","import {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getUserStakeInfo,\n  getLiquidityInfo,\n  getEstimatedLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedTimePrice,\n  getUserBTokensInfo\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n  // getPoolLiquidity,\n  // getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getUserBTokensInfo,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","import { bg, catchTxApiError } from '../../shared/utils';\nimport { checkAmount, checkAddress, checkSymbolId, checkApiInput, checkChainId } from '../../shared/config';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js';\n\n// mining\nexport const addLiquidity = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      chainId = checkChainId(chainId);\n      poolAddress = checkAddress(poolAddress);\n      accountAddress = checkAddress(accountAddress);\n      amount = checkAmount(amount);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.addLiquidity(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.removeLiquidity(accountAddress, amount);\n  }, []);\n};\n\n//trading\nexport const unlock = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.removeMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      newVolume = checkAmount(newVolume);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      const { multiplier } = pool.symbols[symbolIndex];\n      return await pool.trade(\n        accountAddress,\n        symbolId,\n        bg(newVolume).div(multiplier).toString()\n      );\n    },\n    args\n  );\n};\n\nexport const closePosition = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      const { volume } = await pool.pToken.getPosition(\n        accountAddress,\n        symbolId\n      );\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await pool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { ObjectCache } from '../../shared/cache';\nimport { checkAmount, checkApiInput, getPoolConfig } from '../../shared/config';\nimport { AppError } from '../../shared/error/error';\nimport { ErrorCode } from '../../shared/error/error_code';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  [chainId, poolAddress, accountAddress ] = checkApiInput(\n    chainId,\n    poolAddress,\n    accountAddress\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool.init()\n  const lToken = optionPool.lToken\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n\n  const symbols = optionPool.symbols\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  const shareValue = calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString()\n  ObjectCache.set(poolAddress, 'liquidity_info', {\n    lTokenBalance: lTokenBalance.toString(),\n    liquidity: liquidity.toString(),\n    lTokenTotalSupply: lTokenTotalSupply.toString(),\n    totalDynamicEquity: totalDynamicEquity.toString(),\n    shareValue,\n  });\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue,\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    await optionPool.init();\n    const liquidity = await optionPool.lToken.balanceOf(accountAddress);\n    return {\n      chainId,\n      poolAddress,\n      isStaked: bg(liquidity).gt(0),\n      bTokens: [{ isStaked: bg(liquidity).gt(0) }],\n    };\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n  );\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newAmount = checkAmount(newAmount)\n    const res = ObjectCache.get(poolAddress, 'liquidity_info');\n    if (res) {\n      const {\n        lTokenBalance,\n        liquidity,\n        shareValue,\n        lTokenTotalSupply,\n        totalDynamicEquity,\n      } = res;\n      return {\n        percentage1: bg(lTokenBalance)\n          .div(shareValue)\n          .plus(newAmount)\n          .div(bg(liquidity).plus(newAmount)),\n        shareValue1: calculateShareValue(\n          bg(lTokenTotalSupply).plus(newAmount),\n          bg(totalDynamicEquity).plus(newAmount)\n        ).toString(),\n      };\n\n    } else {\n      throw AppError(ErrorCode.INVALID_CACHE, {\n        name: `${poolAddress}.liquidity_info`,\n        data: res,\n      });\n    }\n  })\n}\n","import { checkApiInput } from '../../shared/config';\nimport { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { checkApiInput, checkSymbolId, checkTokenId } from '../../shared/config';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    await optionPool.init()\n    const bToken = optionPool.bToken\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init()\n      const symbolIndex = checkSymbolId(symbolId, optionPool.activeSymbolIds);\n      const { multiplier } = optionPool.symbols[symbolIndex];\n\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(\n          accountAddress,\n          symbolId,\n          bg(newVolume).div(multiplier).toString()\n        );\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init()\n      const pToken = optionPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import {\n  deriToNatural,\n  naturalToDeri,\n  bg,\n  getBlockInfo,\n  getPastEvents,\n  getPastEventsUseAbi,\n  getHttpBase,\n  fetchJson,\n  max,\n  catchApiError,\n} from '../../shared/utils';\nimport { checkApiInput, DeriEnv } from '../../shared/config';\nimport { everlastingOptionFactory } from '../factory/pool';\n//import { optionPricerFactory } from '../factory/tokens';\nimport { everlastingOptionOldAbi } from '../contract/abis';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n  pricer\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId;\n  const volatility = info.volatility;\n  const index = symbolIdList.indexOf(symbolId);\n  const price = bg(tradeCost).div(\n    bg(tradeVolume).times(symbols[index].multiplier)\n  );\n  const indexPrice = deriToNatural(info.spotPrice);\n\n  const intrinsicValue = symbols[index].isCall\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\n  let timeValue = '0';\n  if (intrinsicValue.lte(0)) {\n    const res = await pricer.getEverlastingTimeValueAndDelta(\n      naturalToDeri(indexPrice),\n      naturalToDeri(symbols[index].strikePrice),\n      volatility,\n      naturalToDeri(bg(1).div(365).toString())\n    );\n    timeValue = res.timeValue;\n  }\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      indexPrice: indexPrice.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume\n        .abs()\n        .times(indexPrice)\n        .times(multiplier[index])\n        .toString(),\n      contractValue: tradeVolume\n        .abs()\n        .times(price)\n        .times(multiplier[index])\n        .toString(),\n      transactionFee: intrinsicValue.gt(0)\n        ? volume\n            .times(symbols[index].multiplier)\n            .times(indexPrice)\n            .times(symbols[index].feeRatioITM)\n            .toString()\n        : volume\n            .times(symbols[index].multiplier)\n            .times(timeValue)\n            .times(symbols[index].feeRatioOTM)\n            .toString(),\n      time,\n    };\n  } else {\n    return null;\n  }\n};\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  // const { bTokenSymbol, pricer: pricerAddress } = getPoolConfig(\n  //   poolAddress,\n  //   undefined,\n  //   undefined,\n  //   'option'\n  // );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool.init()\n  const bTokenSymbol = optionPool.bTokenSymbol\n  const pricer = optionPool.pricer\n  const [toBlock] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool.init(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n  // let promises = [];\n  // for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\n  //   promises.push(\n  //     optionPool.getSymbol(optionPool.activeSymbolIds[i].toString())\n  //   );\n  // }\n  //let symbols = await Promise.all(promises);\n  let symbols = optionPool.symbols\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n\n  const filters = { account: accountAddress };\n  let result = [];\n\n  if (DeriEnv.get() === 'testnet') {\n    let events = await getPastEvents(\n      chainId,\n      optionPool.contract,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    //console.log('online events length:', events.length);\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      let res;\n      res = await optionPool.formatTradeEvent(item);\n      if (res) {\n        const symbolIndex = optionPool.activeSymbolIds.indexOf(res.symbolId);\n        result.unshift({\n          baseToken: bTokenSymbol,\n          direction: res.direction,\n          volume: bg(res.volume)\n            .times(optionPool.symbols[symbolIndex].multiplier)\n            .toString(),\n          price: res.price,\n          indexPrice: res.indexPrice,\n          notional: res.notional,\n          symbol: res.symbol,\n          symbolId: res.symbolId,\n          time: res.time,\n          contractValue: res.contractValue,\n          transactionFee: res.transactionFee,\n          transactionHash: res.transactionHash,\n        });\n      }\n    }\n  } else {\n    let events = await getPastEventsUseAbi(\n      chainId,\n      poolAddress,\n      everlastingOptionOldAbi,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    // console.log('old online events length:', events.length, fromBlock, toBlock.number);\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      const res = await processTradeEvent(\n        chainId,\n        item.returnValues,\n        item.blockNumber,\n        item.transactionHash,\n        multiplier,\n        bTokenSymbol,\n        optionPool.activeSymbolIds,\n        symbols,\n        pricer\n      );\n      res && result.unshift(res);\n    }\n  }\n  result = result.filter((tr) => tr !== null);\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    let tradeFromBlock,\n      tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool.init(),\n    ]);\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.symbols;\n    //console.log('history ', tradeHistory)\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId);\n          if (index > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              indexPrice: deriToNatural(i.indexPrice).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              contractValue: deriToNatural(i.contractValue).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              const res = ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .times(symbols[id].multiplier)\n                    .abs()\n                    .toString(),\n                  price: prices[id].toString(),\n                  indexPrice: '',\n                  notional: '',\n                  contractValue: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n              return res;\n            } else {\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                indexPrice: '',\n                notional: '',\n                contractValue: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null;\n          }\n        })\n        .flat();\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null);\n    // fetch tradeHistory on the block with fromBlock from rest api\n    //console.log('tradeFromBlock', tradeFromBlock)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      // const { initialBlock } = getPoolConfig(\n      //   poolAddress,\n      //   undefined,\n      //   symbolId,\n      //   'option'\n      // );\n\n      // todo: will change latet\n      const initialBlock = 10000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  }, [], [])\n};\n","// v2 lite\nimport {\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n} from './mining_query_api'\n\nimport {\n  addLiquidity,\n  removeLiquidity,\n} from './mining_transaction_api'\n\nimport {\n  getSpecification,\n  getPositionInfo,\n  isUnlocked,\n  getWalletBalance,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getFundingRateCache,\n  getPositionInfos,\n  getEstimatedTimePrice,\n  getUserBTokensInfo,\n  //getVolatility,\n} from './trade_query_api'\n\nimport {\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './trade_transaction_api';\n\nimport { getTradeHistory } from './trade_history_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n  //getPoolLiquidity,\n  //getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache,\n  getUserBTokensInfo,\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","\nimport { api as apiV1 } from '../v1/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\nimport { api as apiV2l } from '../v2_lite/api'\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiOption } from '../option/api'\nimport { VERSION_IDS_ALL } from '../shared/config'\n\nexport const api = (versionId) => {\n  const apiMap = {\n    v1: apiV1,\n    v2_dpmm: apiV2Dpmm,\n    v2_lite: apiV2l,\n    v2_lite_open: apiV2l,\n    v2_lite_dpmm: apiV2lDpmm,\n    option: apiOption,\n  };\n  if (VERSION_IDS_ALL.includes(versionId)) {\n    return apiMap[versionId];\n  }\n  return {}\n};\n\nexport const defaultReturnValue = (value = {}) => {\n  return {\n    success: true,\n    response: {\n      data: value,\n    },\n    isDefaultReturnValue: true,\n  };\n};","import { DeriEnv, checkChainId, checkAddress, getLpConfigList } from '../shared/config';\nimport {\n  catchApiError,\n  deriToNatural,\n  getNetworkName,\n  max,\n  bg,\n} from '../shared/utils';\nimport { getLpUserStakeInfo } from '../shared/api';\nimport { databaseFactory } from '../shared/factory';\nimport { AppError } from '../shared/error/error';\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { getPoolConfigList } from './config_api';\n\nimport { api, defaultReturnValue } from './api_shared';\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    // slp and clp\n    const configs = await getLpConfigList()\n    const config = configs.find((c) => c.pool === poolAddress)\n    if (config) {\n      return getLpUserStakeInfo(chainId, poolAddress, accountAddress)\n    } else {\n      return { success: false, response: versionId.response };\n    }\n  }\n  if (api(versionId).getUserStakeInfo) {\n    return api(versionId).getUserStakeInfo(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n  } else {\n    return defaultReturnValue();\n  }\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getLiquidityInfo(\n    chainId,\n    poolAddress,\n    accountAddress,\n    bTokenId\n  );\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedLiquidityInfo(\n    chainId,\n    poolAddress,\n    accountAddress,\n    newAmount,\n    bTokenId,\n  );\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId);\n    poolAddress = checkAddress(poolAddress);\n    let result = await getPoolConfigList(DeriEnv.get());\n    let configs = [];\n    if (result.success) {\n      configs = result.response.data;\n    }\n    // add lp config\n    configs = configs.concat(await getLpConfigList(DeriEnv.get()));\n    const config = configs.find((v) => v.pool === poolAddress);\n    if (!config) {\n      throw new AppError('CONFIG_NOT_FOUND', {\n        name: 'getPoolConfig',\n        args: [DeriEnv.get(), poolAddress],\n      });\n    }\n    const db = databaseFactory();\n    let res;\n    if (config.bTokens.length > 1 && config.type !== 'lp') {\n      const bTokenIds = config.bTokens.map((b) => b.bTokenId);\n      const key = bTokenIds.reduce(\n        (acc, bTokenId) => [\n          ...acc,\n          `${chainId}.${poolAddress}.liquidity${bTokenId}`,\n        ],\n        [`${chainId}.${poolAddress}.liquidity`]\n      );\n      const result = await db.getValues(key);\n      const totalValue = deriToNatural(result[0]).toString();\n      const bTokens = bTokenIds.reduce((acc, bTokenId, index) => {\n        return [\n          ...acc,\n          {\n            bTokenId,\n            liquidity: deriToNatural(result[1 + index]).toString(),\n          },\n        ];\n      }, []);\n      res = {\n        totalValue,\n        bTokens,\n      };\n    } else {\n      const result = await db.getValues([\n        `${chainId}.${poolAddress}.liquidity`,\n      ]);\n      const liquidity = deriToNatural(result[0]).toString();\n      res = {\n        totalValue: liquidity,\n        bTokens: [{ liquidity }],\n      };\n    }\n    return res;\n  });\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId);\n    poolAddress = checkAddress(poolAddress);\n    let result = await getPoolConfigList(DeriEnv.get());\n    let configs = [];\n    if (result.success) {\n      configs = result.response.data;\n    }\n    // add lp config\n    configs = configs.concat(await getLpConfigList(DeriEnv.get()));\n    const config = configs.find((v) => v.pool === poolAddress);\n    if (!config) {\n      throw new AppError('CONFIG_NOT_FOUND', {\n        name: 'getPoolConfig',\n        args: [DeriEnv.get(), poolAddress],\n      });\n    }\n    const db = databaseFactory(true);\n    let res;\n    if (config.bTokens.length > 1 && config.type !== 'lp') {\n      const bTokenIds = config.bTokens.map((b) => b.bTokenId);\n      const key = bTokenIds.reduce(\n        (acc, bTokenId) => [\n          ...acc,\n          ...[\n            `${getNetworkName(chainId)}.${poolAddress}.apy${bTokenId}`,\n            `${getNetworkName(\n              chainId\n            )}.${poolAddress}.V2.multiplier${bTokenId}`,\n          ],\n        ],\n        []\n      );\n      const result = await db.getValues(key);\n      const apys = result.reduce(\n        (acc, a, index) => [\n          ...acc,\n          ...(index % 2 === 0 ? [deriToNatural(a)] : []),\n        ],\n        []\n      );\n      const maxApy = max(...apys).toString();\n      const bTokens = bTokenIds.reduce((acc, bTokenId, index) => {\n        return [\n          ...acc,\n          {\n            bTokenId,\n            apy: deriToNatural(result[index * 2]).toString(),\n            multiplier: deriToNatural(result[index * 2 + 1]).toString(),\n          },\n        ];\n      }, []);\n      res = {\n        maxApy,\n        bTokens,\n      };\n    } else if (config.type === 'lp') {\n      const result = await db.getValues([\n        `${getNetworkName(chainId)}.${poolAddress}.apy`,\n        `${getNetworkName(chainId)}.${poolAddress}.apy2`,\n      ]);\n      const [apy1, apy2] = [\n        deriToNatural(result[0]).toString(),\n        deriToNatural(result[1]).toString(),\n      ];\n      res = {\n        maxApy: max(bg(apy1), bg(apy2)).toString(),\n        bTokens: [{ apy: apy1 }, { apy: apy2 }],\n      };\n    } else {\n      const result = await db.getValues([\n        `${getNetworkName(chainId)}.${poolAddress}.apy`,\n      ]);\n      const apy = deriToNatural(result[0]).toString();\n      res = {\n        maxApy: apy,\n        bTokens: [{ apy, multiplier: '1' }],\n      };\n    }\n    return res;\n  });\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\n// import { LITE_VERSIONS } from '../shared/config';\n// import { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\n\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\n// import { api as apiV2Dpmm } from '../v2_dpmm/api'\n// import { api as apiOption } from '../option/api'\n// import { api as apiV1} from '../v1/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { api } from './api_shared'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).addLiquidity(\n    chainId,\n    poolAddress,\n    accountAddress,\n    amount,\n    bTokenId\n  );\n  // if (LITE_VERSIONS.includes(versionId)) {\n  //   return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  // } else if (versionId === 'option') {\n  //   return apiOption.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (versionId === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (versionId === 'v2_dpmm') {\n  //   return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  // } else if (versionId === 'v1') {\n  //   return apiV1.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  // }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId, isMaximum)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  // } else if (version === 'option') {\n  //   return apiOption.removeLiquidity(chainId, poolAddress, accountAddress, amount, isMaximum)\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.removeLiquidity(chainId, poolAddress, accountAddress, amount);\n  // }\n}\n","// import { bTokenFactory } from '../../shared/factory';\n// import {\n//   getPoolBTokenIdList,\n//   getPoolBTokenList,\n//   getPoolConfig2,\n//   getPoolSymbolIdList,\n//   getPoolSymbolList,\n// } from '../../shared/config';\nimport { bg, min, max, catchApiError, catchTxApiError } from '../../shared/utils'\n// import { getOraclePrice } from '../../shared/utils/oracle'\n// import { getIndexInfo } from '../../shared/config/token';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\n// import { perpetualPoolFactory, pTokenFactory } from '../factory';\n\n// export const getSpecification = async (\n//   chainId,\n//   poolAddress,\n//   symbolId,\n// ) => {\n//   return await catchApiError(async() => {\n//     const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n//     const bTokens = getPoolBTokenList(poolAddress)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const [symbolInfo, parameterInfo] = await Promise.all([\n//       perpetualPool.getSymbol(symbolId),\n//       perpetualPool.getParameters(),\n//     ])\n//     const bTokenDiscounts = (await Promise.all(\n//       bTokens.reduce(\n//         (acc, b, index) =>\n//           acc.concat([perpetualPool.getBToken(index.toString())]),\n//         []\n//       )\n//     )).map((b) => b.discount);\n//     const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n//     const {\n//       minPoolMarginRatio,\n//       minInitialMarginRatio,\n//       minMaintenanceMarginRatio,\n//       minLiquidationReward,\n//       maxLiquidationReward,\n//       liquidationCutRatio,\n//       protocolFeeCollectRatio,\n//     } = parameterInfo\n//     return {\n//       symbol: symbol,\n//       bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n//       bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n//       multiplier: multiplier.toString(),\n//       feeRatio: feeRatio.toString(),\n//       fundingRateCoefficient: fundingRateCoefficient.toString(),\n//       minPoolMarginRatio: minPoolMarginRatio.toString(),\n//       minInitialMarginRatio: minInitialMarginRatio.toString(),\n//       minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n//       //minAddLiquidity: minAddLiquidity.toString(),\n//       //redemptionFeeRatio: redemptionFeeRatio.toString(),\n//       minLiquidationReward: minLiquidationReward.toString(),\n//       maxLiquidationReward: maxLiquidationReward.toString(),\n//       liquidationCutRatio: liquidationCutRatio.toString(),\n//       protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n//       indexConstituents: getIndexInfo(symbol)\n//     }\n\n//   })\n// };\n\n// export const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n//   return await catchApiError(async() => {\n//     const symbolConfigList = getPoolSymbolList(poolAddress)\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\n//     const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n//     const symbolList = symbolConfigList.map((i) => i.symbol)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n//       perpetualPool.getSymbol(symbolId),\n//       perpetualPool.getParameters(),\n//       perpetualPool.getLastUpdatedBlockNumber(),\n//       perpetualPool.getLatestBlockNumber(),\n//       pToken.getPosition(accountAddress, symbolId),\n//       pToken.getMargins(accountAddress),\n//       pToken.getPositions(accountAddress),\n//       getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n//     ])\n//     const { volume, cost, lastCumulativeFundingRate } = positionInfo\n//     const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n//     const {\n//       minInitialMarginRatio,\n//       minMaintenanceMarginRatio,\n//     } = parameterInfo\n//     let promises = []\n//     for (let i=0; i<bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n//     }\n//     const bTokens = await Promise.all(promises)\n//     const margin = bTokens.reduce((accum, a, index) => {\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n//     }, bg(0))\n\n//     promises = []\n//     for (let i=0; i<symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//     }\n//     const symbols = await Promise.all(promises)\n//     promises = []\n//     for (let i=0; i<symbolList.length; i++) {\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\n//     }\n//     const symbolPrices = await Promise.all(promises)\n//     const price = symbolPrices[symbolId]\n//     priceCache.set(poolAddress, symbolId, price)\n//     const marginHeld = symbols.reduce((accum, s, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n//     }, bg(0))\n//     const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n//     //console.log('margin', margin.toString(), marginHeld.toString())\n//     //\n//     //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n//     const unrealizedPnl = symbols.reduce((accum, s, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n//     }, bg(0))\n//     const unrealizedPnlList = symbols.map((s, index) => {\n//       return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n//     })\n\n//     const totalCost = positions.reduce((accum, a) => {\n//       return accum.plus(bg(a.cost))\n//     }, bg(0))\n//     const dynamicCost = symbols.reduce((accum, s, index) => {\n//       if (index !== parseInt(symbolId)) {\n//         return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n//       } else {\n//         return accum\n//       }\n//     }, bg(0))\n//     //console.log('cost', costTotal.toString())\n//     const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n//     const fundingFee = calculateFundingFee(\n//       tradersNetVolume,\n//       latestPrice,\n//       multiplier,\n//       fundingRateCoefficient,\n//       liquidity,\n//       cumulativeFundingRate,\n//       lastCumulativeFundingRate,\n//       lastUpdatedBlockNumber,\n//       latestBlockNumber,\n//       volume,\n//     );\n\n//     // set liquidatePrice cache\n//     liquidatePriceCache.set(poolAddress, {\n//       volume,\n//       margin,\n//       totalCost,\n//       dynamicCost,\n//       price,\n//       multiplier,\n//       minMaintenanceMarginRatio,\n//     });\n//   return {\n//       price: price,\n//       volume: bg(volume).times(multiplier).toString(),\n//       averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n//       margin: margin.toString(),\n//       marginHeld: marginHeld.toString(),\n//       marginHeldBySymbol: marginHeldBySymbol.toString(),\n//       unrealizedPnl: unrealizedPnl.toString(),\n//       unrealizedPnlList,\n//       liquidationPrice: calculateLiquidationPrice(\n//         volume,\n//         margin,\n//         totalCost,\n//         dynamicCost,\n//         multiplier,\n//         minMaintenanceMarginRatio\n//       ).toString(),\n//       fundingFee: fundingFee.toString()\n//     };\n//   })\n// }\n\n// export const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\n//   return await catchTxApiError(async() => {\n//     const symbolConfigList = getPoolSymbolList(poolAddress)\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\n//     const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n//     const symbolList = symbolConfigList.map((i) => i.symbol)\n//     //console.log('bTokenList', bTokenList)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\n//       //perpetualPool.getSymbol(symbolId),\n//       perpetualPool.getParameters(),\n//       perpetualPool.getLastUpdatedBlockNumber(),\n//       perpetualPool.getLatestBlockNumber(),\n//       //pToken.getPosition(accountAddress, symbolId),\n//       pToken.getMargins(accountAddress),\n//       pToken.getPositions(accountAddress),\n//       //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n//     ])\n//     const {\n//       minInitialMarginRatio,\n//       minMaintenanceMarginRatio,\n//     } = parameterInfo\n//     let promises = []\n//     for (let i=0; i<bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n//     }\n//     const bTokens = await Promise.all(promises)\n//     promises = []\n//     for (let i=0; i<symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//     }\n//     const symbols = await Promise.all(promises)\n//     promises = []\n//     for (let i=0; i<symbolList.length; i++) {\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\n//     }\n//     const symbolPrices = await Promise.all(promises)\n\n//     const margin = bTokens.reduce((accum, a, index) => {\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n//     }, bg(0))\n\n//     const marginHeld = symbols.reduce((accum, s, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n//     }, bg(0))\n//     //\n//     // const unrealizedPnlList = symbols.map((s, index) => {\n//     //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n//     // })\n\n//     //console.log('cost', costTotal.toString())\n//     const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n\n//     return positions.map((p, index) => {\n//       const symbol = symbols[index]\n//       const symbolId = symbolIdList[index]\n//       const price = symbolPrices[index]\n//       priceCache.set(poolAddress, symbolId, price)\n//       const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\n//       const { volume, cost, lastCumulativeFundingRate } = p\n//       const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\n//       const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n//       const totalCost = positions.reduce((accum, a) => {\n//         return accum.plus(bg(a.cost))\n//       }, bg(0))\n//       const dynamicCost = symbols.reduce((accum, s, idx) => {\n//         if (idx !== index) {\n//           return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\n//         } else {\n//           return accum\n//         }\n//       }, bg(0))\n//       const fundingFee = calculateFundingFee(\n//         tradersNetVolume,\n//         price,\n//         multiplier,\n//         fundingRateCoefficient,\n//         liquidity,\n//         cumulativeFundingRate,\n//         lastCumulativeFundingRate,\n//         lastUpdatedBlockNumber,\n//         latestBlockNumber,\n//         volume,\n//       );\n//       return {\n//         symbol: symbol.symbol,\n//         symbolId: index.toString(),\n//         price: symbolPrices[index],\n//         volume: bg(p.volume).times(multiplier).toString(),\n//         averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\n//         margin: margin.toString(),\n//         marginHeld: marginHeld.toString(),\n//         marginHeldBySymbol: marginHeldBySymbol.toString(),\n//         //unrealizedPnlList,\n//         unrealizedPnl: unrealizedPnl.toString(),\n//         liquidationPrice: calculateLiquidationPrice(\n//           volume,\n//           margin,\n//           totalCost,\n//           dynamicCost,\n//           multiplier,\n//           minMaintenanceMarginRatio\n//         ).toString(),\n//         fundingFee: fundingFee.toString()\n//       };\n//     }).filter((p) => p.volume !== '0')\n//   }, [], [])\n// }\n\n// export const getWalletBalance = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   bTokenId,\n// ) => {\n//   return await catchApiError(async() => {\n//     const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n//     const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n//     return balance.toString()\n//   }, [], '')\n// }\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(async () => {\n    let {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    } = liquidatePriceCache.get(poolAddress);\n    totalCost = bg(totalCost).plus(\n      bg(newVolume).times(price).times(multiplier)\n    );\n    //console.log(totalCost.toString())\n    return calculateLiquidationPrice(\n      bg(volume).plus(newVolume),\n      margin,\n      totalCost,\n      dynamicCost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString();\n  }, [], '');\n};\n\n// export const isUnlocked = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   bTokenId\n// ) => {\n//   return await catchApiError(async () => {\n//     const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n//     const bToken = bTokenFactory(chainId, bTokenAddress);\n//     return await bToken.isUnlocked(accountAddress, poolAddress);\n//   }, [], false);\n// };\n\n// export const getEstimatedFee = async (\n//   chainId,\n//   poolAddress,\n//   volume,\n//   symbolId\n// ) => {\n//   return await catchApiError(\n//     async () => {\n//       let price = priceCache.get(poolAddress, symbolId);\n//       const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n//       if (!price) {\n//         //price = await getOraclePrice(poolAddress, symbolId)\n//         price = await getOraclePrice(chainId, symbol);\n//         priceCache.set(poolAddress, symbolId, price);\n//       }\n//       let cache = fundingRateCache.get(chainId, poolAddress, symbolId);\n//       if (!cache || !cache.multiplier) {\n//         await _getFundingRate(chainId, poolAddress, symbolId);\n//         cache = fundingRateCache.get(chainId, poolAddress, symbolId);\n//       }\n//       const { multiplier, feeRatio } = cache;\n//       //console.log(volume, price, multiplier, feeRatio)\n//       return bg(volume)\n//         .abs()\n//         .times(price)\n//         .times(multiplier)\n//         .times(feeRatio)\n//         .toString();\n//     },\n//     [],\n//     ''\n//   );\n// };\n\n// export const getEstimatedMargin = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   volume,\n//   leverage,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const [price, symbolInfo] = await Promise.all([\n//       //getOraclePrice(poolAddress, symbolId),\n//       getOraclePrice(chainId, symbol),\n//       perpetualPool.getSymbol(symbolId),\n//     ]);\n//     priceCache.set(poolAddress, symbolId, price);\n//     const { multiplier } = symbolInfo;\n//     //console.log('m',multiplier.toString())\n//     return bg(volume)\n//       .abs()\n//       .times(price)\n//       .times(multiplier)\n//       .div(bg(leverage))\n//       .toString();\n//   });\n// };\n\n// export const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n//   return fundingRateCache.get(chainId, poolAddress, symbolId)\n// }\n\n// const _getFundingRate = async(chainId, poolAddress, symbolId) => {\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n//   const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n//   let bTokenIdList = getPoolBTokenIdList(poolAddress)\n//   let promiseList = []\n//   for (let i=0; i<bTokenIdList.length; i++) {\n//     promiseList.push(perpetualPool.getBToken(i))\n//   }\n//   const bTokenInfoList = await Promise.all(promiseList)\n//   const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n//   //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n//   //console.log('pnl', pnl.toString())\n\n//   const [price, symbolInfo, parameterInfo ] = await Promise.all([\n//     //getOraclePrice(poolAddress, symbolId),\n//     getOraclePrice(chainId, symbol),\n//     perpetualPool.getSymbol(symbolId),\n//     perpetualPool.getParameters(),\n//   ])\n//   priceCache.set(poolAddress, symbolId, price)\n//   const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n//   const { minPoolMarginRatio } = parameterInfo;\n//   const fundingRateArgs = [\n//     tradersNetVolume,\n//     price,\n//     multiplier,\n//     liquidity,\n//     fundingRateCoefficient,\n//   ]\n//   const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n//   const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n//   // const liquidityUsedArgs = [\n//   //   tradersNetVolume,\n//   //   price,\n//   //   multiplier,\n//   //   liquidity,\n//   //   minPoolMarginRatio,\n//   // ]\n//   let symbolIdList = getPoolSymbolIdList(poolAddress)\n//   let promises = []\n//   for (let i=0; i<symbolIdList.length; i++) {\n//     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//   }\n//   const symbols = await Promise.all(promises)\n//   //console.log('margin', margin.toString(), marginHeld.toString())\n//   const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n//     return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n//   }, bg(0))\n\n//   //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n//   const res = {\n//     price,\n//     multiplier: multiplier.toString(),\n//     feeRatio: feeRatio.toString(),\n//     tradersNetVolume: tradersNetVolume.toString(),\n//     liquidity: liquidity.toString(),\n//     //pnl: pnl.toString(),\n//     fundingRateCoefficient: fundingRateCoefficient.toString(),\n//     minPoolMarginRatio: minPoolMarginRatio.toString(),\n//     fundingRatePerBlock: fundingRatePerBlock,\n//     fundingRate: fundingRate,\n//     liquidityUsed: liquidityUsedInAmount.div(liquidity)\n//   }\n//   fundingRateCache.set(chainId, poolAddress, symbolId, res)\n//   return res\n// }\n\n// export const getFundingRate = async (chainId, poolAddress, symbolId) => {\n//   return await catchApiError(async () => {\n//     const res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     const {\n//       fundingRate,\n//       fundingRatePerBlock,\n//       liquidity,\n//       tradersNetVolume,\n//       multiplier,\n//     } = res;\n//     return {\n//       fundingRate0: fundingRate.times(100).toString(),\n//       fundingRatePerBlock: fundingRatePerBlock.toString(),\n//       liquidity: liquidity.toString(),\n//       volume: '-',\n//       tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n//     };\n//   });\n// };\n\n// export const getEstimatedFundingRate = async (\n//   chainId,\n//   poolAddress,\n//   newNetVolume,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n//     if (!res) {\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     }\n//     const args = [\n//       bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n//       res.price,\n//       res.multiplier,\n//       res.liquidity,\n//       res.fundingRateCoefficient,\n//     ];\n//     let fundingRate1 = calculateFundingRate(...args);\n//     fundingRate1 = processFundingRate(chainId, fundingRate1);\n//     return {\n//       fundingRate1: fundingRate1.times(100).toString(),\n//     };\n//   });\n// };\n\n// export const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n//   return await catchApiError(async () => {\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n//     if (!res) {\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     }\n//     return {\n//       liquidityUsed0: res.liquidityUsed.times(100).toString(),\n//     };\n//   });\n// };\n\n// export const getEstimatedLiquidityUsed = async (\n//   chainId,\n//   poolAddress,\n//   newNetVolume,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n//     if (!res) {\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     }\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n//     // const pToken = pTokenFactory(chainId, pTokenAddress);\n//     // const { volume } = pToken.getPosition(accountAddress, symbolId);\n//     let symbolIdList = getPoolSymbolIdList(poolAddress);\n//     let promises = [];\n//     for (let i = 0; i < symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n//     }\n//     const symbols = await Promise.all(promises);\n//     let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n//       if (index === parseInt(symbolId)) {\n//         return accum.plus(\n//           bg(a.price)\n//             .times(a.multiplier)\n//             .times(a.tradersNetVolume.plus(newNetVolume))\n//             .abs()\n//         );\n//       } else {\n//         return accum.plus(\n//           bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs()\n//         );\n//       }\n//     }, bg(0));\n//     //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n//     //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n//     const liquidityUsed1 = liquidityUsed0\n//       .times(res.minPoolMarginRatio)\n//       .div(res.liquidity);\n//     return {\n//       liquidityUsed1: liquidityUsed1.times(100).toString(),\n//     };\n//   });\n// };\n\n\n// export const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n//   return await catchApiError(async() => {\n//     let bTokenList = getPoolBTokenList(poolAddress)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     // let bTokenList = bTokensConfigList.map((i) => {\n//     //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n//     // })\n//     let promiseList = []\n//     for (let i=0; i<bTokenList.length; i++) {\n//       promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n//     }\n//     const resultList = await Promise.all(promiseList)\n//     for (let i=0; i<bTokenList.length; i++) {\n//       bTokenList[i].walletBalance = resultList[i].toString()\n//     }\n\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\n//     const symbolIdList = getPoolSymbolIdList(poolAddress)\n//     const [margins, positions, parameterInfo] = await Promise.all([\n//       pToken.getMargins(accountAddress),\n//       pToken.getPositions(accountAddress),\n//       perpetualPool.getParameters(),\n//     ]);\n//     const { minInitialMarginRatio } = parameterInfo;\n\n//     let promises = []\n//     for (let i=0; i<bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n//     }\n//     const bTokens = await Promise.all(promises)\n//     const margin = bTokens.reduce((accum, a, index) => {\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n//     }, bg(0))\n//     //console.log('margin', margin.toString())\n\n//     promises = []\n//     for (let i=0; i<symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//     }\n//     const symbols = await Promise.all(promises)\n\n//     promises = []\n//     const symbolList = symbols.map((s) => s.symbol)\n//     for (let i=0; i< symbols.length; i++) {\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\n//     }\n//     const symbolPrices = await Promise.all(promises)\n//     //console.log(symbolPrices)\n\n//     const marginHeld = symbols.reduce((accum, a, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n//     }, bg(0))\n//     //console.log('marginHeld', marginHeld.toString())\n\n//     const pnl = symbols.reduce((accum, a, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n//     }, bg(0))\n//     //console.log('pnl', pnl.toString())\n\n//     bTokenList = bTokenList.map((i, index) => {\n//       if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n//         i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n//       } else {\n//         i.availableBalance = '-'\n//       }\n//       return i\n//     })\n//     return bTokenList\n//   }, [], [])\n// }\n\n// export const getFundingFee = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     const symbolConfigList = getPoolSymbolList(poolAddress);\n//     const symbolList = symbolConfigList.map((i) => i.symbol);\n//     const { pToken: pTokenAddress } = getPoolConfig2(\n//       poolAddress,\n//       null,\n//       symbolId\n//     );\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     const [\n//       symbolInfo,\n//       positionInfo,\n//       price,\n//       lastUpdatedBlockNumber,\n//       latestBlockNumber,\n//     ] = await Promise.all([\n//       perpetualPool.getSymbol(symbolId),\n//       pToken.getPosition(accountAddress, symbolId),\n//       getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n//       perpetualPool.getLastUpdatedBlockNumber(),\n//       perpetualPool.getLatestBlockNumber(),\n//     ]);\n//     const { volume, lastCumulativeFundingRate } = positionInfo;\n//     const {\n//       multiplier,\n//       fundingRateCoefficient,\n//       tradersNetVolume,\n//       cumulativeFundingRate,\n//     } = symbolInfo;\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress);\n//     let promises = [];\n//     for (let i = 0; i < bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n//     }\n//     const bTokens = await Promise.all(promises);\n//     const liquidity = bTokens.reduce(\n//       (accum, i) =>\n//         accum.plus(\n//           bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)\n//         ),\n//       bg(0)\n//     );\n//     const fundingFee = calculateFundingFee(\n//       tradersNetVolume,\n//       price,\n//       multiplier,\n//       fundingRateCoefficient,\n//       liquidity,\n//       cumulativeFundingRate,\n//       lastCumulativeFundingRate,\n//       lastUpdatedBlockNumber,\n//       latestBlockNumber,\n//       volume\n//     );\n//     return fundingFee.toString();\n//   }, [], '');\n// };\n","// import {\n//   getPositionInfoV2l,\n//   getPositionInfosV2l,\n//   isUnlockedV2l,\n//   getEstimatedMarginV2l,\n//   getEstimatedFeeV2l,\n//   getEstimatedFundingRateV2l,\n//   getEstimatedLiquidityUsedV2l,\n//   getSpecificationV2l,\n//   getWalletBalanceV2l,\n//   getFundingRateV2l,\n//   getLiquidityUsedV2l,\n//   getFundingRateCacheV2l,\n// } from '../v2_lite/api';\n\n// import { api as apiV1 } from '../v1/api'\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\n// import { api as apiOption } from '../option/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { isDeriUnlocked } from '../shared/api';\nimport { LITE_VERSIONS } from '../shared/config';\n\nimport { getEstimatedLiquidatePriceV2 } from '../v2/api';\n\nimport { api } from './api_shared'\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getSpecification(chainId, poolAddress, symbolId);\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getSpecificationV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getSpecification(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getSpecification(chainId, poolAddress);\n  // }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getPositionInfo(\n    chainId,\n    poolAddress,\n    accountAddress,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getPositionInfo(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getPositionInfo(chainId, poolAddress, accountAddress);\n  // }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getPositionInfos(chainId, poolAddress, accountAddress); \n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getPositionInfosV2l(chainId, poolAddress, accountAddress)\n  // } else if (version === 'option') {\n  //   return apiOption.getPositionInfos(chainId, poolAddress, accountAddress)\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v1') {\n  //   return [\n  //     await apiV1.getPositionInfo(chainId, poolAddress, accountAddress),\n  //   ].filter((p) => p.volume !== '0');\n  // } else {\n  //   // return empty array for v1, v2, v2_lite\n  //   return []\n  // }\n}\nexport const getBTokenBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getWalletBalance(chainId, poolAddress, accountAddress, bTokenId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  // } else if (version === 'option') {\n  //   return apiOption.getWalletBalance(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getWalletBalance(chainId, poolAddress, accountAddress);\n  // }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    // for deri\n    return isDeriUnlocked(chainId, poolAddress);\n  }\n  return api(versionId).isUnlocked(chainId, poolAddress, accountAddress, bTokenId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  // } else if (version === 'option') {\n  //   return apiOption.isUnlocked(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.isUnlocked(chainId, poolAddress, accountAddress);\n  // }\n  // if (accountAddress === undefined) {\n  //   return isDeriUnlocked(chainId, poolAddress);\n  // }\n};\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (version.failed) {\n    return { success: false, response: version.response }\n  }\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  } else if (version === 'option') {\n    // place holder\n    return { success: true, response: { data: '' } };\n  }\n  if (symbolId === undefined) {\n    // place holder\n    return { success: true, response: { data: '' } };\n  } else {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getEstimatedFee(chainId, poolAddress, volume);\n  // }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    volume,\n    leverage,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedMarginV2l(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage\n  //   );\n  // }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getFundingRate(chainId, poolAddress, symbolId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getFundingRateV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getFundingRate(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getFundingRate(\n  //     chainId,\n  //     poolAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getFundingRate(chainId, poolAddress);\n  // }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedFundingRate(\n    chainId,\n    poolAddress,\n    newNetVolume,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedFundingRateV2l(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedFundingRate(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedFundingRate(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getEstimatedFundingRate(chainId, poolAddress, newNetVolume);\n  // }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getLiquidityUsed(chainId, poolAddress, symbolId);\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getLiquidityUsed(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getLiquidityUsed(\n  //     chainId,\n  //     poolAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getLiquidityUsed(chainId, poolAddress);\n  // }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedLiquidityUsed(\n    chainId,\n    poolAddress,\n    newNetVolume,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedLiquidityUsedV2l(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedLiquidityUsed(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedLiquidityUsed(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return api.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume);\n  // }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  if (['v2_lite', 'v2_lite_open', 'option', 'v1'].includes(versionId)) {\n    return api(versionId).getFundingRateCache(chainId, poolAddress, symbolId);\n  }\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getFundingRateCache(chainId, poolAddress, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getFundingRateCache(chainId, poolAddress);\n  // }\n};\n\nexport const getUserBTokensInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  if (['v2_dpmm', 'v2_lite_dpmm', 'option'].includes(versionId)) {\n    return await api(versionId).getUserBTokensInfo(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n  } else {\n    return { success: true, response: { data: [] } };\n  }\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n  ) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  if (['option', 'v2_lite_dpmm', 'v2_dpmm'].includes(versionId)) {\n    return api(versionId).getEstimatedTimePrice(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else {\n    return { success: true, response: { data: '' } };\n  }\n  //   return apiOption.getEstimatedTimePrice(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedTimePrice(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedTimePrice(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else {\n  //   return '';\n  // }\n};","// import { LITE_VERSIONS } from '../shared/config';\n// import {\n//   unlockV2l,\n//   tradeWithMarginV2l,\n//   closePositionV2l,\n//   depositMarginV2l,\n//   withdrawMarginV2l,\n// } from '../v2_lite/api';\n// import { api as apiV1 } from '../v1/api'\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api';\n// import { api as apiV2Dpmm } from '../v2_dpmm/api';\n// import { api as apiOption } from '../option/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { unlockDeri } from '../shared/api';\nimport { api } from './api_shared'\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    // for deri\n    return unlockDeri(chainId, poolAddress);\n    //return { success: false, response: version.response };\n  }\n  return api(versionId).unlock(chainId, poolAddress, accountAddress, bTokenId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return unlockV2l(chainId, poolAddress, accountAddress);\n  // } else if (version === 'option') {\n  //   return apiOption.unlock(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.unlock(chainId, poolAddress, accountAddress);\n  // }\n  // if (accountAddress === undefined) {\n  //   return unlockDeri(chainId, poolAddress);\n  // }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).depositMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    amount,\n    bTokenId,\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  // } else if (version === 'option') {\n  //   return apiOption.depositMargin(chainId, poolAddress, accountAddress, amount);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.depositMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.depositMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     bTokenId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.depositMargin(chainId, poolAddress, accountAddress, amount);\n  // }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  //isMaximum\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).withdrawMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    amount,\n    bTokenId, \n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return withdrawMarginV2l(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     isMaximum\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.withdrawMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     isMaximum\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.withdrawMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.withdrawMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     bTokenId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.withdrawMargin(chainId, poolAddress, accountAddress, amount);\n  // }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).tradeWithMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    newVolume,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return tradeWithMarginV2l(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.tradeWithMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.tradeWithMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.tradeWithMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.tradeWithMargin(chainId, poolAddress, accountAddress, newVolume);\n  // }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).closePosition(\n    chainId,\n    poolAddress,\n    accountAddress,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.closePosition(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.closePosition(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.closePosition(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.closePosition(chainId, poolAddress, accountAddress);\n  // }\n};\n","// import { LITE_VERSIONS } from '../shared/config';\n// import { getTradeHistoryV2l } from '../v2_lite/api';\n\n// import { api as apiV1 } from '../v1/api'\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\n// import { api as apiV2Dpmm } from '../v2_dpmm/api'\n// import { api as apiOption } from '../option/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { api } from './api_shared'\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getTradeHistory(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  // } else if (version === 'v1') {\n  //   return apiV1.getTradeHistory(chainId, poolAddress, accountAddress);\n  // }\n};\n","export const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (\n      (process && process.env && process.env.REACT_APP_REST_SERVER_URL) ||\n      'https://api.deri.finance'\n    );\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (\n      (process && process.env && process.env.REACT_APP_REST_SERVER_URL) ||\n      'https://testnetapi.deri.finance'\n    );\n  }\n};\n","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    // console.log('hit wrapped oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","// v2 lite\nexport * from './perpetual_pool';\nexport * from './l_token';\nexport * from './p_token';\nexport * from './perpetual_pool_lite_viewer';\n","export default __webpack_public_path__ + \"static/media/bsc-logo.a25f983a.svg\";","import { ErrorCode, ErrorMessage, ErrorName } from './error_code';\n\nexport class AppError extends Error {\n  constructor(code, data = {}) {\n    if (Object.values(ErrorCode).includes(code)) {\n      const fullMessage = `${ErrorName[code]}: ${ErrorMessage[code](data)}`;\n      super(fullMessage);\n      this.code = code;\n      this.name = ErrorName[code];\n      this.message = fullMessage;\n      this.data = data;\n    } else {\n      throw new Error(`invalid error code '${code}'`);\n    }\n  }\n  toString() {\n    return this.message;\n  }\n}\n","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","export default __webpack_public_path__ + \"static/media/logo.6909977e.svg\";","export default __webpack_public_path__ + \"static/media/lang-icon.2c64ed51.svg\";","export default __webpack_public_path__ + \"static/media/matemask-logo.70d4a00c.svg\";","import { io } from \"socket.io-client\";\nimport {equalIgnoreCase } from \"../utils/utils\";\n\nclass WebSocket {\n  constructor(){\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\n      transports: ['websocket'],\n      withCredentials: true\n    })\n    this.events = [];\n    this.reconnectListeners = {}\n    this.reconnected = false\n    this.socket.on('connect', () => {\n      console.log('connect')\n      if(this.reconnected){\n        console.log('reconnect and emit reconnect event')\n        this.reconnected = false\n        Object.values(this.reconnectListeners).forEach(callback => callback())\n      }\n      this.events.forEach(event => {\n        this.socket.emit(event[0],event[1]);\n      })\n    })\n    this.socket.on('disconnect',event => {\n      this.reconnected = true\n      console.log('web socket disconnect,will reconnect auto')\n    })\n  }\n\n  addReconnectEvent(id,callback){\n    this.reconnectListeners[id] = callback\n  }\n\n  removeReconnectEvent(id){\n    delete this.reconnectListeners[id]\n  }\n\n\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\n    this.socket.on(listener,data => {\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\n        onMessage(data)\n      }\n    })\n    this.socket.emit(event, params)\n    if(this.findEvent(event,params) === -1){\n      this.events.push([event,params])\n    }\n  }\n\n  findEvent(event,params){\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\n  }\n\n  unsubscribe(event,params = {}){\n    this.socket.emit(event,params)\n    const pos = this.findEvent(event,params)\n    this.events.splice(pos,1)\n  }\n}\nexport default new WebSocket()","import { DeriEnv } from '../config/env';\nimport { DEBUG, REST_API_CALL_RETRY } from '../config/constant';\nimport { getRestServerConfig } from '../config/rest_server';\nimport { AppError } from '../error/error';\n\n// get REST HTTP Base url\nexport const getHttpBase = (env) => {\n  return getRestServerConfig(env || DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  let retry = REST_API_CALL_RETRY\n  while (retry > 0) {\n    try {\n      const resp = await fetch(url);\n      return await resp.json();\n    } catch (err) {\n      DEBUG && console.log(err)\n      retry -= 1\n    }\n  }\n  if (retry === 0) {\n    throw new AppError('JSON_RPC_CALL_TIMEOUT', {\n      name: 'fetchJson',\n      args: [url],\n    });\n  }\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchSyncApiError = (func, args = [], defaultValue = {}) => {\n  let res;\n  try {\n    const result = func(...args);\n    res = { success: true, response: { data: result } };\n  } catch (err) {\n    DEBUG && console.log(err);\n    res = {\n      success: false,\n      response: {\n        data: defaultValue,\n        error: { code: err.code, message: err.message },\n      },\n    };\n  }\n  return res;\n};\n\nexport const catchApiError = async (func, args = [], defaultValue = {}) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, response: { data: result } };\n  } catch (err) {\n    DEBUG && console.log(err);\n    let error\n    // error wrapper\n    if (err.message.startsWith('Invalid JSON RPC response:')) {\n      error = new AppError('INVALID_JSON_RPC_RESPONSE')\n    } else {\n      error = err\n    }\n    res = {\n      success: false,\n      response: {\n        data: defaultValue,\n        error: { code: error.code, message: error.message },\n      },\n    };\n  }\n  return res;\n};\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args = []) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, response: { data: result } };\n  } catch (err) {\n    const message = err.errorMessage || err.message || 'Transaction failed';\n    res = { success: false, response: { error: message } };\n  }\n  return res;\n};\n","import './spinner.less'\nexport default function Spinner(){\n  \n  return (\n    <div className='spinner-border'/>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { PRIMARY, SECONDARY } from '../../utils/Constants';\nimport classNames from 'classnames';\nimport Spinner from '../Spinner/Spinner';\nimport Icon from '../Icon/Icon';\nconst Wrapper = styled.div`\n    display : flex;\n    align-items : center;\n    justify-content: center;\n    border-radius: 4px;\n    background-color : ${props => props.backgroundColor};\n    font-size : ${props => props.fontSize}px;\n    font-weight : ${props => props.fontWeight};\n    color : ${props => props.fontColor};\n    width : ${props => props.width}px;\n    border: ${props => props.borderSize}px solid ${props => props.defaultBorderColor};\n    border : 1px solid ${props => props.backgroundColor};\n    height : ${props => props.height}px;\n    &:hover {\n      border : 1px solid ${props => props.borderColor};\n      cursor: pointer;\n    }\n    &.selected {\n      border : 1px solid ${props => props.borderColor};\n    }\n  `  \nexport default function Button({label,fontColor = '#E0ECFF',type = PRIMARY,bgColor,defaultBorderColor = '#203B60',borderSize = 1, outline = false,isSelected = false,outlineColor = '#CD7A37',icon ,onClick,width = 158,fontSize = 14,fontWeight = 'normal',height = 48,className,styles = {}}){\n  const [pending, setPending] = useState(false)\n  let backgroundColor ;\n  if(bgColor) {\n    backgroundColor = bgColor;\n  } else if(type === PRIMARY) {\n    backgroundColor = '#3756CD';\n  } else if(type === SECONDARY){\n    backgroundColor = '#203B60' \n  }\n  const borderColor = outline ? outlineColor : 'none';\n  \n  const click = async () => {\n    if(onClick && !pending){\n      setPending(true);\n      const result = await onClick();\n      setPending(false)\n    }\n  }\n  const clazz = classNames(className,{\n    selected : isSelected\n  })\n  return (\n    <Wrapper borderColor={borderColor} \n            backgroundColor={backgroundColor} \n            fontColor={fontColor} \n            fontSize={fontSize} \n            fontWeight={fontWeight} \n            width={width} \n            height={height} className={clazz} style={{...styles}} onClick={click}>\n      {icon && <Icon token={icon}/>}{pending && <Spinner/>}{label}\n    </Wrapper>\n  )\n}","import Web3 from 'web3';\nimport { DeriEnv, Env } from './env';\nimport { getChainIds } from './chain';\nimport { AppError } from '../error/error';\nimport { VERSIONS_ALL, VERSION_IDS_ALL } from './version';\n\nconst toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const checkEnv = (env) => {\n  if (env == null) {\n    return DeriEnv.get()\n  } else if (Object.values(Env).includes(env)) {\n    return env\n  }\n  throw new AppError('INVALID_DERI_ENV', env)\n}\n\nexport const checkChainId = (chainId) => {\n  chainId = chainId != null ? chainId.toString() : chainId \n  if (getChainIds().includes(chainId)) {\n    return chainId;\n  }\n  throw new AppError('INVALID_CHAIN_ID', chainId);\n};\n\nexport const checkAddress = (address) => {\n  address = address != null ? address.toString() : address\n  try {\n    return toChecksumAddress(address)\n  } catch(err) {\n    // console.log('-- checkAddress(): ', err)\n    throw new AppError('INVALID_ADDRESS', address);\n  }\n}\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\n  return [\n    checkChainId(chainId),\n    checkAddress(poolAddress),\n    checkAddress(accountAddress),\n  ];\n};\n\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\n  return [checkChainId(chainId), checkAddress(poolAddress)];\n};\n\nexport const checkTokenId = (tokenId) => {\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\n  if (/^\\d+$/.test(tokenId)) {\n    return tokenId\n  }\n  throw new AppError('INVALID_TOKEN_ID', tokenId);\n}\n\nexport const checkTokenIdInRange = (tokenId, tokenIds, name='symbol id') => {\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\n  if (tokenId != null) {\n    const index = tokenIds.indexOf(tokenId.toString())\n    if (index > -1) {\n      return tokenId\n    }\n  }\n  throw new AppError('INVALID_TOKEN_ID_IN_RANGE', {tokenId, tokenIds, name});\n};\nexport const checkSymbolId = checkTokenIdInRange\n\nexport const checkAmount = (amount) => {\n  amount = amount != null ? amount.toString() : amount\n  if (/^-?[\\d\\.]+$/.test(amount)) {\n    return amount\n  }\n  throw new AppError('INVALID_AMOUNT',amount)\n}\n\nexport const checkVersion = (version) => {\n  if (version == null || !VERSIONS_ALL.includes(version)) {\n    throw new AppError('INVALID_VERSION', version);\n  }\n  return version;\n};\n\nexport const checkVersionId = (versionId) => {\n  if (versionId == null || !VERSION_IDS_ALL.includes(versionId)) {\n    throw new AppError('INVALID_VERSION_ID', versionId);\n  }\n  return versionId;\n};\n","import { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray]);\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nimport config from '../config.json'\n\nimport {\n  DeriEnv,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getUserInfoAll,\n  getLiquidityInfo\n} from '../lib/web3js/index'\nimport Type from '../model/Type';\nconst versionKey = 'deri-current-version'\n\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\n\nexport function bg(value, base = 0) {\n  if (base === 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function firstLetterUppercase(str){\n  return str && str.replace(/^\\S/, s => s.toUpperCase());\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function convertToInternationalCurrencySystem (labelValue) {\n  \n  // Nine Zeroes for Billions\n  return Number.isNaN(labelValue) ? ''\n  : Math.abs(Number(labelValue)) >= 1.0e+9\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\n  // Six Zeroes for Millions \n  : Math.abs(Number(labelValue)) >= 1.0e+6\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\n  // Three Zeroes for Thousands\n  : Math.abs(Number(labelValue)) >= 1.0e+3\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\n\n  : Math.abs(Number(labelValue).toFixed(2));\n\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  symbol = symbol.toUpperCase();\n  const curChain = restoreChain();\n  const chain = curChain && curChain.code ? curChain.code.toUpperCase() : 'BSC'\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    }\n    return  `${symbol}_V2_${chain}`\n  } else {\n    if(version.isV1){\n      return symbol\n    } else {\n      if(symbol.indexOf('MARKPRICE') !== -1) {\n        return symbol;\n      } else {\n        return `${symbol}_V2_${chain}`\n      }\n    }\n  }\n}\n\nexport function getDefaultNw(env){\n  return getNetworkList(env).find(network => network.isDefault) || {}\n}\n\nexport function getNetworkList(env){\n  const chainInfo = config[env]['chainInfo']\n  const ids = Object.keys(chainInfo);\n  return ids.map(id => Object.assign(chainInfo[id],{id}))\n}\n\n\n//\n// export function formatSymbolInputParam(symbol,spec){\n//   const curChain = restoreChain();\n//   const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n//   const baseToken = Array.isArray(spec.bTokenSymbol) ? spec.bTokenSymbol[0] : spec.bTokenSymbol\n//   if(type.isFuture){\n//     return {\n//       indexPrice : version.isV1 ? symbol : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_${chain}_FUTURE_${version.zone}_${baseToken}`\n//     }\n//   } else {\n//     return {\n//       indexPrice : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_V2_${chain}`\n//     }\n//   }\n// }\n\nexport function getMarkpriceSymbol(pool){\n  const curChain = restoreChain();\n  // const chain = curChain && curChain.code ? curChain.code.toUpperCase() : 'BSC'\n  const baseToken = Array.isArray(pool.bTokens) ? pool.bTokens[0].bTokenSymbol : config.bTokenSymbol\n  if(pool.isOption) {\n    return `${config.symbol}-MARKPRICE`\n  }  else {\n    return `MARKPRICE_${pool.selectedSymbol.symbol}_${pool.chain}_${Type.current}_${pool.zone}_${baseToken}`.toUpperCase()\n  }\n}\n\n\n\nexport function equalIgnoreCase(str1,str2){\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 200\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 200\n  }\n  return [from,to]\n \n}\n\nexport function groupByNetwork(pools){\n  const all = []\n  pools.reduce((total, pool) => {\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\n    if (find && find.list.length < 5) {\n      find['list'].push(pool)\n    } else {\n      const poolInfo = {\n        pool: {\n          network: pool.network,\n          symbol: pool.symbol,\n          address: pool.address,\n          formatAdd: pool.formatAdd,\n          version: pool.version,\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n          chainId: pool.chainId,\n          airdrop: pool.airdrop,\n          type: pool.type,\n          bTokenSymbol: pool.bTokenSymbol,\n          bTokenId: pool.bTokenId,\n          symbolId: pool.symbolId\n        },\n        list: [pool]\n      }\n      total.push(poolInfo)\n    }\n    return total;\n  }, all)\n  return all;\n}\n\nexport function combineSymbolfromPoolConfig(configs){\n  return configs.reduce((total,config) => {\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \n        && pos > -1) {\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\n        total[pos].symbol += `,${config.symbol}` \n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\n        total.push(config)\n      }\n    } else{\n      total.push(config)\n    }\n    return total;\n  },[]);\n}\n\nexport async function mapPoolInfo(config,wallet,chainInfo){\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n  const pool = config.pool || ''\n  const item = { \n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n    // liquidity : liqPool.liquidity,\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\n    formatAdd : formatAddress(pool),\n    address : pool,\n    type : 'perpetual',\n    buttonText : 'STAKING',\n    multiplier : 1\n  }\n  // if(wallet && wallet.isConnected()){\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\n  //   if(info){\n  //     item['pnl'] = info.pnl\n  //   }\n  //   if(claimInfo){\n  //     item['claimed'] = claimInfo.total;\n  //     item['unclaimed'] = claimInfo.amount\n  //   }\n  // }\n\n  return Object.assign(config,item)\n\n}\n\nexport function greaterThan(param1,param2){\n  return (+param1) > (+param2)\n}\n\nexport function percentTimesAmount(percent,value){\n  const unPercent = percent.slice(0,-1) / 100 \n  return unPercent * value\n}\n\n\n\n","import { AppError } from \"../error/error\";\n\n// export let Env;\n// (function (Env) {\n//   Env[\"PROD\"] = \"prod\";\n//   Env[\"DEV\"] = \"dev\";\n//   Env[\"TESTNET\"] = \"testnet\";\n// })(Env || (Env = {}));\n\nexport const Env = {\n  PROD: 'prod',\n  TESTNET: 'testnet',\n  DEV: 'dev',\n};\nObject.freeze(Env);\n\nexport const DeriEnv = (function(Env) {\n  let _env = Env.DEV\n  return {\n    get() {\n      return _env\n    },\n    set(env) {\n      if (Object.values(Env).includes(env)) {\n        _env = env\n      } else {\n        throw new AppError('INVALID_DERI_ENV', env)\n      }\n    }\n  }\n})(Env)\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared/contract';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = 'future';\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","export default __webpack_public_path__ + \"static/media/close-modal-icon.0c923558.svg\";","export default __webpack_public_path__ + \"static/media/ethereum.017d2801.svg\";","export default __webpack_public_path__ + \"static/media/polygon-logo.cdeb3583.svg\";","export default __webpack_public_path__ + \"static/media/rate-down-icon.6c08a648.svg\";","export default __webpack_public_path__ + \"static/media/btc-icon.db6e15a8.svg\";","export default __webpack_public_path__ + \"static/media/btc.b3f0e933.svg\";","export default __webpack_public_path__ + \"static/media/gauge-graph.5143be85.svg\";","export default __webpack_public_path__ + \"static/media/rate-up-icon.981f328a.svg\";","import * as api from \"../lib/web3js/index\";\n\nclass ApiProxy {\n  async request(method,params=[],options = {}){\n    const res = await api[method].call(this,...params)\n    if(options.includeResponse){\n      if(res && res.response){\n        return res\n      } \n    } else {\n      if(res && res.response){\n        return res.response.data\n      } \n    }\n    return res\n  }\n}\nexport default new ApiProxy();","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value) => bg(value, -18).toString()\n\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n// == contract gen\n// export const deleteIndexedKey = (obj) => {\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\n//     const keys = Object.keys(obj);\n//     const intKeyCount = keys.reduce(\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\n//       0\n//     );\n//     if (intKeyCount * 2 === keys.length) {\n//       let newObj = {};\n//       Object.keys(obj).forEach((k) => {\n//         if (!intRegex.test(k)) {\n//           newObj[k] = obj[k];\n//         }\n//       });\n//       return newObj;\n//     }\n//     return obj;\n//   } else {\n//     return obj;\n//   }\n// };\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(b) - parseInt(a));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","// this file is generated by script, don't modify it !!!\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\nimport { bg } from \"../../shared/utils/index.js\";\nimport { MAX_UINT256} from '../config'\nimport { PancakePair } from \"./gen/PancakePair.js\";\n\nconst isUnlocked = (klass) => {\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\n    const allowance = await this.allowance(accountAddress, poolAddress)\n    //console.log(accountAddress, poolAddress)\n    const res = bg(allowance).gt(0)\n    return res\n  };\n  return klass\n};\n\nconst unlock = (klass) => {\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  };\n  return klass;\n};\n\nconst getPrice = (klass) => {\n  klass.prototype['getPrice'] = async function () {\n    if (this.contractAddress === '0xE1cC9FCF36f60479F21ACcB3E23Cb2B608679f4d') {\n      return '1';\n    }\n    const [\n      isQuoteToken0,\n      qDecimals,\n      bDecimals,\n      pair,\n      priceCumulativeLast1,\n      priceCumulativeLast2,\n      timestampLast1,\n      timestampLast2,\n    ] = await Promise.all([\n      this.isQuoteToken0(),\n      this.qDecimals(),\n      this.bDecimals(),\n      this.pair(),\n      this.priceCumulativeLast1(),\n      this.priceCumulativeLast2(),\n      this.timestampLast1(),\n      this.timestampLast2(),\n    ]);\n\n    const pancakePair = new PancakePair(this.chainId, pair);\n    let reserveQ, reserveB, timestamp;\n    if (isQuoteToken0) {\n      const res = await pancakePair.getReserves();\n      reserveQ = res._reserve0;\n      reserveB = res._reserve1;\n      timestamp = res._blockTimestampLast;\n    } else {\n      const res = await pancakePair.getReserves();\n      reserveB = res._reserve0;\n      reserveQ = res._reserve1;\n      timestamp = res._blockTimestampLast;\n    }\n    const [price0CumulativeLast, price1CumulativeLast] = await Promise.all([\n      pancakePair.price0CumulativeLast(),\n      pancakePair.price1CumulativeLast(),\n    ]);\n    let tmpPairState = {};\n\n    if (timestamp !== timestampLast2) {\n      tmpPairState.priceCumulativeLast1 = priceCumulativeLast2;\n      tmpPairState.timestampLast1 = timestampLast2;\n      tmpPairState.priceCumulativeLast2 = isQuoteToken0\n        ? price0CumulativeLast\n        : price1CumulativeLast;\n      tmpPairState.timestampLast2 = timestamp;\n    } else {\n      tmpPairState = {\n        priceCumulativeLast1,\n        priceCumulativeLast2,\n        timestampLast1,\n        timestampLast2,\n      };\n    }\n\n    let price;\n    const diff = bg(qDecimals).minus(bDecimals);\n    if (tmpPairState.timestampLast1 !== '0') {\n      //console.log('not equal')\n      price = bg(tmpPairState.priceCumulativeLast2)\n        .minus(tmpPairState.priceCumulativeLast1)\n        .div(bg(tmpPairState.timestampLast2).minus(tmpPairState.timestampLast1))\n        .times(bg(10).pow(diff))\n        .div(bg(2).pow(112));\n    } else {\n      //console.log('equal')\n      price = bg(reserveB).times(bg(10).pow(diff)).div(reserveQ).toString();\n    }\n    return price;\n  };\n  return klass\n}\n\nexport const ERC20Adapter = (klass) => {\n    klass = processMethod(klass, 'totalSupply');\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\n\n    klass = isUnlocked(klass);\n    klass = unlock(klass);\n    return klass\n}\n\nexport const chainlinkOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainVolatilityOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getVolatility');\n    klass = processMethod(klass, 'volatility');\n    return klass\n}\n\nexport const bTokenOracle1Adapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  klass = getPrice(klass);\n  return klass;\n};\n\n// export const bTokenSwapper1Adapter = (klass) => {\n//   //klass = processMethod(klass, 'getPrice');\n//   return klass;\n// };\n\nexport const pancakePairAdapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const pancakePairAbi = [\n  {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Burn\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Swap\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve0\",\n        \"type\": \"uint112\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve1\",\n        \"type\": \"uint112\"\n      }\n    ],\n    \"name\": \"Sync\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"DOMAIN_SEPARATOR\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"MINIMUM_LIQUIDITY\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"PERMIT_TYPEHASH\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"burn\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"factory\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getReserves\",\n    \"outputs\": [\n      { \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" },\n      { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"_blockTimestampLast\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }\n    ],\n    \"name\": \"initialize\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"kLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"mint\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"nonces\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" },\n      { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" },\n      { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }\n    ],\n    \"name\": \"permit\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price0CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price1CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"skim\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }\n    ],\n    \"name\": \"swap\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"sync\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token0\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token1\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pancakePairAbi } from '../abi/pancakePairAbi.js'\n\nexport class PancakePair extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pancakePairAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async DOMAIN_SEPARATOR() {\n  //    const res = await this._call('DOMAIN_SEPARATOR', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async MINIMUM_LIQUIDITY() {\n  //    const res = await this._call('MINIMUM_LIQUIDITY', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async PERMIT_TYPEHASH() {\n  //    const res = await this._call('PERMIT_TYPEHASH', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async allowance(, ) {\n  //    const res = await this._call('allowance', [, ])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async balanceOf() {\n  //    const res = await this._call('balanceOf', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async factory() {\n  //    const res = await this._call('factory', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getReserves() {\n    const res = await this._call('getReserves', [])\n    return deleteIndexedKey(res)\n  }\n  //  async kLast() {\n  //    const res = await this._call('kLast', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  //  async nonces() {\n  //    const res = await this._call('nonces', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async price0CumulativeLast() {\n    const res = await this._call('price0CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  async price1CumulativeLast() {\n    const res = await this._call('price1CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token0() {\n  //    const res = await this._call('token0', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token1() {\n  //    const res = await this._call('token1', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, value) {\n  //    return await this._transact('approve', [spender, value], accountAddress)\n  //  }\n  //  async burn(accountAddress, to) {\n  //    return await this._transact('burn', [to], accountAddress)\n  //  }\n  //  async initialize(accountAddress, _token0, _token1) {\n  //    return await this._transact('initialize', [_token0, _token1], accountAddress)\n  //  }\n  //  async mint(accountAddress, to) {\n  //    return await this._transact('mint', [to], accountAddress)\n  //  }\n  //  async permit(accountAddress, owner, spender, value, deadline, v, r, s) {\n  //    return await this._transact('permit', [owner, spender, value, deadline, v, r, s], accountAddress)\n  //  }\n  //  async skim(accountAddress, to) {\n  //    return await this._transact('skim', [to], accountAddress)\n  //  }\n  //  async swap(accountAddress, amount0Out, amount1Out, to, data) {\n  //    return await this._transact('swap', [amount0Out, amount1Out, to, data], accountAddress)\n  //  }\n  //  async sync(accountAddress) {\n  //    return await this._transact('sync', [], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, value) {\n  //    return await this._transact('transfer', [to, value], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, value) {\n  //    return await this._transact('transferFrom', [from, to, value], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const TERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress, account, amount) {\n    return await this._transact('mint', [account, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const ERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\n\nexport class ERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, ERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals).toString();\n  }\n\n   async decimals() {\n     const res = await this._call('decimals', [])\n     return deleteIndexedKey(res)\n   }\n   async name() {\n     const res = await this._call('name', [])\n     return deleteIndexedKey(res)\n   }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const chainlinkOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"feed_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feedDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\n\nexport class ChainlinkOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, chainlinkOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feed() {\n  //    const res = await this._call('feed', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feedDecimals() {\n  //    const res = await this._call('feedDecimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n\n\n}","// this file is generated by script, don't modify it !!!\nexport const offChainOracleAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'symbol_',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'signer_',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'delayAllowance_',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'delayAllowance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'price',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'delayAllowance_',\n        type: 'uint256',\n      },\n    ],\n    name: 'setDelayAllowance',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'signer_',\n        type: 'address',\n      },\n    ],\n    name: 'setSigner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'signer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'timestamp',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'timestamp_',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'price_',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint8',\n        name: 'v_',\n        type: 'uint8',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'r_',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 's_',\n        type: 'bytes32',\n      },\n    ],\n    name: 'updatePrice',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  // for old offchain oracle\n  {\n    inputs: [],\n    name: 'signatory',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\n\nexport class OffChainOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  //  async price() {\n  //    const res = await this._call('price', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async signer() {\n    await this._init()\n    //const res = await this._call('signer', [])\n    const res = await this.contract.methods.signer().call()\n    return deleteIndexedKey(res)\n  }\n  // for old offchain oracle\n  async signatory() {\n    await this._init()\n    //const res = await this._call('signatory',[])\n    const res = await this.contract.methods.signatory().call()\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const offChainVolatilityOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"delayAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getVolatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setDelayAllowance\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSigner\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"signer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"volatility_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r_\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s_\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"updateVolatility\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"volatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\n\nexport class OffChainVolatilityOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getVolatility() {\n    const res = await this._call('getVolatility', [])\n    return deleteIndexedKey(res)\n  }\n  async signer() {\n    const res = await this._call('signer', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n   async volatility() {\n     const res = await this._call('volatility', [])\n     return deleteIndexedKey(res)\n   }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const TERC20MintLimitAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerBurn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerMint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintAmount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mintTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintAmount\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\n\nexport class TERC20MintLimit extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20MintLimitAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf() {\n    return await this._call('balanceOf', [])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async mintAmount() {\n  //    const res = await this._call('mintAmount', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintPeriod() {\n  //    const res = await this._call('mintPeriod', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintTimestamp() {\n  //    const res = await this._call('mintTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress) {\n  //    return await this._transact('burn', [], accountAddress)\n  //  }\n  //  async controllerBurn(accountAddress, account, amount) {\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\n  //  }\n  //  async controllerMint(accountAddress, account, amount) {\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async setMintAmount(accountAddress, amount) {\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\n  //  }\n  //  async setMintPeriod(accountAddress, period) {\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const bTokenOracle1Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pair_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"quote_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"base_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isQuoteToken0_\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"bDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"base\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isQuoteToken0\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pair\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"qDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"quote\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { bTokenOracle1Abi } from '../abi/bTokenOracle1Abi.js'\n\nexport class BTokenOracle1 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, bTokenOracle1Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async bDecimals() {\n    const res = await this._call('bDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async base() {\n  //    const res = await this._call('base', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isQuoteToken0() {\n    const res = await this._call('isQuoteToken0', [])\n    return deleteIndexedKey(res)\n  }\n  async pair() {\n    const res = await this._call('pair', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast1() {\n    const res = await this._call('priceCumulativeLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast2() {\n    const res = await this._call('priceCumulativeLast2', [])\n    return deleteIndexedKey(res)\n  }\n  async qDecimals() {\n    const res = await this._call('qDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async quote() {\n  //    const res = await this._call('quote', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async timestampLast1() {\n    const res = await this._call('timestampLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async timestampLast2() {\n    const res = await this._call('timestampLast2', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async getPrice(accountAddress) {\n  //    return await this._transact('getPrice', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\nimport {\n  ERC20Adapter,\n  chainlinkOracleAdapter,\n  offChainOracleAdapter,\n  offChainVolatilityOracleAdapter,\n  pancakePairAdapter,\n  bTokenOracle1Adapter,\n} from './adapter.js';\n\nimport { TERC20 } from './gen/TERC20.js';\nimport { ERC20 } from './gen/ERC20.js';\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\nimport { OffChainOracle} from './gen/OffChainOracle.js';\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\n//import { BTokenSwapper1 } from './gen/BTokenSwapper1.js';\nimport { PancakePair } from './gen/PancakePair.js';\nimport { BTokenOracle1 } from './gen/BTokenOracle1.js';\n\n// ERC20\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\nexport const bTokenFactory = ERC20Factory\n\n\n// oracle\n// export const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\n// export const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\n// export const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\nexport const chainlinkOracleFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\nexport const offChainVolatilityOracleFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\n\n// swapper\nexport const bTokenOracle1Factory = contractFactory(bTokenOracle1Adapter(BTokenOracle1))\n//export const bTokenSwapper1Factory = contractFactory(bTokenSwapper1Adapter(BTokenSwapper1))\nexport const pancakePairFactory = contractFactory(pancakePairAdapter(PancakePair))\n\n","import { DeriEnv, Env } from './env';\nimport { checkChainId, checkEnv } from './check';\nimport { AppError } from '../error/error';\n\nexport const getPoolV1ConfigList = (env) => {\n  env = checkEnv(env);\n  if (env === Env.PROD) {\n    return [\n      {\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n    ];\n  } else if (env === Env.DEV) {\n    return [\n      {\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n        initialBlock: '9378545',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '97',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'dev',\n        chain: 'bsctestnet',\n        retired: true,\n      },\n    ];\n  } else if (env === Env.TESTNET) {\n    return [];\n  }\n};\n\nexport const getLpConfigList = async(env) => {\n  env = checkEnv(env);\n  if (env === Env.PROD) {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        bTokens: [{ bTokenSymbol: 'DERI' }, { bTokenSymbol: 'USDT' }],\n        symbol: '--',\n        type: 'lp',\n        version: 'slp',\n        isLp: true,\n      },\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        bTokens: [{ bTokenSymbol: 'DERI' }, { bTokenSymbol: 'BUSD' }],\n        symbol: '--',\n        type: 'lp',\n        version: 'clp',\n        isLp: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getMiningVaultRouterConfig',\n    args: [chainId],\n  });\n};\n\nexport const getDeriConfigList = async(env) => {\n  env = checkEnv(env)\n  if (env === Env.PROD) {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = async(env) => {\n  env = checkEnv(env)\n  if (env === Env.PROD) {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getLpConfig = async(chainId, poolAddress) => {\n  chainId = checkChainId(chainId);\n  const pools = (await getLpConfigList(DeriEnv.get())).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.find((p) => p.pool === poolAddress);\n  if (pool) {\n    return {\n      poolAddress: pool.pool,\n      bTokenAddress: pool.bToken,\n      lTokenAddress: pool.lToken,\n      type: pool.type,\n      version: pool.version,\n    };\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getLpConfig',\n    args: [chainId, poolAddress],\n  });\n};\n\nexport const getDeriConfig = async(env, chainId) => {\n  env = checkEnv(env);\n  chainId = checkChainId(chainId);\n  const pool = (await getDeriConfigList(env)).filter((c) => c.chainId === chainId);\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getDeriConfig',\n    args: [env, chainId],\n  });\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = checkChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getMiningVaultConfi',\n    args: [chainId],\n  });\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = checkChainId(chainId);\n  const env = DeriEnv.get();\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getPoolV1Config',\n    args: [chainId, poolAddress],\n  });\n};\n","// for convert\nconst bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\n// for convert\nconst symbolPairs = {\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n};\n\n// todo: it's old, will clean later\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n  AGLDUSDT: 'AGLDUSDT',\n  SHIBUSDT: 'SHIBUSDT',\n};\n\nconst symbolDecimalPairs = {\n  'BTCUSD-40000-P': '5',\n  SHIBUSDT: '6',\n};\n\nexport const getSymbolDecimals = (symbol) => {\n  if (Object.keys(symbolDecimalPairs).includes(symbol)) {\n    return symbolDecimalPairs[symbol];\n  }\n  // default symbol decimals\n  return '2'\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(symbolPairs).includes(symbol)) {\n    return symbolPairs[symbol];\n  }\n  return symbol;\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(symbolPairs).indexOf(symbol)\n  if (index > -1) {\n    return Object.keys(symbolPairs)[index];\n  }\n  return symbol;\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken];\n  }\n  return bToken;\n};\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken);\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index];\n  }\n  return bToken;\n};\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n};\n\nexport const getIndexInfo = (symbol) => {\n  const internalSymbol = mapToSymbolInternal(symbol);\n  const customIndexs = {\n    IGAME: {\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\n      url: 'https://docs.deri.finance/products/index/game-index',\n    },\n    IBSCDEFI: {\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\n    },\n    IMEME: {\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\n      url: 'https://docs.deri.finance/products/index/meme-index',\n    },\n  };\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\n    return customIndexs[internalSymbol];\n  } else {\n    return { tokens: [], url: '' };\n  }\n};","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\nimport Type from \"./Type\";\n\nclass Version {\n  current = 'v2';\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed,\n      zone : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n\n  get zone(){\n    if(Type.isFuture){\n      if(this.isV2){\n        return 'Main'\n      } else if(this.isV2Lite) {\n        return 'Inno'\n      } else {\n        return 'Open'\n      }\n    } else {\n      return ''\n    }\n  }\n}\nexport default new Version()","//for color\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary'\n\n//\nexport const DEPOSIT = 'deposit'\nexport const WITHDRAW = 'withdraw'\n\n//\nexport const BUY = 'buy'\nexport const SELL = 'sell'\n\n\nexport const BSC_CHAINID = 56\nexport const BSC_CHAINNAME= 'BSC'\n\n\nexport const ARROW_UP = 'up'\nexport const ARROW_DOWN = 'down'\n\nexport const FUTURE = 'future'\nexport const OPTION = 'option'\n\nexport const VERSION_V2 = 'v2'\nexport const VERSION_V2_LITE = 'v2_lite'\nexport const VERSION_V2_OPEN = 'v2_lite_open'","// utils for derijsnext, combine in one file\nimport { fromWei, toWei } from './convert';\n\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address, initialBlock='') => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address, initialBlock);\n      return instances[key];\n    }\n  }\n}\n\n// contract\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = fromWei(val[prop]);\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nexport const processResult = (val, propList = []) => {\n  if (Array.isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (typeof val === 'object' && val !== null) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return fromWei(val);\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n// api for v2_lite and option\nexport const getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getPoolLiquidity'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.liquidity = fromWei(res[0]);\n    return this.stateValues.liquidity\n  };\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getLastTimestamp'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.lastTimestamp = res[1];\n    return this.stateValues.lastTimestamp\n  };\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\n    return this.stateValues.protocolFeeAccrued;\n  };\n  return klass;\n}","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","var map = {\n\t\"./amusdc.svg\": 636,\n\t\"./arrow-down.svg\": 134,\n\t\"./bsc-logo.svg\": 158,\n\t\"./btc-icon.svg\": 325,\n\t\"./btc.svg\": 326,\n\t\"./busd-logo.svg\": 637,\n\t\"./busd.svg\": 638,\n\t\"./cake.svg\": 639,\n\t\"./close-modal-icon.svg\": 320,\n\t\"./deposit.svg\": 640,\n\t\"./error.svg\": 641,\n\t\"./ethereum.svg\": 321,\n\t\"./gauge-graph.svg\": 327,\n\t\"./lang-icon.svg\": 194,\n\t\"./logo.svg\": 193,\n\t\"./matemask-logo.svg\": 195,\n\t\"./matic.svg\": 642,\n\t\"./polygon-logo.svg\": 322,\n\t\"./rate-down-icon.svg\": 323,\n\t\"./rate-up-icon.svg\": 328,\n\t\"./success.svg\": 643,\n\t\"./tbusd.svg\": 644,\n\t\"./tweth.svg\": 645,\n\t\"./usdt.svg\": 646,\n\t\"./wbnb.svg\": 647,\n\t\"./withdraw.svg\": 648,\n\t\"./wmatic.svg\": 649\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 635;","export default __webpack_public_path__ + \"static/media/amusdc.a91be758.svg\";","export default __webpack_public_path__ + \"static/media/busd-logo.f4614ed2.svg\";","export default __webpack_public_path__ + \"static/media/busd.42a5f6e9.svg\";","export default __webpack_public_path__ + \"static/media/cake.a2b7e4e1.svg\";","export default __webpack_public_path__ + \"static/media/deposit.cc1481c5.svg\";","export default __webpack_public_path__ + \"static/media/error.0ef841ef.svg\";","export default __webpack_public_path__ + \"static/media/matic.80d45679.svg\";","export default __webpack_public_path__ + \"static/media/success.dfd87f03.svg\";","export default __webpack_public_path__ + \"static/media/tbusd.42a5f6e9.svg\";","export default __webpack_public_path__ + \"static/media/tweth.017d2801.svg\";","export default __webpack_public_path__ + \"static/media/usdt.6db83251.svg\";","export default __webpack_public_path__ + \"static/media/wbnb.a4a83ea5.svg\";","export default __webpack_public_path__ + \"static/media/withdraw.cf59e820.svg\";","export default __webpack_public_path__ + \"static/media/wmatic.f7fd3f97.svg\";","var map = {\n\t\"./de/Signin.json\": 655,\n\t\"./de/bridge.json\": 656,\n\t\"./de/broker.json\": 657,\n\t\"./de/dip-history-two.json\": 658,\n\t\"./de/dip-history.json\": 659,\n\t\"./de/dip-two.json\": 660,\n\t\"./de/faucet.json\": 661,\n\t\"./de/footer.json\": 662,\n\t\"./de/governance.json\": 663,\n\t\"./de/header.json\": 664,\n\t\"./de/home.json\": 665,\n\t\"./de/lite.json\": 666,\n\t\"./de/mining.json\": 667,\n\t\"./de/mobile-lite.json\": 668,\n\t\"./de/nuls.json\": 669,\n\t\"./de/permission.json\": 670,\n\t\"./de/pool.json\": 671,\n\t\"./de/pro.json\": 672,\n\t\"./de/team.json\": 673,\n\t\"./de/trading-mining.json\": 674,\n\t\"./en/header.json\": 675,\n\t\"./en/pool.json\": 676,\n\t\"./en/trade.json\": 677,\n\t\"./fr/Signin.json\": 678,\n\t\"./fr/bridge.json\": 679,\n\t\"./fr/broker.json\": 680,\n\t\"./fr/dip-history-two.json\": 681,\n\t\"./fr/dip-history.json\": 682,\n\t\"./fr/dip-two.json\": 683,\n\t\"./fr/faucet.json\": 684,\n\t\"./fr/footer.json\": 685,\n\t\"./fr/governance.json\": 686,\n\t\"./fr/header.json\": 687,\n\t\"./fr/home.json\": 688,\n\t\"./fr/lite.json\": 689,\n\t\"./fr/mining.json\": 690,\n\t\"./fr/mobile-lite.json\": 691,\n\t\"./fr/nuls.json\": 692,\n\t\"./fr/permission.json\": 693,\n\t\"./fr/pool.json\": 694,\n\t\"./fr/pro.json\": 695,\n\t\"./fr/team.json\": 696,\n\t\"./fr/trading-mining.json\": 697,\n\t\"./zh/pool.json\": 698,\n\t\"./zh/trade.json\": 699\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 654;","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { AppError } from \"../error/error\";\n\n// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\n// export const chainIdNamePairs = {\n//   // 1: 'ethereum',\n//   // 3: 'ropsten',\n//   // //'42': 'kovan',\n//   // 56: 'bsc',\n//   // 97: 'bsctestnet',\n//   // 128: 'heco',\n//   // 137: 'matic',\n//   // 256: 'hecotestnet',\n//   // 80001: 'mumbai',\n//   'ethereum': '1',\n//   'ropsten': '3',\n//   //'42': 'kovan',\n//   'bsc': '56',\n//   'bsctestnet': '97',\n//   'heco': '128',\n//   'hecotestnet': '256',\n//   'matic': '137',\n//   'mumbai': '80001',\n// };\n\nexport const chainConfigList = [\n  { chainId: '1', name: 'ethereum', unit: 'eth' },\n  { chainId: '3', name: 'ropsten', unit: 'eth' },\n  //{ chainId: '42', name: 'kovan', unit: 'eth' },\n  { chainId: '56', name: 'bsc', unit: 'bnb' },\n  { chainId: '97', name: 'bsctestnet', unit: 'bnb' },\n  { chainId: '128', name: 'heco', unit: 'ht' },\n  { chainId: '256', name: 'hecotestnet', unit: 'ht' },\n  { chainId: '137', name: 'polygon', unit: 'matic' },\n  { chainId: '80001', name: 'mumbai', unit: 'matic' },\n];\n\n\nexport const getChainIds = () => {\n  return chainConfigList.map((c) => c.chainId);\n  // return Object.values(chainIdNamePairs);\n  //return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nconst infuraAccount = \"ec73e2f0c79a42c0997ee535364de584\"\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        `https://mainnet.infura.io/v3/${infuraAccount}`,\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://polygon-rpc.com',\n        // 'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        // 'https://rpc-mainnet.matic.quiknode.pro',\n        // 'https://matic-mainnet.chainstacklabs.com',\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        `https://ropsten.infura.io/v3/${infuraAccount}`,\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        `https://kovan.infura.io/v3/${infuraAccount}`,\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.find((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res) {\n    return res.provider_urls\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getChainProviderUrls',\n    args: [chainId],\n  });\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","export const ErrorCode = {\n  WEB3_WALLET_NOT_FOUND: 'WEB3_WALLET_NOT_FOUND',\n  BROWSER_NOT_SUPPORTED: 'BROWSER_NOT_SUPPORTED',\n  INVALID_DERI_ENV: 'INVALID_DERI_ENV',\n  INVALID_VERSION: 'INVALID_VERSION',\n  INVALID_VERSION_ID: 'INVALID_VERSION_ID',\n  INVALID_CHAIN_ID: 'INVALID_CHAIN_ID',\n  INVALID_ADDRESS: 'INVALID_ADDRESS',\n  INVALID_TOKEN_ID: 'INVALID_TOKEN_ID',\n  INVALID_TOKEN_ID_IN_RANGE: 'INVALID_TOKEN_ID_IN_RANGE',\n  INVALID_SYMBOl: 'INVALID_SYMBOl',\n  INVALID_BASE_TOKEN: 'INVALID_BASE_TOKEN',\n  INVALID_AMOUNT: 'INVALID_AMOUNT',\n  INVALID_TRADE_VOLUME: 'INVALID_TRADE_VOLUME',\n  INVALID_DATA: 'INVALID_DATA',\n  INVALID_CACHE: 'INVALID_CACHE',\n  CONFIG_LIST_NOT_FOUND: 'CONFIG_LIST_NOT_FOUND',\n  CONFIG_NOT_FOUND: 'CONFIG_NOT_FOUND',\n  RPC_NODE_ALL_UNAVAILABLE: 'RPC_NODE_ALL_UNAVAILABLE',\n  INVALID_JSON_RPC_RESPONSE: 'INVALID_JSON_RPC_RESPONSE',\n  JSON_RPC_CALL_TIMEOUT: 'JSON_RPC_CALL_TIMEOUT',\n  REST_API_CALL_TIMEOUT: 'REST_API_CALL_TIMEOUT',\n  INSUFFICIEN_MARGIN: 'INSUFFICIEN_MARGIN',\n  INSUFFICIENT_BALANCE: 'INSUFFICIENT_BALANCE',\n  INSUFFICIEN_LIQUIDITY: 'INSUFFICIEN_LIQUIDITY',\n  PRICE_EXPIRED: 'PRICE_EXPIRED',\n  VOLATILITY_EXPIRED: 'VOLATILITY_EXPIRED',\n  DEADLINE_EXPIRED: 'DEADLINE_EXPIRED',\n  OUT_OF_GAS: 'OUT_OF_GAS',\n  TRANSACTION_REVERTED: 'TRANSACTION_REVERTED',\n  API_REQUEST_TIMEOUT: 'API_REQUEST_TIMEOUT',\n  UNKOWN_ERROR: 'UNKOWN_ERROR',\n};\nObject.freeze(ErrorCode);\n\nexport let ErrorMessage;\n(function (ErrorMessage) {\n  // client\n  ErrorMessage.WEB3_WALLET_NOT_FOUND = () => 'web3 wallet is not found';\n  ErrorMessage.BROWSER_NOT_SUPPORTED = () => 'browser is not supported';\n\n  // input error\n  ErrorMessage.INVALID_DERI_ENV = (env) => `invalid deri env '${env}'`;\n  ErrorMessage.INVALID_VERSION = (version) =>\n    `invalid pool version '${version}'`;\n  ErrorMessage.INVALID_VERSION_ID = (versionId) =>\n    `invalid pool version id '${versionId}'`;\n  ErrorMessage.INVALID_CHAIN_ID = (chainId) => `invalid chain id '${chainId}'`;\n  ErrorMessage.INVALID_ADDRESS = (address) =>\n    `invalid eth address '${address}'`;\n  ErrorMessage.INVALID_TOKEN_ID = (tokenId) => `invalid token id'${tokenId}'`;\n  ErrorMessage.INVALID_TOKEN_ID_IN_RANGE = ({ tokenId, tokenIds, name }) =>\n    `invalid ${name} '${tokenId}' for ${name}s(${tokenIds.join(',')})`;\n  ErrorMessage.INVALID_AMOUNT = (amount) => `invalid amount '${amount}'`;\n  ErrorMessage.INVALID_TRADE_VOLUME = (volume) =>\n    `invalid trade volume '${volume}''`;\n  ErrorMessage.INVALID_SYMBOL = (symbol) => `invalid symbol'${symbol}'`;\n  ErrorMessage.INVALID_BASE_TOKEN = (bToken) => `invalid base token'${bToken}'`;\n  ErrorMessage.INVALID_DATA = (data) =>\n    `invalid data '${JSON.stringify(data)}'`;\n  ErrorMessage.INVALID_CACHE = ({name, data}) =>\n    `invalid cache value '${JSON.stringify(data)}' for key '${name}'`;\n  ErrorMessage.CONFIG_LIST_NOT_FOUND = ({ name, env }) =>\n    `the config list is not found with env ${env} by ${name}()`;\n  ErrorMessage.CONFIG_NOT_FOUND = ({ name, args = [] }) =>\n    `the config is not found by ${name}(${args.join(',')})`;\n\n  // network error\n  ErrorMessage.RPC_NODE_ALL_UNAVAILABLE = (chainId) =>\n    `all rpc nodes are not available for chain id '${chainId}'`;\n  ErrorMessage.INVALID_JSON_RPC_RESPONSE = () => 'invalid JSON RPC response';\n  ErrorMessage.REST_API_CALL_TIMEOUT = (url) =>\n    `REST API request is timeout: ${url}`;\n  ErrorMessage.JSON_RPC_CALL_TIMEOUT = ({ name, args = [] }) =>\n    `JSON RPC call timeout: ${name}(${args.join(',')})`;\n\n  // tansaction error\n  ErrorMessage.INSUFFICIEN_MARGIN = () => `insufficient margin`;\n  ErrorMessage.INSUFFICIENT_BALANCE = () => 'insufficient balance';\n  ErrorMessage.INSUFFICIEN_LIQUIDITY = () => 'insufficient pool liquidity';\n  ErrorMessage.PRICE_EXPIRED = () => 'price is expired';\n  ErrorMessage.VOLATILITY_EXPIRED = () => 'volatility is expired';\n  ErrorMessage.DEADLINE_EXPIRED = () => 'deadline is expired';\n  ErrorMessage.OUT_OF_GAS = () => 'transaction is out of gas';\n  ErrorMessage.TRANSACTION_REVERTED = () => 'transaction is reverted';\n\n  // api server error\n  ErrorMessage.API_REQUEST_TIMEOUT = (url) => `api request '${url}' is timeout`;\n\n  // common error\n  ErrorMessage.UNKOWN_ERROR = ({ err, name, args = [] }) =>\n    `unkown error: ${name}(${args.join(',')}) with ${err}`;\n})(ErrorMessage || (ErrorMessage = {}));\nObject.freeze(ErrorMessage);\n\nexport let ErrorName;\n(function (ErrorName) {\n  const errorCodes = Object.keys(ErrorMessage);\n  for (let v of errorCodes) {\n    if (['WEB3_WALLET_NOT_FOUND', 'BROWSER_NOT_SUPPORTED'].includes(v)) {\n      ErrorName[v] = 'ClientError';\n    } else if (\n      [\n        'INVALID_DERI_ENV',\n        'INVALID_VERSION',\n        'INVALID_VERSION_ID',\n        'INVALID_CHAIN_ID',\n        'INVALID_ADDRESS',\n        'INVALID_TOKEN_ID',\n        'INVALID_TOKEN_ID_IN_RANGE',\n        'INVALID_SYMBOl',\n        'INVALID_BASE_TOKEN',\n        'INVALID_AMOUNT',\n        'INVALID_TRADE_VOLUME',\n        'INVALID_DATA',\n        'INVALID_CACHE',\n        'CONFIG_LIST_NOT_FOUND',\n        'CONFIG_NOT_FOUND',\n      ].includes(v)\n    ) {\n      ErrorName[v] = 'InputError';\n    } else if (\n      [\n        'RPC_NODE_ALL_UNAVAILABLE',\n        'INVALID_JSON_RPC_RESPONSE',\n        'JSON_RPC_CALL_TIMEOUT',\n        'REST_API_CALL_TIMEOUT',\n      ].includes(v)\n    ) {\n      ErrorName[v] = 'NetworkError';\n    } else if (\n      [\n        'INSUFFICIEN_MARGIN',\n        'INSUFFICIENT_BALANCE',\n        'INSUFFICIEN_LIQUIDITY',\n        'PRICE_EXPIRED',\n        'VOLATILITY_EXPIRED',\n        'DEADLINE_EXPIRED',\n        'OUT_OF_GAS',\n        'TRANSACTION_REVERTED',\n      ].includes(v)\n    ) {\n      ErrorName[v] = 'TransactionError';\n    } else if (['API_REQUEST_TIMEOUT'].includes(v)) {\n      ErrorName[v] = 'ApiServerError';\n    } else {\n      ErrorName[v] = 'UnkownError';\n    }\n  }\n})(ErrorName || (ErrorName = {}));\n","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24\n\n// debug, for logger print\n//export const DEBUG = false\nexport const DEBUG = true\n\n// for cache\nexport const OPEN_POOL_EXPIRE_TIME = 30\nexport const JSON_RPC_CALL_RETRY = 3\nexport const REST_API_CALL_RETRY = 2","import styled from \"styled-components\"\nconst Wrapper = styled.div`\n  padding : 0 8px;\n  height : ${props => props.height}px;\n  color : ${props => props.color};\n  border-color : ${props => props.borderColor};\n  background-color : ${props => props.bgColor};\n  border-radius : ${props => props.borderRadius};\n  font-size : ${props => props.fontSize}px;\n  text-align : center;\n  .main {\n    display : flex;\n    align-items : center;\n    justify-content : center;\n  }\n  img {\n    margin-right :8px;\n  }\n`\nexport default function Label({text,height ,borderColor ,color,bgColor,borderRadius = '50%',fontSize,icon,className}) {\n\n  return (\n    <Wrapper className={className} height={height} borderColor={borderColor} color={color} bgColor={bgColor} borderRadius={borderRadius} fontSize={fontSize}>\n      <span className='main'>\n        {icon && <img src={icon} alt='' />}\n        {text}\n      </span>\n    </Wrapper>\n  )\n}","import styled from 'styled-components'\nimport { Link,useLocation } from 'react-router-dom'\nimport classNames from 'classnames';\nimport Label from '../Label/Label';\n\nconst Wrapper = styled.div`\nwidth: 795px;\ndisplay: flex;\njustify-content: space-around;\nmargin-left: 14px;\n.menu-item {\n  position : relative;\n  .beta-icon {\n    position : absolute;\n    top: -14px;\n    left: 6px;\n  }\n  a {\n    color : #93A1B8;\n    text-decoration: none;\n  }\n}\n.menu-item.selected a{\n  color : #E0ECFF;\n}\n`\nexport default function Menu({lang}){\n  const location = useLocation();\n\n  const menus = [\n    {text : lang['pools'],link : '/pool'},\n    {text : lang['Futures'],link : '/trade/futures'},\n    {text : lang['options'],link : '/trade/options',icon : <Label text={lang['beta']} height='16' borderRadius = '10px' bgColor='#CD7A37' color='#FFFFFF' fontSize='11' className='beta-icon'/>},\n    {text : lang['token'],link : '/token'},\n    {text : lang['bridge'],link : '/bridge'},\n    {text : lang['docs'],subMenu : [] ,link : ''},\n    {text : lang['more'],subMenu : [],link : ''},\n    {text : lang['trade-to-earn'],icon : '',link : '/trade-to-earn'}\n  ]\n\n  return (\n    <Wrapper>\n      {menus.map((menu,index) => {\n        const clazz = classNames('menu-item',{selected : location.pathname === menu.link})\n        return(\n          <span className={clazz} key={index}>\n            {menu.icon}\n            <Link to={menu.link}>{menu.text}</Link>\n          </span>\n        )\n      })}\n    </Wrapper>\n  ) \n}","import styled from 'styled-components'\nimport langIcon from '../../assets/img/lang-icon.svg'\n\nconst Wrapper = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nconst Panel = styled.div`\n  display : none;\n`\n\nexport default function LangSelector(){\n  return (\n    <Wrapper>\n      <img src={langIcon} alt='lang Selector'/>\n      <Panel>\n        <div>En</div>\n      </Panel>\n    </Wrapper>\n  )\n}","import styled from 'styled-components';\nimport bscLogoIcon from '../../assets/img/bsc-logo.svg'\nimport arrowDownIcon from '../../assets/img/arrow-down.svg'\nconst Wrapper = styled.div`\ndisplay : flex;\nalign-items : center;\ncolor : #E0ECFF;\nwidth : 108px;\nmargin-left : 16px;\n.name {\n  margin-left : 4px\n}\n`  \nexport default function NetworkSelector(){\n\n  return (\n    <Wrapper>\n      <img src={bscLogoIcon} alt='bsc'/>\n      <div className='name'>BSC</div>\n      <img src={arrowDownIcon} alt='select' />\n    </Wrapper>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport matemaskIcon from '../../assets/img/matemask-logo.svg'\nimport arrowDownIcon from '../../assets/img/arrow-down.svg'\nimport { inject, observer } from 'mobx-react';\nimport { useRouteMatch } from 'react-router';\nimport useConfig from '../../hooks/useConfig';\nimport { formatAddress } from '../../utils/utils';\nimport Button from '../Button/Button';\n\nconst Wrapper = styled.div`\n  display : flex;\n  align-items : center;\n  margin-right : 24px;\n  color : #E0ECFF;\n  cursor: pointer;\n  img {\n    margin-right : 8px;\n  }\n  `\n\n\nfunction WalletSelector({wallet,lang}){\n  const [btnText,setBtnText] = useState(lang['connect-wallet'])\n  const isIndex = useRouteMatch('/index')\n  const isRoot = useRouteMatch({path: '/',exact : true})\n  const isMining = useRouteMatch({path: '/mining',exact : true});\n  const isTeam = useRouteMatch('/team')\n  const isRetired = useRouteMatch('/retired')\n  const isOptionsLite = useRouteMatch('/options/lite')\n  const isOptionsPro = useRouteMatch('/options/pro') \n  const isDownload = useRouteMatch('/logo')\n  const isInfo = useRouteMatch('/info')\n\n  const isOptions = isOptionsLite || isOptionsPro\n  const notConnectWalletPage  = isIndex || isMining || isTeam || isRoot || isRetired || isDownload || isInfo\n  \n\n\n  const setAccountText = (detail) => {\n    //如果用户选择的网络正确\n    if(wallet.isConnected()){\n      if(wallet.isSupportChain(isOptions)) {\n        setBtnText(<span className='address'>{formatAddress(detail.account)}</span>)\n      } else {\n        setBtnText(<span className='no-supported'>{lang['unsupported-chain-id']}{detail.chainId}!</span>)\n      }\n    } else {\n      setBtnText(lang['connect-wallet'])\n    } \n  }\n  useEffect(() => {\n    const init = async () => {\n      const detail = await wallet.connect()\n      if(detail){\n        setAccountText(detail)\n      }\n    }\n    if(!notConnectWalletPage){\n      init();\n    }\n    return () => {}\n  }, [window.location.href])\n\n  useEffect(() => {\n    const init = async () => {\n      const detail = await wallet.connect()\n      if(detail){\n        setAccountText(detail)\n      }\n    }\n    if(!notConnectWalletPage){\n      init();\n    }\n    return () => {}\n  }, [window.location.href])\n\n  useEffect(() => {\n    setAccountText(wallet.detail)\n    return () => {\n    };\n  }, [wallet.detail.account,wallet.detail.formatBalance,lang]);\n\n  return (\n    <Wrapper>\n      {wallet.isConnected() ? \n        <>\n          <img src={matemaskIcon} alt='matemask'/>\n          <div onClick={wallet.connect}>{btnText}</div>\n          {/* <img src={arrowDownIcon} alt='select'/> */}\n        </>\n      :\n        <Button label={btnText} onClick={wallet.connect} width={176} height={32} fontWeight ={700} fontColor='#FFF' fontSize='18'/>\n      }\n      \n    </Wrapper>\n  )\n}\nexport default inject('wallet')(observer(WalletSelector))","import './header.less'\nimport logo from '../../assets/img/logo.svg'\nimport Menu from './Menu'\nimport LangSelector from './LangSelector'\nimport NetworkSelector from './NetworkSelector'\nimport WalletSelector from './WalletSelector'\nimport { inject, observer } from 'mobx-react'\nimport useLang from '../../hooks/useLang'\n\n\nfunction Header({intl}){\n  const lang = useLang(intl.dict,'header');\n  return (\n    <div className='header'>\n      <div className='left'>\n        <div className='logo'>\n          <img src ={logo} alt='logo'/>\n          <span className='name'>DERI</span>\n        </div>\n        <Menu lang={lang}/>\n      </div>\n      <div className='right'>\n        <LangSelector/>\n        <NetworkSelector/>\n        <WalletSelector lang={lang}/>\n      </div>\n    </div>\n  )\n}\nexport default inject('intl')(observer(Header))","\n\nexport default function useLang(dict,page){\n  if(dict){\n    return dict[page]\n  }\n  return {}\n}","export default function Footer(){\n  return (\n    <div></div>\n  )\n}","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","import React from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { isMobile } from 'react-device-detect';\n\nconst withLanguage =  Component => {\n  class WithLanguage extends React.Component {\n\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        this.onRouteChanged(this.props.location);\n      }\n    }\n  \n    onRouteChanged(location) {\n    }\n    \n    render(){\n      const {intl,...props} = this.props\n      const {dict} = intl\n      //如果当前终端为移动端，判断是否存在移动端特殊语言包，如果有覆盖默认的语言包\n      if(isMobile){\n        for(let item in dict){\n          if(dict[item].mobile){\n            Object.assign(dict[item],dict[item].mobile)\n          }\n        }\n      }\n      return (\n      <Component {...props} dict={dict}/>\n      )\n    }\n  }\n  return inject('intl')(observer(WithLanguage)) ;\n}\n\nexport default withLanguage\n","import { Redirect } from \"react-router-dom\";\n\nexport default function IndexRoute(){\n  const url = window.location.href;\n  if(/^https?:\\/\\/(app|alphatest|testnet)/.test(url)) {\n    return  <Redirect to='/futures/pro'/> \n  } else if(/^https?:\\/\\/governance/.test(url)) {\n    return  <Redirect to='/governance'/> \n  } else if(/^https?:\\/\\/bridge/.test(url)) {\n    return  <Redirect to='/bridge'/> \n  } else if(/^https?:\\/\\/info/.test(url)) {\n    return <Redirect to='/info'/>\n  }\n  return <Redirect to='/index'/>\n}","import React from 'react';\nimport {Switch,Route,withRouter} from 'react-router-dom'\nimport LoadableComponent from '../utils/LoadableComponent';\nimport withLanguage from '../hoc/withLanguage';\nimport IndexRoute from '../components/IndexRoute/IndexRoute';\nimport Type from '../model/Type';\nimport { FUTURE, OPTION } from '../utils/Constants';\n\n\nconst Home = LoadableComponent(() => import('./Home/Home')) \nconst Pool = LoadableComponent(() => import('./Pool/Index')) \nconst PoolDetail = LoadableComponent(() => import('./Pool/Detail')) \nconst Trade = LoadableComponent(() => import('./Trade/Trade'))\nconst Bridge = LoadableComponent(() => import('./Bridge/Bridge'))\nconst Governance = LoadableComponent(() => import('./Governance/Governance'))\nconst Token = LoadableComponent(() => import('./Token/Token'))\nconst Info = LoadableComponent(() => import('./Info/Index'))\nconst InfoDetail = LoadableComponent(() => import('./Info/Detail'))\n\n\n@withRouter\n@withLanguage\nclass PageRouter extends React.Component{\n\n  render(){\n    const {dict} = this.props  \n\n    return (\n      <Switch>\n        <Route exact path='/index' component={() => <Home lang={dict['index']} />}></Route>\n        <Route exact path='/pool' component={() => <Pool lang={dict['pool']} />}></Route>\n        <Route exact path='/pool/:version/:chainId/:type/:address' component={() => <PoolDetail lang={dict['pool']}/>}/>\n        <Route exact path='/trade/futures' render={(props) => {\n          Type.setCurrent(FUTURE)\n          return <Trade lang={dict['trade']} />\n        }}/>\n        <Route exact path='/trade/options' render={props => {\n          Type.setCurrent(OPTION)\n          return <Trade lang={dict['trade']} />\n        }}/>\n        <Route exact path='/bridge' component={() => <Bridge lang={dict['bridge']} />}></Route>\n        <Route exact path='/governance' component={() => <Governance lang={dict['governance']} />}></Route>\n        <Route exact path='/token' component={() => <Token lang={dict['token']} />}></Route>\n        <Route exact path='/info' component={() => <Info lang={dict['token']} />}></Route>\n        <Route exact path='/info/:add/:catalog/:bToken/:network' component={() => <InfoDetail/>}/>\n        <Route exact path='/' render={() => <IndexRoute/>}/>\n      </Switch>\n    )\n  }\n}\nexport default PageRouter","import Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport PageRouter from './pages/PageRouter';\nimport './app.less';\nimport './assets/css/fonts.less'\n\nfunction App() {\n  return (\n    <div className=\"deri-root\">\n      <Header></Header>\n      <PageRouter></PageRouter>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = 'en' //language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/index\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\nimport version from './Version'\nimport apiProxy from './ApiProxy'\n\nclass Wallet {\n  \n  detail = {}\n  defaultNw = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      defaultNw : observable,\n      setDefaultNw : action,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed,\n      balance : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      if(version.isOpen){\n        await openConfigListCache.update()\n      }\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const data = await apiProxy.request('connectWallet')\n    return new Promise(async (resolve,reject) => {\n      if(data){\n        const {chainId,account} = data\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    if(version.isOpen){\n      await openConfigListCache.update()\n    }\n    const data = await apiProxy.request('getUserWalletBalance',[chainId,account]).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance : data.balance,unit : data.unit,formatBalance : formatBalance(data.balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  setDefaultNw(network){\n    this.defaultNw = network\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation || !this.isConnected()\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen || !this.isConnected()\n  }\n\n  get balance(){\n    return this.detail.balance\n  }\n\n  get balanceUnit(){\n    return this.detail.unit && this.detail.unit.toUpperCase()\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport { equalIgnoreCase } from \"../utils/utils\";\nimport webSocket from \"./WebSocket\";\n\nclass Oracle {\n  symbol = null\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n  load(symbol,timeType = 'min'){    \n    if(this.symbol === null || (this.symbol !== symbol && this.timeType !== timeType)) {\n      webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\n        if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\n          this.setIndex(data.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](data)\n            }\n          }\n        }\n      })\n    }\n\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n  unsubscribeBars(symbol){\n    symbol && webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\n  }\n\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  clean(){\n    this.unsubscribeBars(this.symbol);\n    this.symbol = null\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos, DeriEnv} from \"../lib/web3js/index\"\nimport { eqInNumber, getDefaultNw, greaterThan } from '../utils/utils';\nimport type from \"./Type\";\nimport ApiProxy from \"./ApiProxy\";\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   pool = null\n   counter = 0\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,pool,callback){\n     this.wallet= wallet; \n     this.pool = pool\n     if(callback){\n      this.callback = callback\n     }\n     if(pool && pool.address){\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\n      const position = await ApiProxy.request('getPositionInfo',[chainId,pool.address,account,pool.selectedSymbol.symbolId])\n      if(position){\n        if(this.callback){\n          this.callback(position)\n        }\n      }\n      return position;\n     }\n   }\n\n   async loadAll(wallet,pool,callback){\n    this.wallet= wallet; \n    this.pool = pool\n    if(callback){\n      this.callbackALL = callback\n    }\n    if(pool && pool.address){\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\n      let positions = await ApiProxy.request('getPositionInfos',[chainId,pool.address,account,pool.selectedSymbol.symbolId])\n      if(positions.length) {\n        positions = positions.map(item => this.wrapperForDisplay(item))\n      }\n      if(positions){\n        if(this.callbackALL){\n          this.callbackALL(positions)\n        }\n      }\n      return positions;\n    }\n   }\n   \n   wrapperForDisplay(item){\n    item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n    item.direction = (+item.volume) > 0 ? 'Buy' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'Sell')\n    if(item.direction === 'Buy') {\n      item.directionColor = 'green'\n    } else {\n      item.directionColor = 'red'\n    }\n    if(greaterThan(item.unrealizedPnl,0)){\n      item.unrealizedPnlColor = 'green'\n    } else {\n      item.unrealizedPnlColor = 'red'\n    }\n\n    if(greaterThan(item.fundingFee,0)) {\n      item.fundingFeeColor = 'green'\n    } else {\n      item.fundingFeeColor = 'red'\n    }\n\n    if(item.volume){\n      item.notional = bg(Math.abs(item.volume)).times(item.markPrice).toString();\n      item.notionalColor = 'gray'\n    }\n    if(item.markPrice && item.averageEntryPrice){\n      if(greaterThan(item.volume,0)) {\n        item.unrealizedPnlRate = bg(item.markPrice).minus(item.averageEntryPrice).div(item.averageEntryPrice).times(100).toString();\n      } else {\n        item.unrealizedPnlRate = bg(item.averageEntryPrice).minus(item.markPrice).div(item.averageEntryPrice).times(100).toString();\n      }\n      item.unrealizedPnlRateColor = 'gray'\n    }\n    return item;\n   }\n\n   startAll(){\n    this.paused = false;\n    if(!this.started){\n      this.runInAction(async () => await this.loadAll(this.wallet,this.pool))\n    }\n    this.started = true\n  }\n\n   start(){   \n    this.paused = false;\n    if(!this.startedAll){\n      this.runInAction(async () => await this.load(this.wallet,this.pool))\n    }\n    this.startedAll = true\n   }\n\n   runInAction(action){\n    this.timer = window.setTimeout(async () => {\n      if(!this.paused){\n        const position = await action();\n        if(position) {\n          this.runInAction(action);\n        }\n      }\n    },3000)\n   }\n\n   pause(){\n    this.paused = true\n   }\n\n   resume(){\n    this.clean();\n    this.start(this.callback)\n   }\n\n   clean(){\n     this.started = false;\n     this.startedAll = false;\n     this.paused = false;\n     this.timer = null;\n   }\n \n}","import { getSpecification, DeriEnv } from \"../lib/web3js/index\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\nimport { getDefaultNw } from \"../utils/utils\";\nimport ApiProxy from \"./ApiProxy\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,pool){\n    if(pool){\n      const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const spec = await ApiProxy.request('getSpecification',[chainId,pool.address,pool.selectedSymbol.symbolId]);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption && spec && spec.symbol){\n        Object.assign(spec,this.extractBySymbol(spec))\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  extractBySymbol(spec){\n    const symboleInArray = spec.symbol.split('-')\n    const underlier = symboleInArray[0]\n    const strike = symboleInArray[1]\n    const optionType = symboleInArray[2]\n    return {\n      underlier,\n      strike,\n      optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen || (version.isV2 && !Array.isArray(spec.bTokenSymbol))){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/index\";\nimport ApiProxy from \"./ApiProxy\";\n\n\nexport default class History {\n\n   async load(wallet,pool,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && pool && pool.address){\n         const all = await ApiProxy.request('getTradeHistory',[wallet.detail.chainId,pool.address,wallet.detail.account,pool.selectedSymbol.symbolId]); \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport { OPTION, VERSION_V2_OPEN, VERSION_V2, VERSION_V2_LITE } from '../utils/Constants'\nimport apiProxy from './ApiProxy'\nimport { isCakeLP, isSushiLP, getMarkpriceSymbol } from '../utils/utils'\nimport {bg} from '../lib/web3js/index'\nimport {sortOptionSymbols } from \"../lib/web3js/index\";\n\nconst columnMap = {\n  pool: 'address'\n}\nexport default class Pool {\n  chainId = ''\n  chain = ''\n  zone = ''\n  address = ''\n  version = ''\n  type = ''\n  isLp = ''\n  bTokenSymbol = ''\n  symbols = []\n  bTokens = []\n  decimals = 2\n  markpriceSymbolFormat = ''\n  currentSymbol  = null\n\n  constructor(data) {\n    makeObservable(this, {\n      chainId: observable,\n      chain: observable,\n      zone: observable,\n      address: observable,\n      symbols: observable,\n      bTokens: observable,\n      bTokenSymbol:observable,\n      isLp: observable,\n      decimals : observable,\n      markpriceSymbolFormat : observable,\n      currentSymbol : observable,\n      setCurrentSymbol : action,\n      setMarkpriceSymbolFormat : action,\n      setAddress : action,\n      setChain : action,\n      setChainId : action,\n      setZone : action,\n      setVersion : action,\n      setType : action,\n      setSymbols : action,\n      setBTokens : action,\n      setDecimals : action,\n      selectedSymbol : computed,\n      isFuture : computed,\n      isOption : computed,\n      isInno : computed,\n      isOpen : computed\n    })\n    this.init(data)\n  }\n\n  init(data = {}) {\n    const keys = Object.keys(data);\n    for (const k in keys) {\n      const name = columnMap[keys[k]] ? columnMap[keys[k]] : keys[k];\n      if (this.hasOwnProperty(name) && data[keys[k]]) {\n        const attr = name.replace(/^\\S/, s => s.toUpperCase())\n        const method = `set${attr}`        \n        if(this[method]){\n          this[method].call(this,data[keys[k]])\n        } else {\n          this[name] = data[keys[k]]\n        }\n      }\n    }\n  }\n\n  async getPoolInfo(wallet, pool) {\n    let params = [pool.chainId, pool.address]\n    let apyInfo = await apiProxy.request('getPoolInfoApy', params);\n    let liq = await apiProxy.request('getPoolLiquidity', params);\n    const detail = {\n      liquidity: liq.totalValue || liq.totalLiquidity,\n      apy: ((+apyInfo.maxApy) * 100).toFixed(2),\n      bTokensApy: apyInfo.bTokens,\n      bTokensLiq:liq.bTokens,\n      staked: false,\n    }\n    if (pool.isLp) {\n      let lpApy = await apiProxy.request('getLpPoolInfoApy', params)\n      const apy = ((+lpApy.apy2) * 100).toFixed(2);\n      detail['lpApy'] = apy\n      detail['isCakeLP'] = isCakeLP(pool.address)\n      detail['isSushiLP'] = isSushiLP(pool.address)\n    }\n    return detail\n  }\n\n  async getLiquidityInfo(wallet, address, version, isLp, bTokenId) {\n    let params = [wallet.detail.chainId, address, wallet.detail.account, bTokenId]\n    let info = null;\n    let res;\n    if (isLp) {\n      res = await apiProxy.request('getLpLiquidityInfo', params)\n    } else {\n      res = await apiProxy.request('getLiquidityInfo', params)\n    }\n    const shares = res.shares ? bg(res.shares) : bg(0)\n    if (['clp','slp','v1','v2_lite','v2_lite_open','option'].includes(version)) {\n      const total = shares.isNaN() ? bg(0) : shares.multipliedBy(res.shareValue) \n      info = {\n        total: res.poolLiquidity,\n        shareValue: res.shareValue,\n        percent: res.poolLiquidity > 0 ? total.dividedBy(res.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n        shares: shares.toFixed(2),\n        formatShares: shares.toFixed(2),\n        totalShares: bg(shares).toString(),\n        values: total.toFixed(4),\n      }\n    } else {\n      info = {\n        total: res.poolLiquidity,\n        pnl: (+res.pnl).toFixed(2),\n        swappedPnl: (+res.swappedPnl).toFixed(2),\n        percent: res.poolLiquidity > 0 ? shares.dividedBy(res.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n        shares: shares.toFixed(2),\n        formatShares: shares.toFixed(2),\n        totalShares: bg(shares).toString(),\n      }\n    }\n    return info\n  }\n\n  setChainId(chainId) {\n    this.chainId = chainId;\n  }\n\n  setChain(chain) {\n    this.chain = chain\n  }\n\n  setZone(zone) {\n    this.zone = zone;\n  }\n\n  setAddress(address) {\n    this.address = address;\n  }\n\n  setType(type) {\n    this.type = type\n  }\n\n  setSymbols(symbols) {\n    symbols = symbols.map(s => {\n      const tokenInfo = this.bTokens.length > 0 ? this.bTokens[0] : {}\n      s.symbolDisplay = this.isOpen || this.isInno ? `${s.symbol}/${tokenInfo.bTokenSymbol}` : s.symbol\n      s.address = this.address\n      s.version = this.version\n      if (!this.isOpen) {\n        s.markpriceSymbolFormat = getMarkpriceSymbol(this)\n      } \n      return s;\n    })\n    if(this.type === OPTION){\n      this.symbols = sortOptionSymbols(symbols)\n    } else {\n      this.symbols = symbols\n    }\n  }\n\n\n  setCurrentSymbol(symbol){\n    this.currentSymbol = symbol\n  }\n\n\n  setMarkpriceSymbolFormat(markpriceSymbolFormat){\n    this.markpriceSymbolFormat = markpriceSymbolFormat\n  }\n\n  setDecimals(decimals){\n    this.decimals = decimals\n  }\n\n\n  setVersion(version){\n    this.version = version\n  }\n\n  setBTokens(bTokens){\n    this.bTokens = bTokens;\n  }\n\n  get selectedSymbol(){\n    if(this.currentSymbol){\n      return this.currentSymbol\n    } else {\n      return this.symbols.length > 0 ? this.symbols[0] : {}\n    }\n  }\n\n  get isFuture(){\n    return this.type === VERSION_V2;\n  }\n\n  get isOption(){\n    return this.type === OPTION;\n  }\n\n  get isInno(){\n    return this.version === VERSION_V2_LITE\n  }\n\n  get isOpen(){\n    return this.version === VERSION_V2_OPEN\n  }\n\n  \n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Pool from './Pool'\nimport apiProxy from './ApiProxy'\nimport { FUTURE, FUTURE_INNO, OPTION,FUTURE_OPEN } from \"../lib/web3js/shared\";\nexport default class PoolManager {\n  pools = []\n  lpPools = []\n  constructor(){\n    makeObservable(this,{\n      pools : observable,\n      setPools : action,\n      setLpPools : action,\n      v2Pools : computed,\n      innoPools : computed,\n      openPools : computed,\n      optionsPools : computed,\n      ammPools : computed,\n      futurePools : computed\n    })      \n  }\n\n  async load(){\n    const pools = await apiProxy.request('getPoolConfigList');\n    this.loadDoubleMingingPool()\n    const mapPools = pools.map(pool => new Pool(pool))\n    this.setPools(mapPools)\n    return mapPools;\n  }\n\n  async loadByType(type){\n    const pools = await apiProxy.request('getPoolConfigList');\n    return pools.filter(p => p.type === type).map(pool => new Pool(pool))\n  }\n\n  async loadDoubleMingingPool(){\n    const pools = await apiProxy.request('getLpConfigList');\n    const mapPools = pools.map(pool => new Pool(pool))\n    this.setLpPools(mapPools)\n    return mapPools;\n  }\n\n  setPools(pools){\n    this.pools = pools;\n  }\n  setLpPools(pools){\n    this.lpPools = pools\n  } \n\n  get ammPools(){\n    return this.pools.filter(p => p.type === 'option' || p.type === 'future')\n  }\n\n  get v2Pools(){\n    return this.pools.filter(p => p.version === FUTURE)\n  }\n\n  get innoPools(){\n    return this.pools.filter(p => p.version === FUTURE_INNO)\n  }\n\n  get optionsPools(){\n    return this.pools.filter(p => p.version === OPTION)\n  }\n  \n  get openPools(){\n    return this.pools.filter(p => p.version === FUTURE_OPEN)\n  }\n\n  get futurePools(){\n    return this.pools.filter(p => p.type === 'future')\n  }\n\n  \n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol, getMarkpriceSymbol, getDefaultNw, percentTimesAmount } from \"../utils/utils\";\nimport { getFundingRate, priceCache, DeriEnv, getVolatility, sortOptionSymbols } from \"../lib/web3js/index\";\nimport { bg } from \"../lib/web3js/index\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\nimport Type from \"./Type\";\nimport PoolManager from \"./PoolManager\";\nimport ApiProxy from \"./ApiProxy\";\nimport Pool from \"./Pool\";\nimport { OPTION, FUTURE, BUY } from \"../utils/Constants\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  index = ''\n  markPrice = ''\n  volume = ''\n  priceDecimals = 2\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  volatility = ''\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n  pools = []\n  pool = {}\n  closeOnly = false\n  percentageAmount = ''\n  direction = ''\n\n  constructor() {\n    makeObservable(this, {\n      index: observable,\n      markPrice: observable,\n      volume: observable,\n      percentageAmount: observable,\n      slideIncrementMargin: observable,\n      fundingRate: observable,\n      volatility: observable,\n      position: observable,\n      positions: observable,\n      history: observable,\n      contract: observable,\n      priceDecimals: observable,\n      userSelectedDirection: observable,\n      supportChain: observable,\n      pools : observable,\n      pool : observable,\n      closeOnly : observable,\n      direction : observable,\n      setWallet: action,\n      setCloseOnly : action,\n      setPriceDecimals: action,\n      setIndex: action,\n      setMarkPrice: action,\n      setContract: action,\n      setPosition: action,\n      setPositions: action,\n      setVolume: action,\n      setUserSelectedDirection: action,\n      setFundingRate: action,\n      setVolatility: action,\n      setHistory: action,\n      setSlideMargin: action,\n      setDirection : action,\n      amount: computed,\n      fundingRateTip: computed,\n      optionFundingRateTip: computed,\n      initialMarginRatioTip: computed,\n      maintenanceMarginRatioTip: computed,\n      TransactionFeeTip: computed,\n      dpmmFundingRateTip: computed,\n      fundingCoefficientTip: computed,\n      rateTip: computed,\n      multiplierTip: computed,\n      TotalNetPositionTip: computed,\n      // direction: computed,\n      volumeDisplay: computed,\n      isNegative: computed,\n      isPositive: computed,\n      symbols : computed,\n      dailyFunding : computed,\n      netPositionNutual : computed,\n      transactionFee : computed,\n      marginReqs : computed,\n      curSymbol : computed,\n      maxEntryVolume : computed,\n      minEntryVolume : computed,\n      currTradeUnit : computed,\n      sliderMax : computed,\n      curSliderValue : computed,\n      accountInfo : computed,\n      transactionSummary : computed,\n      inputHelpText : computed,\n      directionDisplay : computed\n    })\n    this.indexOracle = new Oracle();\n    this.markOracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History();\n    this.poolManager = new PoolManager();\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet, finishedCallback) {\n    const isOption = Type.isOption\n    const type = isOption ? OPTION : FUTURE\n    const pools = await this.poolManager.loadByType(type);\n    if (wallet.isConnected()) {\n      this.setWallet(wallet);\n      this.setPools(pools.filter(p => eqInNumber(wallet.detail.chainId,p.chainId)))\n      const defaultPool = this.pools.length > 0 ? this.pools[0] : new Pool()\n      this.setPool(defaultPool);\n    } else if (!wallet.isConnected() || !wallet.supportWeb3()) {\n      this.setPools(pools.filter(p => eqInNumber(getDefaultNw(DeriEnv.get()).id,p.chainId)))\n      const defaultPool = this.pools.length > 0 ? this.pools[0] : new Pool()\n      this.setPool(defaultPool)\n    }\n    this.loadByPool(this.wallet, this.pool, true, finishedCallback, isOption)\n  }\n\n  async onSymbolChange(selected, finishedCallback, isOption) {\n    const pool = this.pools.find(pool => pool.address === selected.address)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 \n          ? selected.address !== this.pool.address \n          : (pool.address !== selected.address || selected.symbolId !== this.pool.symbolId)\n    //设置用户选择的symbol\n    pool.setCurrentSymbol(pool.symbols.find(info => info.symbolId === selected.symbolId))\n    // this.setCurrentSymbol(selected.symbol)\n    this.onChange(pool, changed, finishedCallback, isOption)\n  }\n\n  async onChange(pool, changed, finishedCallback, isOption) {\n    if (pool) {\n      this.clean();      \n      this.setPool(pool)\n      this.loadByPool(this.wallet, pool, changed, finishedCallback, isOption);\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByPool(wallet, pool, symbolChanged, finishedCallback, isOption) {\n    //切换指数\n    if (symbolChanged && pool) {\n      this.indexOracle.addListener('indexPrice', data => {\n        this.setIndex(data.close)\n      })\n      this.markOracle.addListener('markPrice',data => {\n        this.setMarkPrice(data.close)\n      })\n    }\n    if (pool) {\n      Promise.all([\n        this.positionInfo.load(wallet, pool, position => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet, pool, isOption)\n          type.isOption && this.syncVolatility(wallet, pool);\n        }),\n        this.contractInfo.load(wallet, pool, isOption),\n        this.loadFundingRate(wallet, pool, isOption),\n        this.positionInfo.loadAll(wallet, pool, positions => this.setPositions(positions)),\n      ]).then(results => {\n        if (results.length === 4) {\n          if(results[0]) {\n            this.setIndex(results[0].price)\n            this.setMarkPrice(results[0].markPrice);\n            this.setPosition(results[0]);\n          }\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setPositions(results[3]);\n        }\n      }).finally(e => {\n        finishedCallback && finishedCallback()\n        // this.indexOracle.load(getFormatSymbol(pool.symbol.split('-')[0]))\n        // this.markOracle.load(getFormatSymbol(pool.markpriceSymbolFormat || `${pool.symbol}-MARKPRICE`))\n        this.positionInfo.start()\n        this.positionInfo.startAll();\n        this.resume();\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n    const histories = await this.historyInfo.load(wallet, pool, isOption)\n    this.setHistory(histories);\n  }\n\n  refreshCache() {\n    const pool  = this.pool;\n    const symbol = type.isOption ? pool.symbol.split('-')[0] : pool.symbol\n    priceCache.clear();\n    priceCache.update(pool, symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [], wallet) {\n    let defaultConfig = null;\n    if (configs.length > 0) {\n      const fromStore = this.getFromStore();\n      if (fromStore && eqInNumber(wallet.detail.chainId, fromStore.chainId)) {\n        defaultConfig = fromStore;\n      }\n      if (defaultConfig) {\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if (pos === -1) {\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }\n    }\n    return defaultConfig;\n  }\n\n  //存起来\n  store(config) {\n    storeConfig(version.current, config)\n  }\n\n  getFromStore() {\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate() {\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet, this.pool)\n    if (fundingRate) {\n      this.setFundingRate(fundingRate)\n    }\n  }\n\n  async syncVolatility(wallet, pool) {\n    const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n    if (pool) {\n      const volatility = await ApiProxy.request('getVolatility',[chainId, pool.address, pool.selectedSymbol.symbolId]);\n      this.setVolatility(volatility)\n    }\n  }\n\n  async refresh() {\n    this.pause()\n    this.positionInfo.load(this.wallet, this.pool, position => {\n      this.setPosition(position);\n      this.syncFundingRate();\n      type.isOption && this.syncVolatility(this.wallet, this.pool);\n    });\n    this.positionInfo.loadAll(this.wallet, this.pool, positions => this.setPositions(positions))\n    this.syncFundingRate();\n    type.isOption && this.syncVolatility(this.wallet, this.pool);\n    this.wallet && this.wallet.isConnected() && this.wallet.loadWalletBalance(this.wallet.detail.chainId, this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet, this.pool)\n    if (history) {\n      this.setHistory(history)\n    }\n    this.positionInfo.start();\n    this.positionInfo.startAll();\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause() {\n    this.setPaused(true)\n    this.indexOracle.pause();\n    this.markOracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume() {\n    this.setPaused(false)\n    this.indexOracle.resume();\n    this.markOracle.resume();\n    this.positionInfo.resume();\n  }\n\n  setWallet(wallet) {\n    this.wallet = wallet;\n  }\n\n  setPools(pools){\n    this.pools = pools;\n  }\n\n  setPool(pool){\n    this.pool = pool\n  }\n\n  setPriceDecimals(pool) {\n    if (pool && pool.decimals) {\n      this.priceDecimals = pool.decimals\n    } else {\n      this.priceDecimals = 2\n    }\n  }\n\n  setIndex(index) {\n    this.index = index;\n  }\n\n  setMarkPrice(markPrice) {\n    this.markPrice = markPrice;\n  }\n\n  setPosition(position) {\n    if (position) {\n      this.position = position\n    }\n  }\n\n  setPositions(positions) {\n    if (positions) {\n      this.positions = positions\n    }\n  }\n\n  setContract(contract) {\n    this.contract = contract\n  }\n\n  setHistory(history) {\n    this.history = history\n  }\n\n  setFundingRate(fundingRate) {\n    this.fundingRate = fundingRate;\n  }\n\n  setVolatility(volatility) {\n    this.volatility = volatility\n  }\n\n  setVolume(volume) {\n    this.volume = volume;\n  }\n\n  setPercentageAmount(percentage){\n    this.percentageAmount = percentage\n    if(percentage){\n      const marginUsed = percentTimesAmount(percentage,this.sliderMax);\n      const volume = bg(marginUsed).div(this.markPrice).toNumber();\n      this.setVolume(volume)\n    } else {\n      this.setVolume('')\n    }\n  }\n\n  \n\n  setPaused(paused) {\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction) {\n    this.userSelectedDirection = direction\n  }\n\n  setCloseOnly(closeOnly){\n    this.closeOnly = closeOnly\n  }\n\n  setDirection(direction){\n    this.direction = direction\n  }\n\n  groupConfigBySymbol(symbols = []) {\n    return symbols.reduce((total, config) => {\n      const symbol = config.symbol.split('-')[0]\n      if (!total[symbol]) {\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    }, [])\n  }\n\n  setSlideMargin(slideIncrementMargin) {\n    if (slideIncrementMargin !== '') {\n      this.slideIncrementMargin = slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      let volume = bg(increment).div(bg(bg(price).times(bg(this.contract.multiplier).times(bg(MarginRatio))))).toString()\n      volume = +volume * +this.contract.multiplier\n      let multiplier = this.contract.multiplier\n      if (multiplier <= 1) {\n        let index = this.contract.multiplier.indexOf('.')\n        let num = this.contract.multiplier.slice(index);\n        let length = num.length\n        let value = volume.toString()\n        if (value.indexOf(\".\") !== -1) {\n          value = value.substring(0, value.indexOf(\".\") + length)\n        }\n        this.setVolume(value)\n      } else {\n        let length = multiplier.length - 1\n        let value = parseInt(volume).toString()\n        let num = value.slice(-length);\n        value = value.slice(0, -length)\n        num = num.replace(/\\d/gi, '0')\n        value = value + num\n        this.setVolume(value)\n      }\n\n    }\n  }\n\n  //资金费率\n  async loadFundingRate(wallet, pool, isOption) {\n    if (pool) {\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      if (pool) {\n        const res = await ApiProxy.request('getFundingRate',[chainId, pool.address, pool.selectedSymbol.symbolId]).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n\n  doTransaction(){\n     return ApiProxy.request('tradeWithMargin',[this.wallet.detail.chainId, this.pool.address, this.wallet.detail.account, this.volume, this.pool.selectedSymbol.symbolId],{includeResponse : true})\n  }\n\n  // setCurrentSymbol(currentSymbol){\n  //   this.currentSymbol = currentSymbol\n  // }\n\n  clean() {\n    this.pause();\n    this.indexOracle.clean();\n    this.markOracle.clean();\n    this.positionInfo.clean();\n    this.version = null;\n    this.pool = null;\n    this.markPrice = ''\n    this.index = ''\n    this.volume = ''\n    this.fundingRate = {}\n    this.volatility = ''\n    this.position = {}\n    this.positions = []\n    this.contract = {}\n    this.history = []\n    this.userSelectedDirection = 'long'\n  }\n\n  get volumeDisplay() {\n    if ((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume)) || this.volume === '' || this.volume === '-' || this.volume === 'e') {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n\n\n  get accountInfo(){\n    const position = this.position;\n    const dynEffMargin = bg(position.margin).minus(position.marginHeld).plus(position.unrealizedPnl);\n    return dynEffMargin ? {\n      dynEffMargin : dynEffMargin.toString(),\n      marginUsage : position.marginHeld,\n      availableMargin : dynEffMargin.minus(position.marginHeld).toString()\n    } : {}\n  }\n\n\n  get amount() {\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    let optionVolume = (+initVolume / +this.contract.multiplier);\n    const volume = optionVolume\n    let { margin, marginHeldBySymbol: currentSymbolMarginHeld, marginHeld, unrealizedPnl } = position\n    const price = position.markPrice\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld = type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld);\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if ((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')) {\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if (totalMarginHeld.lt(otherMarginHeld)) {\n        totalMarginHeld = otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())\n      }\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if (currentSymbolMarginHeld) {\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);\n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if (currentSymbolMarginHeld) {\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) + (+position.volume))\n    const totalContractValue = (+totalVolume) * price\n    const curContractValue = (+this.volumeDisplay) * price\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume: this.volume,\n      dynBalance: dynBalance,\n      margin: totalMarginHeld,\n      available: available,\n      exchanged: exchanged,\n      currentSymbolMarginHeld: currentSymbolMarginHeld,\n      leverage: leverage,\n      afterLeverage: afterLeverage\n    }\n  }\n\n  // get direction() {\n  //   // 正仓\n  //   if (this.margin !== '') {\n  //     if ((+this.position.volume) > 0) {\n  //       if (Math.abs(this.volume) > Math.abs(this.position.volume)) {\n  //         return 'long'\n  //       } else {\n  //         return 'short'\n  //       }\n  //     } else if ((+this.position.volume) < 0) {\n  //       //负仓\n  //       if ((+this.volume) > Math.abs(+this.position.volume)) {\n  //         return 'short'\n  //       } else {\n  //         return 'long'\n  //       }\n  //     }\n  //   }\n  //   return 0\n  // }\n\n  //正仓\n  get isPositive() {\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative() {\n    return bg(this.position.volume).isNegative();\n  }\n\n\n  get dailyFunding(){\n    return type.isFuture ? this.fundingRate.funding0 && this.markPrice && bg(this.fundingRate.funding0).div(bg(this.markPrice) ).times(bg(100)).toString() : this.fundingRate.premiumFunding0\n  }\n\n  get transactionFee(){\n    if(type.isFuture){\n      return this.contract.feeRatio && `${this.contract.feeRatio * 100}%` \n    } else {\n      if(this.contract.optionType === 'C'){\n        if(this.contract.strike >= this.index) {\n          return `${Intl.get('trade', 'eo-mark-price')} * ${this.contract.feeRatioOTM * 100}%`\n        } else {\n          return this.contract.underlier && `${this.contract.underlier} ${Intl.get('trade','price')} * ${this.contract.feeRatioITM * 100}%`\n        }\n      } else {\n        if(this.contract.strike < this.index) {\n          return `${Intl.get('trade','eo-mark-price')} * ${this.contract.feeRatioOTM * 100}%`\n        } else {\n          return this.contract.underlier && `${this.contract.underlier} ${Intl.get('trade','price')} * ${this.contract.feeRatioITM * 100}%`\n         } \n      }\n    }\n  }\n\n  get marginReqs(){\n    if(type.isOption){\n      return this.contract.initialMarginRatio  ? `${bg(this.contract.initialMarginRatio).times(100).toFixed(2)}%/${bg(this.contract.maintenanceMarginRatio).times(100).toFixed(2)}%` : ''\n    } else {\n      return this.contract.minInitialMarginRatio ? `${bg(this.contract.minInitialMarginRatio).times(100)}%/${bg(this.contract.minMaintenanceMarginRatio).times(100)}%` : ''\n    }\n  }\n\n  get netPositionNutual(){\n    if(type.isFuture){\n      return this.fundingRate.tradersNetVolume\n    } else {\n      return this.fundingRate && this.contract.multiplier? bg(this.fundingRate.tradersNetVolume).times(this.contract.multiplier).toString() : ''\n    }\n  }\n\n  get fundingRateTip() {\n    if (version && version.isV2) {\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.pool) {\n        if (Intl.locale === 'zh') {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n ${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.pool.bTokenSymbol}`\n        } else {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-block')}`\n        }\n\n      }\n    } else {\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.pool) {\n        if (Intl.locale === 'zh') {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.pool.bTokenSymbol} `\n        } else {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-block')})`\n        }\n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip() {\n    if (this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.pool) {\n      if (Intl.locale === 'zh') {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.pool.bTokenSymbol} `\n      } else {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\n      }\n    }\n    return ''\n  }\n  get dpmmFundingRateTip() {\n    if (this.fundingRate && this.fundingRate.fundingPerSecond && this.pool) {\n      if (Intl.locale === 'zh') {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.pool.bTokenSymbol} `\n      } else {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\n      }\n    }\n    return ''\n  }\n\n  get rateTip() {\n    if (this.fundingRate && this.fundingRate.funding0 && this.markPrice) {\n      return `${Intl.get('lite', 'rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.markPrice)).times(bg(100)).toString()}% ${Intl.get('lite', 'rate-hover-two')}`\n    }\n    return ''\n  }\n\n  get fundingCoefficientTip() {\n    if (this.contract && this.contract.fundingRateCoefficient && this.pool.unit) {\n      if (Intl.locale === 'zh') {\n        return `1${this.pool.unit} ${Intl.get('lite', 'funding-coefficient-hove-one')} ${Intl.get('lite', 'funding-coefficient-hove-two')}${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\n      `\n      } else {\n        return `${Intl.get('lite', 'funding-coefficient-hove-one')} ${this.pool.unit} ${Intl.get('lite', 'funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\n      `\n      }\n\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip() {\n    if (this.contract && this.contract.initialMarginRatioOrigin) {\n      return `${Intl.get('lite', 'in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n        `\\n${Intl.get('lite', 'out-of-money-initial')} = ${Intl.get('lite', 'in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip() {\n    if (this.contract && this.contract.maintenanceMarginRatioOrigin) {\n      return `${Intl.get('lite', 'in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n        `\\n${Intl.get('lite', 'out-of-money-maintenance')} = ${Intl.get('lite', 'in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip() {\n    if (this.contract && this.pool) {\n      return `${Intl.get('lite', 'the-notional-value-of')} ${this.contract.multiplier}${this.pool.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip() {\n    if (this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)) {\n      return `${Intl.get('lite', 'transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite', 'price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\n        `\\n ${Intl.get('lite', 'transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\n    }\n    return ''\n  }\n  get TotalNetPositionTip() {\n    if (this.contract && this.fundingRate.tradersNetVolume && this.pool) {\n      return `${Intl.get('lite', 'notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.pool.unit}`\n    }\n    return ''\n  }\n\n  get symbols(){\n    const s = this.pools.reduce((total,pool) => total.concat(pool.symbols),[])\n    if(Type.isOption){\n      return this.groupConfigBySymbol(s);\n    }\n    return s;\n  }\n\n  get curSymbol(){\n    if(this.pool){\n      return this.pool.selectedSymbol;\n    }\n    return this.symbols.length > 0 ? this.symbols[0] : {}\n  }\n\n  /**\n   * 最大输入数量\n   * 分为两种情况\n   * 1. closeOnly false\n   *  max entry volume = dynamic effective margin / symbol's price (etc BTC) \n   * 2. closeOnly true\n   *  max entry volume = current symbol margin held / symbol's price (etc BTC)\n   */\n  get maxEntryVolume(){\n    if(this.amount){\n      if(this.closeOnly ){\n        return bg(this.amount.currentSymbolMarginHeld).div(this.markOracle).toNumber();\n      } else {\n        return bg(this.amount.dynBalance).div(this.markPrice).toNumber();\n      }\n    } else {\n      return 0\n    }\n  }\n\n  get dollarValue(){\n    return bg(this.volume).times(this.markPrice).toFixed(2);\n  }\n\n  //最小输入数量\n  get minEntryVolume(){\n    return this.contract && this.contract.multiplier;\n  }\n\n  get currTradeUnit(){\n    return this.curSymbol && this.curSymbol.unit;\n  }\n\n  get sliderMax(){\n    if(this.amount){\n      if(this.closeOnly){\n        return (+this.amount.currentSymbolMarginHeld);\n      } else {\n        return (+this.amount.dynBalance);\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  get curSliderValue(){\n    return this.volume && this.markPrice ? bg(this.volume).times(this.markPrice).toNumber() : 0\n  }\n\n  get transactionSummary(){\n    return {\n      marginUsage : [],\n      tradePrice : '',\n      fee : '',\n      liquidationPrice : ''\n    }\n  }\n\n  get directionDisplay(){\n    if(this.direction === BUY){\n      return 'long'\n    } else {\n      return 'short'\n    }\n  }\n\n  get inputHelpText(){\n    if(this.closeOnly){\n      return `${this.percentageAmount} ${Intl.get('trade','close-position')}`\n    } else {\n      return this.pool && this.pool.selectedSymbol && `${Intl.get('trade','open-a')} ${this.volume} ${this.pool.selectedSymbol.unit} ${this.directionDisplay}`\n    }\n  }\n\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import styled from \"styled-components\"\nimport Icon from \"../Icon/Icon\"\n\nconst Wraper = styled.div`\n  display : flex;\n  align-items : center;\n  width: 288px;\n  height: 71px;\n  font-size : 14px;\n  color : #E0ECFF;\n  background: #0A172B;\n  border: 1px solid #444444;\n  box-sizing: border-box;\n  border-radius: 6px;\n  img {\n    padding-left : 24px;\n    margin-right : 16px;\n  }\n`\nexport default function MessageTemplate({style, options, message, close}){\n  return (\n    <Wraper style={style}>\n      {options.type === 'success' && <Icon token='success' width={25} height={25}/>}\n      {options.type === 'error'  && <Icon token='error' width={25} height={25}/>}\n      {message}\n    </Wraper>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'mobx-react';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { DeriEnv } from './lib/web3js/index';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport PoolManager from './model/PoolManager';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport type from './model/Type';\nimport {positions, Provider as AlertProvider } from 'react-alert'\nimport MessageTemplate from './components/Message/MessageTemplate';\nconst wallet = new Wallet();\nconst trading = new Trading();\nconst poolManager = new PoolManager();\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('testnet')\n// DeriEnv.set('prod')\n\nReactDOM.render(\n  // <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} poolManager={poolManager} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <AlertProvider position ={positions.TOP_RIGHT}  timeout ={5000}  offset ='30px'  template={MessageTemplate}>\n          <App />\n        </AlertProvider>\n      </Provider>\n    </HashRouter>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bi  t.ly/CRA-vitals\nreportWebVitals();\n","// version definination\nexport const FUTURE ='v2'\nexport const FUTURE_INNO ='v2_lite'\nexport const FUTURE_OPEN ='v2_lite_open'\nexport const OPTION = 'option'\n\n// pool type\nexport const PoolType = {\n  FUTURE: 'future',\n  OPTION: 'option',\n  LP: 'lp', // for external pool, such as clp of pancake\n};\nObject.freeze(PoolType);\n\n// todo: lite version, will remove later\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\n\n// version\nexport const VERSIONS_RETIRED = ['v1'];\nexport const VERSIONS = [FUTURE, FUTURE_INNO, FUTURE_OPEN, OPTION];\nexport const VERSIONS_ALL = [...VERSIONS_RETIRED, ...VERSIONS];\nexport const VERSION_IDS = ['v2_dpmm', 'v2_lite', 'v2_lite_dpmm', 'option'];\nexport const VERSION_IDS_ALL = [...VERSIONS_RETIRED, ...VERSION_IDS];\n\n// for oracle use\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n\nconst VERSIONS_TYPE_HASH = {\n  v1: 'future',\n  v2: 'future',\n  v2_lite: 'future',\n  v2_lite_open: 'future',\n  option: 'option',\n};\n\nexport const getConfigType = (version) => {\n  if (Object.keys(VERSIONS_TYPE_HASH).includes(version)) {\n    return VERSIONS_TYPE_HASH[version];\n  }\n  throw new Error(`invalid pool version'${version}'`);\n};\n\nexport const getConfigZone = (version) => {\n  if (['v2'].includes(version)) {\n    return 'main';\n  } else if (['v2_lite'].includes(version)) {\n    return 'inno';\n  } else if (['v2_lite_open'].includes(version)) {\n    return 'open';\n  } else {\n    return '';\n  }\n};\n","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  let pending = {}\n  let walletChainId = null\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        //console.log('hit web3 cache')\n        return web3InstanceMap[chainId];\n      }\n      // for mining page should not depends wallet network\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\n      }\n      // using metaMask ethereum object\n      if (\n        isBrowser() &&\n        !isJsDom() &&\n        typeof window.ethereum === 'object' &&\n        walletChainId &&\n        chainId === walletChainId.toString()\n      ) {\n        //console.log('new ethereum web3 cache')\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else {\n        if (pending[chainId]) {\n          // wait for init\n          let retry = 8\n          while (retry > 0) {\n            await delay(500)\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\n              // console.log('hit web3 cache')\n              return web3InstanceMap[chainId];\n            } else {\n              retry -= 1\n            }\n          }\n          // timeout\n          const providerUrl = await getChainProviderUrl(chainId);\n          //console.log('new web3 cache')\n          web3InstanceMap[chainId] = new Web3(\n            new Web3.providers.HttpProvider(providerUrl)\n          );\n          return web3InstanceMap[chainId];\n        } else {\n          // first init\n          pending[chainId] = true\n          try {\n            const providerUrl = await getChainProviderUrl(chainId);\n            //console.log('new web3 cache')\n            web3InstanceMap[chainId] = new Web3(\n              new Web3.providers.HttpProvider(providerUrl)\n            );\n          } catch(err) {\n            console.log(err.toString())\n          } finally {\n            delete pending[chainId]\n          }\n          return web3InstanceMap[chainId];\n        }\n      }\n    },\n  };\n})();","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */"],"sourceRoot":""}