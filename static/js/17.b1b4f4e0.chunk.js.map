{"version":3,"sources":["components/Button/Button.js","utils/DeriNumberFormat.js","hooks/useMiningPool.js","components/Pool/PoolBox.js","mobile/components/Mining/Pool.js"],"names":["Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","lang","useState","status","setStatus","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","onClick","a","beforeAction","afterAction","current","style","display","loadApproveStatus","detail","account","pool","bTokenId","res","approve","success","alert","useEffect","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","undefined","value","isNaN","Math","abs","displayType","env","DeriEnv","get","chainInfo","config","useMiningPool","isNew","loaded","setLoaded","pools","setPools","v1Pools","setV1Pools","v2Pools","setV2Pools","legacyPools","setLegacyPools","preminingPools","setPreminingPools","groupByNetwork","all","reduce","total","find","item","eqInNumber","list","length","push","poolInfo","network","symbol","address","formatAdd","version","chainId","airdrop","type","bTokenSymbol","symbolId","v2Configs","getContractAddressConfig","v1Configs","liteConfigs","getPreminingContractConfig","configs","concat","pos","findIndex","indexOf","map","async","liqPool","getPoolLiquidity","apyPool","getPoolInfoApy","Object","assign","name","liquidity","apy","toFixed","formatAddress","multiplier","slpConfig","getLpContractAddressConfig","liqInfo","lpApy","label","isLP","lapy","getLpPoolInfoApy","apy2","isSushiLP","isCakeLP","allConfigs","Promise","then","filter","p","retired","legacy","premining","preminings","chainConfig","Card","card","index","buttonElement","setButtonElement","history","useHistory","connectWallet","connect","claimAirdrop","info","getUserInfoAllForAirDrop","valid","mintAirdrop","isConnected","url","gotoMining","thousandSeparator","decimalScale","title","suffix","inject","observer","group","poolClass","classNames","toUpperCase","target","rel","href"],"mappings":"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","file":"static/js/17.b1b4f4e0.chunk.js","sourcesContent":["import {useState,useRef,useEffect} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [isApproved, setIsApproved] = useState(true);\n  const [pending, setPending] = useState(false);\n  const [buttonText, setbuttonText] = useState(btnText)\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    beforeAction()\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    afterAction()\n  }\n\n  const beforeAction = ()  => {\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n  }\n\n  const afterAction = () => {\n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  const loadApproveStatus = async () => {\n    if(checkApprove && wallet && wallet.detail.account){\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\n      setIsApproved(res);\n    }\n  }\n  const approve = async () => {\n    beforeAction();\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\n    if(res.success){\n      setIsApproved(true);\n    } else {\n      setIsApproved(false)\n      alert(lang['approve-failed'])\n    }\n    afterAction();\n  }\n\n  const action = () => {\n    if(isApproved){\n      onClick();\n    } else {\n      approve();\n    }\n  }\n\n  useEffect(() => {\n    loadApproveStatus();\n    return () => {};\n  }, [wallet,spec,checkApprove]);\n\n  useEffect(() => {\n    if(btnText){\n      setbuttonText(btnText)\n    }\n    return () => {\n    }\n  }, [btnText])\n\n  return(\n    <button className={className} onClick={action} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\n        </button>\n  )\n}","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import {useState,useEffect} from 'react';\nimport {\n  DeriEnv,\n  getContractAddressConfig,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getLpContractAddressConfig,\n  getLpPoolInfoApy,\n  getPreminingContractConfig\n} from '../lib/web3js/indexV2'\nimport config from '../config.json'\nimport { formatAddress, isLP,isSushiLP,isCakeLP, eqInNumber } from '../utils/utils';\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nexport default function useMiningPool(isNew){\n  const [loaded,setLoaded] = useState(false)\n  const [pools, setPools] = useState([])\n  const [v1Pools, setV1Pools] = useState([])    \n  const [v2Pools, setV2Pools] = useState([])\n  const [legacyPools, setLegacyPools] = useState([])\n  const [preminingPools, setPreminingPools] = useState([])\n\n\n  useEffect(() => {\n    const mapConfig = async (config) => {\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n      const pool = config.pool || ''\n      return Object.assign(config,{ \n        network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n        liquidity : liqPool.liquidity,\n        apy :  ((+apyPool.apy) * 100).toFixed(2),\n        formatAdd : formatAddress(pool),\n        address : pool,\n        type : 'perpetual',\n        buttonText : 'STAKING',\n        multiplier : apyPool.multiplier \n      })\n    }\n    const groupByNetwork = pools => {\n      const all = []\n      pools.reduce((total,pool) => {\n        const find = total.find(item => eqInNumber(item['pool']['address'],pool['address']))\n        if(find && find.list.length < 5){\n          find['list'].push(pool)\n        } else {\n          const poolInfo = {\n            pool : {\n              network : pool.network,\n              symbol : pool.symbol,\n              address : pool.address,\n              formatAdd : pool.formatAdd,\n              version : pool.version,\n              chainId : pool.chainId,\n              airdrop : pool.airdrop,\n              type : pool.type,\n              bTokenSymbol : pool.bTokenSymbol,\n              bTokenId : pool.bTokenId,\n              symbolId : pool.symbolId\n            },\n            list : [pool]\n          }\n          total.push(poolInfo)\n        }\n        return total;\n      },all)\n      return all;\n    }\n    let v2Configs = getContractAddressConfig(env,'v2')\n    let v1Configs = getContractAddressConfig(env,'v1')\n    const liteConfigs = getContractAddressConfig(env,'v2_lite')\n    const preminingPools = getPreminingContractConfig(env);\n    const all = []\n    let configs = v2Configs.concat(v1Configs).concat(preminingPools).concat(liteConfigs).reduce((total,config) => {\n      const pos = total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol && config.version === item.version)\n      if((config.version === 'v2' || config.version === 'v2_lite')  && pos > -1 && total[pos].symbol.indexOf(config.symbol) === -1) {\n        total[pos].symbol += `,${config.symbol}` \n      } else {\n        total.push(config)\n      }\n      return total;\n    },all);\n    \n    configs = configs.map(mapConfig)\n    const slpConfig = getLpContractAddressConfig(env).map(async config => {\n      const liqInfo = await getPoolLiquidity(config.chainId,config.pool) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool) || {} \n      const pool = config.pool || ''      \n      let lpApy;\n      let label;\n      if(isLP(config.pool)){\n        let lapy = await getLpPoolInfoApy(config.chainId,config.pool);\n        lpApy = lapy && ((+lapy.apy2) * 100).toFixed(2);           \n      }\n      if(isSushiLP(config.pool)){\n        label = 'SUSHI-APY'\n      }\n      if(isCakeLP(config.pool)){\n        label = 'CAKE-APY'\n      }\n      return Object.assign(config,{\n        network : chainInfo[config.chainId].name,\n        liquidity : liqInfo.liquidity,\n        apy : ((+apyPool.apy) * 100).toFixed(2),\n        formatAdd : formatAddress(pool),\n        lpApy : lpApy,\n        address : pool,\n        type : 'lp',\n        label:label,\n        buttonText : 'STAKING'\n      })    \n    })\n    const allConfigs = configs.concat(slpConfig)\n    Promise.all(allConfigs).then(pools => {\n      const airDrop = {\n        network : 'BSC',\n        bTokenSymbol : 'GIVEAWAY',\n        liquidity : '4100',\n        symbol : '--',\n        airdrop : true,\n        chainId : 56,\n        buttonText : 'CLAIM'\n      }\n      // pools.push(airDrop)\n      let v1Pools = pools.filter(p => (p.version === 'v1' || !p.version) && !p.retired)\n      let v2Pools = pools.filter(p => (p.version === 'v2' || p.version === 'v2_lite'  )&& !p.retired)\n      const legacy = pools.filter(p => p.retired && !p.premining)\n      const preminings = pools.filter(p =>  p.retired && p.premining) \n      //新版本按照网络来分组\n      if(isNew){\n        v1Pools = groupByNetwork(v1Pools);\n        v2Pools = groupByNetwork(v2Pools);\n      }\n      setV2Pools(v2Pools);\n      setV1Pools(v1Pools);\n      setPools(pools);\n      setLegacyPools(legacy);\n      setPreminingPools(preminings)\n      setLoaded(true)\n    })\n    return () => pools.length = 0\n  },[])\n  return [loaded,pools,v1Pools,v2Pools,legacyPools,preminingPools];\n}","import React, { useState, useEffect } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport config from  '../../config.json'\nimport { DeriEnv, getUserInfoAllForAirDrop, connectWallet, mintAirdrop, isUnlocked, unlock } from '../../lib/web3js/indexV2';\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\nimport { inject, observer } from 'mobx-react';\nimport Button from '../Button/Button.js';\nimport { eqInNumber, addParam } from '../../utils/utils.js';\nimport classNames from 'classnames';\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\n\nfunction PoolBox({wallet,group = {},lang}){\n  const {pool,list} = group\n\n  \n\n  const poolClass = classNames('pool',{\n    'only-one' : list.length === 1 ,\n    'full' : list.length === 5\n  })\n\n  return(\n    <div className={poolClass} >\n      <div className=\"pool-header\">\n        <div className='left'>\n          <div className=\"network\">\n            {pool.network && pool.network.toUpperCase()}\n          </div>\n          <div className='pool-desc'>\n            <span className='symbol'>\n                <span className='symbol-label'>{lang['symbol']}:</span>\n                <span className='symbol-value'>{pool.symbol}</span>  \n            </span>\n            <span className='address'>\n              <span className='address-label'>{lang['address']}:</span>\n                {!pool.airdrop ? <a target='_blank' rel='noreferrer' href={`${chainConfig[pool.chainId] && chainConfig[pool.chainId]['viewUrl']}/address/${pool.address}`}> \n                  {pool.formatAdd}\n                </a> : '--'}\n            </span>\n          </div>\n        </div>\n        <div className='version'>{pool.version}</div>\n      </div>\n      <div className=\"pool-info\">\n        {list.map((card,index) => <Card card={card} key={index} index={index} pool={pool} list={list} wallet={wallet} lang={lang}/>)}\n      </div>\n    </div>\n  )\n}\n\nfunction Card({wallet,pool,card,index,list,lang}) {\n  const [buttonElement, setButtonElement] = useState('');\n  const history = useHistory();\n  const gotoMining = url => {\n    history.push(url)\n  }\n  const connectWallet = () => {\n    wallet.connect()\n  }\n  const claimAirdrop = async () =>{\n    let info =  await getUserInfoAllForAirDrop(wallet.detail.account)\n    if(!info.valid){\n      alert(lang['no-deri-to-claim']);\n      return;\n    }\n    if(!eqInNumber(wallet.detail.chainId,info.chainId)){\n      alert(lang['please-switch-to-BSC-to-claim-deri'])\n      return;\n    }\n    let res = await mintAirdrop(info.chainId,wallet.detail.account)\n    if(!res.success){\n      alert(lang['claim-failed'])\n    }\n  }\n\n  useEffect(() => {\n    if(pool && pool.airdrop){\n      if(!wallet.isConnected()) {\n        setButtonElement(<Button btnText={lang['connect-wallet']} click={connectWallet} lang={lang}></Button>)\n      } else {\n        setButtonElement(<Button btnText={lang['claim']} click={claimAirdrop} lang={lang}></Button>)\n      }\n    } else {\n      let url = `/mining/${pool.version || 'v1'}/${pool.chainId}/${card.type}/${card.symbol}/${card.bTokenSymbol}/${pool.address}`\n      if(card.bTokenId){\n        url = `${url}?baseTokenId=${card.bTokenId}`\n      }\n      if(card.symbolId){\n        if(url.indexOf('?') > 0){\n          url = `${url}&symbolId=${card.symbolId}`\n        } else {\n          url = `${url}?symbolId=${card.symbolId}`\n        }\n      }\n      setButtonElement(        \n          <button onClick={() => gotoMining(url)}>\n            {lang['staking']}\n          </button>\n        )\n    }    \n    return () => {};\n  }, [wallet.detail.chainId]);\n  return (\n    <>\n      <div className=\"info\">\n        <div className=\"top-info\">\n          <div className='pool-top'>\n            <span className={`logo ${card.bTokenSymbol}`} ></span>\n            <span className=\"base-token\">{card.bTokenSymbol}</span>\n          </div>\n          <div className=\"pool-detail\">\n            <div>\n              <span className='title'>{card.airdrop ? lang['total'] : lang['pool-liq']}</span>\n              <DeriNumberFormat value={card.liquidity} displayType='text' thousandSeparator={true} decimalScale={card.lpApy ? 7 : 0}/>\n            </div>\n            {card.multiplier && <div>\n              <span>{lang['multiplier']}</span>\n              <span className='multiplier' title={lang['multiplier-tip']}>{card.multiplier}x</span>\n            </div>}\n            <div className=\"apy\">\n              <span>{lang['apy']}</span>\n              <span>\n                <span className={card.lpApy ? 'sushi-apy-underline' : ''} title={ card.lpApy && lang['deri-apy']}>\n                  {card.apy ? <DeriNumberFormat value={card.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2}/> : '--'}                 \n                </span>\n                {card.lpApy &&<>\n                <span> + </span>\n                <span className={card.lpApy ? 'sushi-apy-underline' : '' } title={ card.lpApy && card.label}> <DeriNumberFormat value={card.lpApy} displayType='text' suffix='%' decimalScale={2}/></span>\n                </>}\n              </span>\n            </div>\n          </div>\n      </div>\n      <div className=\"bottom-btn\">\n        {buttonElement}\n      </div>\n    </div>\n    {index !== list.length-1 && <div className='top-line'></div>}\n  </>)\n}\nexport default  inject('wallet','version')(observer(PoolBox))","import React from 'react'\nimport './pool.less'\nimport './zh-pool.less'\nimport PoolBox from '../../../components/Pool/PoolBox';\nimport useMiningPool from '../../../hooks/useMiningPool';\nimport { inject, observer } from 'mobx-react';\n\n\nfunction Pool({lang}){\n  const [loaded,pools,v1Pools,v2Pools] = useMiningPool(true);\n\n  return (\n    <div className=\"mining-info\">\n      <div className=\"pools\">\n        {v2Pools.concat(v1Pools).map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\n        {!loaded && <div className=\"loading\">\n          <span\n            className=\"spinner spinner-border spinner-border-sm\">\n            </span>\n          </div>}  \n      </div>\n    </div>\n  )\n}\nexport default inject('version')(observer(Pool))"],"sourceRoot":""}